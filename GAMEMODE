		/*.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯*\
	    	______
		   | ___ \
	   	   | |_/ /  _       _ _ _   _   _     _ _ _ _  _ _ _  _ _  _ _ _ _
           |  __/  | |     /  _  | | | | |   |_ _ _ _|/  _  || _ \|_ _ _ _|
		   | |     | |_ _  | (_| | | | | |      | |   | (_| |||_)/   | |
		   \_|     |_ _ _) \_ _\_\ \ |_| /      |_|   \_ _\_\|_|\_\  |_|
					                \   /                                           Criado por: Theus_Crazzy
                                 _ _/  /
                                (_ _ _/										     - Versão 5.0
		_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯*/

//
#include                          <    	   a_samp         >
#include                          <  	   a_npc          >
#include                          <        file		      >
#include                          <        Dini           >
#include                          <        float		  >
#include                          <       foreach         >
#include                          <        time           >
#include                          <       streamer        >
//_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯
#define Kick(%0) SetTimerEx("KickTheus", 800, false, "i", %0)
forward KickTheus(playerid);
public KickTheus(playerid) {
#undef Kick
Kick(playerid);
#define Kick(%0) SetTimerEx("KickTheus", 800, false, "i", %0)
return true;}
#undef MAX_VEHICLES
#define MAX_VEHICLES  (	1500 )
#undef MAX_PLAYERS
#define MAX_PLAYERS   (	101	)
#undef MAX_OBJECTS
#define MAX_OBJECTS   ( 14 )
#define ForPlayers(%1) for(new %1 = 0; %1 < MAX_PLAYERS; %1++) if(IsPlayerConnected(%1) && !IsPlayerNPC(%1))
#define SetPlayerHoldingObject(%1,%2,%3,%4,%5,%6,%7,%8,%9) SetPlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1,%2,%3,%4,%5,%6,%7,%8,%9)
#define StopPlayerHoldingObject(%1) RemovePlayerAttachedObject(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
//#define IsPlayerHoldingObject(%1) IsPlayerAttachedObjectSlotUsed(%1,MAX_PLAYER_ATTACHED_OBJECTS-1)
#define HaveCap(%0) pObject[%0][omodel] ? pObject[%0][omodel] : -1
#define MAX_IPSCONNECT             5
#pragma tabsize 				   0
//_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯
new ObjetosTheusCrazzy;
//_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯
#define RESPAWN_TIME 		    3000000
#define TEMPO_SALVAMENTO        1800000
#define RESPAWN_MORRO           300000
#define RESPAWN_PEDREIRA        300000
#define TEMPO_PROCTEXT          30000
#define MAX_HOUSES 			    216
#define MAX_SBIZZES 		    25
#define MAX_BIZZES        		6
new     					    MaiorID;
//_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯`·.¸_¸.·´¯
#define PRECOCARRO              1000000
#define CARROS_CONCE            201  //*** Modificando este valor, Trocar o valor na compra
#define CHECKPOINT_CARRO        16

#define MAX_ORGS                36    //TODAS AS ORGS +1

#define MAX_SPIKESTRIPS         200

#define dhitman                 3301
#define FUND                 	5000
#define DIALOGID2               1389
#define PRECO_HOSP              1500
#define TEMPO_HOSPITAL          20
#define TEMPO_MEAVALIE          280
#define DIALOG_MEAVALIE         100
#define PS                    	21
#define CHECKPOINT_HOME         12
#define TEAM_HIT                10
#define TEAM_STR                9
#define TEAM_CUN                8
#define TEAM_TAT                7
#define TEAM_BLUE               2
#define KEY_HORN                2
#define TEAM_CYAN          		1
#define CHECKPOINT_Nenhum       0

#define DIALOG_ATTACH_INDEX             13500
#define DIALOG_ATTACH_INDEX_SELECTION   DIALOG_ATTACH_INDEX+1
#define DIALOG_ATTACH_EDITREPLACE       DIALOG_ATTACH_INDEX+2
#define DIALOG_ATTACH_MODEL_SELECTION   DIALOG_ATTACH_INDEX+3
#define DIALOG_ATTACH_BONE_SELECTION    DIALOG_ATTACH_INDEX+4

#define OpenAccPlayer        "Players/%s.ini"
#define COLOR_SK 				0x458B74AA
#define COR_3DLABEL             0xDBD645FF
#define CORS                    0xFF8000FF
#define CORTR_GUERRA            0xF60000C8
#define CORTR_NINGUEM           0xF6F6F6C8
#define COR_PM                  0x1E90FFAA
#define COR_ROTA                0x696969AA
#define COR_ROOXY               0x104E8BAA
#define COR_BOPE                0x363636AA
#define COR_EXE                 0x6B8E23F6
#define COR_SAMU                0xF08080F6
#define COR_AZTECAS             0x0000FFAA
#define COR_TAL                 0x5F9EA0AA
#define COR_ROTAE               0x87CEFAF6
#define COR_HITMAN              0x9C9C9CF6
#define COR_TRIAD               0x00C5CDAA
#define COR_DRIFT               0xFFA500AA
#define COR_REP                 0xFFA54FF6
#define COR_TAXI                0xFFFF00F6
#define COR_PF                  0xCD853FF6
#define COR_COSA                0x00CED1AA
#define COR_YAK                 0x473C8BAA
#define COR_GRO                 0x00FF00F6
#define COR_AL                  0xEEDD82F6
#define COR_FARC                0xFF1493F6
#define COR_RPP                 0x6495EDAA
#define COR_PRF                 0xADD618FF
#define COR_BALLAS              0xA020F0AA
#define COR_VAGOS               0xFFD700AA
#define COR_CVM                 0xFF0000AA
#define COR_PCC                 0xCAFF70AA
#define COR_MONGOLS             0x2E8B57AA
#define COR_AmigodosAmigos       0x00FFFFAA
#define COR_YSTIFLERS           0xEE7942AA
#define COR_SONS                0x00868BAA
#define COR_HELLS               0x8B3A3AAA
#define COR_ADMIN               0xFF69B4F6
#define BRANCO                  0xFFFFFFFF
#define COLOR_RADIO2            0xCD6CF6F6
#define COLOR_DEPARTAMENTO      0xFF6F6FAA
#define CINZA                   0xAFAFAFAA
#define CINZA1                  0xB4B5B7FF
#define CINZA2                  0xBFC0C2FF
#define CINZA3                  0xCBCCCEFF
#define CINZA4                  0xD8D8D8FF
#define CINZA5                  0xE3E3E3FF
#define CINZA6                  0xF0F0F0FF
#define COLOR_GRAD1             0xB4B5B7FF
#define COLOR_GRAD2             0xBFC0C2FF
#define COLOR_GRAD3             0xCBCCCEFF
#define COLOR_GRAD4             0xD8D8D8FF
#define COLOR_GRAD5             0xE3E3E3FF
#define COLOR_GRAD6             0xF0F0F0FF
#define COLOR_GREY              0xAFAFAFAA
#define COLOR_GREEN             0x33AA33AA
#define COLOR_RED               0xAA3333AA
#define COLOR_LIGHTRED          0xE84F33FF
#define COLOR_LIGHTBLUE         0x33CCFFAA
#define COLOR_LIGHTGREEN        0x9ACD32AA
#define COLOR_YELLOW            0xFFFF00AA
#define COLOR_YELLOW2           0xF5DEB3AA
#define COLOR_WHITE             0xFFFFFFAA
#define COLOR_FADE1             0xE6E6E6E6
#define COLOR_FADE2             0xC8C8C8C8
#define COLOR_FADE3             0xAAAAAAAA
#define COLOR_FADE4             0x8C8C8C8C
#define COLOR_FADE5             0x6E6E6E6E
#define COLOR_PURPLE            0xC2A2DAAA
#define COLOR_DBLUE             0x2641FEAA
#define COLOR_ALLDEPT           0xFF8282AA
#define COLOR_NEWS              0xFFA500AA
#define COLOR_OOC               0xE0FFFFAA
#define VERMELHO                0xAA3333AA
#define TEAM_HIT_COLOR          0xFFFFFF00
#define TEAM_BLUE_COLOR         0x8D8DFF00
#define COR_HELPER              0x02EA9EAA
#define TEAM_GROVE_COLOR        0x00D900C8
#define TEAM_VAGOS_COLOR        0xFBDC00AA
#define TEAM_BALLAS_COLOR       0xAA70FFAA
#define TEAM_AZTECAS_COLOR      0x2641FEAA
#define TEAM_CYAN_COLOR         0xA92BF6F6
#define TEAM_TAT_COLOR          0xBDCB9200
#define TEAM_CUN_COLOR          0xD900D300
#define TEAM_STR_COLOR          0x01FCFF00
#define TEAM_ROTA_COLOR         0x0033CCFF
#define TEAM_TROTA_COLOR        0x030303AA
#define TEAM_GROTA_COLOR        0x030303C8
#define COLOR_MSG               0x934FF6F6
#define COLORGZ_HAMAS           0xF4005BC8
#define COLOR_TAXISTA           0xF68E00F6
#define COLOR_BLACK             0x000000AA
#define GCOP_COLOR              0x6666FFC8
#define COLORGZ_ALCAIDA         0x685000C8
#define COLOR_R                 0x6666CCFF
#define COLORGZ_YAKUZA          0x006699C8
#define COLORGZ_PF              0x000000C8
#define COLORGZ_LH              0x00E7C6C8
#define COLORGZ_EXE             0x33AA33C8
#define COLOR_EXE               0x33AA33C8
#define COR_MOTOQUEIROS         0x8B4726AA
#define COR_AMERICANOS          0x228B22AA
#define COR_SSP                 0xBDB76BAA
#define DIALOG_RANGE 			1264
#define pAdmin                  AntiBugPortoes

//• Outras variáveis.
new PutaGorda[MAX_PLAYERS];
new VozDePrisao[MAX_PLAYERS];

#define OUTRO_MUNDO 128
#define void 0

// Territorios
#define TEMPOGRANATHEUS          240000
#define GranadoPark               4000
#define GranadoCemiterio          3000
#define GranadoSkate              3500
#define GranadaEstacao            7000
#define GranadoCasarao            7000
#define GranadoPosto              4000
#define GranadoShop               3500
#define GranadoPantano            5000
#define GranadoPedreira           5000
#define GasMax                    100
#define RefuelWait                5000
//>>.*.*.**.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*.<<//
new year, month, day, hour, minute, second, AnoGMX, MesGMX, DiaGMX, HoraGMX,
MinutoGMX, SegundoGMX,v[6],shifthour;
forward RandomServerNames();
new SVNAMES[2][55] =
{
"[BPF RPG] Brasil PlayStart ® v5.1 #ImperioHost",
"[BPF RPG] Brasil PlayStart ® v5.1 #ImperioHost"
};
//>=-=-=-=-=-==-=-=-==-=-=-=>[ Variáveis ]<-=-=-=-=-===-=-=-=-=-==-=-=-==-=-=-=<
new StrPasswrd[MAX_PLAYERS][90];
new gstring[128];
new strtheus[256];
new strlabel[256];
//======================[ Anti-Money Hacker]====================================
new NumGranaTheus[MAX_PLAYERS];
stock GranaTheus(playerid, ammount)return NumGranaTheus[playerid] += ammount;
stock GetGranaTheus(playerid)return NumGranaTheus[playerid];
stock ResetGranaTheus(playerid)return NumGranaTheus[playerid] = 0;
forward CheckGranaTheus();
public CheckGranaTheus() { for(new i;i<MaiorID;i++) { ResetPlayerMoney( i); GivePlayerMoney(i, GetGranaTheus(i)); } }
//************************* Tunar **********************************************
new Menu:Principal;
new Menu:CoresTheus;
new Menu:Rodas;
new Menu:VolumedoCarro;
new Menu:Componentes;
new Menu:PaintJobs;
new VeiculoNeon[MAX_VEHICLES];
 new OutroNome[MAX_PLAYER_NAME];

//
forward HeadAdminTexto();
forward HeadVIPTexto();
//=========Attachments==========
enum AttachmentEnum
{
    attachmodel,
    attachname[24]
}

new AttachmentObjects[][AttachmentEnum] = {
{2705, "Camiseta Basket"}, //{18632, "FishingRod"},
{18633, "Chave de Roda"},
{18634, "Chave de Roda2"},
{18635, "Martelo"},
{18636, "Capa de Policia"},
{18637, "Escudo de Policia"},
{18638, "Capacete"},
{18639, "Bone Preto"},
{18640, "Cabelo1"},
{18975, "Cabelo2"},
{19136, "Cabelo3"},
{19274, "Cabelo4"},
{18641, "Lanterna"},
{18642, "Taser Policia"},
{18643, "Laser1"},
{19080, "Laser2"},
{19081, "Laser3"},
{19082, "Laser4"},
{19083, "Laser5"},
{19084, "Laser6"},
{18644, "Chave de Fenda"},
{18645, "Capacete Moto"},
{18865, "Celular1"},
{18866, "Celular2"},
{18867, "Celular3"},
{18868, "Celular4"},
{18869, "Celular5"},
{18870, "Celular6"},
{18871, "Celular7"},
{18872, "Celular8"},
{18873, "Celular9"},
{18874, "Celular10"},
{18875, "Pager"},
{18890, "Rastelo"},
{18891, "Bandana1"},
{18892, "Bandana2"},
{18893, "Bandana3"},
{18894, "Bandana4"},
{18895, "Bandana5"},
{18896, "Bandana6"},
{18897, "Bandana7"},
{18898, "Bandana8"},
{18899, "Bandana9"},
{18900, "Bandana10"},
{18901, "Bandana11"},
{18902, "Bandana12"},
{18903, "Bandana13"},
{18904, "Bandana14"},
{18905, "Bandana15"},
{18906, "Bandana16"},
{18907, "Bandana17"},
{18908, "Bandana18"},
{18909, "Bandana19"},
{18910, "Bandana20"},
{18911, "Mascara1"},
{18912, "Mascara2"},
{18913, "Mascara3"},
{18914, "Mascara4"},
{18915, "Mascara5"},
{18916, "Mascara6"},
{18917, "Mascara7"},
{18918, "Mascara8"},
{18919, "Mascara9"},
{18920, "Mascara10"},
{18921, "Boina1"},
{18922, "Boina2"},
{18923, "Boina3"},
{18924, "Boina4"},
{18925, "Boina5"},
{18926, "Chapeu1"},
{18927, "Chapeu2"},
{18928, "Chapeu3"},
{18929, "Chapeu4"},
{18930, "Chapeu5"},
{18931, "Chapeu6"},
{18932, "Chapeu7"},
{18933, "Chapeu8"},
{18934, "Chapeu9"},
{18935, "Chapeu10"},
{18936, "Capacete1"},
{18937, "Capecete2"},
{18938, "Capacete3"},
{18939, "Bone Para Traz1"},
{18940, "Bone Para Traz2"},
{18941, "Bone Para Traz3"},
{18942, "Bone Para Traz4"},
{18943, "Bone Para Traz5"},
{18944, "Chapeu Velho1"},
{18945, "Chapeu Velho2"},
{18946, "Chapeu Velho3"},
{18947, "Chapeu Novo1"},
{18948, "Chapeu Novo2"},
{18949, "Chapeu Novo3"},
{18950, "Chapeu Novo4"},
{18951, "Chapeu Novo5"},
{18952, "Capacete Boxe"},
{18953, "Gorro1"},
{18954, "Gorro2"},
{18955, "Bone Colorido1"},
{18956, "Bone Colorido2"},
{18957, "Bone Colorido3"},
{18958, "Bone Colorido4"},
{18959, "Bone Colorido5"},
{18960, "Bone Brilho"},
{18961, "Bone Caminhoneiro"},
{18962, "Chapeu de Vaqueiro2"},
{18963, "Cabeça do CJ"},
{18964, "Gorro Bandido"},
{18965, "Gorro Bandido2"},
{18966, "Gorro Bandido3"},
{18967, "Chapeu Gay"},
{18968, "Chapeu Gay2"},
{18969, "Chapeu Gay3"},
{18970, "Chapeu de Tigre1"},
{18971, "Chapeu Legal"},
{18972, "Chapeu Legal2"},
{18973, "Chapeu Legal3"},
{18974, "Mascara do Zorro1"},
{18976, "Capacete Motoboy2"},
{18977, "Capacete Motoboy3"},
{18978, "Capacete Motoboy4"},
{18979, "Capacete Motoboy5"},
{19006, "Oculos1"},
{19007, "Oculos2"},
{19008, "Oculos3"},
{19009, "Oculos4"},
{19010, "Oculos5"},
{19011, "Oculos6"},
{19012, "Oculos7"},
{19013, "Oculos8"},
{19014, "Oculos9"},
{19015, "Oculos10"},
{19016, "Oculos11"},
{19017, "Oculos12"},
{19018, "Oculos13"},
{19019, "Oculos14"},
{19020, "Oculos15"},
{19021, "Oculos16"},
{19022, "Oculos17"},
{19023, "Oculos18"},
{19024, "Oculos19"},
{19025, "Oculos20"},
{19026, "Oculos21"},
{19027, "Oculos22"},
{19028, "Oculos23"},
{19029, "Oculos24"},
{19030, "Oculos25"},
{19031, "Oculos26"},
{19032, "Oculos27"},
{19033, "Oculos28"},
{19034, "Oculos29"},
{19035, "Oculos30"},
{19036, "Mascara Hokey1"},
{19037, "Masara Hokey2"},
{19038, "Mascara Hokey3"},
{19039, "Relogio1"},
{19040, "Relogio2"},
{19041, "Relogio3"},
{19042, "Relogio4"},
{19043, "Relogio5"},
{19044, "Relogio6"},
{19045, "Relogio7"},
{19046, "Relogio8"},
{19047, "Relogio9"},
{19048, "Relogio10"},
{19049, "Relogio11"},
{19050, "Relogio12"},
{19051, "Relogio13"},
{19052, "Relogio14"},
{19053, "Relogio5"},
{19085, "Clar1"},
{19086, "Penis Consolo"},
{19090, "PomPom Azul"},
{19091, "PomPom Vermelho"},
{19092, "PomPom Verde"},
{19093, "Capacete Pedreiro2"},
{19094, "Chapeu Hamburguer1"},
{19095, "Chapeu Cowboy1"},
{19096, "Chapeu Cowboy3"},
{19097, "Chapeu Cowboy4"},
{19098, "Chapeu Cowboy5"},
{19099, "Capa Policia"},
{19100, "Capa Policia"},
{19101, "Exército Capacete1"},
{19102, "Exército Capacete2"},
{19103, "Exército Capacete3"},
{19104, "Exército Capacete4"},
{19105, "Exército Capacete5"},
{19106, "Exército Capacete6"},
{19107, "Exército Capacete7"},
{19108, "Exército Capacete8"},
{19109, "Exército Capacete9"},
{19110, "Exército Capacete10"},
{19111, "Exército Capacete11"},
{19112, "Exército Capacete12"},
{19113, "Chapeu Neon1"},
{19114, "Chapeu Neon2"},
{19115, "Chapeu Neon3"},
{19116, "Toquinha de Verao1"},
{19117, "Toquinha de Verao2"},
{19118, "Toquinha de Verao3"},
{19119, "Toquinha de Verao4"},
{19120, "Toquinha de Verao5"},
{19137, "Cabeça de Frango"},
{19138, "Oculos de Poilicia1"},
{19139, "Oculos de Poilicia2"},
{19140, "Oculos de Poilicia3"},
{19141, "Capacete BOPE"},
{19142, "Colete Prova Bala"},
{19160, "Chapeu Duro"},
{19161, "Capacete de Policia"},
{19162, "Capacete de Policia"},
{19163, "Mascara Bandido"},
{19317, "Guitarra1"},
{19318, "Guitarra2"},
{19319, "warlock01"},
{19330, "Chpeu de Bombeiro1"},
{19331, "Chapeu de Bombeiro2"},
{19346, "Cachorro Quente"},
{19347, "Mochila"},
{19348, "Cano1"},
{19349, "Oculos Doido1"},
{19350, "Bigode01"},
{19351, "Bigode02"},
{19352, "Cartola01"},
{19487, "Cartla02"},
{19488, "Chapeu Novo6"},
{19513, "Celular"},
{19515, "Colete ProvaBala2"}
};

new AttachmentBones[][24] = {
{"Coluna"},
{"Cabeça"},
{"Braço esquerdo"},
{"Braço direito"},
{"Mão esquerda"},
{"Mão direita"},
{"Coxa esquerda"},
{"Coxa direita"},
{"Pé esquerdo"},
{"Pé direito"},
{"Panturrilha direita"},
{"Panturrilha esquerda"},
{"Antebraço esquerdo"},
{"Antebraço direito"},
{"Clavícula esquerda"},
{"Clavícula direita"},
{"Pescoço"},
{"Mandíbula"}
};
//>>.*.*.**.*.*.*.*.*.*.*.*.*.*.Concessionária.*.*.*.*.*.*.*.*.*.*.*.*.*.*.*<<//
new spoiler[20][0] = {
{1000},
{1001},
{1002},
{1003},
{1014},
{1015},
{1016},
{1023},
{1058},
{1060},
{1049},
{1050},
{1138},
{1139},
{1146},
{1147},
{1158},
{1162},
{1163},
{1164}
};
new nitro[3][0] = {
    {1008},
    {1009},
    {1010}
};
new fbumper[23][0] = {
    {1117},
    {1152},
    {1153},
    {1155},
    {1157},
    {1160},
    {1165},
    {1167},
    {1169},
    {1170},
    {1171},
    {1172},
    {1173},
    {1174},
    {1175},
    {1179},
    {1181},
    {1182},
    {1185},
    {1188},
    {1189},
    {1192},
    {1193}
};
new rbumper[22][0] = {
    {1140},
    {1141},
    {1148},
    {1149},
    {1150},
    {1151},
    {1154},
    {1156},
    {1159},
    {1161},
    {1166},
    {1168},
    {1176},
    {1177},
    {1178},
    {1180},
    {1183},
    {1184},
    {1186},
    {1187},
    {1190},
    {1191}
};
new exhaust[28][0] = {
    {1018},
    {1019},
    {1020},
    {1021},
    {1022},
    {1028},
    {1029},
    {1037},
    {1043},
    {1044},
    {1045},
    {1046},
    {1059},
    {1064},
    {1065},
    {1066},
    {1089},
    {1092},
    {1104},
    {1105},
    {1113},
    {1114},
    {1126},
    {1127},
    {1129},
    {1132},
    {1135},
    {1136}
};
new bventr[2][0] = {
    {1042},
    {1044}
};
new bventl[2][0] = {
    {1043},
    {1045}
};
new bscoop[4][0] = {
{1004},
{1005},
{1011},
{1012}
};
new rscoop[13][0] = {
    {1006},
    {1032},
    {1033},
    {1035},
    {1038},
    {1053},
    {1054},
    {1055},
    {1061},
    {1067},
    {1068},
    {1088},
    {1091}
};
new lskirt[21][0] = {
    {1007},
    {1026},
    {1031},
    {1036},
    {1039},
    {1042},
    {1047},
    {1048},
    {1056},
    {1057},
    {1069},
    {1070},
    {1090},
    {1093},
    {1106},
    {1108},
    {1118},
    {1119},
    {1133},
    {1122},
    {1134}
};
new rskirt[21][0] = {
    {1017},
    {1027},
    {1030},
    {1040},
    {1041},
    {1051},
    {1052},
    {1062},
    {1063},
    {1071},
    {1072},
    {1094},
    {1095},
    {1099},
    {1101},
    {1102},
    {1107},
    {1120},
    {1121},
    {1124},
    {1137}
};
new hydraulics[1][0] = {
    {1087}
};
new base[1][0] = {
    {1086}
};
new rbbars[2][0] = {
    {1109},
    {1110}
};
new fbbars[2][0] = {
    {1115},
    {1116}
};
new wheels[17][0] = {
    {1025},
    {1073},
    {1074},
    {1075},
    {1076},
    {1077},
    {1078},
    {1079},
    {1080},
    {1081},
    {1082},
    {1083},
    {1084},
    {1085},
    {1096},
    {1097},
    {1098}
};
new lights[2][0] = {
{1013},
{1024}
};
enum cInfo
{
    Dono[MAX_PLAYER_NAME],
    Modelo,
    Float:cSpawnX,
    Float:cSpawnY,
    Float:cSpawnZ,
    Float:cAngulo,
    CarroON,
    CorUm,
    CorDois,
    CarroID,
    Trancado,
    mod1,
    mod2,
    mod3,
    mod4,
    mod5,
    mod6,
    mod7,
    mod8,
    mod9,
    mod10,
    mod11,
    mod12,
    mod13,
    mod14,
    mod15,
    mod16,
    mod17,
    paintjob,
    PaintJobOn,
    cDate,
};
new Carro[CARROS_CONCE][cInfo];
new ModeloCarro[MAX_PLAYERS];
new Farois[MAX_PLAYERS];
new Engine[MAX_PLAYERS];
//.*.*.*.*.*.*.*.*.*.*.*.*.*.*[Fim concessionária].*.*.*.*.*.*.*.*.*.*.*.*.*.*//
new motor[MAX_PLAYERS];
new mudandonick[MAX_PLAYERS];
new gPlayerTerminal[MAX_PLAYERS];
new panuncio;
new panunciogov;
enum e_votacao
{
	bool:iniciada,
	sim,
	nao,
}
new bool:votou[MAX_PLAYERS];
new votacao[e_votacao];
new Dia, Mes, Ano, Hora, Minuto, Segundo;
new TempoAnGang;
new TempoAnTaliban;
new TempoAnAlqaeda;
new TempoRecarga;
new TempoAnHitmans;
new TempoAnmerce;
new TempoAnMafia;
new TempoAnTaxi;
new panunciogang;
new panunciomafia;
new TruckMission[MAX_PLAYERS];
new var1[MAX_PLAYERS];
new VagaLimpar[MAX_PLAYERS];
new panunciotaliban;
new panunciofamilia;
new panuncioalqaeda;
new panunciotaxi;
new panunciohitmans;
new panuncioMc;
new gpTimes[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS];
new InviteJob[MAX_PLAYERS];
new away[MAX_PLAYERS];
new DonoCity = 0;
forward CheckPlayStart();
new VenceuCont = 0;
new InfoCont[3];

new ObjetoCarro[MAX_VEHICLES];
new VeiculoValido[MAX_VEHICLES];
new NovaCamera[MAX_PLAYERS];
// • Carregado os Objectos
new Text:TextCarregado1;
new Text:TextCarregado2;
new Text:TextCarregado3;
// • Pagina de Login por - Theus_Crazzy
new Text:TextLogin0;
new Text:TextLogin1;
new Text:TextLogin2;
new Text:TextLogin3;
new Text:TextLogin4;
new Text:TextLogin5;
new Text:TextLogin6;
new Text:TextLogin7;
new Text:TextLogin8;
new Text:TextLogin9;
new Text:TextLogin10;
// • TextDraw do Forum
new Text:forum;
// • TextDraw do Hospital
new Text:TextHospital0;
new Text:TextHospital1;
new Text:TextHospital2;
new Text:TextHospital3;
//===========================[defines guerra de pontos]=========================
new cdivulgar[MAX_PLAYERS];
//ExplosioN guerra de pontos
// morro
new Text:TextMorro0;
new Text:TextMorro1;
new Text:TextMorro2;
new Text:TextMorro3;
new Text:TextMorro4;
new Text:TextMorro5;
new Text:TextMorro6;
new Text:TextMorro7;
new Text:TextMorro8;
new Text:TextMorro9;
new Text:TextMorro10;
new Text:TextMorro11;
new Text:TextMorro12;
new Text:TextMorro13;
new Text:TextMorro14;
new Text:TextMorro15;
new Text:TextMorro16;
new Text:TextMorro17;
new Text:TextMorro18;
new Text:TextMorro19;
new GZMorro[5];
// Sistema de guerras do morro
forward DefinirCorMorro();
forward CarregarMorro();
forward SalvarMorro();
forward IniciarGuerraMorro();
forward FinalizarGuerraMorro();
forward TempoGuerraP();
enum MorroInfo
{
	Dono,
	Cor,
	Guerra,
};
new Morro[MorroInfo];
new MorroPontos[MAX_ORGS];
new IniciandoGuerra;
new FinalizandoGuerra;
new CheckMTempo;
new MorrPtempo;
new RespawnMorroAuto;
//~~~~~~~~~~~~~~~~~~~~~~~~~~~[Defines da Guerra na Pedreira]~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
// Pedreira
new Text:TextPedreira0;
new Text:TextPedreira1;
new Text:TextPedreira2;
new Text:TextPedreira3;
new Text:TextPedreira4;
new Text:TextPedreira5;
new Text:TextPedreira6;
new Text:TextPedreira7;
new Text:TextPedreira8;
new Text:TextPedreira9;
new Text:TextPedreira10;
new GZPedreira;
// Sistema de guerras da Pedreira
forward DefinirCorPedreira();
forward CarregarPedreira();
forward SalvarPedreira();
forward IniciarGuerraPedreira();
forward FinalizarGuerraPedreira();
forward TempoGuerraPP();
enum PedreiraInfo
{
	Dono,
	Cor,
	Guerra,
};
new Pedreira[PedreiraInfo];
new PedreiraPontos[MAX_ORGS];
new IniciandoGuerraP;
new FinalizandoGuerraP;
new CheckPTempo;
new PedreirPtempo;
new RespawnPedreiraAuto;
//==================================
//Respawn Automático de Veículos!
forward RespawnHorarios();
//=======[Fim defines guerra de pontos & Início Sistema boné e óculos]==========
new bool:PondoOculos[MAX_PLAYERS];
new Oculos[MAX_PLAYERS];
new Text:TOculos;
new Text:TOculos2;

new Float:SkinOffSet[300][7] = {
{0.098771, 0.030772, -0.000335, 85.342658, 84.122947, 4.236968 }, // - 0
{0.100766, 0.028630, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 1
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 2
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 }, // - 3
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },  // - 4
{0.085712, 0.037132, -0.004521, 87.936676, 82.110870, 4.236968 },   // - 5
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },   // - 6
{0.090066, 0.043458, -0.006523, 87.936676, 82.110870, 4.236968 }, // - 7
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },    // - 8
{0.070977, 0.028663, 0.000147, 81.164970, 92.128402, 4.236968 },  // - 9
{0.072317, 0.032179, -0.002934, 86.843269, 84.196006, 4.236968 }, // - 10
{0.072317, 0.035465, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 11
{0.072317, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 12
{0.076569, 0.028100, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 13
{0.091310, 0.049169, -0.002201, 86.843269, 84.196006, 4.236968 }, // - 14
{0.073734, 0.006292, -0.002755, 86.843269, 84.196006, 4.236968 }, // - 15
{0.092845, 0.040331, 0.000183, 86.843269, 82.864280, 4.236968 },  // - 16
{0.088241, 0.030184, -0.000157, 86.843269, 82.864280, 4.236968 }, // - 17
{0.061677, 0.029596, -0.007398, 86.843269, 82.864280, 4.236968 }, // - 18
{0.079911, 0.029596, -0.002934, 86.843269, 82.864280, 4.236968 }, // - 19
{0.095079, 0.029596, -0.001718, 85.261871, 86.296562, 4.236968 }, // - 20
{0.093728, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 21
{0.079585, 0.042083, -0.005781, 85.261871, 81.636192, 4.236968 }, // - 22
{0.090786, 0.041737, -0.005263, 85.261871, 81.636192, 4.236968 }, // - 23
{0.085247, 0.026941, -0.000317, 85.261871, 81.636192, 4.236968 }, // - 24
{0.081646, 0.031448, -0.001113, 89.393653, 81.665985, 4.236968 }, // - 25
{0.083700, 0.033814, -0.001960, 86.436462, 81.665985, 4.236968 }, // - 26
{0.092498, 0.037321, -0.001960, 86.436462, 85.568023, 4.236968 }, // - 27
{0.097068, 0.041360, -0.007881, 86.771400, 85.568023, 4.236968 }, // - 28
{0.083456, 0.050595, 0.001011, 86.771400, 77.201461, 4.236968 },  // - 29
{0.076983, 0.047168, -0.006161, 86.771400, 74.329719, 4.236968 }, // - 30
{0.083798, 0.042184, -0.001869, 86.771400, 83.181861, 4.236968 }, // - 31
{0.053021, -0.000587, -0.001869, 86.771400, 66.859710, 4.236968 },// - 32
{0.034386, 0.013324, -0.001869, 86.771400, 80.314460, 4.236968 }, // - 33
{0.104669, 0.037365, -0.001403, 86.771400, 87.178382, 4.236968 }, // - 34
{0.102659, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 35
{0.107638, 0.037465, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 36
{0.107638, 0.035879, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 37
{0.107638, 0.041106, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 38
{0.080326, 0.035634, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 39
{0.080326, 0.027371, -0.000829, 86.771400, 93.020492, 4.236968 }, // - 40
{0.084617, 0.039613, -0.001620, 86.771400, 93.020492, 4.236968 }, // - 41
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },  // - 42
{0.040075, 0.025445, -0.000974, 86.771400, 92.964149, 4.236968 }, // - 43
{0.077369, 0.028469, -0.000974, 86.771400, 78.435791, 4.236968 }, // - 44
{0.064145, 0.028684, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 45
{0.091993, 0.056559, -0.000974, 86.771400, 84.762802, 4.236968 }, // - 46
{0.084582, 0.051277, -0.005034, 86.771400, 84.762802, 4.236968 }, // - 47
{0.092182, 0.042095, -0.003533, 86.771400, 84.762802, 4.236968 }, // - 48
{0.086866, 0.032203, -0.001021, 86.771400, 84.762802, 4.236968 }, // - 49
{0.099350, 0.009422, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 50
{0.099350, 0.030598, -0.005899, 86.771400, 84.762802, 4.236968 }, // - 51
{0.099350, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 52
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 53
{0.079123, 0.030598, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 54
{0.063159, 0.029641, -0.003575, 86.771400, 84.762802, 4.236968 }, // - 55
{0.070293, 0.029641, -0.000570, 86.771400, 84.762802, 4.236968 }, // - 56
{0.111305, 0.045368, -0.000570, 86.771400, 84.458084, 4.236968 }, // - 57
{0.084901, 0.020965, -0.000570, 86.771400, 79.542411, 4.236968 }, // - 58
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 59
{0.090164, 0.044163, -0.004754, 86.771400, 79.542411, 4.236968 }, // - 60
{0.087151, 0.041447, -0.000885, 90.928329, 89.598678, 0.000000 }, // - 61
{0.094350, 0.041447, 0.005717, 90.928329, 89.598678, 0.000000 },  // - 62
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 63
{0.075534, 0.041447, -0.001751, 90.928329, 89.598678, 0.000000 }, // - 64
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 65
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 66
{0.104148, 0.034787, 0.001341, 90.928329, 89.598678, 0.000000 },  // - 67
{0.087317, 0.039646, -0.004032, 90.928329, 89.598678, 0.000000 }, // - 68
{0.074873, 0.039646, -0.003072, 90.928329, 89.598678, 0.000000 }, // - 69
{0.090391, 0.042364, 0.005494, 90.928329, 89.598678, 0.000000 },  // - 70
{0.090391, 0.022298, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 71
{0.090391, 0.039580, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 72
{0.090391, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 73
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 74
{0.083113, 0.038224, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 75
{0.072957, 0.028956, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 76
{0.069398, 0.039981, -0.001170, 90.928329, 89.598678, 0.000000 }, // - 77
{0.105738, 0.010001, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 78
{0.078264, 0.019668, 0.004508, 90.928329, 79.030494, 0.000000 },  // - 79
{0.087377, 0.022096, -0.001993, 90.928329, 79.030494, 0.000000 }, // - 80
{0.087377, 0.022096, -0.001635, 90.928329, 79.030494, 0.000000 }, // - 81
{0.100623, 0.043063, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 82
{0.092528, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 83
{0.102086, 0.027493, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 84
{0.081954, 0.041672, -0.001635, 90.928329, 87.672645, 0.000000 }, // - 85
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 86
{0.077010, 0.046925, -0.003438, 90.928329, 91.590301, 0.000000 }, // - 87
{0.069952, 0.042635, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 88
{0.093827, 0.019258, -0.003438, 90.928329, 86.722587, 0.000000 }, // - 89
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 90
{0.066464, 0.035685, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 91
{0.066464, 0.038135, -0.000843, 90.928329, 86.722587, 0.000000 }, // - 92
{0.066464, 0.038135, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 93
{0.048124, 0.010598, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 94
{0.084997, 0.006773, -0.001690, 90.928329, 86.722587, 0.000000 }, // - 95
{0.100076, 0.026633, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 96
{0.061686, 0.027537, -0.001690, 90.928329, 80.020179, 0.000000 }, // - 97
{0.098318, 0.053993, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 98
{0.098318, 0.033702, -0.001690, 90.928329, 89.237678, 0.000000 }, // - 99
{0.086149, 0.042526, -0.001690, 90.928329, 77.587478, 0.000000 }, // - 100
{0.081864, 0.030555, -0.001690, 90.928329, 78.145759, 0.000000 }, // - 101
{0.081864, 0.047914, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 102
{0.089607, 0.036717, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 103
{0.079655, 0.042021, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 104
{0.091779, 0.037620, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 105
{0.084179, 0.035251, -0.005079, 90.928329, 78.145759, 0.000000 }, // - 106
{0.089387, 0.040297, -0.006006, 90.928329, 78.145759, 0.000000 }, // - 107
{0.081930, 0.030756, 0.001523, 90.928329, 78.145759, 0.000000 },  // - 108
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 109
{0.092857, 0.043070, -0.006084, 90.928329, 85.326652, 0.000000 }, // - 110
{0.106601, 0.028021, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 111
{0.096335, 0.015873, -0.003537, 90.928329, 90.217376, 0.000000 }, // - 112
{0.105827, 0.046620, -0.001395, 90.928329, 90.217376, 0.000000 }, // - 113
{0.097520, 0.044296, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 114
{0.097408, 0.043470, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 115
{0.092588, 0.049832, -0.007286, 90.928329, 90.217376, 0.000000 }, // - 116
{0.081444, 0.037602, -0.003125, 90.928329, 90.217376, 0.000000 }, // - 117
{0.078678, 0.037602, -0.001816, 90.928329, 90.217376, 0.000000 }, // - 118
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },  // - 119
{0.089214, 0.029291, -0.000784, 90.928329, 84.624763, 0.000000 }, // - 120
{0.086825, 0.033424, -0.000784, 90.928329, 77.233818, 0.000000 }, // - 121
{0.082869, 0.030783, -0.000950, 90.928329, 77.233818, 0.000000 }, // - 122
{0.096117, 0.048957, -0.006245, 90.928329, 87.579650, 0.000000 }, // - 123
{0.103663, 0.040022, 0.000449, 90.928329, 87.579650, 0.000000 },  // - 124
{0.099326, 0.031202, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 125
{0.099326, 0.031132, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 126
{0.099326, 0.039279, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 127
{0.099326, 0.047422, -0.001180, 90.928329, 87.579650, 0.000000 }, // - 128
{0.088817, 0.021210, 0.000730, 90.928329, 87.579650, 0.000000 },  // - 129
{0.025784, 0.028323, 0.000730, 90.928329, 59.394767, 0.000000 },  // - 130
{0.068455, 0.031841, -0.004470, 90.928329, 79.979003, 0.000000 }, // - 131
{0.012930, 0.008392, -0.004470, 90.928329, 72.129173, 0.000000 }, // - 132
{0.102457, 0.032260, -0.003338, 90.928329, 84.534217, 0.000000 }, // - 133
{0.085976, 0.014956, -0.003338, 90.928329, 80.308830, 0.000000 }, // - 134
{0.071574, 0.028186, -0.001588, 90.928329, 80.308830, 0.000000 }, // - 135
{0.085219, 0.016666, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 136
{0.065114, 0.009318, -0.000738, 90.928329, 80.308830, 0.000000 }, // - 137
{0.066890, 0.040024, -0.000738, 90.928329, 87.341934, 0.000000 }, // - 138
{0.072037, 0.036141, -0.000702, 90.928329, 87.341934, 0.000000 }, // - 139
{0.069108, 0.042194, -0.000436, 90.928329, 87.341934, 0.000000 }, // - 140
{0.058717, 0.043547, -0.000436, 90.928329, 87.209770, 0.000000 }, // - 141
{0.104196, 0.039601, -0.005481, 90.928329, 87.209770, 0.000000 }, // - 142
{0.090929, 0.045881, -0.012780, 90.928329, 87.209770, 0.000000 }, // - 143
{0.098291, 0.042464, -0.006952, 90.928329, 83.081665, 0.000000 }, // - 144
{0.080087, 0.030122, 0.000606, 90.928329, 83.081665, 0.000000 },  // - 145
{0.093500, 0.030690, -0.001545, 90.928329, 83.081665, 0.000000 }, // - 146
{0.079566, 0.020138, 0.004838, 90.928329, 73.715591, 0.000000 },  // - 147
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 149
{0.073564, 0.028430, -0.000527, 90.928329, 88.295433, 0.000000 }, // - 150
{0.083426, 0.032359, -0.005717, 90.928329, 88.295433, 0.000000 }, // - 151
{0.072349, 0.019623, -0.000747, 90.928329, 82.624351, 0.000000 }, // - 152
{0.075065, 0.015351, 0.006545, 90.928329, 71.041442, 0.000000 },  // - 153
{0.062227, 0.029731, -0.004938, 90.928329, 84.602760, 0.000000 }, // - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 155
{0.079936, 0.049000, -0.000304, 90.928329, 82.926010, 0.000000 }, // - 156
{0.067550, 0.035686, -0.000017, 90.928329, 82.926010, 0.000000 }, // - 157
{0.090676, 0.039383, -0.001726, 90.928329, 88.667900, 0.000000 }, // - 158
{0.090676, 0.039383, -0.003532, 90.928329, 88.667900, 0.000000 }, // - 159
{0.098662, 0.017441, -0.001589, 90.928329, 88.667900, 0.000000 }, // - 160
{0.105388, 0.038409, 0.003155, 90.928329, 88.667900, 0.000000 },  // - 161
{0.097415, 0.036904, -0.000525, 90.928329, 88.667900, 0.000000 }, // - 162
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 163
{0.088934, 0.023302, -0.004153, 90.928329, 80.393875, 0.000000 }, // - 164
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 165
{0.087018, 0.051364, 0.000484, 90.928329, 94.584838, 0.000000 },  // - 166
{0.095996, 0.038787, 0.000484, 90.928329, 84.315711, 0.000000 },  // - 167
{0.089094, 0.034001, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 168
{0.075700, 0.028082, -0.006451, 90.928329, 84.315711, 0.000000 }, // - 169
{0.093751, 0.041968, -0.005545, 90.928329, 84.315711, 0.000000 }, // - 170
{0.090124, 0.031055, -0.000505, 90.928329, 84.315711, 0.000000 }, // - 171
{0.066033, 0.032915, -0.002713, 90.928329, 84.315711, 0.000000 }, // - 172
{0.088287, 0.045350, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 173
{0.087750, 0.042129, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 174
{0.092384, 0.039294, -0.005384, 90.928329, 84.315711, 0.000000 }, // - 175
{0.097661, 0.039065, -0.006344, 90.928329, 80.736480, 0.000000 }, // - 176
{0.097114, 0.039641, -0.006692, 90.928329, 80.736480, 0.000000 }, // - 177
{0.069354, 0.039641, -0.000474, 90.928329, 80.736480, 0.000000 }, // - 178
{0.091414, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 179
{0.094914, 0.039641, -0.005617, 90.928329, 80.736480, 0.000000 }, // - 180
{0.117232, 0.033217, -0.001099, 90.928329, 82.396362, 0.000000 }, // - 181
{0.082569, 0.032748, -0.003248, 90.928329, 87.394371, 0.000000 }, // - 182
{0.095527, 0.027237, -0.001960, 90.928329, 86.443649, 0.000000 }, // - 183
{0.095527, 0.040994, -0.006878, 90.928329, 86.443649, 0.000000 }, // - 184
{0.085663, 0.030601, -0.002345, 90.928329, 81.496513, 0.000000 }, // - 185
{0.085663, 0.030601, -0.001015, 90.928329, 81.496513, 0.000000 }, // - 186
{0.076527, 0.027211, 0.008500, 90.928329, 74.401092, 0.000000 },  // - 187
{0.096669, 0.032578, 0.001662, 90.928329, 83.502502, 0.000000 },  // - 188
{0.098753, 0.032129, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 189
{0.092821, 0.035572, -0.001659, 90.928329, 90.153724, 0.000000 }, // - 190
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 191
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 192
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 193
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 194
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 195
{0.092821, 0.035572, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 196
{0.100630, 0.020568, -0.001132, 90.928329, 90.153724, 0.000000 }, // - 197
{0.077905, 0.028523, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 198
{0.099095, 0.022463, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 199
{0.103182, 0.031106, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 200
{0.078426, 0.038546, 0.000000, 89.675476, 89.270309, 0.000000 },  // - 201
{0.101092, 0.035797, -0.002997, 89.675476, 82.081153, 0.000000 }, // - 202
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 203
{0.092009, 0.042780, -0.005841, 89.675476, 84.463294, 0.000000 }, // - 204
{0.092969, 0.027782, -0.002959, 89.675476, 84.463294, 0.000000 }, // - 205
{0.105109, 0.036128, -0.000471, 89.675476, 84.463294, 0.000000 }, // - 206
{0.066892, 0.024410, -0.002792, 89.675476, 84.463294, 0.000000 }, // - 207
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },  // - 208
{0.084046, 0.013608, -0.002792, 89.675476, 81.667831, 0.000000 }, // - 209
{0.084046, 0.013608, -0.001034, 89.675476, 81.667831, 0.000000 }, // - 210
{0.067610, 0.033777, -0.001034, 89.675476, 85.214485, 0.000000 }, // - 211
{0.094159, 0.020717, 0.000715, 89.675476, 85.214485, 0.000000 },  // - 212
{0.098744, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 213
{0.068755, 0.036786, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 214
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 215
{0.068755, 0.026863, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 216
{0.095765, 0.030034, -0.001770, 89.675476, 85.214485, 0.000000 }, // - 217
{0.085486, 0.039427, -0.003311, 89.675476, 85.214485, 0.000000 }, // - 218
{0.068874, 0.027850, -0.001021, 89.675476, 85.214485, 0.000000 }, // - 219
{0.052931, 0.050390, -0.002062, 89.675476, 88.113647, 0.000000 }, // - 220
{0.094479, 0.034432, 0.000875, 89.675476, 83.572830, 0.000000 },  // - 221
{0.094479, 0.034432, -0.000596, 89.675476, 83.572830, 0.000000 }, // - 222
{0.094479, 0.062073, -0.003098, 89.675476, 83.572830, 0.000000 }, // - 223
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 224
{0.064458, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 225
{0.072095, 0.029760, -0.001460, 89.675476, 83.572830, 0.000000 }, // - 226
{0.110619, 0.043037, -0.001466, 89.675476, 86.927627, 0.000000 }, // - 227
{0.099446, 0.050772, -0.001466, 89.675476, 85.103805, 0.000000 }, // - 228
{0.078635, 0.023680, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 229
{0.043357, 0.028726, -0.000275, 89.675476, 73.445220, 0.000000 }, // - 230
{0.092488, 0.049972, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 231
{0.092488, 0.016739, -0.000275, 89.675476, 88.981941, 0.000000 }, // - 232
{0.071677, 0.037055, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 233
{0.082745, 0.004209, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 234
{0.057909, 0.021331, -0.002878, 89.675476, 88.981941, 0.000000 }, // - 235
{0.079016, 0.021331, -0.000419, 89.675476, 77.678733, 0.000000 }, // - 236
{0.074572, 0.021331, -0.000419, 89.675476, 84.527442, 0.000000 }, // - 237
{0.074572, 0.038346, -0.001500, 89.675476, 84.527442, 0.000000 }, // - 238
{0.111645, 0.011549, 0.006237, 89.675476, 84.527442, 0.000000 },  // - 239
{0.090766, 0.044221, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 240
{0.069491, 0.049021, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 241
{0.059706, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 242
{0.065242, 0.031911, -0.000423, 89.675476, 89.461883, 0.000000 }, // - 243
{0.065242, 0.051077, -0.001103, 89.675476, 89.461883, 0.000000 }, // - 244
{0.082393, 0.038233, 0.000410, 89.675476, 89.461883, 0.000000 },  // - 245
{0.079338, 0.044859, -0.002535, 89.675476, 89.461883, 0.000000 }, // - 246
{0.101566, 0.037019, 0.000750, 89.675476, 83.514060, 0.000000 },  // - 247
{0.091887, 0.047776, -0.000040, 89.675476, 83.514060, 0.000000 }, // - 248
{0.089745, 0.044044, 0.004071, 89.675476, 83.514060, 0.000000 },  // - 249
{0.094214, 0.044044, -0.007274, 89.675476, 83.514060, 0.000000 }, // - 250
{0.072282, 0.044044, -0.001468, 89.675476, 90.444763, 0.000000 }, // - 251
{0.095764, 0.034224, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 252
{0.087454, 0.026208, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 253
{0.099198, 0.037362, -0.000264, 89.675476, 82.959915, 0.000000 }, // - 254
{0.070845, 0.019943, 0.003505, 89.675476, 73.529716, 0.000000 },  // - 255
{0.065373, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 256
{0.070077, 0.033656, -0.001141, 89.675476, 83.002151, 0.000000 }, // - 257
{0.089536, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 258
{0.084822, 0.041904, 0.000715, 89.675476, 83.002151, 0.000000 },  // - 259
{0.093009, 0.031491, -0.001568, 89.675476, 83.002151, 0.000000 }, // - 260
{0.093009, 0.015023, -0.001477, 89.675476, 83.002151, 0.000000 }, // - 261
{0.076580, 0.039782, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 262
{0.076580, 0.028967, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 263
{0.075424, 0.043059, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 264
{0.089655, 0.021726, -0.001477, 89.675476, 88.620780, 0.000000 }, // - 265
{0.096792, 0.014114, -0.003062, 89.675476, 85.166038, 0.000000 }, // - 266
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 267
{0.094886, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 268
{0.102252, 0.024989, -0.003184, 89.675476, 85.166038, 0.000000 }, // - 269
{0.102252, 0.024989, 0.000529, 89.675476, 85.166038, 0.000000 },  // - 270
{0.096134, 0.025462, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 271
{0.099226, 0.032663, 0.000529, 89.675476, 79.225112, 0.000000 },  // - 272
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   // - 273
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 274
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 275
{0.089833, 0.022466, -0.001590, 89.675476, 88.636062, 0.000000 }, // - 276
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 277
{0.082718, 0.062596, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 278
{0.087652, 0.059379, -0.000201, 89.675476, 88.636062, 0.000000 }, // - 279
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 280
{0.087652, 0.023702, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 281
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 282
{0.090877, 0.026643, -0.003091, 89.675476, 88.636062, 0.000000 }, // - 283
{0.090877, 0.053674, 0.009879, 89.675476, 88.636062, 0.000000 },  // - 284
{0.104320, 0.041487, 0.008021, 89.675476, 88.636062, 0.000000 },  // - 285
{0.087062, 0.021779, -0.003307, 89.675476, 88.636062, 0.000000 }, // - 286
{0.073173, 0.048856, 0.005337, 89.675476, 92.561180, 0.000000 },  // - 287
{0.090294, 0.027592, -0.003497, 89.675476, 92.561180, 0.000000 }, // - 288
{0.083712, 0.033132, -0.003521, 87.936676, 82.110870, 4.236968 },  // - 289
{0.086562, 0.042698, -0.000612, 89.675476, 92.561180, 0.000000 }, // - 290
{0.096768, 0.039233, -0.000612, 89.675476, 83.550270, 0.000000 }, // - 291
{0.079939, 0.020731, -0.005162, 89.675476, 83.550270, 0.000000 }, // - 292
{0.097107, 0.027826, -0.005162, 89.675476, 88.505996, 0.000000 }, // - 293
{0.097107, 0.037636, 0.000618, 89.675476, 88.505996, 0.000000 },  // - 294
{0.079985, 0.035006, -0.000826, 89.675476, 87.533462, 0.000000 }, // - 295
{0.088445, 0.024209, -0.002076, 89.675476, 73.285072, 0.000000 }, // - 296
{0.094039, 0.035411, 0.000490, 89.675476, 84.277572, 0.000000 },  // - 297
{0.099553, 0.024683, -0.002919, 89.675476, 84.277572, 0.000000 }, // - 298
{0.099553, 0.044356, -0.000285, 89.675476, 84.277572, 0.000000 }  // - 299
};
enum {
CommonRed = 19006,
CommonOrange,
CommonGreen,
CommonBlue,
CommonPurple,
CommonEspiral,
CommonBlack,
CommonEyes,
CommonXadrex,
CommonTransparent,
CommonXRayVision,
SquareFormatYellow,
SquareFormatOrange,
SquareFormatRed,
SquareFormatBlue,
SquareFormatGreen,
RayBanGray,
RayBanBlue,
RayBanPurple,
RayBanPink,
RayBanRed,
RayBanOrange,
RayBanYellow,
RayBanGreen,
CircularNormal,
CircularYellow,
CircularRed,
CircularBlack,
CircularXadrex,
CircularThunders,
};
//============================[bone]===========================================|
static invalidskins[] = {1,2,3,4,5,7,12,15,17,18,21,23,26,27,30,32,33,34,40,41,50,51,60,64,73,76,85,98,103,106,114,118,136,142,148,152,154,157,160,166,172,197,204,207,214,241,245,248,252,254,259,268,269,272,276,277,278,282,283,284,286,287,288,292};
static Float: SkinBone[299][6] = {
{0.135928, 0.002891, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 0
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 1
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 2
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 3
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 4
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 5
{0.155785, 0.005998, -0.014326, 0.000000, 0.000000, 347.188201},//Skin - 6
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 7
{0.131067, -0.013737, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 8
{0.118922, -0.015322, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 9
{0.125779, -0.001459, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 10
{0.129249, -0.014101, -0.008518, 0.000000, 0.000000, 347.188201},//Skin - 11
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 12
{0.161076, -0.015624, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 13
{0.112204, -0.023196, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 14
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 15
{0.150166, -0.008718, -0.006768, 0.000000, 0.000000, 347.188201},//Skin - 16
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 17
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 18
{0.153609, -0.003207, -0.007717, 0.000000, 0.000000, 357.608825},//Skin - 19
{0.143831, 0.001813, -0.010588, 0.000000, 0.000000, 357.608825}, //Skin - 20
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 21
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 22
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin - 23
{0.127352, 0.009877, -0.006845, 0.726156, 359.666778, 348.825012},//Skin - 24
{0.124666, -0.029373, -0.006845, 0.726156, 359.666778, 329.940704},//Skin - 25
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 26
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 27
{0.128768, 0.041474, -0.007667, 0.726156, 359.666778, 355.429199}, //Skin - 28
{0.166457, -0.006228, -0.012669, 0.726156, 359.666778, 354.612152},//Skin - 29
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 30
{0.096077, -0.023233, -0.009101, 0.726156, 359.666778, 343.094055},//Skin - 31
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 32
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 33
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 34
{0.155565, 0.014400, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 35
{0.156485, 0.013641, -0.009101, 0.726156, 359.666778, 6.131487},   //Skin - 36
{0.144815, 0.013641, -0.009374, 0.726156, 359.666778, 350.562103}, //Skin - 37
{0.113347, -0.006682, -0.009374, 0.726156, 359.666778, 350.562103},//Skin - 38
{0.147231, -0.014448, -0.004786, 0.726156, 359.666778, 357.303253},//Skin - 39
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 40
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 41
{0.082446, 0.004202, -0.004786, 0.726156, 359.666778, 357.303253}, //Skin - 42
{0.104901, 0.004013, -0.004786, 0.726156, 359.666778, 342.983184}, //Skin - 43
{0.116172, -0.001954, -0.004786, 0.726156, 359.666778, 357.100677},//Skin - 44
{0.153321, 0.025744, -0.008666, 0.726156, 359.666778, 10.704365},  //Skin - 45
{0.160556, 0.007781, -0.010438, 0.726156, 359.666778, 0.991972},   //Skin - 46
{0.179010, -0.035613, -0.010438, 0.726156, 359.666778, 347.956573},//Skin - 47
{0.123363, 0.008694, -0.010438, 0.726156, 359.666778, 347.956573}, //Skin - 48
{0.167061, -0.037899, -0.010438, 0.726156, 359.666778, 347.775817},//Skin - 49
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 50
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 51
{0.129040, 0.016069, -0.010438, 0.726156, 359.666778, 347.775817}, //Skin - 52
{0.129040, 0.016069, -0.006084, 0.726156, 359.666778, 347.775817}, //Skin - 53
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 54
{0.137743, -0.016369, -0.011731, 0.726156, 359.666778, 355.812011},//Skin - 55
{0.174539, -0.000662, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 56
{0.109382, -0.002955, -0.007289, 0.726156, 359.666778, 352.847045},//Skin - 57
{0.152276, -0.029331, -0.008357, 0.726156, 359.666778, 332.070648},//Skin - 58
{0.129599, -0.019172, -0.012204, 0.726156, 359.666778, 332.070648},//Skin - 59
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 60
{0.130350, 0.000897, -0.000747, 0.726156, 359.666778, 332.070648}, //Skin - 61
{0.150659, -0.035485, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 62
{0.119340, -0.006483, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 63
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 64
{0.133055, -0.000092, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 65
{0.129061, -0.006499, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 66
{0.127292, 0.010318, -0.006299, 0.726156, 359.666778, 341.617431}, //Skin - 67
{0.138791, -0.025311, -0.006299, 0.726156, 359.666778, 341.617431},//Skin - 68
{0.148132, 0.003970, -0.002304, 0.726156, 359.666778, 340.120025}, //Skin - 69
{0.129753, 0.006469, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 70
{0.125663, 0.015428, -0.006376, 0.726156, 359.666778, 354.029815}, //Skin - 71
{0.125663, 0.015428, -0.009030, 0.726156, 359.666778, 354.029815}, //Skin - 72
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 73
{0.135729, -0.018656, -0.013554, 0.000000, 0.000000, 337.893737},  //Skin - 74
{0.141888, -0.042810, -0.006206, 0.000000, 0.000000, 337.893737},  //Skin - 75
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 76
{0.124348, -0.017813, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 77
{0.124348, 0.000583, -0.006206, 0.000000, 0.000000, 346.786865},   //Skin - 78
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 79
{0.102654, -0.010906, -0.006206, 0.000000, 0.000000, 346.786865},  //Skin - 81
{0.167928, 0.031601, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 82
{0.159998, 0.023540, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 83
{0.169630, 0.019315, -0.006206, 0.000000, 0.000000, 17.955888},    //Skin - 84
{0.163052, -0.039735, -0.006206, 0.000000, 0.000000, 341.169891},  //Skin - 85
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 86
{0.144811, -0.007521, -0.014207, 0.000000, 0.000000, 341.169891},  //Skin - 87
{0.129932, -0.007521, -0.007289, 0.000000, 0.000000, 341.169891},  //Skin - 88
{0.151147, -0.038608, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 89
{0.147416, -0.031632, -0.009597, 0.000000, 0.000000, 343.694549},  //Skin - 90
{0.157728, -0.009677, -0.009597, 0.000000, 0.000000, 0.934848},    //Skin - 91
{0.136577, -0.015592, -0.009597, 0.000000, 0.000000, 341.013824},  //Skin - 92
{0.143821, 0.000631, -0.008385, 0.000000, 0.000000, 358.808868},   //Skin - 93
{0.100521, 0.003151, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 94
{0.122833, -0.006031, -0.007624, 0.000000, 0.000000, 358.808868},  //Skin - 95
{0.145296, 0.003959, -0.007624, 0.000000, 0.000000, 358.808868},   //Skin - 96
{0.141658, 0.016474, -0.007624, 0.000000, 0.000000, 9.683902},     //Skin - 97
{0.145276, -0.002846, -0.007624, 0.000000, 0.000000, 340.239593},  //Skin - 98
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 99
{0.161745, -0.010244, -0.007624, 0.000000, 0.000000, 351.499267}, //Skin - 100
{0.151006, -0.030994, -0.005366, 0.000000, 0.000000, 340.428894}, //Skin - 101
{0.147111, 0.003794, -0.012433, 0.000000, 0.000000, 358.069244},  //Skin - 102
{0.154213, -0.052348, -0.003511, 356.299316, 0.000000, 336.751647},//Skin - 103
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 104
{0.153814, -0.039614, -0.006756, 356.299316, 0.000000, 336.930084},//Skin - 105
{0.153638, -0.039614, -0.013630, 356.299316, 0.000000, 336.930084},//Skin - 106
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 107
{0.140473, -0.026201, -0.000469, 0.390689, 355.405181, 335.554260},//Skin - 108
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 109
{0.140904, -0.007227, -0.008114, 0.390689, 355.405181, 335.554260},//Skin - 110
{0.134860, 0.001485, -0.010145, 0.390689, 358.632415, 347.730010},//Skin - 111
{0.124823, 0.001485, -0.009402, 0.390689, 358.632415, 347.730010},//Skin - 112
{0.157999, -0.012039, -0.006082, 0.390689, 358.632415, 347.730010},//Skin - 113
{0.144906, -0.005139, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 114
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                    //Skin - 116
{0.152829, -0.009735, -0.009654, 0.390689, 358.632415, 336.830108},//Skin - 117
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 118
{0.113804, 0.009252, -0.009654, 0.390689, 358.632415, 345.244384},//Skin - 119
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                   //Skin -120
{0.154275, -0.037484, -0.009654, 0.390689, 358.632415, 337.676666},//Skin - 121
{0.155674, -0.015613, -0.004339, 0.390689, 358.632415, 350.571228},//Skin - 122
{0.136433, -0.019181, -0.004339, 0.390689, 358.632415, 340.261840},//Skin - 123
{0.163258, -0.032386, -0.013128, 0.390689, 358.632415, 340.261840},//Skin - 124
{0.153242, -0.029651, -0.002434, 0.390689, 358.632415, 333.367614},//Skin - 125
{0.127978, -0.001961, -0.008867, 0.390689, 358.632415, 347.279052},//Skin - 126
{0.160856, -0.025356, -0.004428, 0.390689, 358.632415, 347.279052},//Skin - 127
{0.150266, -0.009032, -0.006781, 0.390689, 358.632415, 347.223754},//Skin - 128
{0.158060, 0.022907, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 129
{0.111739, 0.012673, -0.006781, 0.390689, 358.632415, 349.378875},//Skin - 130
{0.091638, -0.011600, -0.008686, 0.390689, 358.632415, 336.674468},//Skin - 131
{0.125788, 0.000635, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 132
{0.031324, -0.014154, -0.005915, 0.390689, 358.632415, 343.007751},//Skin - 133
{0.142321, 0.015417, -0.005915, 0.243191, 358.632415, 350.329559},//Skin - 133
{0.128780, -0.030750, 0.006687, 173.184967, 358.632415, 27.422966},//Skin - 134
{0.115882, -0.004931, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 135
{0.127531, -0.008916, -0.003807, 358.837646, 358.632415, 346.206237},//Skin - 136
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 137
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 138
{0.148992, -0.017748, -0.006509, 358.837646, 358.632415, 350.742156},//Skin - 139
{0.147315, 0.001708, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 140
{0.144315, -0.013571, -0.006509, 358.837646, 358.632415, 354.390045},//Skin - 141
{0.144315, -0.002729, -0.010357, 358.837646, 358.632415, 354.390045},//Skin - 142
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 143
{0.177516, -0.070868, -0.009114, 358.837646, 358.632415, 331.679321},//Skin - 144
{0.139578, -0.008750, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 145
{0.139578, -0.014406, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 146
{0.115592, -0.010754, -0.004405, 358.837646, 358.632415, 343.319335},//Skin - 147
{0.150735, -0.000459, -0.004405, 358.837646, 358.632415, 9.362450},//Skin - 148
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 149
{0.149485, -0.008709, -0.006168, 358.837646, 358.632415, 2.276566},//Skin - 150
{0.168162, -0.009708, -0.012160, 359.504821, 4.442328, 355.348114},//Skin - 151
{0.156369, -0.024521, -0.012160, 359.504821, 0.415596, 355.348114},//Skin - 152
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 153
{0.119297, -0.016080, -0.010776, 359.504821, 0.415596, 341.522827},//Skin - 154
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 155
{0.172295, -0.065549, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 156
{0.126340, -0.030764, -0.007187, 359.504821, 0.415596, 336.175567},//Skin - 157
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 158
{0.154280, 0.002166, -0.010436, 359.504821, 0.415596, 357.792144},//Skin - 159
{0.121469, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 160
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 161
{0.139495, -0.007383, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 162
{0.113212, -0.005302, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 163
{0.120208, 0.003533, -0.010436, 359.504821, 0.415596, 341.538574},//Skin - 164
{0.135111, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 165
{0.122118, 0.005091, -0.006407, 359.504821, 0.415596, 352.954559},//Skin - 166
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 167
{0.125229, 0.005091, -0.013084, 359.504821, 0.415596, 352.954559},//Skin - 168
{0.153451, -0.018119, -0.013276, 359.504821, 0.415596, 358.219451},//Skin - 169
{0.141395, -0.009131, -0.013276, 359.504821, 0.415596, 347.866027},//Skin - 170
{0.157631, -0.028753, -0.006450, 359.504821, 0.415596, 339.935516},//Skin - 171
{0.152687, -0.027057, -0.007731, 359.504821, 0.415596, 344.054809},//Skin - 172
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 173
{0.165146, 0.015393, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 174
{0.162788, -0.019696, -0.007731, 359.504821, 0.415596, 344.001678},//Skin - 175
{0.157728, -0.027188, -0.012891, 359.504821, 0.415596, 345.804748},//Skin - 176
{0.187507, 0.010472, -0.012891, 359.504821, 0.415596, 12.315887},//Skin - 177
{0.153901, -0.027720, -0.007884, 359.504821, 0.415596, 344.553527},//Skin - 178
{0.137445, -0.009757, -0.012987, 359.504821, 0.415596, 344.553527},//Skin - 179
{0.173041, -0.006323, -0.012987, 359.504821, 0.415596, 3.267552},//Skin - 180
{0.143467, 0.016897, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 181
{0.114480, 0.006202, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 182
{0.114480, 0.008813, -0.007831, 359.504821, 0.415596, 349.504974},//Skin - 183
{0.128122, -0.012152, -0.013144, 359.504821, 0.415596, 336.326538},//Skin - 184
{0.156171, 0.007268, -0.013144, 359.504821, 0.415596, 10.805211},//Skin - 185
{0.156409, -0.034861, -0.007927, 359.504821, 0.415596, 336.978668},//Skin - 186
{0.118034, -0.024105, -0.002947, 359.504821, 0.415596, 336.978668},//Skin - 187
{0.128686, -0.029632, -0.002947, 358.201873, 0.415596, 329.325042},//Skin - 188
{0.172639, -0.026749, -0.012705, 358.201873, 0.415596, 349.092590},//Skin - 189
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 190
{0.180897, -0.026749, -0.007224, 358.201873, 0.415596, 349.092590},//Skin - 191
{0.178725, -0.010278, -0.007224, 358.201873, 0.415596, 354.053405},//Skin - 192
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 193
{0.172020, -0.010278, -0.010734, 358.201873, 0.415596, 354.053405},//Skin - 194
{0.176089, -0.032526, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 195
{0.118042, 0.007002, -0.005110, 358.201873, 0.415596, 341.814422},//Skin - 196
{0.143840, -0.042712, -0.007556, 358.201873, 0.415596, 341.814422},//Skin - 197
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 198
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 199
{0.148060, -0.032384, -0.009754, 358.201873, 0.415596, 333.484924},//Skin - 200
{0.140799, 0.025145, -0.009754, 358.201873, 0.415596, 5.040688},//Skin - 201
{0.140799, 0.015851, -0.009754, 358.201873, 0.415596, 349.796478},//Skin - 202
{0.140799, -0.004372, -0.013685, 358.201873, 0.415596, 349.796478},//Skin - 203
{0.154274, 0.006245, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 204
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 205
{0.154274, 0.016669, -0.013685, 358.201873, 0.415596, 2.035465},//Skin - 206
{0.106604, 0.004805, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 207
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 208
{0.148378, -0.003807, -0.011840, 358.201873, 0.415596, 2.035465},//Skin - 209
{0.113854, 0.001969, -0.011840, 358.201873, 0.415596, 343.826263},//Skin - 210
{0.149539, -0.028623, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 211
{0.104024, -0.014549, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 212
{0.145820, -0.029160, -0.009621, 358.201873, 0.415596, 331.587280},//Skin - 213
{0.148646, -0.008515, -0.009621, 358.201873, 0.415596, 1.360260},//Skin - 214
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 215
{0.148646, -0.005935, -0.004058, 358.201873, 0.415596, 1.360260},//Skin - 216
{0.148646, -0.015611, -0.004058, 358.201873, 0.415596, 340.374938},//Skin - 217
{0.133952, -0.030138, -0.009880, 358.201873, 0.415596, 340.374938},//Skin - 218
{0.140503, -0.033425, -0.005693, 358.201873, 0.415596, 340.374938},//Skin - 219
{0.114608, 0.009020, -0.009135, 358.201873, 0.415596, 352.932006},//Skin - 220
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 221
{0.186516, -0.044762, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 222
{0.179908, -0.010779, -0.009135, 358.201873, 0.415596, 344.217132},//Skin - 223
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 224
{0.156689, -0.015437, -0.009135, 358.201873, 0.415596, 352.741638},//Skin - 225
{0.134990, -0.034685, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 226
{0.151760, 0.002680, -0.009135, 358.201873, 0.415596, 340.812927},//Skin - 227
{0.167410, -0.028664, -0.009135, 358.201873, 0.415596, 340.250427},//Skin - 228
{0.127699, -0.015571, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 229
{0.100555, -0.007753, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 230
{0.126940, 0.016886, -0.006103, 358.201873, 0.415596, 347.232238},//Skin - 231
{0.132949, -0.017515, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 232
{0.146124, -0.008425, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 233
{0.125714, -0.021018, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 234
{0.084982, -0.009809, -0.008594, 358.201873, 0.415596, 347.232238},//Skin - 235
{0.114669, -0.005190, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 236
{0.123264, -0.014946, -0.008594, 358.201873, 0.415596, 351.301177},//Skin - 237
{0.146656, -0.023925, -0.006749, 358.201873, 0.415596, 334.356781},//Skin - 238
{0.133769, -0.007373, -0.006749, 358.201873, 0.415596, 343.105895},//Skin - 239
{0.165378, -0.020173, -0.005869, 358.201873, 0.415596, 348.352233},//Skin - 240
{0.143331, -0.133577, -0.011472, 358.201873, 0.415596, 312.328857},//Skin - 241
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 242
{0.098602, 0.002084, -0.011472, 358.201873, 0.415596, 348.195495},//Skin - 243
{0.124240, -0.011682, -0.006423, 358.201873, 0.415596, 341.555999},//Skin - 244
{0.158155, -0.044311, -0.005439, 358.201873, 0.415596, 336.024902},//Skin - 245
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 246
{0.164307, -0.040974, -0.006797, 358.201873, 0.415596, 337.067047},//Skin - 247
{0.191578, -0.040435, -0.010605, 358.201873, 0.415596, 340.908203},//Skin - 248
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 249
{0.135208, -0.015243, -0.011916, 358.201873, 0.415596, 340.908203},//Skin - 250
{0.134272, -0.027377, -0.006035, 358.201873, 0.415596, 333.416168},//Skin - 251
{0.158813, -0.038977, -0.006035, 358.201873, 0.415596, 336.013519},//Skin - 252
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 253
{0.165106, -0.048880, -0.009719, 358.201873, 0.415596, 331.050933},//Skin - 254
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 255
{0.142586, 0.020829, -0.008549, 358.201873, 0.415596, 2.765411},//Skin - 256
{0.134018, -0.024462, -0.008549, 358.201873, 0.415596, 339.642486},//Skin - 257
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 258
{0.147750, -0.042854, -0.008114, 0.951334, 0.415596, 330.441131},//Skin - 259
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 260
{0.134710, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 261
{0.111691, 0.006798, -0.008114, 358.188964, 0.415596, 352.703582},//Skin - 262
{0.146077, -0.005195, -0.008114, 358.188964, 0.415596, 3.866970},//Skin - 263
{0.135858, -0.157842, -0.008114, 358.188964, 0.415596, 314.852203},//Skin - 264
{0.127964, 0.000132, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 265
{0.127964, -0.002646, -0.008114, 358.188964, 0.415596, 352.699432},//Skin - 266
{0.132329, -0.014261, -0.007384, 1.504234, 0.415596, 352.699432},//Skin - 267
{0.145951, -0.043442, -0.010053, 1.504234, 0.415596, 320.469390},//Skin - 268
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 269
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 270
{0.141851, -0.034538, -0.010580, 1.504234, 0.415596, 340.349456},//Skin - 271
{0.136473, -0.057088, -0.008204, 1.504234, 0.415596, 318.134399},//Skin - 272
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                 //Skin - 273
{0.124270, 0.003252, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 274
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 275
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 276
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 277
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 278
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 279
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 280
{0.131583, 0.007682, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 281
{0.140515, 0.009018, -0.008204, 1.504234, 0.415596, 346.744995},//Skin - 282
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 283
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 284
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 285
{0.140515, 0.001933, -0.008204, 1.504234, 0.415596, 346.744995}, //Skin - 286
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 287
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 288
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 289
{0.128789, -0.014062, -0.007850, 1.504234, 0.415596, 340.341094},//Skin - 290
{0.158929, -0.027358, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 291
{0.113309, -0.012434, -0.010655, 1.504234, 0.415596, 337.298858},//Skin - 292
{0.0, 0.0, 0.0, 0.0, 0.0, 0.0},                                  //Skin - 293
{0.158438, -0.023891, -0.007217, 1.504234, 0.415596, 337.298858},//Skin - 294
{0.145000, -0.032054, -0.007217, 1.504234, 0.415596, 336.385589},//Skin - 295
{0.139293, -0.069554, -0.010619, 1.504234, 0.415596, 320.746429},//Skin - 296
{0.148252, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 297
{0.126423, -0.066463, -0.010619, 1.504234, 0.415596, 320.729705},//Skin - 298
{0.144949, -0.040691, -0.008599, 1.504234, 0.415596, 320.729705}//Skin - 299
};
enum inf
{
omodel,
oslot,
bool: slotreserved,
};
new pObject[MAX_PLAYERS][inf];
//==============================================================================
new TempoDoHelper[MAX_PLAYERS];
enum TrInfo
{
    Float:MinX,
    Float:MinY,
    Float:MaxX,
    Float:MaxY,
	exemortos,
    talmortos,
	almortos,
	famortos,
	bramortos,
};
new Territorio[TrInfo];
//sistemas de araras '-'
enum ar
{
	bool:Arara,
	bool:Racao,
	Grande,
	Tempo
}
new Infoa[MAX_PLAYERS][ar];

enum Theuse
{
	pMotivo[126],
	pAdmBan[MAX_PLAYER_NAME],
	pData[20],
	pHora[20],
	pNick[64],
	IrIp[32],
    PergSenha[64],
    NumSenha
};
new InfoTheus[MAX_PLAYERS][Theuse];
enum sInfo
{
	sCreated,
    Float:sX,
    Float:sY,
    Float:sZ,
    sObject,
};
new SpikeInfo[MAX_SPIKESTRIPS][sInfo];
//======>[carros PlayStart]<======
new CopCarros[210];
new BallasCarros[15];
new GrooveCar[13];
new AztecasCar[14];
new VagosCar[15];
new CarrosHit[15];
new MedicosCar[11];
new NewsCar[11];
new AmigodosAmigosCar[19];
new TaxiCar[15];
new CarAlug[117];
new CarCosa[11];
new YakuzaCar[11];
new AlCar[15];
new FARCCar[23];
new TalCar[15];
new CivilCar[9];
new GovCar[9];
new BusCar[4];
new MecCar[6];
new CityCar[10];
new HellsCar[40];
new MongolsCar[30];
new SonsCar[30];
new CaminhaoCar[6];
new PccCar[13];
new yStiflerSCar[17];
new CvCarros[11];
new RallyCar[26];
new VipCar[17];
new AlugarHeli[17];
new TriadsCar[11];
new DriftersCar[14];
new CarStart[30];
new SkCar[28];
new CarMotoqueiros[46];
new AmericanoCar[36];
new RPPCar[17];
//=============>[FIM]<===========
new NomeArma[MAX_PLAYERS][32],PassArmaID[MAX_PLAYERS],QuantMun[MAX_PLAYERS],IDpassouArma[MAX_PLAYERS];
forward StatusPlayer(idcheck, playerid);
forward ModoTrabalho(playerid, modo);
new Text3D:ProcuradoP[MAX_PLAYERS];
new EmDialog[MAX_PLAYERS];
static gTeam[MAX_PLAYERS];
new storeexit[MAX_PLAYERS];
new VagaSobrando;
new HidePM[MAX_PLAYERS];
new Presente[MAX_PLAYERS];
new HideAdm[MAX_PLAYERS];
new HideIR[MAX_PLAYERS];
new InfoLogin;
new Verdm;
new TheusOwna;
new ServerOwner[MAX_PLAYERS];
new Verck;
new AhOff;
new SenhasAtendimento = 0;
new RelatoOFF = 0;
new RelatoEntregue[MAX_PLAYERS];
new BaniuPlayer[MAX_PLAYERS];
new	CurarAtivo[MAX_PLAYERS];
new	CurarPreco[MAX_PLAYERS];
//new TextHosp[MAX_PLAYERS];
//================[helpers defines]================//
new meavaliehelper[MAX_PLAYERS];
new meavalie[MAX_PLAYERS];
forward TempoAnHelper(playerid);
forward TempoAvalieHelper(playerid);
new Evento;
//====================[Vip Info]===================//
enum vinfo
{
	vNick[MAX_PLAYER_NAME],
    vDia,
    vMes,
    vAno,
    vHora,
    vMinuto,
    vSegundo,
}
new VipInfo[21][vinfo];
forward VipCheck(playerid);
forward VipVaga();
public VipCheck(playerid)
{
	new idx = 0;
    while(idx < sizeof(VipInfo))
	{
	    if(strcmp(VipInfo[idx][vNick],PlayerName(playerid), true ) == 0 )
		{
			return 1;
		}
		idx++;
	}
	return 0;
}
public VipVaga()
{
    for(new idx=0; idx<sizeof(VipInfo); idx++)
	{
	    if(strcmp(VipInfo[idx][vNick],"Ninguem", true ) == 0 )
		{
		    VagaSobrando = 1;
			return 1;
		}
	}
	VagaSobrando = 0;
	return 0;
}
forward LoadVip();
forward SaveVip();
public SaveVip()
{
	new idx;
	new File: file2;
	while (idx < sizeof(VipInfo))
	{
	    new coordsstring[128];
		format(coordsstring, sizeof(coordsstring), "%s|%d|%d|%d|%d|%d|%d\n",VipInfo[idx][vNick],VipInfo[idx][vDia],VipInfo[idx][vMes],VipInfo[idx][vAno],VipInfo[idx][vHora],VipInfo[idx][vMinuto],VipInfo[idx][vSegundo]);
		if(idx == 0)
		{
			file2 = fopen("PlayStart/Vips.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayStart/Vips.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public LoadVip()
{
	new arrCoords[7][100];
	new strFromFile2[100];
	new File: file = fopen("PlayStart/Vips.cfg", io_read);
	if (file)
	{
	    new idx = 0;
	    while(idx < sizeof(VipInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, '|');
		    strmid(VipInfo[idx][vNick], arrCoords[0], 0, strlen(arrCoords[0]), 255);
            VipInfo[idx][vDia] = strval(arrCoords[1]);
            VipInfo[idx][vMes] = strval(arrCoords[2]);
            VipInfo[idx][vAno] = strval(arrCoords[3]);
            VipInfo[idx][vHora] = strval(arrCoords[4]);
            VipInfo[idx][vMinuto] = strval(arrCoords[5]);
            VipInfo[idx][vSegundo] = strval(arrCoords[6]);
			idx++;
		}
	}
	fclose(file);
	return 1;
}
//=================================[Sistema de Admins]================================
new TheusAdmin[MAX_PLAYERS] = 0;
new TheusHelper[MAX_PLAYERS] = 0;
enum Admin
{
	gMembro[MAX_PLAYER_NAME],
	AdminAtivo,
};
new AdmInfo[36][Admin];
forward AdmCheck(playerid);
forward AdmsVaga();
forward SaveAdm();
forward LoadAdm();
// Helpers
enum Helper
{
	gMembro[MAX_PLAYER_NAME],
	HelperAtivo,
};
new HelpInfo[16][Helper];
forward HelpCheck(playerid);
forward HelpsVaga();
forward SaveHelp();
forward LoadHelp();
public AdmsVaga()
{
    for(new idx=0; idx<sizeof(AdmInfo); idx++)
	{
	    if(strcmp(AdmInfo[idx][gMembro],"Vazio", true ) == 0 )
		{
		    VagaSobrando = 1;
			return 1;
		}
	}
	VagaSobrando = 0;
	return 0;
}
public HelpsVaga()
{
	new storedcopname[64];
	new File: file = fopen("PlayStart/Helpers.cfg", io_read);
	if (file)
	{
		new valtmp[MAX_PLAYER_NAME];
		while (fread(file, valtmp) > 0)
		{
			strmid(storedcopname, valtmp, 0, strlen("Vazio"), 255);
			if ((strcmp(storedcopname, "Vazio", true, strlen("Vazio")) == 0) && (strlen("Vazio") == strlen(storedcopname)))
			{
				fclose(file);
				VagaSobrando = 1;
				return 1;
			}
		}
	}
	fclose(file);
	VagaSobrando = 0;
	return 0;
}
//===================================[Sistema de Eleições]======================
new EleicoesOn;
enum Canditato
{
	CandNome[MAX_PLAYER_NAME],
	CandVotos,
};
new CandidatoInfo[4][Canditato];
forward SaveEleicoes();
public SaveEleicoes()
{
	new idx;
	new File: file2;
    print("===========[Salvando Eleições]============");
	while (idx < sizeof(CandidatoInfo))
	{
	    new coordsstring[128];
		format(coordsstring, sizeof(coordsstring), "%s|%d\n",CandidatoInfo[idx][CandNome],CandidatoInfo[idx][CandVotos]);
		if(idx == 0)
		{
			file2 = fopen("PlayStart/Eleicoes.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayStart/Eleicoes.cfg", io_append);
		}
        printf("Candidato: %s, Salvo!", CandidatoInfo[idx][CandNome]);
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
    print("=======================================");
	return 1;
}
forward AbrirEleicoes();
public AbrirEleicoes()
{
	new arrCoords[2][64];
	new strFromFile2[128];
	new File: file = fopen("PlayStart/Eleicoes.cfg", io_read);
	if (file)
	{
	    new idx = 0;
        print("===========[Carregando Eleições]============");
	    while(idx < sizeof(CandidatoInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, '|');
		    strmid(CandidatoInfo[idx][CandNome], arrCoords[0], 0, strlen(arrCoords[0]), 255);
		    CandidatoInfo[idx][CandVotos] = strval(arrCoords[1]);
			idx++;
		}
		printf("Sistema de Eleições Carregado! Canditatos: %d ", idx);
	}
	fclose(file);
	return 1;
}
forward EleicoesOnLoad();
public EleicoesOnLoad()
{
	new arquivo[64];
	new idx = 1;
	format(arquivo, sizeof(arquivo), "PlayStart/CheckEleicoes.cfg",idx);
    if(!dini_Exists(arquivo))
    {
    	dini_Create(arquivo);
        dini_IntSet(arquivo,"Eleicoes",EleicoesOn);
    }
	EleicoesOn = dini_Int(arquivo,"Eleicoes");
	return 1;
}
forward EleicoesOnSave();
public EleicoesOnSave()
{
    new arquivo[64];
	new idx = 1;
	format(arquivo, sizeof(arquivo), "PlayStart/CheckEleicoes.cfg",idx);
    if(!dini_Exists(arquivo))
    {
    	dini_Create(arquivo);
        dini_IntSet(arquivo,"Eleicoes",EleicoesOn);
    }
    dini_IntSet(arquivo,"Eleicoes",EleicoesOn);
	return 1;
}
//=====================================[COFRE INFO]================================//
enum CofreInfo
{
	Dinheiro,
	Materiais,
	Maconha,
	Cocaina,
	Crack,
};
new CofreOrg[MAX_ORGS][CofreInfo];
new pCofreOrg[MAX_PLAYERS];
//=====================================[INFOORG]================================//
enum Oinfo
{
	Lider[MAX_PLAYER_NAME],
	SubLider[MAX_PLAYER_NAME],
    Membro1[MAX_PLAYER_NAME],
	Membro2[MAX_PLAYER_NAME],
	Membro3[MAX_PLAYER_NAME],
	Membro4[MAX_PLAYER_NAME],
	Membro5[MAX_PLAYER_NAME],
	Membro6[MAX_PLAYER_NAME],
	Membro7[MAX_PLAYER_NAME],
	Membro8[MAX_PLAYER_NAME],
	Membro9[MAX_PLAYER_NAME],
	Membro10[MAX_PLAYER_NAME],
	Membro11[MAX_PLAYER_NAME],
	Membro12[MAX_PLAYER_NAME],
	Membro13[MAX_PLAYER_NAME],
	Membro14[MAX_PLAYER_NAME],
	Membro15[MAX_PLAYER_NAME],
	Membro16[MAX_PLAYER_NAME],
	Membro17[MAX_PLAYER_NAME],
	Membro18[MAX_PLAYER_NAME],
	Membro19[MAX_PLAYER_NAME],
	Membro20[MAX_PLAYER_NAME],
    Membro21[MAX_PLAYER_NAME],
    Membro22[MAX_PLAYER_NAME],
    Membro23[MAX_PLAYER_NAME],
    Membro24[MAX_PLAYER_NAME],
    Membro25[MAX_PLAYER_NAME],
    Membro26[MAX_PLAYER_NAME],
    Membro27[MAX_PLAYER_NAME],
    Membro28[MAX_PLAYER_NAME],
    Membro29[MAX_PLAYER_NAME],
    Membro30[MAX_PLAYER_NAME],
};
new InfoOrg[MAX_ORGS][Oinfo];
//==========================================[DEFINES DO BPF]==========================================//
stock PlayerName(playerid)
{
	new Name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, Name, MAX_PLAYER_NAME);
	return Name;
}
new ConviteFamy[MAX_PLAYERS];
new chosenpid;
new loginstring[400];
new loginname[64];
new Cores[] =
{
    0xFFD700AA,
    0x1E90FFAA,
    0xFFB973AA,
    0x5EFFBCAA,
    0xFF80FFAA
};
new Mensagens[][128] = {
	"{FFFFFF} » Visite o fórum: www.brasilplayStart1.forumeiros.com! «",
	"{FFFFFF} » Está em dúvida com algo que não sabe? use /duvida «",
    "{FFFFFF} » Sempre visite o /forum para verificar se você tem denúncias «",
    "{FFFFFF} » Chame amigos nas Redes Sociais: Twitter/Skype/Facebook, etc... «",
	"{FFFFFF} » Ganhe VIP chamando amigos ou participando de eventos e ganhando «",
	"{FFFFFF} » Para pedir ajuda para algum administrador use /relatorio ou /senha «",
	"{FFFFFF} » Use /taxistas, /mecanicos, /advogados, Caso você precise de um dos citados «",
	"{FFFFFF} » É novo e não sabe onde são os locais do jogo? use /gps «",
	"{FFFFFF} » Caso precise de alguma coisa minima veja nossa lista de ajuda use /ajuda «",
	"{FFFFFF} » Não faça nada que você não faria na vida real ou será punido «",
	"{FFFFFF} » Não chingue a Staff do servidor, pois estão trabalhando para melhorar «",
	"{FFFFFF} » Caso haver inregularidade tire um Print Screen apertando F8, e poste no /forum «",
	"{FFFFFF} » Você quer ver os horários no chat? /timestamp «",
	"{FFFFFF} » Para saber os comandos da sua organização ou emprego use /ajuda » Emprego «",
	"{FFFFFF} » Comandos úteis: /admins, /helpers, /ajuda, /gps, /duvida, /relatorio, /vips «",
	"{FFFFFF} » Mude seu estilo de lutar, vá até o Ginásio de Lutas do PlayStart «",
	"{FFFFFF} » Não tem nosso IP nos favoritos? trate de colocar: 208.115.201.248:7789 «",
	"{FFFFFF} » Você quer saber os horários das Guerras do servidor /guerrainfo «",
    "{FFFFFF} » Você precisa de atendimento imediado de um administrador use /senha «",
    "{FFFFFF} » Para comprar/vender um veículo use: /gps » Concessionária «",
    "{FF0000} » NOVO COMANDO PARA VIPs, use: /menuacessorios «"
};
forward SendMensagens();
public SendMensagens()
{
	new random1 = random(sizeof(Mensagens));
	new random2 = random(sizeof(Cores));
	format(gstring, sizeof(gstring), "{FFFFFF}• {1E90FF}B{FFFFFF}P{1E90FF}F %s", Mensagens[random1]);
	SendClientMessageToAll(Cores[random2],gstring);
    ContarJogadores();
	return 1;
}
//===============================//
new Reduzido[MAX_PLAYERS];//pedagio
forward ReduzTempo(playerid);//pedagio

#define MAX_STRING 255
//forward Encrypt(string[]);
#define MAX_ZONE_NAME 28

enum SAZONE_MAIN
{
		SAZONE_NAME[28],
		Float:SAZONE_AREA[6]
};
static const gSAZones[][SAZONE_MAIN] = {
	//	NOMES /LOCALIZAR            AREA (Xmin,Ymin,Zmin,Xmax,Ymax,Zmax)
{ "'The Big Ear'",                {-410.00,  1403.30,    -3.00,  -137.90,  1681.20,   200.00}},
{ "Aldea Malvada",               {-1372.10,  2498.50,     0.00, -1277.50,  2615.30,   200.00}},
{ "Angel Pine",                  {-2324.90, -2584.20,    -6.10, -1964.20, -2212.10,   200.00}},
{ "Arco del Oeste",               {-901.10,  2221.80,     0.00,  -592.00,  2571.90,   200.00}},
{ "Avispa Country Club",         {-2646.40,  -355.40,     0.00, -2270.00,  -222.50,   200.00}},
{ "Avispa Country Club",         {-2831.80,  -430.20,    -6.10, -2646.40,  -222.50,   200.00}},
{ "Avispa Country Club",         {-2361.50,  -417.10,     0.00, -2270.00,  -355.40,   200.00}},
{ "Avispa Country Club",         {-2667.80,  -302.10,   -28.80, -2646.40,  -262.30,    71.10}},
{ "Avispa Country Club",         {-2470.00,  -355.40,     0.00, -2270.00,  -318.40,    46.10}},
{ "Avispa Country Club",         {-2550.00,  -355.40,     0.00, -2470.00,  -318.40,    39.70}},
{ "Back o Beyond",               {-1166.90, -2641.10,     0.00,  -321.70, -1856.00,   200.00}},
{ "Battery Point",               {-2741.00,  1268.40,    -4.50, -2533.00,  1490.40,   200.00}},
{ "Bayside",                     {-2741.00,  2175.10,     0.00, -2353.10,  2722.70,   200.00}},
{ "Bayside Marina",              {-2353.10,  2275.70,     0.00, -2153.10,  2475.70,   200.00}},
{ "Beacon Hill",                  {-399.60, -1075.50,    -1.40,  -319.00,  -977.50,   198.50}},
{ "Blackfield",                    {964.30,  1203.20,   -89.00,  1197.30,  1403.20,   110.90}},
{ "Blackfield",                   {964.30,  1403.20,   -89.00,  1197.30,  1726.20,   110.90}},
{ "Blackfield Chapel",            {1375.60,   596.30,   -89.00,  1558.00,   823.20,   110.90}},
{ "Blackfield Chapel",            {1325.60,   596.30,   -89.00,  1375.60,   795.00,   110.90}},
{ "Blackfield Intersection",      {1197.30,  1044.60,   -89.00,  1277.00,  1163.30,   110.90}},
{ "Blackfield Intersection",      {1166.50,   795.00,   -89.00,  1375.60,  1044.60,   110.90}},
{ "Blackfield Intersection",      {1277.00,  1044.60,   -89.00,  1315.30,  1087.60,   110.90}},
{ "Blackfield Intersection",      {1375.60,   823.20,   -89.00,  1457.30,   919.40,   110.90}},
{ "Blueberry",                     {104.50,  -220.10,     2.30,   349.60,   152.20,   200.00}},
{ "Blueberry",                      {19.60,  -404.10,     3.80,   349.60,  -220.10,   200.00}},
{ "Blueberry Acres",              {-319.60,  -220.10,     0.00,   104.50,   293.30,   200.00}},
{ "Caligula's Palace",            {2087.30,  1543.20,   -89.00,  2437.30,  1703.20,   110.90}},
{ "Caligula's Palace",            {2137.40,  1703.20,   -89.00,  2437.30,  1783.20,   110.90}},
{ "Calton Heights",              {-2274.10,   744.10,    -6.10, -1982.30,  1358.90,   200.00}},
{ "Chinatown",                   {-2274.10,   578.30,    -7.60, -2078.60,   744.10,   200.00}},
{ "City Hall",                   {-2867.80,   277.40,    -9.10, -2593.40,   458.40,   200.00}},
{ "Come-A-Lot",                   {2087.30,   943.20,   -89.00,  2623.10,  1203.20,   110.90}},
{ "Commerce",                     {1323.90, -1842.20,   -89.00,  1701.90, -1722.20,   110.90}},
{ "Commerce",                     {1323.90, -1722.20,   -89.00,  1440.90, -1577.50,   110.90}},
{ "Commerce",                     {1370.80, -1577.50,   -89.00,  1463.90, -1384.90,   110.90}},
{ "Commerce",                     {1463.90, -1577.50,   -89.00,  1667.90, -1430.80,   110.90}},
{ "Commerce",                     {1583.50, -1722.20,   -89.00,  1758.90, -1577.50,   110.90}},
{ "Commerce",                     {1667.90, -1577.50,   -89.00,  1812.60, -1430.80,   110.90}},
{ "Conference Center",            {1046.10, -1804.20,   -89.00,  1323.90, -1722.20,   110.90}},
{ "Conference Center",            {1073.20, -1842.20,   -89.00,  1323.90, -1804.20,   110.90}},
{ "Cranberry Station",           {-2007.80,    56.30,     0.00, -1922.00,   224.70,   100.00}},
{ "Creek",                        {2749.90,  1937.20,   -89.00,  2921.60,  2669.70,   110.90}},
{ "Dillimore",                     {580.70,  -674.80,    -9.50,   861.00,  -404.70,   200.00}},
{ "Doherty",                     {-2270.00,  -324.10,    -0.00, -1794.90,  -222.50,   200.00}},
{ "Doherty",                     {-2173.00,  -222.50,    -0.00, -1794.90,   265.20,   200.00}},
{ "Downtown",                    {-1982.30,   744.10,    -6.10, -1871.70,  1274.20,   200.00}},
{ "Downtown",                    {-1871.70,  1176.40,    -4.50, -1620.30,  1274.20,   200.00}},
{ "Downtown",                    {-1700.00,   744.20,    -6.10, -1580.00,  1176.50,   200.00}},
{ "Downtown",                    {-1580.00,   744.20,    -6.10, -1499.80,  1025.90,   200.00}},
{ "Downtown",                    {-2078.60,   578.30,    -7.60, -1499.80,   744.20,   200.00}},
{ "Downtown",                    {-1993.20,   265.20,    -9.10, -1794.90,   578.30,   200.00}},
{ "Downtown LS",          		{1463.90, -1430.80,   -89.00,  1724.70, -1290.80,   110.90}},
{ "Downtown LS",          		{1724.70, -1430.80,   -89.00,  1812.60, -1250.90,   110.90}},
{ "Downtown LS",          		{1463.90, -1290.80,   -89.00,  1724.70, -1150.80,   110.90}},
{ "Downtown LS",          		{1370.80, -1384.90,   -89.00,  1463.90, -1170.80,   110.90}},
{ "Downtown LS",          		{1724.70, -1250.90,   -89.00,  1812.60, -1150.80,   110.90}},
{ "Downtown LS",          		{1370.80, -1170.80,   -89.00,  1463.90, -1130.80,   110.90}},
{ "Downtown LS",          		{1378.30, -1130.80,   -89.00,  1463.90, -1026.30,   110.90}},
{ "Downtown LS",          		{1391.00, -1026.30,   -89.00,  1463.90,  -926.90,   110.90}},
{ "Downtown LS",          		{1507.50, -1385.20,   110.90,  1582.50, -1325.30,   335.90}},
{ "East Beach",                   {2632.80, -1852.80,   -89.00,  2959.30, -1668.10,   110.90}},
{ "East Beach",                   {2632.80, -1668.10,   -89.00,  2747.70, -1393.40,   110.90}},
{ "East Beach",                   {2747.70, -1668.10,   -89.00,  2959.30, -1498.60,   110.90}},
{ "East Beach",                   {2747.70, -1498.60,   -89.00,  2959.30, -1120.00,   110.90}},
{ "East Los Santos",              {2421.00, -1628.50,   -89.00,  2632.80, -1454.30,   110.90}},
{ "East Los Santos",              {2222.50, -1628.50,   -89.00,  2421.00, -1494.00,   110.90}},
{ "East Los Santos",              {2266.20, -1494.00,   -89.00,  2381.60, -1372.00,   110.90}},
{ "East Los Santos",              {2381.60, -1494.00,   -89.00,  2421.00, -1454.30,   110.90}},
{ "East Los Santos",              {2281.40, -1372.00,   -89.00,  2381.60, -1135.00,   110.90}},
{ "East Los Santos",              {2381.60, -1454.30,   -89.00,  2462.10, -1135.00,   110.90}},
{ "East Los Santos",              {2462.10, -1454.30,   -89.00,  2581.70, -1135.00,   110.90}},
{ "Easter Basin",                {-1794.90,   249.90,    -9.10, -1242.90,   578.30,   200.00}},
{ "Easter Basin",                {-1794.90,   -50.00,    -0.00, -1499.80,   249.90,   200.00}},
{ "Easter Bay Airport",          {-1499.80,   -50.00,    -0.00, -1242.90,   249.90,   200.00}},
{ "Easter Bay Airport",          {-1794.90,  -730.10,    -3.00, -1213.90,   -50.00,   200.00}},
{ "Easter Bay Airport",          {-1213.90,  -730.10,     0.00, -1132.80,   -50.00,   200.00}},
{ "Easter Bay Airport",          {-1242.90,   -50.00,     0.00, -1213.90,   578.30,   200.00}},
{ "Easter Bay Airport",          {-1213.90,   -50.00,    -4.50,  -947.90,   578.30,   200.00}},
{ "Easter Bay Airport",          {-1315.40,  -405.30,    15.40, -1264.40,  -209.50,    25.40}},
{ "Easter Bay Airport",          {-1354.30,  -287.30,    15.40, -1315.40,  -209.50,    25.40}},
{ "Easter Bay Airport",          {-1490.30,  -209.50,    15.40, -1264.40,  -148.30,    25.40}},
{ "Easter Bay Chemicals",        {-1132.80,  -768.00,     0.00,  -956.40,  -578.10,   200.00}},
{ "Easter Bay Chemicals",        {-1132.80,  -787.30,     0.00,  -956.40,  -768.00,   200.00}},
{ "El Castillo del Diablo",       {-464.50,  2217.60,     0.00,  -208.50,  2580.30,   200.00}},
{ "El Castillo del Diablo",       {-208.50,  2123.00,    -7.60,   114.00,  2337.10,   200.00}},
{ "El Castillo del Diablo",       {-208.50,  2337.10,     0.00,     8.40,  2487.10,   200.00}},
{ "El Corona",                    {1812.60, -2179.20,   -89.00,  1970.60, -1852.80,   110.90}},
{ "El Corona",                    {1692.60, -2179.20,   -89.00,  1812.60, -1842.20,   110.90}},
{ "El Quebrados",                {-1645.20,  2498.50,     0.00, -1372.10,  2777.80,   200.00}},
{ "Esplanade East",              {-1620.30,  1176.50,    -4.50, -1580.00,  1274.20,   200.00}},
{ "Esplanade East",              {-1580.00,  1025.90,    -6.10, -1499.80,  1274.20,   200.00}},
{ "Esplanade East",              {-1499.80,   578.30,   -79.60, -1339.80,  1274.20,    20.30}},
{ "Esplanade North",             {-2533.00,  1358.90,    -4.50, -1996.60,  1501.20,   200.00}},
{ "Esplanade North",             {-1996.60,  1358.90,    -4.50, -1524.20,  1592.50,   200.00}},
{ "Esplanade North",             {-1982.30,  1274.20,    -4.50, -1524.20,  1358.90,   200.00}},
{ "Fallen Tree",                  {-792.20,  -698.50,    -5.30,  -452.40,  -380.00,   200.00}},
{ "Fallow Bridge",                 {434.30,   366.50,     0.00,   603.00,   555.60,   200.00}},
{ "Fern Ridge",                    {508.10,  -139.20,     0.00,  1306.60,   119.50,   200.00}},
{ "Financial",                   {-1871.70,   744.10,    -6.10, -1701.30,  1176.40,   300.00}},
{ "Fisher's Lagoon",              {1916.90,  -233.30,  -100.00,  2131.70,    13.80,   200.00}},
{ "Flint Intersection",           {-187.70, -1596.70,   -89.00,    17.00, -1276.60,   110.90}},
{ "Flint Range",                  {-594.10, -1648.50,     0.00,  -187.70, -1276.60,   200.00}},
{ "Fort Carson",                  {-376.20,   826.30,    -3.00,   123.70,  1220.40,   200.00}},
{ "Foster Valley",               {-2270.00,  -430.20,    -0.00, -2178.60,  -324.10,   200.00}},
{ "Foster Valley",               {-2178.60,  -599.80,    -0.00, -1794.90,  -324.10,   200.00}},
{ "Foster Valley",               {-2178.60, -1115.50,     0.00, -1794.90,  -599.80,   200.00}},
{ "Foster Valley",               {-2178.60, -1250.90,     0.00, -1794.90, -1115.50,   200.00}},
{ "Frederick Bridge",             {2759.20,   296.50,     0.00,  2774.20,   594.70,   200.00}},
{ "Gant Bridge",                 {-2741.40,  1659.60,    -6.10, -2616.40,  2175.10,   200.00}},
{ "Gant Bridge",                 {-2741.00,  1490.40,    -6.10, -2616.40,  1659.60,   200.00}},
{ "Ganton",                       {2222.50, -1852.80,   -89.00,  2632.80, -1722.30,   110.90}},
{ "Ganton",                       {2222.50, -1722.30,   -89.00,  2632.80, -1628.50,   110.90}},
{ "Garcia",                      {-2411.20,  -222.50,    -0.00, -2173.00,   265.20,   200.00}},
{ "Garcia",                      {-2395.10,  -222.50,    -5.30, -2354.00,  -204.70,   200.00}},
{ "Garver Bridge",               {-1339.80,   828.10,   -89.00, -1213.90,  1057.00,   110.90}},
{ "Garver Bridge",               {-1213.90,   950.00,   -89.00, -1087.90,  1178.90,   110.90}},
{ "Garver Bridge",               {-1499.80,   696.40,  -179.60, -1339.80,   925.30,    20.30}},
{ "Glen Park",                    {1812.60, -1449.60,   -89.00,  1996.90, -1350.70,   110.90}},
{ "Glen Park",                    {1812.60, -1100.80,   -89.00,  1994.30,  -973.30,   110.90}},
{ "Glen Park",                    {1812.60, -1350.70,   -89.00,  2056.80, -1100.80,   110.90}},
{ "Green Palms",                   {176.50,  1305.40,    -3.00,   338.60,  1520.70,   200.00}},
{ "Greenglass College",            {964.30,  1044.60,   -89.00,  1197.30,  1203.20,   110.90}},
{ "Greenglass College",            {964.30,   930.80,   -89.00,  1166.50,  1044.60,   110.90}},
{ "Hampton Barns",                 {603.00,   264.30,     0.00,   761.90,   366.50,   200.00}},
{ "Hankypanky Point",             {2576.90,    62.10,     0.00,  2759.20,   385.50,   200.00}},
{ "Harry Gold Parkway",           {1777.30,   863.20,   -89.00,  1817.30,  2342.80,   110.90}},
{ "Hashbury",                    {-2593.40,  -222.50,    -0.00, -2411.20,    54.70,   200.00}},
{ "Hilltop Farm",                  {967.30,  -450.30,    -3.00,  1176.70,  -217.90,   200.00}},
{ "Hunter Quarry",                 {337.20,   710.80,  -115.20,   860.50,  1031.70,   203.70}},
{ "Idlewood",                     {1812.60, -1852.80,   -89.00,  1971.60, -1742.30,   110.90}},
{ "Idlewood",                     {1812.60, -1742.30,   -89.00,  1951.60, -1602.30,   110.90}},
{ "Idlewood",                     {1951.60, -1742.30,   -89.00,  2124.60, -1602.30,   110.90}},
{ "Idlewood",                     {1812.60, -1602.30,   -89.00,  2124.60, -1449.60,   110.90}},
{ "Idlewood",                     {2124.60, -1742.30,   -89.00,  2222.50, -1494.00,   110.90}},
{ "Idlewood",                     {1971.60, -1852.80,   -89.00,  2222.50, -1742.30,   110.90}},
{ "Jefferson",                    {1996.90, -1449.60,   -89.00,  2056.80, -1350.70,   110.90}},
{ "Jefferson",                    {2124.60, -1494.00,   -89.00,  2266.20, -1449.60,   110.90}},
{ "Jefferson",                    {2056.80, -1372.00,   -89.00,  2281.40, -1210.70,   110.90}},
{ "Jefferson",                    {2056.80, -1210.70,   -89.00,  2185.30, -1126.30,   110.90}},
{ "Jefferson",                    {2185.30, -1210.70,   -89.00,  2281.40, -1154.50,   110.90}},
{ "Jefferson",                    {2056.80, -1449.60,   -89.00,  2266.20, -1372.00,   110.90}},
{ "Julius Thruway East",          {2623.10,   943.20,   -89.00,  2749.90,  1055.90,   110.90}},
{ "Julius Thruway East",          {2685.10,  1055.90,   -89.00,  2749.90,  2626.50,   110.90}},
{ "Julius Thruway East",          {2536.40,  2442.50,   -89.00,  2685.10,  2542.50,   110.90}},
{ "Julius Thruway East",          {2625.10,  2202.70,   -89.00,  2685.10,  2442.50,   110.90}},
{ "Julius Thruway North",         {2498.20,  2542.50,   -89.00,  2685.10,  2626.50,   110.90}},
{ "Julius Thruway North",         {2237.40,  2542.50,   -89.00,  2498.20,  2663.10,   110.90}},
{ "Julius Thruway North",         {2121.40,  2508.20,   -89.00,  2237.40,  2663.10,   110.90}},
{ "Julius Thruway North",         {1938.80,  2508.20,   -89.00,  2121.40,  2624.20,   110.90}},
{ "Julius Thruway North",         {1534.50,  2433.20,   -89.00,  1848.40,  2583.20,   110.90}},
{ "Julius Thruway North",         {1848.40,  2478.40,   -89.00,  1938.80,  2553.40,   110.90}},
{ "Julius Thruway North",         {1704.50,  2342.80,   -89.00,  1848.40,  2433.20,   110.90}},
{ "Julius Thruway North",         {1377.30,  2433.20,   -89.00,  1534.50,  2507.20,   110.90}},
{ "Julius Thruway South",         {1457.30,   823.20,   -89.00,  2377.30,   863.20,   110.90}},
{ "Julius Thruway South",         {2377.30,   788.80,   -89.00,  2537.30,   897.90,   110.90}},
{ "Julius Thruway West",          {1197.30,  1163.30,   -89.00,  1236.60,  2243.20,   110.90}},
{ "Julius Thruway West",          {1236.60,  2142.80,   -89.00,  1297.40,  2243.20,   110.90}},
{ "Juniper Hill",                {-2533.00,   578.30,    -7.60, -2274.10,   968.30,   200.00}},
{ "Juniper Hollow",              {-2533.00,   968.30,    -6.10, -2274.10,  1358.90,   200.00}},
{ "K.A.C.C. Military Fuels",      {2498.20,  2626.50,   -89.00,  2749.90,  2861.50,   110.90}},
{ "Kincaid Bridge",              {-1339.80,   599.20,   -89.00, -1213.90,   828.10,   110.90}},
{ "Kincaid Bridge",              {-1213.90,   721.10,   -89.00, -1087.90,   950.00,   110.90}},
{ "Kincaid Bridge",              {-1087.90,   855.30,   -89.00,  -961.90,   986.20,   110.90}},
{ "King's",                      {-2329.30,   458.40,    -7.60, -1993.20,   578.30,   200.00}},
{ "King's",                      {-2411.20,   265.20,    -9.10, -1993.20,   373.50,   200.00}},
{ "King's",                      {-2253.50,   373.50,    -9.10, -1993.20,   458.40,   200.00}},
{ "LVA Freight Depot",            {1457.30,   863.20,   -89.00,  1777.40,  1143.20,   110.90}},
{ "LVA Freight Depot",            {1375.60,   919.40,   -89.00,  1457.30,  1203.20,   110.90}},
{ "LVA Freight Depot",            {1277.00,  1087.60,   -89.00,  1375.60,  1203.20,   110.90}},
{ "LVA Freight Depot",            {1315.30,  1044.60,   -89.00,  1375.60,  1087.60,   110.90}},
{ "LVA Freight Depot",            {1236.60,  1163.40,   -89.00,  1277.00,  1203.20,   110.90}},
{ "Las Barrancas",                {-926.10,  1398.70,    -3.00,  -719.20,  1634.60,   200.00}},
{ "Las Brujas",                   {-365.10,  2123.00,    -3.00,  -208.50,  2217.60,   200.00}},
{ "Favela",                  {1994.30, -1100.80,   -89.00,  2056.80,  -920.80,   110.90}},
{ "Favela",                  {2056.80, -1126.30,   -89.00,  2126.80,  -920.80,   110.90}},
{ "Favela",                  {2185.30, -1154.50,   -89.00,  2281.40,  -934.40,   110.90}},
{ "Favela",                  {2126.80, -1126.30,   -89.00,  2185.30,  -934.40,   110.90}},
{ "Favela",                  {2747.70, -1120.00,   -89.00,  2959.30,  -945.00,   110.90}},
{ "Favela",                  {2632.70, -1135.00,   -89.00,  2747.70,  -945.00,   110.90}},
{ "Favela",                  {2281.40, -1135.00,   -89.00,  2632.70,  -945.00,   110.90}},
{ "Las Payasadas",                {-354.30,  2580.30,     2.00,  -133.60,  2816.80,   200.00}},
{ "Las Venturas Airport",         {1236.60,  1203.20,   -89.00,  1457.30,  1883.10,   110.90}},
{ "Las Venturas Airport",         {1457.30,  1203.20,   -89.00,  1777.30,  1883.10,   110.90}},
{ "Las Venturas Airport",         {1457.30,  1143.20,   -89.00,  1777.40,  1203.20,   110.90}},
{ "Las Venturas Airport",         {1515.80,  1586.40,   -12.50,  1729.90,  1714.50,    87.50}},
{ "Last Dime Motel",              {1823.00,   596.30,   -89.00,  1997.20,   823.20,   110.90}},
{ "Leafy Hollow",                {-1166.90, -1856.00,     0.00,  -815.60, -1602.00,   200.00}},
{ "Lil' Probe Inn",                {-90.20,  1286.80,    -3.00,   153.80,  1554.10,   200.00}},
{ "Linden Side",                  {2749.90,   943.20,   -89.00,  2923.30,  1198.90,   110.90}},
{ "Linden Station",               {2749.90,  1198.90,   -89.00,  2923.30,  1548.90,   110.90}},
{ "Linden Station",               {2811.20,  1229.50,   -39.50,  2861.20,  1407.50,    60.40}},
{ "Little Mexico",                {1701.90, -1842.20,   -89.00,  1812.60, -1722.20,   110.90}},
{ "Little Mexico",                {1758.90, -1722.20,   -89.00,  1812.60, -1577.50,   110.90}},
{ "Los Flores",                   {2581.70, -1454.30,   -89.00,  2632.80, -1393.40,   110.90}},
{ "Los Flores",                   {2581.70, -1393.40,   -89.00,  2747.70, -1135.00,   110.90}},
{ "LS International",     {1249.60, -2394.30,   -89.00,  1852.00, -2179.20,   110.90}},
{ "LS International",     {1852.00, -2394.30,   -89.00,  2089.00, -2179.20,   110.90}},
{ "LS International",     {1382.70, -2730.80,   -89.00,  2201.80, -2394.30,   110.90}},
{ "LS International",     {1974.60, -2394.30,   -39.00,  2089.00, -2256.50,    60.90}},
{ "LS International",     {1400.90, -2669.20,   -39.00,  2189.80, -2597.20,    60.90}},
{ "LS International",     {2051.60, -2597.20,   -39.00,  2152.40, -2394.30,    60.90}},
{ "Marina",                        {647.70, -1804.20,   -89.00,   851.40, -1577.50,   110.90}},
{ "Marina",                        {647.70, -1577.50,   -89.00,   807.90, -1416.20,   110.90}},
{ "Marina",                        {807.90, -1577.50,   -89.00,   926.90, -1416.20,   110.90}},
{ "Market",                        {787.40, -1416.20,   -89.00,  1072.60, -1310.20,   110.90}},
{ "Market",                        {952.60, -1310.20,   -89.00,  1072.60, -1130.80,   110.90}},
{ "Market",                       {1072.60, -1416.20,   -89.00,  1370.80, -1130.80,   110.90}},
{ "Market",                        {926.90, -1577.50,   -89.00,  1370.80, -1416.20,   110.90}},
{ "Market Station",                {787.40, -1410.90,   -34.10,   866.00, -1310.20,    65.80}},
{ "Martin Bridge",                {-222.10,   293.30,     0.00,  -122.10,   476.40,   200.00}},
{ "Missionary Hill",             {-2994.40,  -811.20,     0.00, -2178.60,  -430.20,   200.00}},
{ "Montgomery",                   {1119.50,   119.50,    -3.00,  1451.40,   493.30,   200.00}},
{ "Montgomery",                   {1451.40,   347.40,    -6.10,  1582.40,   420.80,   200.00}},
{ "Montgomery Intersection",      {1546.60,   208.10,     0.00,  1745.80,   347.40,   200.00}},
{ "Montgomery Intersection",      {1582.40,   347.40,     0.00,  1664.60,   401.70,   200.00}},
{ "Mulholland",                   {1414.00,  -768.00,   -89.00,  1667.60,  -452.40,   110.90}},
{ "Mulholland",                   {1281.10,  -452.40,   -89.00,  1641.10,  -290.90,   110.90}},
{ "Mulholland",                   {1269.10,  -768.00,   -89.00,  1414.00,  -452.40,   110.90}},
{ "Mulholland",                   {1357.00,  -926.90,   -89.00,  1463.90,  -768.00,   110.90}},
{ "Mulholland",                   {1318.10,  -910.10,   -89.00,  1357.00,  -768.00,   110.90}},
{ "Mulholland",                   {1169.10,  -910.10,   -89.00,  1318.10,  -768.00,   110.90}},
{ "Mulholland",                    {768.60,  -954.60,   -89.00,   952.60,  -860.60,   110.90}},
{ "Mulholland",                    {687.80,  -860.60,   -89.00,   911.80,  -768.00,   110.90}},
{ "Mulholland",                    {737.50,  -768.00,   -89.00,  1142.20,  -674.80,   110.90}},
{ "Mulholland",                   {1096.40,  -910.10,   -89.00,  1169.10,  -768.00,   110.90}},
{ "Mulholland",                    {952.60,  -937.10,   -89.00,  1096.40,  -860.60,   110.90}},
{ "Mulholland",                    {911.80,  -860.60,   -89.00,  1096.40,  -768.00,   110.90}},
{ "Mulholland",                    {861.00,  -674.80,   -89.00,  1156.50,  -600.80,   110.90}},
{ "Mulholland Intersection",      {1463.90, -1150.80,   -89.00,  1812.60,  -768.00,   110.90}},
{ "North Rock",                   {2285.30,  -768.00,     0.00,  2770.50,  -269.70,   200.00}},
{ "Ocean Docks",                  {2373.70, -2697.00,   -89.00,  2809.20, -2330.40,   110.90}},
{ "Ocean Docks",                  {2201.80, -2418.30,   -89.00,  2324.00, -2095.00,   110.90}},
{ "Ocean Docks",                  {2324.00, -2302.30,   -89.00,  2703.50, -2145.10,   110.90}},
{ "Ocean Docks",                  {2089.00, -2394.30,   -89.00,  2201.80, -2235.80,   110.90}},
{ "Ocean Docks",                  {2201.80, -2730.80,   -89.00,  2324.00, -2418.30,   110.90}},
{ "Ocean Docks",                  {2703.50, -2302.30,   -89.00,  2959.30, -2126.90,   110.90}},
{ "Ocean Docks",                  {2324.00, -2145.10,   -89.00,  2703.50, -2059.20,   110.90}},
{ "Ocean Flats",                 {-2994.40,   277.40,    -9.10, -2867.80,   458.40,   200.00}},
{ "Ocean Flats",                 {-2994.40,  -222.50,    -0.00, -2593.40,   277.40,   200.00}},
{ "Ocean Flats",                 {-2994.40,  -430.20,    -0.00, -2831.80,  -222.50,   200.00}},
{ "Octane Springs",                {338.60,  1228.50,     0.00,   664.30,  1655.00,   200.00}},
{ "Old Venturas Strip",           {2162.30,  2012.10,   -89.00,  2685.10,  2202.70,   110.90}},
{ "Palisades",                   {-2994.40,   458.40,    -6.10, -2741.00,  1339.60,   200.00}},
{ "Palomino Creek",               {2160.20,  -149.00,     0.00,  2576.90,   228.30,   200.00}},
{ "Paradiso",                   {-2741.00,   793.40,    -6.10, -2533.00,  1268.40,   200.00}},
{ "Centro",              {1440.90, -1722.20,   -89.00,  1583.50, -1577.50,   110.90}},
{ "Pilgrim",                      {2437.30,  1383.20,   -89.00,  2624.40,  1783.20,   110.90}},
{ "Pilgrim",                      {2624.40,  1383.20,   -89.00,  2685.10,  1783.20,   110.90}},
{ "Pilson Intersection",          {1098.30,  2243.20,   -89.00,  1377.30,  2507.20,   110.90}},
{ "Pirates in Men's Pants",       {1817.30,  1469.20,   -89.00,  2027.40,  1703.20,   110.90}},
{ "Playa del Seville",            {2703.50, -2126.90,   -89.00,  2959.30, -1852.80,   110.90}},
{ "Prickle Pine",                 {1534.50,  2583.20,   -89.00,  1848.40,  2863.20,   110.90}},
{ "Prickle Pine",                 {1117.40,  2507.20,   -89.00,  1534.50,  2723.20,   110.90}},
{ "Prickle Pine",                 {1848.40,  2553.40,   -89.00,  1938.80,  2863.20,   110.90}},
{ "Prickle Pine",                 {1938.80,  2624.20,   -89.00,  2121.40,  2861.50,   110.90}},
{ "Queens",                      {-2533.00,   458.40,     0.00, -2329.30,   578.30,   200.00}},
{ "Queens",                      {-2593.40,    54.70,     0.00, -2411.20,   458.40,   200.00}},
{ "Queens",                      {-2411.20,   373.50,     0.00, -2253.50,   458.40,   200.00}},
{ "Randolph Industrial Estate",   {1558.00,   596.30,   -89.00,  1823.00,   823.20,   110.90}},
{ "Redsands East",                {1817.30,  2011.80,   -89.00,  2106.70,  2202.70,   110.90}},
{ "Redsands East",                {1817.30,  2202.70,   -89.00,  2011.90,  2342.80,   110.90}},
{ "Redsands East",                {1848.40,  2342.80,   -89.00,  2011.90,  2478.40,   110.90}},
{ "Redsands West",                {1236.60,  1883.10,   -89.00,  1777.30,  2142.80,   110.90}},
{ "Redsands West",                {1297.40,  2142.80,   -89.00,  1777.30,  2243.20,   110.90}},
{ "Redsands West",                {1377.30,  2243.20,   -89.00,  1704.50,  2433.20,   110.90}},
{ "Redsands West",                {1704.50,  2243.20,   -89.00,  1777.30,  2342.80,   110.90}},
{ "Regular Tom",                  {-405.70,  1712.80,    -3.00,  -276.70,  1892.70,   200.00}},
{ "Richman",                       {647.50, -1118.20,   -89.00,   787.40,  -954.60,   110.90}},
{ "Richman",                       {647.50,  -954.60,   -89.00,   768.60,  -860.60,   110.90}},
{ "Richman",                       {225.10, -1369.60,   -89.00,   334.50, -1292.00,   110.90}},
{ "Richman",                       {225.10, -1292.00,   -89.00,   466.20, -1235.00,   110.90}},
{ "Richman",                        {72.60, -1404.90,   -89.00,   225.10, -1235.00,   110.90}},
{ "Richman",                        {72.60, -1235.00,   -89.00,   321.30, -1008.10,   110.90}},
{ "Richman",                       {321.30, -1235.00,   -89.00,   647.50, -1044.00,   110.90}},
{ "Richman",                       {321.30, -1044.00,   -89.00,   647.50,  -860.60,   110.90}},
{ "Richman",                       {321.30,  -860.60,   -89.00,   687.80,  -768.00,   110.90}},
{ "Richman",                       {321.30,  -768.00,   -89.00,   700.70,  -674.80,   110.90}},
{ "Robada Intersection",         {-1119.00,  1178.90,   -89.00,  -862.00,  1351.40,   110.90}},
{ "Roca Escalante",               {2237.40,  2202.70,   -89.00,  2536.40,  2542.50,   110.90}},
{ "Roca Escalante",               {2536.40,  2202.70,   -89.00,  2625.10,  2442.50,   110.90}},
{ "Rockshore East",               {2537.30,   676.50,   -89.00,  2902.30,   943.20,   110.90}},
{ "Rockshore West",               {1997.20,   596.30,   -89.00,  2377.30,   823.20,   110.90}},
{ "Rockshore West",               {2377.30,   596.30,   -89.00,  2537.30,   788.80,   110.90}},
{ "Rodeo",                          {72.60, -1684.60,   -89.00,   225.10, -1544.10,   110.90}},
{ "Rodeo",                          {72.60, -1544.10,   -89.00,   225.10, -1404.90,   110.90}},
{ "Rodeo",                         {225.10, -1684.60,   -89.00,   312.80, -1501.90,   110.90}},
{ "Rodeo",                         {225.10, -1501.90,   -89.00,   334.50, -1369.60,   110.90}},
{ "Rodeo",                         {334.50, -1501.90,   -89.00,   422.60, -1406.00,   110.90}},
{ "Rodeo",                         {312.80, -1684.60,   -89.00,   422.60, -1501.90,   110.90}},
{ "Rodeo",                         {422.60, -1684.60,   -89.00,   558.00, -1570.20,   110.90}},
{ "Rodeo",                         {558.00, -1684.60,   -89.00,   647.50, -1384.90,   110.90}},
{ "Rodeo",                         {466.20, -1570.20,   -89.00,   558.00, -1385.00,   110.90}},
{ "Rodeo",                         {422.60, -1570.20,   -89.00,   466.20, -1406.00,   110.90}},
{ "Rodeo",                         {466.20, -1385.00,   -89.00,   647.50, -1235.00,   110.90}},
{ "Rodeo",                         {334.50, -1406.00,   -89.00,   466.20, -1292.00,   110.90}},
{ "Royal Casino",                 {2087.30,  1383.20,   -89.00,  2437.30,  1543.20,   110.90}},
{ "San Andreas Sound",            {2450.30,   385.50,  -100.00,  2759.20,   562.30,   200.00}},
{ "Santa Flora",                 {-2741.00,   458.40,    -7.60, -2533.00,   793.40,   200.00}},
{ "Santa Maria Beach",             {342.60, -2173.20,   -89.00,   647.70, -1684.60,   110.90}},
{ "Santa Maria Beach",              {72.60, -2173.20,   -89.00,   342.60, -1684.60,   110.90}},
{ "Shady Cabin",                 {-1632.80, -2263.40,    -3.00, -1601.30, -2231.70,   200.00}},
{ "Shady Creeks",                {-1820.60, -2643.60,    -8.00, -1226.70, -1771.60,   200.00}},
{ "Shady Creeks",                {-2030.10, -2174.80,    -6.10, -1820.60, -1771.60,   200.00}},
{ "Sobell Rail Yards",            {2749.90,  1548.90,   -89.00,  2923.30,  1937.20,   110.90}},
{ "Spinybed",                     {2121.40,  2663.10,   -89.00,  2498.20,  2861.50,   110.90}},
{ "Starfish Casino",              {2437.30,  1783.20,   -89.00,  2685.10,  2012.10,   110.90}},
{ "Starfish Casino",              {2437.30,  1858.10,   -39.00,  2495.00,  1970.80,    60.90}},
{ "Starfish Casino",              {2162.30,  1883.20,   -89.00,  2437.30,  2012.10,   110.90}},
{ "Temple",                       {1252.30, -1130.80,   -89.00,  1378.30, -1026.30,   110.90}},
{ "Temple",                       {1252.30, -1026.30,   -89.00,  1391.00,  -926.90,   110.90}},
{ "Temple",                       {1252.30,  -926.90,   -89.00,  1357.00,  -910.10,   110.90}},
{ "Temple",                        {952.60, -1130.80,   -89.00,  1096.40,  -937.10,   110.90}},
{ "Temple",                       {1096.40, -1130.80,   -89.00,  1252.30, -1026.30,   110.90}},
{ "Temple",                       {1096.40, -1026.30,   -89.00,  1252.30,  -910.10,   110.90}},
{ "The Camel's Toe",              {2087.30,  1203.20,   -89.00,  2640.40,  1383.20,   110.90}},
{ "The Clown's Pocket",           {2162.30,  1783.20,   -89.00,  2437.30,  1883.20,   110.90}},
{ "The Emerald Isle",             {2011.90,  2202.70,   -89.00,  2237.40,  2508.20,   110.90}},
{ "The Farm",                    {-1209.60, -1317.10,   114.90,  -908.10,  -787.30,   251.90}},
{ "The Four Dragons Casino",      {1817.30,   863.20,   -89.00,  2027.30,  1083.20,   110.90}},
{ "The High Roller",              {1817.30,  1283.20,   -89.00,  2027.30,  1469.20,   110.90}},
{ "The Mako Span",                {1664.60,   401.70,     0.00,  1785.10,   567.20,   200.00}},
{ "The Panopticon",               {-947.90,  -304.30,    -1.10,  -319.60,   327.00,   200.00}},
{ "The Pink Swan",                {1817.30,  1083.20,   -89.00,  2027.30,  1283.20,   110.90}},
{ "The Sherman Dam",              {-968.70,  1929.40,    -3.00,  -481.10,  2155.20,   200.00}},
{ "The Strip",                    {2027.40,   863.20,   -89.00,  2087.30,  1703.20,   110.90}},
{ "The Strip",                    {2106.70,  1863.20,   -89.00,  2162.30,  2202.70,   110.90}},
{ "The Strip",                    {2027.40,  1783.20,   -89.00,  2162.30,  1863.20,   110.90}},
{ "The Strip",                    {2027.40,  1703.20,   -89.00,  2137.40,  1783.20,   110.90}},
{ "The Visage",                   {1817.30,  1863.20,   -89.00,  2106.70,  2011.80,   110.90}},
{ "The Visage",                   {1817.30,  1703.20,   -89.00,  2027.40,  1863.20,   110.90}},
{ "Unity Station",                {1692.60, -1971.80,   -20.40,  1812.60, -1932.80,    79.50}},
{ "Valle Ocultado",               {-936.60,  2611.40,     2.00,  -715.90,  2847.90,   200.00}},
{ "Verdant Bluffs",                {930.20, -2488.40,   -89.00,  1249.60, -2006.70,   110.90}},
{ "Verdant Bluffs",               {1073.20, -2006.70,   -89.00,  1249.60, -1842.20,   110.90}},
{ "Verdant Bluffs",               {1249.60, -2179.20,   -89.00,  1692.60, -1842.20,   110.90}},
{ "Verdant Meadows",                {37.00,  2337.10,    -3.00,   435.90,  2677.90,   200.00}},
{ "Verona Beach",                  {647.70, -2173.20,   -89.00,   930.20, -1804.20,   110.90}},
{ "Verona Beach",                  {930.20, -2006.70,   -89.00,  1073.20, -1804.20,   110.90}},
{ "Verona Beach",                  {851.40, -1804.20,   -89.00,  1046.10, -1577.50,   110.90}},
{ "Verona Beach",                 {1161.50, -1722.20,   -89.00,  1323.90, -1577.50,   110.90}},
{ "Verona Beach",                 {1046.10, -1722.20,   -89.00,  1161.50, -1577.50,   110.90}},
{ "Vinewood",                      {787.40, -1310.20,   -89.00,   952.60, -1130.80,   110.90}},
{ "Vinewood",                      {787.40, -1130.80,   -89.00,   952.60,  -954.60,   110.90}},
{ "Vinewood",                      {647.50, -1227.20,   -89.00,   787.40, -1118.20,   110.90}},
{ "Vinewood",                      {647.70, -1416.20,   -89.00,   787.40, -1227.20,   110.90}},
{ "Whitewood Estates",             {883.30,  1726.20,   -89.00,  1098.30,  2507.20,   110.90}},
{ "Whitewood Estates",            {1098.30,  1726.20,   -89.00,  1197.30,  2243.20,   110.90}},
{ "Willowfield",                  {1970.60, -2179.20,   -89.00,  2089.00, -1852.80,   110.90}},
{ "Willowfield",                  {2089.00, -2235.80,   -89.00,  2201.80, -1989.90,   110.90}},
{ "Willowfield",                  {2089.00, -1989.90,   -89.00,  2324.00, -1852.80,   110.90}},
{ "Willowfield",                  {2201.80, -2095.00,   -89.00,  2324.00, -1989.90,   110.90}},
{ "Willowfield",                  {2541.70, -1941.40,   -89.00,  2703.50, -1852.80,   110.90}},
{ "Willowfield",                  {2324.00, -2059.20,   -89.00,  2541.70, -1852.80,   110.90}},
{ "Willowfield",                  {2541.70, -2059.20,   -89.00,  2703.50, -1941.40,   110.90}},
{ "Yellow Bell Station",          {1377.40,  2600.40,   -21.90,  1492.40,  2687.30,    78.00}},
// Main Zones
{ "Los Santos",                     {44.60, -2892.90,  -242.90,  2997.00,  -768.00,   900.00}},
{ "Las Venturas",                  {869.40,   596.30,  -242.90,  2997.00,  2993.80,   900.00}},
{ "Bone County",                 {-480.50,   596.30,  -242.90,   869.40,  2993.80,   900.00}},
{ "Tierra Robada",              {-2997.40,  1659.60,  -242.90,  -480.50,  2993.80,   900.00}},
{ "Tierra Robada",               {-1213.90,   596.30,  -242.90,  -480.50,  1659.60,   900.00}},
{ "San Fierro",                  {-2997.40, -1115.50,  -242.90, -1213.90,  1659.60,   900.00}},
{ "Red County",                  {-1213.90,  -768.00,  -242.90,  2997.00,   596.30,   900.00}},
{ "Flint County",                {-1213.90, -2892.90,  -242.90,    44.60,  -768.00,   900.00}},
{ "Whetstone",                   {-2997.40, -2892.90,  -242.90, -1213.90, -1115.50,   900.00}}
};

/*public Encrypt(string[])
{
	for(new x=0; x < strlen(string); x++)
	  {
		  string[x] += (3^x) * (x % 15);
		  if(string[x] > (0xff))
		  {
			  string[x] -= 256;
		  }
	  }
	return 1;
}*/

stock right(sorrce[], len)
{
	new retval[MAX_STRING], srclen;
	srclen = strlen(sorrce);
	strmid(retval, sorrce, srclen - len, srclen, MAX_STRING);
	return retval;
}

stock ini_GetKey( line[] )
{
	new keyRes[128];
	keyRes[0] = 0;
	if ( strfind( line , "=" , true ) == -1 ) return keyRes;
	strmid( keyRes , line , 0 , strfind( line , "=" , true ) , sizeof( keyRes) );
	return keyRes;
}

stock ini_GetValue( line[] )
{
	new valRes[128];
	valRes[0]=0;
	if ( strfind( line , "=" , true ) == -1 ) return valRes;
	strmid( valRes , line , strfind( line , "=" , true )+1 , strlen( line ) , sizeof( valRes ) );
	return valRes;
}
stock IsPlayerInPark(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1866.346 && y >= -1259.454 && x <= 2052.685 && y <= -1137.074) return 1;
    else return 0;
}
stock IsPlayerInEvento(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= -2341.6907 && y >= -1648.2777 && x <= -2321.1499 && y <= -1572.4833) return 1;
    else return 0;
}
stock IsPlayerInCemiterio(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 791.5826 && y >= -1141.6468 && x <= 967.5826 && y <= -1061.6468) return 1;
    else return 0;
}
stock IsPlayerInPosto(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= -146.9439 && y >= -1249.0484 && x <= -2.9439 && y <= -1081.0484) return 1;
    else return 0;
}
stock IsPlayerInCity(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 2152.305175 && y >= -149.739685 && x <= 2544.305175 && y <= 202.260314) return 1;
    else return 0;
}
stock IsPlayerInShop(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1056.1223 && y >= -1575.7773 && x <= 1192.1223 && y <= -1415.7773) return 1;
    else return 0;
}
stock IsPlayerInSkate(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1861.9410 && y >= -1450.6462 && x <= 1976.5867 && y <= -1351.4069) return 1;
    else return 0;
}
stock IsPlayerInPantano(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= -847.4861 && y >= -2116.7615 && x <= -632.8773 && y <= -1833.1636) return 1;
    else return 0;
}
stock IsPlayerInEstacao(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1687.613 && y >= -1958.204 && x <= 1813.106 && y <= -1859.51) return 1;
    else return 0;
}
stock IsPlayerInCasarao(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1098.173 && y >= -2084.531 && x <= 1299.723 && y <= -2005.577) return 1;
    else return 0;
}
stock IsPlayerInLosSantos(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 44.60 && y >= -2892.90 && x <= 2997.00 && y <= -768.00) return 1;
    else return 0;
}
stock GetPlayer2DZone(playerid, zone[], len)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
stock ChecarveiculoBPF(Float:radi, playerid, vehicleid)
{
	if(IsPlayerConnected(playerid))
	{
	    new Float:PX,Float:PY,Float:PZ,Float:X,Float:Y,Float:Z;
	    GetPlayerPos(playerid,PX,PY,PZ);
	    GetVehiclePos(vehicleid, X,Y,Z);
	    new Float:Distance = (X-PX)*(X-PX)+(Y-PY)*(Y-PY)+(Z-PZ)*(Z-PZ);
	    if(Distance <= radi*radi)
	    {
	        return 1;
	    }
	}
	return 0;
}
stock GetWeaponModel(weaponid)
{
	switch(weaponid)
	{
	    case 1:
	        return 331;

		case 2..8:
		    return weaponid+331;

        case 9:
		    return 341;

		case 10..15:
			return weaponid+311;

		case 16..18:
		    return weaponid+326;

		case 22..29:
		    return weaponid+324;

		case 30,31:
		    return weaponid+325;

		case 32:
		    return 372;

		case 33..45:
		    return weaponid+324;

		case 46:
		    return 371;
	}
	return 0;
}
//==============[defines]======================//
new bool:TextShow[MAX_PLAYERS];
new bool:PlayerAnim[MAX_PLAYERS];
new UsouComando[MAX_PLAYERS] = 0;
new BateuCartao[MAX_PLAYERS] = 0;
new TomouPosto;
new TomouCity;
new SemBombas[MAX_PLAYERS];
forward UsarNovamente(playerid);
forward BaterNovamente(playerid);
forward TomarNovamente();
forward TomarNovamente2();
forward VoltarBombas(playerid);
forward PresoMulta(playerid);
new OfAssalto[MAX_PLAYERS];
new precoassalto[MAX_PLAYERS];
new InAFoodPlace[MAX_PLAYERS];
new CreatedCar = 0;
new CreatedCars[30];
new MiraInfo[MAX_PLAYERS];
//Nome dos Carros
new vehName[][] ={
	"Landstalker","Bravura","Buffalo","Linerunner","Pereniel","Sentinel","Dumper","Firetruck","Trashmaster","Stretch","Manana","Infernus",
	"Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi","Washington","Bobcat","Mr Whoopee","BF Injection",
	"Hunter","Premier","Enforcer","Securicar","Banshee","Predator","Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie",
	"Stallion","Rumpo","RC Bandit","Romero","Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder",
	"Reefer","Tropic","Flatbed","Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler","ZR3 50","Walton","Regina",
	"Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper","Rancher","FBI Rancher","Virgo","Greenwood",
	"Jetmax","Hotring","Sandking","Blista Compact","Police Maverick","Boxville","Benson","Mesa","RC Goblin","Hotring Racer","Hotring Racer",
	"Bloodring Banger","Rancher","Super GT","Elegant","Journey","Bike","Mountain Bike","Beagle","Cropdust","Stunt","Tanker","RoadTrain",
	"Nebula","Majestic","Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent","Bullet","Clover",
	"Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility","Nevada","Yosemite","Windsor","Monster A",
	"Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger","Flash","Tahoma","Savanna","Bandito","Freight","Trailer",
	"Kart","Mower","Duneride","Sweeper","Broadway","Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer","Emperor",
	"Wayfarer","Euros","Hotdog","Club","Trailer B","Trailer C","Andromada","Dodo","RC Cam","Launch","Police Car","Police Car",
	"Police Car","Police Ranger","Picador","S.W.A.T.","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer","Luggage Trailer",
	"Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};
forward Fixhour(hora);
forward Clock();
new Text:TextData;
new Text:TextHora;
new Text:TextPlayersOn;
//======================[NOVO ROUBAR]=================
//GLOBAIS
new GranaBanco = 0;
new GranaLot = 0;
new GranaPosto = 0;
new GranaLoja1 = 0;
new GranaLoja2 = 0;
new GranaPref = 0;
new roubando[MAX_PLAYERS];
new temporoubobanco = 0;
new temporoubolot = 0;
new temporouboposto = 0;
new temporouboloja1 = 0;
new temporouboloja2 = 0;
new temporouboprefe = 0;
forward Aroubo();
forward Aroubo2();
forward Aroubo3();
forward Aroubo4();
forward Aroubo5();
forward Aroubo6();
//BANCO
new roubobanco;
new ProvocoBanco[MAX_PLAYERS];
new tempobanco;
forward RouboBanco(playerid);
//LOTERICA
new roubolot;
new ProvocoLot[MAX_PLAYERS];
new tempolot;
forward RouboLot(playerid);
//posto de gasolina abandonado
new rouboposto;
new ProvocoPostoGas[MAX_PLAYERS];
new tempoposto;
forward RouboPosto(playerid);
//LOJA DE ARMAS 1
new rouboloja1;
new ProvocoLoja1[MAX_PLAYERS];
new tempoloja1;
forward RouboLoja1(playerid);
//LOJA DE ARMAS 2
new rouboloja2;
new ProvocoLoja2[MAX_PLAYERS];
new tempoloja2;
forward RouboLoja2(playerid);
//PREFEITURA
new rouboprefe;
new ProvocoPrefe[MAX_PLAYERS];
new tempoprefe;
forward RouboPrefe(playerid);
//======================[FIM ROUBAR]=================
new TempoSinc;
forward Sincronizar(playerid);
new TempoLogin;
new TempoAn;
new TempoServicoTaxi;
new TempoServicoOnibus;
new TempoServicoPolicia;
new TempoServicoMedico;
new TempoServicoMecanico;
new TempoMecanico;
new TempoMedico;
new TempoAnPrefeito;
new TempoAnGov;
new Tempocbomba;
new Tempohbomba;
new TempoSincronizar;
forward LoginAgora(playerid);
forward CorridaOni();
forward hbomba();
forward cbomba();
forward Sinc();
forward Administrador(playerid);
forward Helpert(playerid);
forward CheckOwnerb(playerid);
forward CheckOwnerh(playerid);
new TempoAdministrador;
new ContarAdmin = 0;
new ContarAdminOn;
new TempoHelper;
new TempoGuerra;
new TendoGuerra = 0;
new GZEstacao;
new donoestacao;
new GZCasarao;
new donocasarao;
new GuerranaEstacao;
new ProvocoEstacao[MAX_PLAYERS];
new TempoGuerraEstacao;
forward GuerraEstacao(playerid);
new GuerranoCasarao;
new ProvocoCasarao[MAX_PLAYERS];
new TempoGuerraCasarao;
forward GuerraCasarao(playerid);
enum ViniciusInfo
{
	Tels[20],
	PLojaA1,
	PLojaA2,
	PpLoja247,
	PpLoja2472,
	ArmaLoja[52],
	InicioGuerra,

};
new pcorridaoni;
new phbomba;
new pcbomba;
new psinc;
new TheusInfo[MAX_PLAYERS][ViniciusInfo];
forward GuerraTerrorista(playerid);
new GZGuerra;
forward SendVIPMessage(color, string[]);
forward CheckHack();
new TempoCheckHack;
new spawnado[MAX_PLAYERS];
new TempoAnReporter;
new skinadm[MAX_PLAYERS];
new admtrampando[MAX_PLAYERS];
new helptrampando[MAX_PLAYERS];
new logouagora[MAX_PLAYERS];
new Float:FaceAngle[MAX_PLAYERS];
new Float:PlayerHPP[MAX_PLAYERS];
new VehicleIDD[MAX_PLAYERS];
new ammoo[13][MAX_PLAYERS];
new Float:APP[MAX_PLAYERS];
new vehicledd[MAX_PLAYERS];
new interior[MAX_PLAYERS];
new Float:xx[MAX_PLAYERS];
new Float:yy[MAX_PLAYERS];
new Float:zz[MAX_PLAYERS];
new skinneg[MAX_PLAYERS];
new gunsinc[13][MAX_PLAYERS];
new virt[MAX_PLAYERS];
new sincronizando[MAX_PLAYERS];
//================= Ant Hackers
new Float:xpoz, Float:ypoz, Float:zpoz;
new vehicleTime[MAX_PLAYERS], lastVehicle[MAX_PLAYERS];
new FakeKillOn = 0;
new SysDBOn = 0;
new bool:AntiLagOn;
new AntCarSpam = 1;
new FamilyBloqueada = 999;
//new PlayerCarSpam[MAX_PLAYERS];
new antifakekill[MAX_PLAYERS];
new XiterCrashando[MAX_PLAYERS];
new IsXiter[MAX_PLAYERS];
// Equipar
new OnEquipado[MAX_PLAYERS];
//Equipar Máfia
new OnMafiaEquipado[MAX_PLAYERS];
// MudarNick
new MudarNickAceito[MAX_PLAYERS];
new MudarSenhaAceito[MAX_PLAYERS];
new tempoGranaTR;
new GZPark;
new GZCemiterio;
new GZPosto;
new GZShop;
new GZSkate;
new GZPantano;
new Dominando[MAX_PLAYERS];
forward GuerraPark(playerid);
forward GuerraCemiterio(playerid);
forward GuerraPosto(playerid);
forward GuerraCity(playerid);
forward GuerraShop(playerid);
forward GuerraSkate(playerid);
forward GuerraPantano(playerid);
forward GuerraPedreira(playerid);
forward GranaTerritorios();
new GuerranoPark;
new GuerranoCemiterio;
new GuerranoPosto;
new GuerranoCity;
new GuerranoShop;
new GuerranoSkate;
new GuerranoPantano;
new TempoGuerraPark;
new TempoGuerraCemiterio;
new TempoGuerraPosto;
new TempoGuerraCity;
new TempoGuerraShop;
new TempoGuerraSkate;
new TempoGuerraPantano;
new ProvocoPark[MAX_PLAYERS];
new ProvocoCemiterio[MAX_PLAYERS];
new ProvocoPosto[MAX_PLAYERS];
new ProvocoCity[MAX_PLAYERS];
new ProvocoShop[MAX_PLAYERS];
new ProvocoSkate[MAX_PLAYERS];
new ProvocoPantano[MAX_PLAYERS];
new donoPark;
new donoCemiterio;
new donoPosto;
new donoShop;
new donoskate;
new donopantano;
new donopedreira;
new PolicialInRonda[MAX_PLAYERS];
new Sequestrado[MAX_PLAYERS];
new VTrancado[MAX_VEHICLES] = 0;

new aNames[][] =
{
    "Desarmado", "Soqueira", "Taco de Golf", "Cacetete",
    "Faca", "Taco de Base-Ball", "Pá de pedreiro", "Cano", "Espada", "Motoserra", "Vibrador", "Vibrador", "Vibrador", "Vibrador",
    "Flores", "Pé de cabra", "Granada", "Bomba de Gás", "Coquetel-Molotov", "Desconhecido 19", "Desconhecido 20", "Nada", "Pistola 9mm", "Pistola 9mm com Silenciador",
    "Desert Eagle", "Shotgun", "nada", "Escopeta de combate", "Micro Uzi", "MP5", "Ak-47", "M4", "Tec9", "Rifle", "Rifle-Sniper",
    "Lança Missil", "Lança Missil RPG", "Lança Chamas", "Minigun", "Explosivo Remoto", "Detonador", "Spray", "Extintor", "Camera", "Òculos de Visão noturna", "Òculos Infra Vermelho",
    "Paraquedas", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido", "Desconhecido"
};
//portao
new sendername[MAX_PLAYER_NAME];
new Rouco[MAX_PLAYERS];
new SemAn[MAX_PLAYERS];
new portaohitman;
new portaotriads;
new portaocivil;
new portaopf;
new PortaoSkOrg,PortaoSkOrg1,PortaoStart1,PortaoStart2;
new Float:BusShowLocation[MAX_PLAYERS][4];
new BusShowLocationC[MAX_PLAYERS];
new BusrouteWest[MAX_PLAYERS][2];
new BusrouteEast[MAX_PLAYERS][2];
new NomeCarro[64];
forward NRouco(playerid);
forward NFlood(playerid);
forward NSemAn(playerid);
//Velocimetro do Theus
new Text:box,Text:box1,Text:box2,Text:box3,Text:box4,Text:box5,Text:tacho[MAX_PLAYERS],Text:VeInfo[MAX_PLAYERS],Text:kmhor[MAX_PLAYERS];
new Text:GazoInfo[MAX_PLAYERS],Text:LataInfo[MAX_PLAYERS],Text:TempoGasInfo[MAX_PLAYERS],Text:LocalInf[MAX_PLAYERS],Text:SpedUrl;
new Text:BoasVindas;
new Text:InfoBasicas;
new Text:RegBasicas;
new Text:CmdUteis;
new Text:TextPosto[MAX_PLAYERS];
new Text:LocaisUteis;
new Text:BoxTuto1;
new Text:BoxTuto2;
forward Velocimetro(playerid);
forward RemoveCone(playerid);
new Cone[10];
//new Updatesegundos = 1;
//score
forward OnPlayerTeamPrivmsg(playerid,text[]);
forward ScoreLevel(playerid);
//CarVip
forward IsAVIP(playerid);
forward IsAVIPCar(carid);
//Prefeito
forward IsAGOV(playerid);
forward IsAGOVCar(carid);
//Aztecas
forward IsAROTAs(playerid);
forward IsAEx(playerid);
//Jornaleiro
forward IsAJornal(playerid);
forward IsAJornalCar(carid);
//AmigodosAmigos
forward IsAAmigodosAmigos(playerid);
forward IsAAmigodosAmigosCar(carid);
//Assassinos
forward IsAHit(playerid);
forward IsAHitCar(carid);
forward IsATriadCar(carid);
// produtos
forward IsACityCar(carid);
//Bikes
forward IsACivilCar(carid);
//Taliban
forward IsAHam(playerid);
forward IsAHamCar(carid);
//FARC
forward IsAFARC(playerid);
forward IsAFARCCar(carid);
//Yakuza
forward IsAYa(playerid);
forward IsAYaCar(carid);
//Onibus/Taxis
forward IsAOni(playerid);
forward IsAOniCar(carid);
//Taxi
forward IsATaxi(playerid);
forward IsATaxiCar(carid);
//Bomba
//forward bomba(playerid);
//Gasolina
forward gasolina(playerid);
//Vagos
forward IsAVagos(playerid);
forward IsAVagosCar(carid);
//Ballas
forward IsABallas(playerid);
forward IsABallasCar(carid);
forward IsAMonCar(carid);
forward IsASonsCar(carid);
forward IsAHellCar(carid);
forward IsADriftCar(carid);
//AlQaeda
forward IsAAl(playerid);
forward IsAAlCar(carid);
//Groves
forward IsAGroove(playerid);
forward IsAGrooveCar(carid);
//Aztecas
forward IsAAzteca(playerid);
forward IsAAztecaCar(carid);
//Americano
forward IsAAmericano(playerid);
forward IsAAmericanoCar(carid);
//Policia Civil
forward IsARPP(playerid);
forward IsARPPCar(carid);
//Carregar Objetos
forward CObjetos(playerid);
forward CarregadoObject(playerid);
//Gates
forward PDEx2();
forward PortaoRally2();
forward PortaoX12();
forward PortaoReporterr2();
forward PortaoReporter2();
forward PortaoBallas();
forward PortaoHitman();
forward PortaoTriads();
forward PortaoCivil();
forward PortaoPf();
forward PortaoTaxi2();
forward PortaoAmericano2();
forward PortaoRooxy2();
forward PortaoRPP2();
forward PortaoyStiflerS2();
forward PortaoBOPE2();
forward PortaoAmigodosAmigos2();
forward pd1();
forward pd2();
forward gt3gate2();
forward gt3gate4();
forward pd3();
forward pd4();
forward pd5();
forward pd6();
forward pd7();
forward GaragemDpClosed();
forward GaragemDpClosed2();
forward pcclosed();
forward PFClosed2();
forward PFClosed3();
forward PCClosed();
forward PCClosed2();
forward PortaoGov2();
forward PortaoPre2();
//outros
forward LoadProperty();
forward LoadBizz();
forward LoadSBizz();
forward LoadStuff();
forward SaveStuff();
forward LoadBoxer();
forward SaveBoxer();
forward OnPropUpdate();
forward ExtortionBiz(bizid, money);
forward ExtortionSBiz(bizid, money);
forward IsAtClothShop(playerid);
forward IsAtGasStation(playerid);
forward IsAtGasStationgang(playerid);
forward IsAtFishPlace(playerid);
forward IsAtCookPlace(playerid);
forward IsAtBar(playerid);
forward SearchingHit(playerid);
forward SetPlayerSpawn(playerid);
forward SetupPlayerForClassSelection(playerid);
forward SetPlayerTeamFromClass(playerid,classid);
forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
forward CrimInRange(Float:radi, playerid,copid);
forward ABroadCast(COLOR,const string[],level);
forward GetClosestPlayer(p1);
forward IsPlayerInTurf(playerid, turfid);
forward PrintBizInfo(playerid,targetid);
forward PrintSBizInfo(playerid,targetid);
forward SetPlayerUnjail();
forward OtherTimer();
forward RingTonerRev();
forward RingToner();
forward HireCost(carid);
forward SBan(playerid, string[], string2[]);
forward BanLog(string[]);
forward KickLog(string[]);
forward IsAnAmbulanceCar(carid);
forward IsAAmbu(playerid);
forward IsAGOV(playerid);
forward IsAGatev(carid);
forward IsACopCar(carid);
forward IsAEnforcerCar(carid);
forward IsABlindadoCar(carid);
forward IsACaminhaozinhoCar(carid);
forward IsAMecCar(carid);
forward IsAMec(playerid);
forward IsAMLHCar(carid);
forward IsAGOVCar(carid);
forward IsAMLH(playerid);
forward IsAPlane(carid);
forward IsABoat(carid);
forward IsACop(playerid);
forward IsAGang(playerid);
forward IsAClub(playerid);
forward IsAMon(playerid);
forward IsASons(playerid);
forward IsAHell(playerid);
forward IsAMember(playerid);
forward Spectator();
forward PaintballEnded();
forward StartPaintball();
forward PreparePaintball();
forward Float:GetDistanceBetweenPlayers(p1,p2);
forward GameModeExitFunc();
forward SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num);
forward SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi);
forward SetPlayerCriminal(playerid,declare,reason[]);
forward SetPlayerFree(playerid,declare,reason[]);
forward ShowStats(playerid,targetid);
forward SetPlayerToTeamColor(playerid);
forward GameModeInitExitFunc();
forward split(const strsrc[], strdest[][], delimiter);
forward OnPlayerLogin(playerid);
forward OnPlayerRegister(playerid);
forward BroadCast(COLOR,const string[]);
forward OOCNews(COLOR,const string[]);
forward SendEmpregoMessage(Emprego, COLOR, string[]);
forward SendFamilyMessage(family, COLOR, string[]);
forward ABroadCasth(COLOR,const string[],level);
forward ABroadCastah(COLOR,const string[],level);
forward FamyMsg(COLOR,const string[],level);
forward SoEuVejoMsm(COLOR,const string[]);
forward ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5);
forward ProxDetectorS(Float:radi, playerid, targetid);
forward ProxDetectorV(Float:radi, playerid, carroid);
forward ClearMarriage(playerid);
forward ClearCrime(playerid);
forward FishCost(playerid, fish);
forward ClearFishes(playerid);
forward ClearFishID(playerid, fish);
forward ClearCooking(playerid);
forward ClearCookingID(playerid, cook);
forward ClearGroceries(playerid);
forward Lotto(number);
forward CarCheck();
forward CarInit();
forward CarTow(carid);
forward CheckGas();
forward Abastecendo(playerid);
forward GasGang(playerid);
forward CorridaTrack();
forward SyncTime();
forward IsPlayerInZone(playerid, zoneid);
forward Production();
forward PayDay();
forward ini_GetKey( line[] );
forward ini_GetValue( line[] );
forward PlayerPlayMusic(playerid);
forward StopMusic(playerid);
forward PlayerFixRadio(playerid);
forward PlayerFixRadio2();
forward CustomPickups();
forward SetCamBack(playerid);
forward RemoveRoadblock(playerid);
forward RemoveParedao(playerid);
forward RemoveRoadBloq(playerid);
forward RemoveRoadPregos(playerid);
forward BackupClear(playerid, calledbytimer);
forward RemoveBarraca(playerid);
forward ClearChatbox(playerid, lines);

new NicksProibidos[][MAX_PLAYER_NAME]  ={
"com1","com2","com3","com4","com5","com6","com7","com8","com9","lpt1","lpt2","lpt3","lpt4","lpt5","lpt6","lpt7",
"lpt8","lpt9","clock$","prn","nul","con","CON","con","con1","aux","aux1","prn","PRN","AUX","BPF","BPG","BPL",
"Server_Lixao","crashar_servidor","Crashar_Servidor","com1.aux.com.ipt3"
};

new kickname[MAX_PLAYER_NAME];
new victmname[MAX_PLAYER_NAME];
new GetPlayerDB[MAX_PLAYERS];
//------------------------------------------------------------------------------------------------------
new Float:trazerx,Float:trazery,Float:trazerz;
new Float:vc,Float:vy,Float:vz;
new TrazerTodosX1[MAX_PLAYERS];
new OnTrazerX1;
//Portoes
new pyakuza1, pyakuza3, acn;
forward fecharyakuza1();
forward fecharyakuza3();
new PDEx;
new PortaoRally;
new PortaoX1;
new PortaoReporter;
new PortaoReporterr;
new PortaoTaxi;
new PortaoRPP;
new PortaoRooxy;
new PortaoAmericano1;
new PortaoAmericano3;
new PortaoyStiflerS;
new PortaoBOPE;
new PortaoAmigodosAmigos;
new PDDOORa;
new PDDOORb;
new PDDOORc;
new PDGATE;
new PDGARAGE;
new PDELEVATOR;
new gatepf3;
new gatepf2;
new gt3gate;
new gt3gate3;
new PortaoGov;
new PortaoPre;
new PortaoPRFCarros;
new Tax = 0;
new TaxValue = 0;
new Jackpot = 0;
new StartingPaintballRornd = 0;
new AnnorncedPaintballRornd = 0;
new PaintballPlayers = 0;
new PaintballRornd = 0;
new PaintballWinner = 999;
new PaintballWinnerKills = 0;
new InRing = 0;
new RorndStarted = 0;
new BoxDelay = 0;
new Boxer1 = 255;
new Boxer2 = 255;
new TBoxer = 255;
new PlayerBoxing[MAX_PLAYERS];
new hitfound = 0;
new hitid = 999;
new Copsronda = 0;
new CopsrondaCall = 999;
new CopsrondaCallTime[MAX_PLAYERS];
new CopsrondaAccepted[MAX_PLAYERS];
new Medics = 0;
new MedicCall = 999;
new MedicCallTime[MAX_PLAYERS];
new MedicAccepted[MAX_PLAYERS];
new Mechanics = 0;
new MechanicCall = 999;
new MechanicCallTime[MAX_PLAYERS];
new MechanicAccepted[MAX_PLAYERS];
new TaxiDrivers = 0;
new TaxiCall = 999;
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new BusDrivers = 0;
new BusCall = 999;
new BusCallTime[MAX_PLAYERS];
new BusAccepted[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new EmpregoDuty[MAX_PLAYERS];
new EmRondaCop[MAX_PLAYERS];
new RegistrationStep[MAX_PLAYERS];
new MapIconsShown[MAX_PLAYERS];
new PlayerPaintballing[MAX_PLAYERS];
new PlayerPaintballKills[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new WatchingTV[MAX_PLAYERS];
new NoFuel[MAX_PLAYERS];
new MatsHolding[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new TicketMoney[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new FishCornt[MAX_PLAYERS];
//new SpawnChange[MAX_PLAYERS];
new PlayerDrunk[MAX_PLAYERS];
new PlayerDrunkTime[MAX_PLAYERS];
new PlayerTazeTime[MAX_PLAYERS];
new FindTimePoints[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new TestFishes[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new CarOffer[MAX_PLAYERS];
new CarPrice[MAX_PLAYERS];
new CarID[MAX_PLAYERS];
new CarCalls[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
new OrderReady[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new Hospital[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new PlacedNews[MAX_PLAYERS];
new SelectChar[MAX_PLAYERS];
new SelectCharID[MAX_PLAYERS];
new SelectCharPlace[MAX_PLAYERS];
new ChosenSkin[MAX_PLAYERS];
new GettingEmprego[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new ApprovedAdvogado[MAX_PLAYERS];
new AdvogPreco[MAX_PLAYERS];
new ConviteAdv[MAX_PLAYERS];
new CurrentMoney[MAX_PLAYERS];
new Robbed[MAX_PLAYERS];
new RobbedTime[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new MoneyMessage[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new MendigoOffer[MAX_PLAYERS];
new MendigoPrice[MAX_PLAYERS];
new SexOffer[MAX_PLAYERS];
new SexPrice[MAX_PLAYERS];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RefillOffer[MAX_PLAYERS];
new RefillPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new DrugOffer[MAX_PLAYERS];
new DrugPrice[MAX_PLAYERS];
new DrugGram[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new WantedPoints[MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerSpawned[MAX_PLAYERS];
new gActivePlayers[MAX_PLAYERS];
new gLastCar[301];
//new gNews[MAX_PLAYERS];
new gFam[MAX_PLAYERS];
new BigEar[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new HireCar[MAX_PLAYERS];
new SafeTime[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new gDice[MAX_PLAYERS];
new gSpentCash[MAX_PLAYERS];
new SwitchKey[MAX_PLAYERS];
new Fixr[MAX_PLAYERS];
new Locator[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new RingTone[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new gPlayerConta[MAX_PLAYERS];
new gPlayerMission[MAX_PLAYERS];
new gLastDriver[302];
new portaodpauto;
new playerpickup[MAX_PLAYERS];
new ghour = 0;
new levelcost = 25000;
new callcost = 10; //20 seconds
new realchat = 1;
new timeshift = 0;
new othtimer;
new newmistimer;
new unjailtimer;
new turftimer;
new pickuptimer;
new spectatetimer;
new productiontimer;
new Contastimer;
new checkgastimer;
new cartimer;
new levelexp = 4;
new cchargetime = 60;
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};
new Float:ChangePos[MAX_PLAYERS][3];
new ChangePos2[MAX_PLAYERS][2];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TelePos[MAX_PLAYERS][6];
forward ReduceTimer(playerid);
new ReduceTime[MAX_PLAYERS];
forward RemovePlayerWeapon(playerid, weaponid);
new Gas[MAX_VEHICLES];
new Refueling[MAX_PLAYERS];
new GasETanto[MAX_PLAYERS];
new GranaGas[MAX_PLAYERS];
new Refuelinggang[MAX_PLAYERS];

public Float:GetDistanceBetweenPlayers(p1,p2)
{
	new Float:x1,Float:y1,Float:z1,Float:x2,Float:y2,Float:z2;
	if(!IsPlayerConnected(p1) || !IsPlayerConnected(p2))
	{
		return -1.00;
	}
	GetPlayerPos(p1,x1,y1,z1);
	GetPlayerPos(p2,x2,y2,z2);
	return floatsqroot(floatpower(floatabs(floatsub(x2,x1)),2)+floatpower(floatabs(floatsub(y2,y1)),2)+floatpower(floatabs(floatsub(z2,z1)),2));
}

new Music[MAX_PLAYERS];
new Songs[7][1] = {
{1187},
{1185},
{1183},
{1097},
{1076},
{1068},
{1062}
};

new FishNamesNumber = 22;
new FishNames[22][20] = {
{"Jacketa"},
{"Peixe Estragado"},
{"Garoupa"},
{"Cioppa"},
{"Calças"},
{"Truta"},
{"Cavalo Marinho"},
{"Lata"},
{"Sardinha"},
{"Lobo do Mar"},
{"Sapato"},
{"Ferro"},
{"Piranha"},
{"Peixe Vela"},
{"Atum"},
{"Enguia"},
{"Golfinho"},
{"Tubarão"},
{"Tartaruga"},
{"Peixe-Gato"},
{"Bolsa de Dinheiro"},
{"Peixe-Espada"}
};

new Float:PaintballSpawns[7][3] = {
{-974.8316,1090.0726,1344.9749},
{-1008.0152,1020.6591,1341.0078},
{-1056.7622,1022.5488,1343.5333},
{-1069.8796,1090.9489,1343.2849},
{-1110.4558,1095.7335,1341.8438},
{-1095.3258,1022.5496,1343.1650},
{-1131.6470,1057.6083,1346.4139}
};

new Float:gPresoPmSpawns[3][4] = {
{264.0141,82.0856,1001.0391,267.1115},
{264.1883,86.7433,1001.0391,268.5763},
{264.6288,77.5742,1001.0391,268.5763}
};
new Float:gPresoROTASpawns[3][4] = {
{219.1653,109.2390,999.0156,358.9629},
{223.2178,110.6664,999.0156,355.7435},
{227.1820,110.4537,999.0156,7.7288}
//{264.6288,77.5742,1001.0391,0.0}//default
};
new Float:gPresoPcSpawns[3][4] = {
{193.3041,174.5611,1003.0234,359.3811},
{198.5518,162.2574,1003.0300,177.3532},
{198.1076,175.0731,1003.0234,0.0}
};
new Float:gPresoPfSpawns[3][4] = {
{319.5352,312.7950,999.1484,267.9541},
{319.6884,316.7169,999.1484,272.3408},
{319.5352,312.7950,999.1484,267.9541}
};

new Float:gInviteSpawns[10][4] = {
{-1976.5912,166.1818,36.9623,272.6393},
{-1975.8610,162.1945,36.9623,272.0126},
{-1975.7461,157.5404,36.9623,276.1093},
{-1975.2136,151.4920,36.9623,268.2993},
{-1974.9963,145.3430,36.9623,269.2628},
{-1975.5842,140.8170,36.9623,269.8895},
{-1975.7874,134.0368,36.9623,271.7696},
{-1975.1681,129.0926,36.9623,270.8531},
{-1975.9069,121.4700,36.9623,270.5631},
{-1975.3311,112.7078,36.9623,267.7665}
};

new Float:gMedPlayerSpawns[2][3] = {
{1178.1,-1321.0,14.1},
{1177.7,-1325.0,14.0}
};
new Float:ConceSpawn[11][4] = {
{2784.7573,-1835.6709,9.5405,43.0568},
{2781.2344,-1838.8358,9.5206,29.1595},
{2776.4897,-1839.3440,9.5049,20.9151},
{2772.1289,-1842.0457,9.4905,19.4733},
{2766.9565,-1843.7014,9.4733,20.5247},
{2757.9744,-1847.2585,9.4375,20.3736},
{2752.5188,-1875.1747,9.4085,180.7251},
{2762.4429,-1876.4154,9.4481,180.9643},
{2772.4690,-1876.1725,9.4921,182.3796},
{2787.7598,-1876.2698,9.5581,181.1454},
{2802.8921,-1876.0167,9.6172,178.6075}
};
new Float:DuenteMacas[8][4] = {
{1711.8503,1193.0247,35.7302,178.1742},
{1711.7539,1191.0082,35.7302,178.8734},
{1711.6503,1189.2032,35.7302,178.1742},
{1711.5483,1187.4572,35.7302,178.1742},
{1711.8507,1185.5084,35.7302,181.3494},
{1711.9169,1183.7384,35.7302,181.3494},
{1711.9880,1181.8590,35.7302,181.3494},
{1712.0095,1179.9529,35.7302,179.7618}
};

forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);

enum pBoxingStats
{
    TitelName[32],
    TitelWins,
    TitelLoses,
};
new Titel[pBoxingStats];

enum pFishing
{
	pFish1[20],
	pFish2[20],
	pFish3[20],
	pFish4[20],
	pFish5[20],
	pWeight1,
	pWeight2,
	pWeight3,
	pWeight4,
	pWeight5,
	pFid1,
	pFid2,
	pFid3,
	pFid4,
	pFid5,
	pLastFish,
	pFishID,
	pLastWeight,
};
new Fishes[MAX_PLAYERS][pFishing];

enum pCooking
{
	pCook1[20],
	pCook2[20],
	pCook3[20],
	pCook4[20],
	pCook5[20],
	pCWeight1,
	pCWeight2,
	pCWeight3,
	pCWeight4,
	pCWeight5,
	pCookID1,
	pCookID2,
	pCookID3,
	pCookID4,
	pCookID5,
};
new Cooking[MAX_PLAYERS][pCooking];

enum pGroceries
{
	pChickens,
	pChicken,
	pHamburgers,
	pHamburger,
	pPizzas,
	pPizza,
};
new Groceries[MAX_PLAYERS][pGroceries];

enum pSpec
{
	Float:Coords[3],
	Float:sPx,
	Float:sPy,
	Float:sPz,
	sPint,
	sLocal,
	sCam,
};

new Unspec[MAX_PLAYERS][pSpec];

enum eCars
{
	model_id,
	Float:pos_x,
	Float:pos_y,
	Float:pos_z,
	Float:z_angle,
};

enum hNews
{
	hTaken1,
	hTaken2,
	hTaken3,
	hTaken4,
	hTaken5,
	hAdd1[128],
	hAdd2[128],
	hAdd3[128],
	hAdd4[128],
	hAdd5[128],
	hContact1[128],
	hContact2[128],
	hContact3[128],
	hContact4[128],
	hContact5[128],
};
new News[hNews];

enum pInfo
{
	pOnline,
	pKey[128],
	pLevel,
    pCone,
	pAdmin,
    pVIP,
	gPupgrade,
	pConnectTime,
	pReg,
	pSex,
	pAge,
	pMuted,
	pSequestrado,
	pExp,
	pCash,
	pConta,
	pCrimes,
	pKills,
	pDeaths,
	pPhoneBook,
	pLottoNr,
	pFishes,
	pBiggestFish,
	pEmprego,
	pSalario,
	pHeadValue,
	pJailed,
	pJailTime,
	pMats,
	pDrogas,
	pDrogas2,
	pDrogas3,
	pLider,
	pMembro,
    pFamyLider,
    pFamyMember,
	pCargo,
	pSkin,
	pContractTime,
	pDetSkill,
	pSexSkill,
	pBoxSkill,
	pLawSkill,
	pMechSkill,
	pNewsSkill,
	pDrogasSkill,
	pCookSkill,
	pFishSkill,
	Float:pSHealth,
	pInt,
	pLocal,
	pTeam,
	pPnumber,
	pPHousekey,
	pPbiskey,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pFishLic,
	pGunLic,
	pPayDay,
	pCDPlayer,
	pWins,
	pLoses,
	pAlcoholPerk,
	pDrugPerk,
	pMiserPerk,
	pPainPerk,
	pTraderPerk,
	pTut,
	pWarns,
	pMarried,
	pParedao,
	pRequestingBackup,
	pMask,
	pMaskuse,
	pBarraca,
	pMarriedTo[128],
	pSpawn,
	pSafeDrogas,
	pSafeDrogas2,
	pSafeDrogas3,
	psMats,
	pPHouseCarkey,
	pLuta,
	pDorgado,
	pDorgado2,
	pDoenca,
	pHelper,
    pLastDia,
	pLastMes,
	pLastAno,
	pLastHora,
	pLastMinuto,
	pLastSegundo,
    pVotou,
    pChave,
    pHosp,
	pHospTime,
};
new PlayerInfo[MAX_PLAYERS][pInfo];
new PlayerShotPlayer[MAX_PLAYERS][MAX_PLAYERS];
new pRoadblock[MAX_PLAYERS];
new pRoadBloq[MAX_PLAYERS];
new pRoadRampa[MAX_PLAYERS][10];
enum hInfo
{
	Float:hEntrancex,
	Float:hEntrancey,
	Float:hEntrancez,
	Float:hExitx,
	Float:hExity,
	Float:hExitz,
	hHealthx,
	hHealthy,
	hHealthz,
	hArmorrx,
	hArmorry,
	hArmorrz,
	hOwner[MAX_PLAYER_NAME],
	hDiscription[MAX_PLAYER_NAME],
	hValue,
	hHel,
	hArm,
	hInt,
	hLock,
	hOwned,
	hRooms,
	hRent,
	hRentabil,
	hTakings,
	hVec,
	hVcol1,
	hVcol2,
	hDate,
	hLevel,
	hWorld,
};
new HouseInfo[MAX_HOUSES][hInfo];
new HouseEntered[MAX_PLAYERS];

enum bInfo
{
    bOwned,
	bOwner[64],
	bMessage[128],
	bExtortion[MAX_PLAYER_NAME],
	Float:bEntranceX,
	Float:bEntranceY,
	Float:bEntranceZ,
	Float:bExitX,
	Float:bExitY,
	Float:bExitZ,
	bLevelNeeded,
	bBuyPrice,
	bEntranceCost,
	bTill,
	bLocked,
	bInterior,
};
new BizzInfo[MAX_BIZZES][bInfo];

enum sbInfo
{
	sbOwned,
	sbOwner[64],
	sbMessage[128],
	sbExtortion[MAX_PLAYER_NAME],
	Float:sbEntranceX,
	Float:sbEntranceY,
	Float:sbEntranceZ,
	sbLevelNeeded,
	sbBuyPrice,
	sbEntranceCost,
	sbTill,
	sbLocked,
};
new SBizzInfo[MAX_SBIZZES][sbInfo];

new HousePickup[MAX_HOUSES];
new BizzPickup[MAX_BIZZES];
new SBizzPickup[MAX_SBIZZES];

new Text3D:HouseLabel[MAX_HOUSES];
new Text3D:BizzLabel[MAX_BIZZES];
new Text3D:SBizzLabel[MAX_SBIZZES];

new Text3D:DonodoPosto;
new Text3D:CofrePrefeitura;
new Text3D:LabelOrg1;
new Text3D:LabelOrg2;
new Text3D:LabelOrg4;
new Text3D:LabelOrg5;
new Text3D:LabelOrg6;
new Text3D:LabelOrg7;
new Text3D:LabelOrg8;
new Text3D:LabelOrg9;
new Text3D:LabelOrg10;
new Text3D:LabelOrg11;
new Text3D:LabelOrg12;
new Text3D:LabelOrg13;
new Text3D:LabelOrg14;
new Text3D:LabelOrg15;
new Text3D:LabelOrg16;
new Text3D:LabelOrg17;
new Text3D:LabelOrg18;
new Text3D:LabelOrg19;
new Text3D:LabelOrg20;
new Text3D:LabelOrg21;
new Text3D:LabelOrg22;

new Text3D:LabelBanco;
new Text3D:LabelLot;
new Text3D:LabelPosto;
new Text3D:LabelLoja1;
new Text3D:LabelLoja2;
new Text3D:LabelPref;

enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32],
};
new PlayerCrime[MAX_PLAYERS][pCrime];

new GunPrice[30][1] = {
{124}, //parachute
{100}, //golfclub
{75}, //nightstick
{50}, //knife
{175}, //baseballbat
{75}, //shovel
{25}, //poolcue
{100}, //purpledildo
{125}, //whitedildo
{125}, //longwhitedildo
{125}, //whitedildo2
{50}, //flowers
{150}, //cane
{250}, //sdpistol
{250}, //colt45
{1000}, //deagle
{500}, //Tec9
{750}, //uzi
{750}, //mp5
{750}, //shotgun
{1500}, //spas12
{1000}, //sawnoff
{800}, //ak47
{800}, //m4
{250}, //rifle
{25}, //pistolammo
{20}, //shotgunammo
{12}, //smgammo
{20}, //assaultammo
{25} //rifle
};

new Peds[222][1] = {
{6},//Skin do Civil
{265},//TEAM_ADMIN
{267},{240},{228},{114},{120},{147},{294},{227},{61},{171},{270},{123},{59},{102},{108},{117},
{26},//Civis DOWN aqui
{26},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{249},{246},{245},{244},{243},{242},{241},{240},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{173},{174},{175},{224},{223},{222},{221},{220},{219},{218},
{217},{216},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{192},{191},{190},{189},{185},{184},{183},
{182},{181},{180},{179},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{137},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{66},{64},{63},{62},{58},{57},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{17},{16},{15},{14},{13},{12},{11},{10},{1},{2},
{290},//ROSE
{291},//PAUL
{292},//CESAR
{187},
{296},//JIZZY
{297},//MADDOGG
{298},//CAT
{299}//ZERO
};
//----------------------------CARROS DAS CASAS!!!------------------------------//
new Float:HouseCarSpawns[216][8] = {
{1849.4982,-1925.5737,13.2900,269.0401},//House 1
{1871.3917,-1925.8879,13.2899,269.1748},//House 2
{1892.9766,-1926.0437,13.2903,271.2716},//House 3
{1914.0115,-1924.4537,13.2899,270.2092},//House 4
{1929.7886,-1926.0729,13.2902,270.7549},//House 5
{1939.3484,-1925.9573,13.2898,269.9824},//House 6
{1910.4330,-1118.2250,25.5575,181.0549},//House 7
{1180.7435,-1252.5255,14.9737,182.7825},//House 8
{1192.6936,-1273.5597,13.3416,87.6046},//House 9
{1175.0167,-1272.9294,13.3417,90.2634},//House 10
{2498.9478,-1249.5275,34.0686,270.1946},//House 11
{1170.9451,-1239.2083,18.3494,273.3052},//House 12
{1196.9413,-1238.5664,18.3943,273.2929},//House 13
{1176.4779,-1219.5706,18.4081,272.2165},//House 14
{1190.4327,-1219.2605,18.3734,91.7042},//House 15
{2787.4866,-1288.4287,42.1518,268.7791},//House 16
{2805.5789,-1288.3579,42.0388,88.0861}, //House 17
{2787.0332,-1313.7335,36.2163,272.2736},//House 18
{2805.9197,-1310.0641,36.9896,83.7590},//House 19
{2786.4358,-1340.6472,29.8615,271.9752},//House 20
{2805.2693,-1331.9712,31.8388,84.1128},//House 21
{2786.0234,-1365.7836,23.9176,273.3652},//House 22
{2801.8293,-1355.6475,26.0534,359.1473},//House 23
{1110.0980,-726.4769,100.2775,90.1167},//House 24
{259.7329,-1221.1926,74.6363,201.0530},//House 25
{1463.6920,-901.7015,54.6260,358.9970},//House 26
{1440.1053,-890.6041,50.4033,359.9137},//House 27
{251.8644,-1359.2205,52.9348,303.7466},//House 28
{225.6491,-1263.4418,66.3373,141.0180}, //House 29
{244.5874,-1265.7161,68.6251,129.7593},//House 30
{311.3341,-1335.1876,53.2553,38.0402},//House 31
{405.7558,-1263.5070,50.4031,21.9046}, //House 32
{658.3419,-1065.0410,48.6738,141.5126},//House 33
{346.8729,-1198.7612,76.2213,37.6200},//House 34
{322.6475,-1765.9531,4.4238,178.5158},//House 35
{295.5023,-1775.9580,4.2171,93.4352},//House 36
{280.8075,-1775.3854,4.0512,87.9319},//House 37
{207.1892,-1774.6537,3.6090,91.3147},//House 38
{192.9391,-1774.9485,3.4986,92.1630},//House 39
{158.1870,-1770.4294,4.1838,180.5296},//House 40
{232.5652,-1406.9209,51.4151,332.2393},//House 41
{893.5425,-1648.2144,13.3423,90.9365},//House 42
{865.2274,-1647.5223,13.3278,87.6618},//House 43
{858.6662,-1717.7675,13.3167,176.8085},//House 44
{859.5588,-1793.5956,13.7028,265.4355},//House 45
{886.3644,-1795.3136,13.4518,263.3625},//House 46
{186.3153,-1744.9629,4.1400,358.8522},//House 47
{-2662.8369,-286.4962,7.1653,45.2360},//House 48
{-2656.7075,-292.1844,7.1234,45.2123},//House 49
{762.1455,-1750.7178,12.5131,1.1641},//House 50
{762.5828,-1704.2640,5.4890,353.6793},//House 51
{763.5857,-1660.6586,4.2317,90.7014},//House 52
{757.2587,-1604.3864,13.0929,5.9952},//House 53
{688.2308,-1597.6438,13.9033,2.2492},//House 54
{644.3828,-1619.9209,14.9068,178.7542},//House 55
{651.8380,-1656.6346,14.5463,84.2223},//House 56
{640.4855,-1715.3002,14.0018,350.2966},//House 57
{263.4509,-1775.2330,4.0219,87.2185},//House 58
{229.2565,-1774.8066,3.9794,89.9125},//House 59
{1177.8580,-1108.5828,25.0556,96.3383},//House 60
{1148.6967,-1101.2035,25.3972,271.7426},//House 61
{1177.7563,-1067.5601,28.7511,89.4310},//House 62
{1148.2141,-1061.2251,29.4986,274.9547},//House 63
{1098.0648,-1060.9714,29.4398,89.6238},//House 64
{1098.4087,-1101.3031,25.3413,89.5804},//House 65
{1278.5043,-1098.5215,25.8433,86.8810},//House 66
{1247.6974,-1107.8274,25.2462,268.3052},//House 67
{1247.3267,-1067.8013,28.9153,269.5094},//House 68
{1278.1199,-1058.3632,29.5117,88.9960},//House 69
{1934.4705,-1122.1460,26.0856,180.4290},//House 70
{1991.4327,-1119.3549,26.5167,270.0136},//House 71
{2021.6805,-1128.7836,24.6966,88.9300},//House 72
{2051.9412,-1119.8440,24.5100,181.1352},//House 73
{2078.9299,-1128.1758,23.6885,2.2788},//House 74
{2089.0764,-1141.4445,25.2655,90.6571},//House 75
{479.7771,-1091.5778,82.2181,358.6423},//House 76
{2077.2048,-1188.1725,23.5396,180.4763},//House 77
{2091.2695,-1227.8802,23.7770,269.2285},//House 78
{2104.8574,-1238.3297,24.4608,359.5674},//House 79
{2185.0420,-1465.7026,25.2823,272.7695},//House 80
{2148.4448,-1238.5730,24.2841,0.6127},//House 81
{2138.3110,-1284.9482,24.4670,181.0458},//House 82
{2103.9817,-1276.1344,25.2348,179.9895},//House 83
{2094.7827,-1285.0341,24.7188,179.0456},//House 84
{2095.7930,-1316.7681,24.5058,0.8542},//House 85
{2141.3748,-1327.7395,25.2884,359.9716},//House 86
{2196.6633,-1280.3999,24.2767,181.8215},//House 87
{2216.8311,-1282.2571,24.3189,183.4800},//House 88
{2231.6025,-1293.4851,23.7217,271.0650},//House 89
{2255.3960,-1282.0201,25.0892,183.8116},//House 90
{2259.2869,-1392.6798,23.7864,87.6052},//House 91
{2245.5818,-1392.7546,23.8039,89.3087},//House 92
{2232.2793,-1392.7249,23.8124,91.1336},//House 93
{2451.4126,-2023.5222,13.3839,3.0543},//House 94
{2462.6924,-2015.7365,13.3705,269.7538},//House 95
{2497.5188,-2023.6563,13.3154,359.1064},//House 96
{2507.5095,-2016.0697,13.3386,272.9436},//House 97
{2473.3721,-1996.3116,13.3839,177.1863},//House 98
{166.8582,-1341.0671,69.5281,179.6169},//House 99
{1533.0730,-841.5164,65.0301,85.6957},//House 100
{1529.4301,-813.3212,71.6962,87.5072},//House 101
{1514.4915,-768.3907,80.1071,139.3631},//House 102
{1460.1550,-634.8544,95.6349,180.3095},//House 103
{1028.4092,-809.3570,101.6375,22.4174},//House 104
{1023.4676,-776.5500,102.8895,85.9234},//House 105
{976.9719,-826.1484,96.1396,27.7099},//House 106
{942.2021,-839.4097,94.3384,29.2666},//House 107
{967.4248,-759.9371,110.7354,97.0316},//House 108
{1354.3202,-629.7422,108.8383,15.4581},//House 109
{857.5845,-818.4150,88.4680,19.7793},//House 110
{873.1438,-868.6379,77.2717,25.7657},//House 111
{832.5815,-860.8075,69.6735,186.3269},//House 112
{830.2504,-886.6093,68.6002,240.1175},//House 113
{724.9798,-993.8918,52.4405,236.0503},//House 114
{1102.2498,-820.1213,86.7616,94.0184},//House 115
{686.1296,-1072.7681,49.3897,60.1605},//House 116
{619.2938,-1102.0067,46.5483,121.8466},//House 117
{635.1069,-1121.2477,44.9110,48.1246},//House 118
{542.3256,-1200.5511,44.2029,108.8708},//House 119
{422.6566,-1262.1964,51.4085,22.9768},//House 120
{568.3619,-1131.6035,50.4823,123.9380},//House 121
{1102.6473,-643.8488,112.7890,42.6801},//House 122
{1053.1963,-637.6051,119.9118,89.0114},//House 123
{1008.9766,-660.4042,120.9398,118.8311},//House 124
{912.9079,-665.6145,116.8016,237.1444},//House 125
{940.3124,-708.1927,122.0105,25.6720},//House 126
{866.5078,-710.9155,105.5066,329.7114},//House 127
{402.2745,-1148.2843,76.8555,146.8472},//House 128
{837.4636,-759.5170,84.9513,234.4386},//House 129
{2375.2605,-1146.4277,27.3545,178.0937},//House 130
{2400.0210,-1136.1881,29.8213,179.4731},//House 131
{2422.5791,-1131.1589,34.1230,182.4121},//House 132
{2490.6006,-1142.1642,38.0013,91.7532},//House 133
{2502.4731,-1133.9078,38.9480,153.9394},//House 134
{1855.3026,-2143.7849,13.2740,90.9317},//House 135
{1876.6418,-2143.8484,13.2740,90.6687},//House 136
{1898.3320,-2143.6541,13.2740,90.0334},//House 137
{1899.8561,-2060.0862,13.2752,269.2708},//House 138
{1877.6840,-2060.2092,13.2740,271.4854},//House 139
{1856.8407,-2060.2251,13.2739,269.8126},//House 140
{342.3443,-1876.0426,2.2556,185.0970},//House 141
{294.5735,-1876.1187,1.9910,179.1540},//House 142
{250.3848,-1875.6232,1.5720,182.1286},//House 143
{205.9865,-1876.2771,1.8068,180.8197},//House 144
{1184.6124,-1252.5688,14.9079,182.0491},//House 145
{643.0599,-1692.1389,14.6595,355.8115},//House 146
{2432.4036,-1058.5281,54.0708,1.0216},//House 147
{2428.7241,-1016.5968,54.0287,193.6693},//House 148
{2452.0002,-1056.6379,59.4693,356.1369},//House 149
{2454.2297,-1013.0950,59.4570,178.5090},//House 150
{2485.7505,-1015.7893,65.0382,152.5809},//House 151
{2475.2380,-1059.4473,66.5169,343.6566},//House 152
{2503.7432,-1025.2019,69.8130,177.6173},//House 153
{2497.3608,-1063.0977,69.8599,0.1788},//House 154
{1337.5875,-1096.0389,23.7476,171.7952},//House 155
{2067.6392,-1738.8765,13.6783,269.7427},//House 156
{2074.2124,-1714.0375,13.2683,180.2601},//House 157
{2052.5747,-1695.1714,13.2751,269.9927},//House 158
{2069.8877,-1653.6063,13.2616,270.4084},//House 159
{2074.3994,-1644.2268,13.3056,1.5210},//House 160
{2074.3162,-1627.4417,13.2695,0.3678},//House 161
{2009.4080,-1630.3995,13.2679,180.4287},//House 162
{2009.4829,-1640.2030,13.2681,180.4762},//House 163
{2009.6040,-1655.1643,13.2671,180.4767},//House 164
{2016.5885,-1707.6719,13.2685,90.1251},//House 165
{2009.2926,-1721.1993,13.2741,181.4235},//House 166
{2013.9171,-1737.2247,13.2739,91.1623},//House 167
{1965.1614,-1709.1593,15.6874,89.7320},//House 168
{1977.4946,-1708.0625,15.6905,270.3337},//House 169
{1966.4865,-1674.2998,15.6943,91.0181},//House 170
{1977.1470,-1674.1792,15.6924,272.6857},//House 171
{1965.3494,-1657.7709,15.6889,89.0905},//House 172
{1976.4122,-1657.5651,15.6904,268.6701},//House 173
{1964.0996,-1637.5804,15.6914,90.1747},//House 174
{1977.0326,-1637.9534,15.6924,90.9899},//House 175
{1983.6398,-1714.9231,15.6906,0.4947},//House 176
{1966.3846,-1682.8446,15.6877,359.3173},//House 177
{1962.2632,-1628.0461,15.6673,359.4508},//House 178
{2137.0073,-1483.8253,23.7542,1.6942},//House 179
{2142.0134,-1437.3711,24.4159,93.3585},//House 180
{2155.6753,-1423.6860,25.3094,89.9264},//House 181
{2150.2600,-1408.6781,24.9393,87.1573},//House 182
{2136.6177,-1359.7472,25.3103,181.0419},//House 183
{2138.8279,-1371.9531,24.0338,182.4558},//House 184
{2189.1489,-1376.1112,23.7610,90.5970},//House 185
{1724.8994,-2127.2815,13.3548,0.3840},
{1718.2008,-2119.5554,13.3504,92.4885},
{1744.9438,-2127.8958,13.3475,359.7429},
{1772.3884,-2126.9788,13.3475,359.7937},
{1793.5256,-2128.0461,13.3475,359.9629},
{1724.7358,-2098.8306,13.3474,180.4743},
{1747.5973,-2097.8967,13.3473,180.0130},
{1773.0033,-2098.4465,13.3474,179.5512},
{1784.1661,-2107.3918,13.2619,90.5782},
{1805.0066,-2107.1440,13.2617,89.6616},
{2465.7439,-1688.2839,13.2231,267.3799},
{2443.1267,-1645.1866,13.1773,179.7829},
{2403.8394,-1646.1586,13.2527,179.8597},
{2384.0750,-1645.7604,13.2320,179.6723},
{2372.7646,-1644.2150,13.2236,178.4814},
{2361.0459,-1677.3054,13.2497,0.3276},
{2393.1558,-1673.1257,13.6244,359.5457},
{2418.8188,-1672.2328,13.3117,0.5091},
{2327.0874,-1677.2684,14.1298,268.9741},
{2319.2739,-1717.8595,13.2516,180.0293},
{2308.7886,-1726.6083,13.1674,89.1289},
{2409.1560,-1719.4171,13.3826,178.3921},
{2390.1707,-1712.2106,13.3255,180.1817},
{2532.8218,-2012.6118,13.2561,90.5917},
{2532.8088,-2006.5491,13.2523,89.4100},
{2507.9360,-2004.3042,13.1111,89.6529},
{2494.6577,-1996.6238,13.2296,180.3268},
{2235.8276,-1639.0493,15.3949,161.2258},
{2264.2471,-1651.4939,15.2303,89.8430},
{2271.7920,-1646.1603,15.1795,179.6200},
{2306.1860,-1672.4305,14.0359,0.2121}
};
main()
{
print(" ");
print(" ");
print("*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*");
print("*~~                    Brasil PlayStart v5.1                  ~~*");
print("*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*");
print("*~~           Criadores: Theus_Crazzy & Rafael_Joao              ~~*");
print("*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*");
print(" ");
}
public SearchingHit(playerid)
{
	new searchhit = 0;
  for(new i=0; i<MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(searchhit == 0)
		    {
			    if(PlayerInfo[i][pHeadValue] > 0 && GotHit[i] == 0 && PlayerInfo[i][pMembro] != 8 && PlayerInfo[i][pMembro] != 24)
			    {
			        searchhit = 1;
			        hitfound = 1;
			        hitid = i;
           for(new k=0; k<MaiorID; k++)
					{
						if(IsPlayerConnected(k))
						{
				        	if(PlayerInfo[k][pMembro] == 8 || PlayerInfo[k][pLider] == 8 || PlayerInfo[k][pMembro] == 24 || PlayerInfo[k][pLider] == 24)
				        	{
	               				SendClientMessage(k, COLOR_WHITE, "|______________ Agencia dos Assassinos ______________|");
								SendClientMessage(k, COLOR_LIGHTBLUE, "Mensagem: Novo contrato disponivel.");
				                format(gstring, sizeof(gstring), "Contrato: %s   ID: %d   Valor: $%d", PlayerName(i), i, PlayerInfo[i][pHeadValue]);
								SendClientMessage(k, COLOR_LIGHTBLUE, gstring);
								SendClientMessage(k, COLOR_YELLOW, "Use darcont [ID], Para Atribuir o Contrato a um Assassíno.");
	      					}
					    }
					}
					return 0;
			    }
			}
		}
	}
	if(searchhit == 0)
	{
	    SendClientMessage(playerid, COLOR_GREY, "   Nao ha contratos disponiveis!");
	}
	return 0;
}

public ExtortionBiz(bizid, money)
{
    format(gstring, sizeof(gstring), "Nenhum");
    if(strcmp(BizzInfo[bizid][bExtortion],gstring, true ) == 0 )
	{
	    return 0;
	}
 for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			new wstring[MAX_PLAYER_NAME];
			format(gstring, sizeof(gstring), "%s", PlayerName(i));
			strmid(wstring, gstring, 0, strlen(gstring), 255);
			if(strcmp(BizzInfo[bizid][bExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    GranaTheus(i, value);
			    BizzInfo[bizid][bTill] -= value;
			}
		}
	}
	return 1;
}

public ExtortionSBiz(bizid, money)
{
    format(gstring, sizeof(gstring), "Ninguem");
    if(strcmp(SBizzInfo[bizid][sbExtortion],gstring, true ) == 0 )
	{
	    return 0;
	}
 for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			new wstring[MAX_PLAYER_NAME];
			format(gstring, sizeof(gstring), "%s", PlayerName(i));
			strmid(wstring, gstring, 0, strlen(gstring), 255);
			if(strcmp(SBizzInfo[bizid][sbExtortion] ,wstring, true ) == 0 )
			{
			    new value = money / 100;
			    value = value * 10;
			    GranaTheus(i, value);
			    SBizzInfo[bizid][sbTill] -= value;
			}
		}
	}
	return 1;
}

public PreparePaintball()
{
    for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            SetPlayerVirtualWorld(i,0);
	            SetPlayerInterior(i,10);
	            SendClientMessage(i, COLOR_YELLOW, "O Paintball vai começar em 20 segundos.");
	        }
		}
	}
 	SetTimer("StartPaintball", 20000, 0);
	return 1;
}

public StartPaintball()
{
	PaintballRornd = 1;
	StartingPaintballRornd = 0;
	PaintballWinner = 999;
	PaintballWinnerKills = 0;
 for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            ResetPlayerWeapons(i);
	            GivePlayerWeapon(i, 29, 999);
	            GivePlayerWeapon(i, 25, 999);
	            GivePlayerWeapon(i, 31, 999);
	            SetPlayerArmour(i, 100.0);
	            SetPlayerHealth(i, 100.0);
	            SetPlayerInterior(i,10);
	            TogglePlayerControllable(i, 1);
	            SendClientMessage(i, COLOR_YELLOW, "O Paintball começou, 5 minutos para acabar.");
	            PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
	        }
	    }
	}
	SetTimer("PaintballEnded", 300000, 0);
	return 1;
}

public SendVIPMessage(color, string[])
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pVIP] >= 1)
		    {
				SendClientMessage(i, color, string);
			}
		}
	}
}


public PaintballEnded()
{
    for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(PlayerPaintballing[i] != 0)
	        {
	            if(IsPlayerConnected(PaintballWinner))
	            {
	                format(gstring,sizeof(gstring), "** %s ganhou o PaintBall, Matou: %d",PlayerName(PaintballWinner),PaintballWinnerKills);
	                SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
                    PaintballRornd = 0;
	            }
	            ResetPlayerWeapons(i);
	            SetPlayerInterior(i,0);
	            PlayerPaintballing[i] = 0;
	            SetPlayerPos(i, SBizzInfo[10][sbEntranceX],SBizzInfo[10][sbEntranceY],SBizzInfo[10][sbEntranceZ]);
	        }
		}
	}
	AnnorncedPaintballRornd = 0;
    PaintballRornd = 0;
	return 1;
}
public OnPlayerEditAttachedObject( playerid, response, index, modelid, boneid,
                                   Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ,
                                   Float:fRotX, Float:fRotY, Float:fRotZ,
                                   Float:fScaleX, Float:fScaleY, Float:fScaleZ )
{
    new debug_string[256+1];
	format(debug_string,256,"SetPlayerAttachedObject(playerid,%d,%d,%d,%f,%f,%f,%f,%f,%f,%f,%f,%f)",
        index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);

	print(debug_string);
    //SendClientMessage(playerid, 0xFFFFFFFF, debug_string);

    SetPlayerAttachedObject(playerid,index,modelid,boneid,fOffsetX,fOffsetY,fOffsetZ,fRotX,fRotY,fRotZ,fScaleX,fScaleY,fScaleZ);
    SendClientMessage(playerid, 0xFFFFFFFF, "{FF0000}Acessórios {FFFFFF}- Você terminou de editar o seu acessório!");

    return 1;
}
public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
    switch(dialogid)
    {
        case DIALOG_ATTACH_INDEX_SELECTION:
        {
            if(response)
            {
                if(IsPlayerAttachedObjectSlotUsed(playerid, listitem))
                {
                    ShowPlayerDialog(playerid, DIALOG_ATTACH_EDITREPLACE, DIALOG_STYLE_MSGBOX, \
                    "{FF0000}Acessórios {FFFFFF}- Modificação", "Você deseja editar ou deletar seu acessório?", "Editar", "Deletar");
                }
                else
                {
                    new string[4000+1];
                    for(new x;x<sizeof(AttachmentObjects);x++)
                    {
                        format(string, sizeof(string), "%s%s\n", string, AttachmentObjects[x][attachname]);
                    }
                    ShowPlayerDialog(playerid, DIALOG_ATTACH_MODEL_SELECTION, DIALOG_STYLE_LIST, \
                    "{FF0000}Acessórios Modificação {FFFFFF}- Selecionar o modelo", string, "Selecionar", "Cancelar");
                }
                SetPVarInt(playerid, "AttachmentIndexSel", listitem);
            }
            return 1;
        }
        case DIALOG_ATTACH_EDITREPLACE:
        {
            if(response) EditAttachedObject(playerid, GetPVarInt(playerid, "AttachmentIndexSel"));
            else RemovePlayerAttachedObject(playerid, GetPVarInt(playerid, "AttachmentIndexSel"));
            DeletePVar(playerid, "AttachmentIndexSel");
            return 1;
        }
        case DIALOG_ATTACH_MODEL_SELECTION:
        {
            if(response)
            {
                if(GetPVarInt(playerid, "AttachmentUsed") == 1) EditAttachedObject(playerid, listitem);
                else
                {
                    SetPVarInt(playerid, "AttachmentModelSel", AttachmentObjects[listitem][attachmodel]);
                    new string[256+1];
                    for(new x;x<sizeof(AttachmentBones);x++)
                    {
                        format(string, sizeof(string), "%s%s\n", string, AttachmentBones[x]);
                    }
                    ShowPlayerDialog(playerid, DIALOG_ATTACH_BONE_SELECTION, DIALOG_STYLE_LIST, \
                    "{FF0000}Acessórios {FFFFFF}- Selecionar o Local", string, "Selecionar", "Cancelar");
                }
            }
            else DeletePVar(playerid, "AttachmentIndexSel");
            return 1;
        }
        case DIALOG_ATTACH_BONE_SELECTION:
        {
            if(response)
            {
                SetPlayerAttachedObject(playerid, GetPVarInt(playerid, "AttachmentIndexSel"), GetPVarInt(playerid, "AttachmentModelSel"), listitem+1);
                EditAttachedObject(playerid, GetPVarInt(playerid, "AttachmentIndexSel"));
                SendClientMessage(playerid, 0xFFFFFFFF, "{FF0000}Acessórios {FFFFFF}- Use o mouse para editar o acessório");
            }
            DeletePVar(playerid, "AttachmentIndexSel");
            DeletePVar(playerid, "AttachmentModelSel");
            return 1;
        }
    }
    TogglePlayerControllable(playerid, 1);
    new string[128];
	new giveplayer[MAX_PLAYER_NAME];
	GetPlayerName(meavalie[playerid], giveplayer, sizeof(giveplayer));
	GetPlayerName(playerid, sendername, sizeof(sendername));
    if(dialogid == DIALOG_MEAVALIE)
	{
	    if(response == 1)
     	{
		    SendClientMessage(meavalie[playerid],0x0000FFAA,"O Jogador qualificou a sua ajuda como POSITIVA, voce ganhou 1 nivel.");
		    PlayerInfo[meavalie[playerid]][pHelper] = PlayerInfo[meavalie[playerid]][pHelper]+1;
            format(string, sizeof(string), "Você avaliou a ajuda do Helper %s como: {9EC73D}positiva.",giveplayer);
		    SendClientMessage(playerid,COR_HELPER,string);

	    }
	    if(response == 0)
     	{
			SendClientMessage(meavalie[playerid],0xFF0000AA,"O Jogador qualificou a sua ajuda como NEGATIVA, você perdeu 1 nivel.");
            PlayerInfo[meavalie[playerid]][pHelper] = PlayerInfo[meavalie[playerid]][pHelper]-1;
            format(string, sizeof(string), "Você avaliou a ajuda do Helper %s como: {FF0000}negativa.",giveplayer);
		    SendClientMessage(playerid,COR_HELPER,string);
		}
	    return 1;
	}
    if(dialogid == 1)
	{
        if(response == 0)
		{
            SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Você foi Kickado por não logar no Servidor!");
			Kick(playerid);
			return 1;
        }
        if(response >= 1)
		{
            if(strlen(inputtext) == 0)
			{
			    GetPlayerName(playerid,loginname,sizeof(loginname));
                TogglePlayerControllable(playerid, 0);
               	SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
               	SetPlayerCameraPos(playerid,1841.2092,-1458.6342,105.9717);
                SetPlayerCameraLookAt(playerid,1841.2092,-1458.6342,105.9717);
   				//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
   				//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
				//InterpolateCameraLookAt(playerid, 1477.482666, -1070.184326, 217.019683, 1665.385986, -1308.891113, 206.348419, 25000, CAMERA_MOVE);
                format(loginstring,sizeof(loginstring),"\n\n{FFFFFF}********************************************\n\nConta: %s\nStatus: {00FF00}Registrada\n\n********************************************\n\n{FFFFFF}- Digite sua senha abaixo para logar\n* Caso erre sua senha 6 vezes será kikado!\n\n",loginname);
				ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start",loginstring,"Logar","Cancelar");
                return 1;
            }
            if(strval(inputtext) > 0)
			{
                strmid(StrPasswrd[playerid], inputtext, 0, strlen(inputtext), 255);
				//Encrypt(StrPasswrd[playerid]);
				OnPlayerLogin(playerid);
	            return 1;
	        }
			strmid(StrPasswrd[playerid], inputtext, 0, strlen(inputtext), 255);
		    //Encrypt(StrPasswrd[playerid]);
            Hospital[playerid] = 1;
			SpawnPlayer(playerid);
			OnPlayerLogin(playerid);
            return 1;
        }
        return 1;
    }
    if(dialogid == 2)
	{
        if(response == 0)
		{
            SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Você foi Kickado por não Registrar no Servidor!");
			Kick(playerid);
            return 1;
        }
        if(response >= 1)
		{
            format(string, sizeof(string), OpenAccPlayer, PlayerName(playerid));
			new File: hFile = fopen(string, io_read);
			if (hFile)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Este Nick já existe, use outro.");
				fclose(hFile);
                Kick(playerid);
				return 1;
			}
            if(strlen(inputtext) == 0)
			{
				GetPlayerName(playerid,loginname,sizeof(loginname));
                TogglePlayerControllable(playerid, 0);
   			    SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
   			    SetPlayerCameraPos(playerid,1841.2092,-1458.6342,105.9717);
                SetPlayerCameraLookAt(playerid,1841.2092,-1458.6342,105.9717);
   			    //InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
   			    //InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
			    //InterpolateCameraLookAt(playerid, 1477.482666, -1070.184326, 217.019683, 1665.385986, -1308.891113, 206.348419, 25000, CAMERA_MOVE);
                format(loginstring,sizeof(loginstring),"\n\n{FFFFFF}********************************************\n\nConta: %s\nStatus: {FF0000}Não Registrada\n\n********************************************\n\n{FFFFFF}- Digite uma senha abaixo para registrar\n* OBS: Não passe sua senha para ninguem por questão de segurança!\n\n",loginname);
				ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start",loginstring,"Registrar","Cancelar");
                return 1;
            }
            if(strval(inputtext) > 0)
			{
                if(strlen(inputtext) > 16)
				{
                     SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Erro: Sua senha não pode Conter mais de 16 Caracteres!");
                     SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
                     SetPlayerCameraPos(playerid,1841.2092,-1458.6342,105.9717);
                     SetPlayerCameraLookAt(playerid,1841.2092,-1458.6342,105.9717);
   			         //InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
   			         //InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
			         //InterpolateCameraLookAt(playerid, 1477.482666, -1070.184326, 217.019683, 1665.385986, -1308.891113, 206.348419, 25000, CAMERA_MOVE);
                     format(loginstring,sizeof(loginstring),"\n\n{FFFFFF}********************************************\n\nConta: %s\nStatus: {FF0000}Não Registrada\n\n********************************************\n\n{FFFFFF}- Digite uma senha abaixo para registrar\n* OBS: Não passe sua senha para ninguem por questão de segurança!\n\n",loginname);
					 ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start",loginstring,"Registrar","Cancelar");
					 TogglePlayerControllable(playerid, 0);
                     return true;
				}
				strmid(StrPasswrd[playerid], inputtext, 0, strlen(inputtext), 255);
				//Encrypt(StrPasswrd[playerid]);
				OnPlayerRegister(playerid);
   	            return 1;
	        }
            /*getdate(year, month, day);
			format(gstring, sizeof(gstring), "AdmCmd: %s Registrou no Servidor (%d-%d-%d), Senha: %s", PlayerName(playerid),day,month,year,StrPasswrd[playerid]);
			RegistroLog(gstring);
			SoEuVejoMsm(COLOR_YELLOW, gstring);*/
            strmid(StrPasswrd[playerid], inputtext, 0, strlen(inputtext), 255);
			//Encrypt(StrPasswrd[playerid]);
			OnPlayerRegister(playerid);
            return 1;
        }
        return 1;
    }
    if(dialogid == DIALOGID2)
	{
        if(response)
		{
            if(listitem == 0)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
                PlayerInfo[playerid][pLuta] = 1;
            }
            if(listitem == 1)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
                PlayerInfo[playerid][pLuta] = 2;
            }
            if(listitem == 2)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
                PlayerInfo[playerid][pLuta] = 3;
            }
            if(listitem == 3)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
                PlayerInfo[playerid][pLuta] = 4;
            }
            if(listitem == 4)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
                PlayerInfo[playerid][pLuta] = 5;
            }
            if(listitem == 5)
			{
                SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
                PlayerInfo[playerid][pLuta] = 6;
            }
        }
        return 1;
    }
    if(dialogid == 3)
	{
        if(response == 0)
		{
            TheusInfo[playerid][Tels] = 0;
            return 1;
        }
        if(response >= 1)
		{
            if(listitem == 0)
			{
                if (PlayerInfo[playerid][pPhoneBook] == 1)
				{
                    format(gstring,sizeof(gstring),"/ligar %d",TheusInfo[playerid][Tels]);
                    OnPlayerCommandText(playerid,gstring);
                    return 1;
                }
                else
				{
                    SendClientMessage(playerid, COLOR_GREY, "   Você não tem lista telefônica !");
                    return 1;
                }
            }
            if(listitem == 1)
			{
                if (PlayerInfo[playerid][pPhoneBook] == 1)
				{
                    ShowPlayerDialog(playerid, 4, DIALOG_STYLE_INPUT, "Menu SMS", "Digite a Mensagem", "Enviar", "Cancelar");
                    return 1;
                }
                else
				{
                    SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma agenda !");
                    return 1;
                }
            }
            return 1;
        }
        return 1;
    }
    if(dialogid == 4)
	{
        if(response == 0)
		{
            TheusInfo[playerid][Tels] = 0;
            return 1;
        }
        if(response >= 1)
		{
            format(gstring,sizeof(gstring),"/sms %d %s",TheusInfo[playerid][Tels],inputtext);
            OnPlayerCommandText(playerid,gstring);
            return 1;
        }
        return 1;
    }
    if(dialogid == 9)
	{
		if(response == 1)
		{
              PlayerInfo[playerid][pSex] = 1;
              SetPlayerSkin(playerid, 23);
              PlayerInfo[playerid][pSkin] = 23;
			  ShowPlayerDialog(playerid, 799, DIALOG_STYLE_MSGBOX, "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start", "-{FF8000}Certo! Você é um Homem!\n{FFA4FF}Siga o tutorial.", "Tutorial", "");
	          return 0;
	    }
		else if(response == 0)
		{
              PlayerInfo[playerid][pSex] = 2;
              SetPlayerSkin(playerid, 216);
              PlayerInfo[playerid][pSkin] = 216;
			  ShowPlayerDialog(playerid, 799, DIALOG_STYLE_MSGBOX, "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start", "-{FF8000}Certo! Você é uma Mulher!\n{FFA4FF}Siga o tutorial.", "Tutorial", "");
	          return 0;
	    }
        return 0;
	}
    if(dialogid == 799)
	{
		if(response == 1) {
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  TextDrawShowForPlayer(playerid, BoasVindas);
              SetPlayerCameraPos(playerid, 1870.3817, -1682.1737, 79.5768);
			  SetPlayerCameraLookAt(playerid, 1869.6132, -1681.5365, 78.9418);
			  RegistrationStep[playerid] = 0;
			  ClearChatbox(playerid, 20);
			  ShowPlayerDialog(playerid, 900, DIALOG_STYLE_MSGBOX, "{FFA4FF}Bem Vindo", "-{55FFAA}Este servidor é extremamente feito para você!\n\n-Tudo que foi feito aqui até hoje, tem a finalidade de que vocês possam ter uma jogabilidade altamente boa\n\n-Aqui você vai ter uma segunda vida, com amigos, esposas, tráfico, roubo, sequestros, etc...\n\n-Nossa equipe está disposta a te ajudar, vamos fazer o possivel para agradar vocês.", "Avançar", "");
              SendClientMessage(playerid, 0x8080FFAA, "Seja Bem Vindo! Siga o Tutorial para Aprender as nossas Regras Básicas.");
			  return 0;
	    }
		else if(response == 0)
		{
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  TextDrawShowForPlayer(playerid, BoasVindas);
     		  SetPlayerCameraPos(playerid, 1870.3817, -1682.1737, 79.5768);
			  SetPlayerCameraLookAt(playerid, 1869.6132, -1681.5365, 78.9418);
			  RegistrationStep[playerid] = 0;
			  ClearChatbox(playerid, 20);
			  ShowPlayerDialog(playerid, 900, DIALOG_STYLE_MSGBOX, "{FFA4FF}Bem Vindo", "-{55FFAA}Este servidor é extremamente feito para você!\n\n-Tudo que foi feito aqui até hoje, tem a finalidade de que vocês possam ter uma jogabilidade altamente boa\n\n-Aqui você vai ter uma segunda vida, com amigos, esposas, tráfico, roubo, sequestros, etc...\n\n-Nossa equipe está disposta a te ajudar, vamos fazer o possivel para agradar vocês.", "Avançar", "");
              SendClientMessage(playerid, 0x8080FFAA, "Seja Bem Vindo! Siga o Tutorial para Aprender as nossas Regras Básicas.");
			  return 0;
	    }
        return 0;
	}
    if(dialogid == 900)
	{
		if(response == 1) {
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  TextDrawHideForPlayer(playerid, BoasVindas);
			  TextDrawShowForPlayer(playerid, InfoBasicas);
			  ShowPlayerDialog(playerid, 901, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Informações Básicas ::.", "-{98F5FF}Este é um servidor de RPG, Simulação de vida real.\n\n-Nós estamos absolutamente interessados em jogadores que não façam DM e DB.\n\n-Você Não mata ninguem na vida real, nao rouba ninguem na vida real.\n\n-Se você for um civil, jogue como um civil. Se for gangster... Ai Sim, Poderá Matar e Roubar.\n\n-Mais Sem Matar Civis ou Pessoas Que Não Fizeram Nada Com Você.", "Avançar", "");
              PlayerInfo[playerid][pEmprego] = 0;//Desbuga o emprego
			  return 0;
        }
		else if(response == 0)
		{
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  TextDrawHideForPlayer(playerid, BoasVindas);
			  TextDrawShowForPlayer(playerid, InfoBasicas);
			  ShowPlayerDialog(playerid, 901, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Informações Básicas ::.", "-{98F5FF}Este é um servidor de RPG, Simulação de vida real.\n\n-Nós estamos absolutamente interessados em jogadores que não façam DM e DB.\n\n-Você Não mata ninguem na vida real, nao rouba ninguem na vida real.\n\n-Se você for um civil, jogue como um civil. Se for gangster... Ai Sim, Poderá Matar e Roubar.\n\n-Mais Sem Matar Civis ou Pessoas Que Não Fizeram Nada Com Você.", "Avançar", "");
              PlayerInfo[playerid][pEmprego] = 0;//Desbuga o emprego
			  return 0;
        }
        return 0;
	}
  	if(dialogid == 901)
	{
		if(response == 1) {
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  TextDrawHideForPlayer(playerid, InfoBasicas);
			  TextDrawShowForPlayer(playerid, RegBasicas);
			  ShowPlayerDialog(playerid, 902, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Regras Básicas ::.", "-{FFD3A8}Sempre respeite um admin, ele está fazendo o melhor por você.\n\n-Não abuse da boa vontade de nossos admin. Não causar terrorismo, DM, DB. Não chingue, Não abuse de BUG.\n\n-Não peça admin, e nem para que eles aumentem seus cargos.\n\n-E o principal, nunca use xiter para se beneficiar, em caso de uso de xiter será banido imediatamente.", "Avançar", "");
	          return 0;
        }
		else if(response == 0)
		{
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  TextDrawHideForPlayer(playerid, InfoBasicas);
			  TextDrawShowForPlayer(playerid, RegBasicas);
			  ShowPlayerDialog(playerid, 902, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Regras Básicas ::.", "-{FFD3A8}Sempre respeite um admin, ele está fazendo o melhor por você.\n\n-Não abuse da boa vontade de nossos admin. Não causar terrorismo, DM, DB. Não chingue, Não abuse de BUG.\n\n-Não peça admin, e nem para que eles aumentem seus cargos.\n\n-E o principal, nunca use xiter para se beneficiar, em caso de uso de xiter será banido imediatamente.", "Avançar", "");
	          return 0;
        }
        return 0;
	   }
   	if(dialogid == 902)
       {
		if(response == 1) {
			PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
  			TextDrawHideForPlayer(playerid, RegBasicas);
  			TextDrawShowForPlayer(playerid, CmdUteis);
  			ShowPlayerDialog(playerid, 903, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Comando Uteis ::.", "-{55FFAA}/relatorio - Falar com os admin, /duvida - Esclareça uma duvida, /gps - Veja onde ficar os lugares importantes.\n\n-/rg - Ver seus status, /ajuda, /meuskin - Vá até uma binco.\n\n-Digitando /ajuda você todos esses comandos e mais alguns que você utilizará.\n\n-Durante seu jogo, no /ajuda tem vários outros comandos que podem te ajudar.", "Avançar", "");
     		return 0;
  		}
		else if(response == 0)
		{
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  TextDrawHideForPlayer(playerid, RegBasicas);
			  TextDrawShowForPlayer(playerid, CmdUteis);
			  ShowPlayerDialog(playerid, 903, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Comando Uteis ::.", "-{55FFAA}/relatorio - Falar com os admin, /duvida - Esclareça uma duvida, /gps - Veja onde ficar os lugares importantes.\n\n-/rg - Ver seus status, /ajuda, /meuskin - Vá até uma binco.\n\n-Digitando /ajuda você todos esses comandos e mais alguns que você utilizará.\n\n-Durante seu jogo, no /ajuda tem vários outros comandos que podem te ajudar.", "Avançar", "");
	          return 0;
        }
        return 0;
	    }
	if(dialogid == 903)
	    {
		if(response == 1) {
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  TextDrawHideForPlayer(playerid, CmdUteis);
			  TextDrawShowForPlayer(playerid, LocaisUteis);
			  ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Lugares Importantes ::.", "-{98F5FF}Nosso proximo tópico, mostrará alguns lugares importantes.\n\n-Onde você passará perto o jogo inteiro, e partes fundamentais do servidor.\n\n-Como: Prefeitura, DP, Banco, Binco e Morro.\n\n\n-----:> Brasil PlayStart Agradece Sua Visita <:----.", "Avançar", "");
	          return 0;
        }
		else if(response == 0)
		{
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  TextDrawHideForPlayer(playerid, CmdUteis);
			  TextDrawShowForPlayer(playerid, LocaisUteis);
			  ShowPlayerDialog(playerid, 904, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Lugares Importantes ::.", "-{98F5FF}Nosso proximo tópico, mostrará alguns lugares importantes.\n\n-Onde você passará perto o jogo inteiro, e partes fundamentais do servidor.\n\n-Como: Prefeitura, DP, Banco, Binco e Morro.\n\n\n-----:> Brasil PlayStart Agradece Sua Visita <:----.", "Avançar", "");
	          return 0;
        }
        return 0;
	    }
    if(dialogid == 904)
	    {
		if(response == 1) {
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  ShowPlayerDialog(playerid, 905, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Prefeitura ::.", "-{FFD3A8}Neste local, você poderá pegar empregos e comprar carteiras de motorista.\n\n-Aqui também será onde o nosso Prefeito ficará quando eleito!\n\n-Lá dentro tem 2 icones -| Um R$ e uma Maleta |-\n\n-R$ = /licencas |  Maleta = /empregos", "Avançar", "");
              SetPlayerPos(playerid,1538.3636,-1785.8292,13.5468);
			  SetPlayerCameraPos(playerid,1483.8164,-1727.4125,13.3828);
		      SetPlayerCameraLookAt(playerid,1481.0267,-1772.1371,19.4570);
			  SetPlayerInterior(playerid, 0);
			  return 0;
        }
		else if(response == 0)
		{
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  ShowPlayerDialog(playerid, 905, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Prefeitura ::.", "-{FFD3A8}Neste local, você poderá pegar empregos e comprar carteiras de motorista.\n\n-Aqui também será onde o nosso Prefeito ficará quando eleito!\n\n-Lá dentro tem 2 icones -| Um R$ e uma Maleta |-\n\n-R$ = /licencas |  Maleta = /empregos", "Avançar", "");
     		  SetPlayerPos(playerid,1538.3636,-1785.8292,13.5468);
			  SetPlayerCameraPos(playerid,1483.8164,-1727.4125,13.3828);
		      SetPlayerCameraLookAt(playerid,1481.0267,-1772.1371,19.4570);
			  SetPlayerInterior(playerid, 0);
			  return 0;
        }
        return 0;
	    }
    if(dialogid == 905)
	    {
		if(response == 1) {
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  ShowPlayerDialog(playerid, 906, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Departamento de Policia ::.", "-{55FFAA}Neste local, ficarão os policiais de plantão e trabalhando.\n\n-Se não souber como chamar um admin é só vir até aqui que eles vão te ajudar\n\n-Dentro dela tem portões onde apenas policias poderão abrir\n\n-Busque por ajuda, ou denuncie crimes aqui!", "Avançar", "");
              SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
	    	  SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
			  SetPlayerPos(playerid,1547.1060,-1693.2738,13.9214);
			  return 0;
        }
		else if(response == 0)
		{
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  ShowPlayerDialog(playerid, 906, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Departamento de Policia ::.", "-{55FFAA}Neste local, ficarão os policiais de plantão e trabalhando.\n\n-Se não souber como chamar um admin é só vir até aqui que eles vão te ajudar\n\n-Dentro dela tem portões onde apenas policias poderão abrir\n\n-Busque por ajuda, ou denuncie crimes aqui!", "Avançar", "");
              SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
	    	  SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
			  SetPlayerPos(playerid,1547.1060,-1693.2738,13.9214);
			  return 0;
        }
        return 0;
	    }
    if(dialogid == 906)
	    {
		if(response == 1) {
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  ShowPlayerDialog(playerid, 907, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Banco ::.", "-{98F5FF}Neste local, você pode transitar sua grana, aumentar, sacar, depositar(também há caixas eletrônicos com essas funções).\n\n-Como na vida real, banco aqui é feito para pagamentos, juros, saques, salários, etc...\n\n-Dica: Mantenha o máximo de grana em sua conta, pois a cada pagamento(PayDay) os juros vão ser maiores.", "Avançar", "");
			  SetPlayerCameraPos(playerid,1463.9277,-1043.5249,31.3181);
		      SetPlayerCameraLookAt(playerid,1461.7306,-1014.2181,26.6566);
			  SetPlayerPos(playerid,1424.6486,-1020.7975,23.8281);
			  SetPlayerInterior(playerid, 0);
			  return 0;
        }
		else if(response == 0)
		{
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  ShowPlayerDialog(playerid, 907, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Banco ::.", "-{98F5FF}Neste local, você pode transitar sua grana, aumentar, sacar, depositar(também há caixas eletrônicos com essas funções).\n\n-Como na vida real, banco aqui é feito para pagamentos, juros, saques, salários, etc...\n\n-Dica: Mantenha o máximo de grana em sua conta, pois a cada pagamento(PayDay) os juros vão ser maiores.", "Avançar", "");
			  SetPlayerCameraPos(playerid,1463.9277,-1043.5249,31.3181);
		      SetPlayerCameraLookAt(playerid,1461.7306,-1014.2181,26.6566);
			  SetPlayerPos(playerid,1424.6486,-1020.7975,23.8281);
			  SetPlayerInterior(playerid, 0);
			  return 0;
        }
        return 0;
	    }
    if(dialogid == 907)
	    {
		if(response == 1) {
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  ShowPlayerDialog(playerid, 908, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Binco ::.", "-{FFD3A8}Neste local, você poderá mudar sua roupa (skin) para um que você goste.\n\n-Cada roupa (skin) que você escolher, será cobrado R$500\n\n-É só você entrar e digitar /meuskin [ID da SKIN] que irá mudar!", "Avançar", "");
		      SetPlayerPos(playerid, 2243.7371,-1668.1760,15.4766);
		      SetPlayerCameraPos(playerid, 2264.1365,-1653.5085,19.6254);
		      SetPlayerCameraLookAt(playerid, 2243.7371,-1668.1760,15.4766);
			  SetPlayerInterior(playerid, 0);
			  return 0;
        }
		else if(response == 0)
		{
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  ShowPlayerDialog(playerid, 908, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Binco ::.", "-{FFD3A8}Neste local, você poderá mudar sua roupa (skin) para um que você goste.\n\n-Cada roupa (skin) que você escolher, será cobrado R$500\n\n-É só você entrar e digitar /meuskin [ID da SKIN] que irá mudar!", "Avançar", "");
		      SetPlayerPos(playerid, 2243.7371,-1668.1760,15.4766);
		      SetPlayerCameraPos(playerid, 2264.1365,-1653.5085,19.6254);
		      SetPlayerCameraLookAt(playerid, 2243.7371,-1668.1760,15.4766);
			  SetPlayerInterior(playerid, 0);
			  return 0;
        }
        return 0;
	    }
    if(dialogid == 908)
	    {
		if(response == 1) {
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  ShowPlayerDialog(playerid, 909, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Morro ::.", "-{55FFAA}Neste local, é onde vão ocorrer muitas guerras entre gangs.\n\n-Pois querem dominar o morro ou por território de trafico!\n\n-Muitas vezes é invadido pela R.O.T.A/Polícia Mílitar\n\n-Não fique de bobeira no morro, pode ser vitima de bala perdida!", "Avançar", "");
			  SetPlayerPos(playerid, 2144.1062,-970.9034,80.0703);
			  SetPlayerCameraPos(playerid,2212.5364,-989.5125,83.3038);
		      SetPlayerCameraLookAt(playerid,2151.6057,-1014.4344,67.1739);
		      SetPlayerInterior(playerid, 0);
			  return 0;
			}
		else if(response == 0)
		{
              PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			  ShowPlayerDialog(playerid, 909, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Morro ::.", "-{55FFAA}Neste local, é onde vão ocorrer muitas guerras entre gangs.\n\n-Pois querem dominar o morro ou por território de trafico!\n\n-Muitas vezes é invadido pela R.O.T.A/Policia Rodoviaria/Polícia Mílitar\n\n-Não fique de bobeira no morro, pode ser vitima de bala perdida!", "Avançar", "");
			  SetPlayerPos(playerid, 2144.1062,-970.9034,80.0703);
			  SetPlayerCameraPos(playerid,2212.5364,-989.5125,83.3038);
		      SetPlayerCameraLookAt(playerid,2151.6057,-1014.4344,67.1739);
		      SetPlayerInterior(playerid, 0);
			  return 0;
			}
		return 0;
	    }
    if(dialogid == 909)
			  {
		if(response == 1) {
            PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			TextDrawHideForPlayer(playerid, LocaisUteis);
  		    TextDrawShowForPlayer(playerid, BoasVindas);
  			ShowPlayerDialog(playerid, 910, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Seja bem vindo ::.", "-{98F5FF}Seja bem vindo ao nosso servidor Brasil PlayStart de RPG.\n\n-Sua presença aqui é muito importante para nós!\n\n-Vocês são o futuro do nosso servidor.", "Concluir", "");
            SendClientMessage(playerid, 0xFF80FFAA, "Obrigado por fazer parte da Nossa Familia.");
            SetPlayerPos(playerid,2405.0625,-1376.5313,24.3273);
			SetPlayerCameraPos(playerid, 1870.3817, -1682.1737, 79.5768);
	  		SetPlayerCameraLookAt(playerid, 1869.6132, -1681.5365, 78.9418);
			SetPlayerInterior(playerid, 0);
		    return 0;
        }
		else if(response == 0)
		{
            PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			TextDrawHideForPlayer(playerid, LocaisUteis);
  		    TextDrawShowForPlayer(playerid, BoasVindas);
  			ShowPlayerDialog(playerid, 910, DIALOG_STYLE_MSGBOX, "{FFA4FF}.:: Seja bem vindo ::.", "-{98F5FF}Seja bem vindo ao nosso servidor Brasil PlayStart de RPG.\n\n-Sua presença aqui é muito importante para nós!\n\n-Vocês são o futuro do nosso servidor.", "Concluir", "");
            SendClientMessage(playerid, 0xFF80FFAA, "Obrigado por fazer parte da Nossa Familia.");
            SetPlayerPos(playerid,2405.0625,-1376.5313,24.3273);
			SetPlayerCameraPos(playerid, 1870.3817, -1682.1737, 79.5768);
	  		SetPlayerCameraLookAt(playerid, 1869.6132, -1681.5365, 78.9418);
			SetPlayerInterior(playerid, 0);
		    return 0;
        }
        return 0;
  	  }
    if(dialogid == 910)
  	  {
		if(response == 1) {
            PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
			SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
			TextDrawHideForPlayer(playerid, BoasVindas);
			TextDrawHideForPlayer(playerid, BoxTuto1);
			TextDrawHideForPlayer(playerid, BoxTuto2);
        	SendClientMessage(playerid, 0x1E90FFAA, "~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~");
			SendClientMessage(playerid, 0xFFD3A8FF, " Seja Bem Vindo ao nosso servidor {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start");
			SendClientMessage(playerid, 0xFFD3A8FF, " Caso precise de ajuda digite /duvida [Texto] ou /relatorio [Texto]");
			SendClientMessage(playerid, 0xFFD3A8FF, " Visite nosso forum (/forum)");
        	SendClientMessage(playerid, 0x1E90FFAA, "~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~");
        	PlayerPlaySound(playerid, 1057, 0,0,0);
			PlayerInfo[playerid][pTut] = 1;
			SetPlayerInterior(playerid,0);
			TogglePlayerControllable(playerid, 1);
			SetPlayerVirtualWorld(playerid,0);
            Hospital[playerid] = 1;
			SetPlayerSpawn(playerid);
			SetCameraBehindPlayer(playerid);
			GranaTheus(playerid, 50000);
			SendClientMessage(playerid, 0xC78FFFAA, "Você ganhou 50000 e level 3 por logar em nosso servidor, Bom Jogo!");
			SetPlayerInterior(playerid, 0);
			//gNews[playerid] = 0;
			gFam[playerid] = 0;
		    return 0;
        }
		else if(response == 0)
		{
            PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
			SetPlayerCameraPos(playerid,1519.4929,-1675.6611,21.0900);
			//SetPlayerCameraLookAt(playerid,1557.2080,-1675.8904,16.1953);
			TextDrawHideForPlayer(playerid, BoasVindas);
			TextDrawHideForPlayer(playerid, BoxTuto1);
			TextDrawHideForPlayer(playerid, BoxTuto2);
        	SendClientMessage(playerid, 0x1E90FFAA, "~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~");
			SendClientMessage(playerid, CORS, " Seja Bem Vindo ao nosso servidor {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start");
			SendClientMessage(playerid, CORS, " Caso precise de ajuda digite /duvida [Texto] ou /relatorio [Texto]");
			SendClientMessage(playerid, CORS, " Visite nosso forum (/forum)");
        	SendClientMessage(playerid, 0x1E90FFAA, "~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~.~~");
        	PlayerPlaySound(playerid, 1057, 0,0,0);
			PlayerInfo[playerid][pTut] = 1;
			SetPlayerInterior(playerid,0);
			TogglePlayerControllable(playerid, 1);
			SetPlayerVirtualWorld(playerid,0);
   Hospital[playerid] = 1;
			SetPlayerSpawn(playerid);
			SetCameraBehindPlayer(playerid);
			GranaTheus(playerid, 50000);
			SendClientMessage(playerid, 0xC78FFFAA, "Você ganhou 50000 e level 3 por logar em nosso servidor, Bom Jogo!");
			SetPlayerInterior(playerid, 0);
			//gNews[playerid] = 0;
			gFam[playerid] = 0;
		    return 0;
        }
        return 0;
	}
    if(dialogid == 10)
	{
	  	if(response)
		{
			if(listitem == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Player ______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
				SendClientMessage(playerid, COLOR_GRAD1,"BPF > /logar /rg /regras /forum /relatorio /duvida /comprarnivel /organizacoes(/orgs)");
				SendClientMessage(playerid, COLOR_GRAD2,"BPF > /meuskin /pagar /horas /gps /mostrarlicencas /loteria /setint /empregos /orelhao");
				SendClientMessage(playerid, COLOR_GRAD2,"BPF > /trancar /mudarlocal /minhaslicencas /comprararma /beber /caridade /desligarorelhao");
				SendClientMessage(playerid, COLOR_GRAD2,"BPF > /abastecer /contrato /aceitar /cancelar /ejetar /servico /localizar /alugarcarro");
	  			SendClientMessage(playerid, COLOR_GRAD3,"BPF > (/g)ritar (/s)usurro (/an)uncio /eu /alugarheli /alugarquarto /desalugar");
				SendClientMessage(playerid, COLOR_GRAD4,"BPF > /saldo /sacar /depositar /transferir ");
				SendClientMessage(playerid, COLOR_GREEN,"______________________________________");
			}
			if(listitem == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Empresa ______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
				SendClientMessage(playerid, COLOR_GRAD3,"BPF > /ajudaempresa (/entradaemp)resa (/nomeemp)resa /extorcao /infoempresa");
				SendClientMessage(playerid, COLOR_GRAD4,"BPF > /entrar /sair /chave /venderemp (/depositaremp)resa /sacarempresa");
				SendClientMessage(playerid, COLOR_GREEN,"______________________________________________");
			}
			if(listitem == 2)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Casa ______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
				SendClientMessage(playerid, COLOR_GRAD3,"BPF > /entrar /sair /chave /vida /moveis(/mv) /mapacasa(Mostra No Mapa)");
				SendClientMessage(playerid, COLOR_GRAD3,"BPF > /comprarcarro /pintarcarro /despejartodos /mudarcasa(1 a 10)");
				SendClientMessage(playerid, COLOR_GRAD3,"BPF > /aluguel /despejar /cofrecasa /trancar(carro da casa) /alugada");
			}
			if(listitem == 3)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Aluguel ______________|");
				SendClientMessage(playerid, COLOR_GRAD3,"Aluguel > /desalugar /entrar /sair /trancar /mapacasa");
		    }
			if(listitem == 4)
			{
				if (PlayerInfo[playerid][pPnumber] > 0)
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Celular ______________|");
					SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
					SendClientMessage(playerid, COLOR_GRAD3,"BPF > /ligar /sms (/at)ender (/des)ligar /agenda /desativar celular");
					SendClientMessage(playerid, COLOR_WHITE,"BPF > Não se esqueça de comprar créditos na 24-7!");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"Você não tem um telefone, compre um na 24-7, USE: /gps");
				}
			}
			if(listitem == 5)
			{
			    if (PlayerInfo[playerid][pLider] >= 1)
			    {
					SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Lider ______________|");
					SendClientMessage(playerid, COLOR_WHITE,"Digite o comando desejado para mais informações!");
					SendClientMessage(playerid, COLOR_GRAD3,"BPF > /convidar /demitir /limparvaga /promover /contaslider(Pedir Contas)");
					if(PlayerInfo[playerid][pLider] == 7)
					{
						SendClientMessage(playerid, COLOR_GRAD3,"Prefeito > (/pre)feito /setartaxa /dartaxa (Dá algum dinheiro para os Policiais)");
					}
					SendClientMessage(playerid, COLOR_DBLUE,"____________________________________________");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Líder!");
				}
			}
			if(listitem == 6)
			{
	   			SendClientMessage(playerid,COLOR_WHITE, "|______________ Ajuda Emprego ______________|");
      			if(PlayerInfo[playerid][pEmprego] == 1)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"BPF > Detetive < /procurar");
				}
		    	if(PlayerInfo[playerid][pEmprego] == 2)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"BPF > Advogado < /soltar /pp(Portão Presos - DP) /autorizacao(Icone Na DP)");
				}
		    	if(PlayerInfo[playerid][pEmprego] == 3)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"BPF > Prof. do Sexo < /transar");
		    	}
		    	else if(PlayerInfo[playerid][pEmprego] == 4)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"BPF > Vendedor de Drogas < /sistemadedrogas");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 5)
				{
		    			SendClientMessage(playerid,COLOR_LIGHTBLUE,"BPF > Mecânicos <  /guinchar /reparar /abastecercarro /batercartao");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 6)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"BPF > Segurança < /proteger");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 7)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"BPF > Vendedor de Armas < /materiais(Casarão e Estação) /venderarma");
				}
		    	else if(PlayerInfo[playerid][pEmprego] == 8)
				{
		    		SendClientMessage(playerid,COLOR_GREEN,"BPF > Lutador de Boxe < /lutar /statusluta");
		    	}
		    	else if(PlayerInfo[playerid][pEmprego] == 9)
				{
		    		SendClientMessage(playerid,COLOR_YELLOW,"BPF > Motorista de Ônibus < /corrida Entrar e Sair do Trabalho! /cancelar onibus(Cancelar a Corrida) /terminais");
				}
				else if(PlayerInfo[playerid][pEmprego] == 10)
				{
					SendClientMessage(playerid,COLOR_YELLOW,"BPF > Mendigo < /esmola /pbarraca(por barraca) /rbarraca(retirar barraca)");
				}
				else if(PlayerInfo[playerid][pEmprego] == 11)
				{
					SendClientMessage(playerid,COLOR_YELLOW,"BPF > Caminhoneiro < /mercadorials /mercadoriasf /mercadorialv");
				}
				if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /procurados /algemar /imo /reforco");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /arrombar (/do)minar /desalgemar /arrombar /bafometro /multar /infoorg /rondar");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Portões  > /pe - P Estacionamento | /pg - P Garagem | /pr - P Recepção | /pp - P Presos | /pv - P Vestiário");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
				}
				if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Governo: /equipargov (/r)adio - (/d)epartamento - (/m)egafone - /algemar - /imo - /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Governo: /revistar - /retirar - /pp - /pgov - Portão dos Carros - /ppre - Porta Prefeitura");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Prefeito: (/pre)feito /dartaxa(Para os Policias) /setartaxa(Taxa Por Pessoa)");
				}
				if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Taxistas: /corrida Entrar e Sair do Trabalho! /cancelar onibus(Cancelar a Corrida) /antaxi");
				}
				if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /detento /batercartao /procurados /algemar /imo /reforco /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /camera /arrombar (/do)minar /desalgemar /arrombar /bafometro /multar");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Portões  > /pf - Portao Federal | /pb2 - Garagem1 | /pb - Garagem2");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
				}
				if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /detento /batercartao /procurados /algemar /imo /reforco /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /camera /arrombar (/do)minar /desalgemar /arrombar /bafometro /multar");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Portões  > /pf - Portao Federal | /pb2 - Garagem1 | /pb - Garagem2");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
				}
				if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /detento /batercartao /procurados /algemar /imo /reforco /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /camera /arrombar (/do)minar /desalgemar /arrombar /bafometro /multar");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Portões  > /pf - Portao Federal | /pb2 - Garagem1 | /pb - Garagem2");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
				}
				if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Exército > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Exército > /revistar /retirar (/gov)erno /camera /arrombar /algemar /imo /br /rb /multar /procurados");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Exército > /abrirgn - Portão Principal /equipar /algemar /desalgemar /reforco /bafometro");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Exército > /guerra /pontos(ver pontuação da guerra) /tirarbombas - Bloqueia os Homens Bombas");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
 		   		}
 		   		if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Americano > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Americano > /revistar /retirar (/gov)erno /camera /arrombar /algemar /imo /br /rb /multar /procurados");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Americano > /abrirgn - Portão Principal /equipar /algemar /desalgemar /reforco /bafometro");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Americano > /guerra /pontos(ver pontuação da guerra) /tirarbombas - Bloqueia os Homens Bombas");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Americano > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
 		   		}
				if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Médicos > | (/r)adio | (/d)epartamento | /vida | /batercartao | /infoorg | (/gov)erno");
				}
				if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Groove Street >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Terroristas <  /equipar /homembomba /carrobomba /tal");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Terroristas <  (/ga)ngue /guerra /pontos(ver pontuação da guerra) /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Terroristas <  /sequestrar e /desamarrar - Fazer um sequestro");
				}
				if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Terroristas <  /equipar /homembomba /carrobomba /farc");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Terroristas <  (/ga)ngue /guerra /pontos(ver pontuação da guerra) /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Terroristas <  /sequestrar e /desamarrar - Fazer um sequestro");
				}
				if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Terroristas <  /equipar /homembomba /carrobomba /alq");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Terroristas <  (/ga)ngue /guerra /pontos(ver pontuação da guerra) /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Terroristas <  /sequestrar e /desamarrar - Fazer um sequestro");
				}
				if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > (/r)adio (/d)epartmento (/m)egafone (/su)speito /ficha /prender /batercartao /procurados /algemar /imo /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Comandos > /revistar /retirar /prender (/gov)erno /deliver /camera /arrombar /desalgemar /bafometro /reforco /multar /rondar");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Portões  > /ppr(Portão PR) | DP > /pv - Vestiário(DP) | /pr | /pp - Portao DP");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Apreender Veículo > /apreendercarro (/pcarro) - Apreende um Veículo, Somente Particular(Concessionária).");
				}
				if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Máfias <  /(ga)ngue /mafia /mafiavarma /mafiavkit /amarrar /desamarrarm /infoorg /anmafia");
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "BPF > Máfias <  Para pegar ou esconder materiais va a HQ ou um territorio");
				}
				if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Loz Aztecas > | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Hitmans > /laptop - Computador Hitman | /arrombar(Porta das Casas) | /anas - Anúncio Hitmans");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comandos > /ga - Chat Hitmans | /infoorg");
				}
                if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Triads > /laptop - Computador | /arrombar(Porta das Casas) | /anas - Anúncio Triads");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comandos > /ga - Chat Triads | /infoorg");
				}
				if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
           		{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Ballas >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Los Vagos > | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Repórter >  | /noticias | /aovivo | (/preporter & /preporter2 = Portões) |");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comandos >  | (/ga)ngue) | /live | /noticias [texto] | /infoorg");
				}
				if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Policia Federal > (/m)egafone /equipar /batercartao /procurados /presos /reforco /multar /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comandos > (/su)spect /limpar /revistar /r(adio) /d(epartamento) /do(minar) /arrombar /bafometro");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Portões  >  /ppf - Portão HQ | Portôes DP LS(/pr /pp /pv /pe /pg)");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
				}
				if (PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Policia Federal > (/m)egafone /equipar /batercartao /procurados /presos /reforco /multar /infoorg");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comandos > (/su)spect /limpar /revistar /r(adio) /d(epartamento) /do(minar) /arrombar /bafometro");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Portões  >  /ppf - Portão HQ | Portôes DP LS(/pr /pp /pv /pe /pg)");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Barreira > /br - Criar Barreira | /rbr - Retirar Barreira | /rbrall - Retirar Todas As Barreiras");
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Bloqueio > /bq - Criar Bloqueio | /rbq - Retirar Bloqueio | /rbqall - Retirar Todas Os Bloqueios");
				}
				if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comando Vermelho >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
                if (PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"OwnZ >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Amigo dos Amigos >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"yStiflerS >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
                if (PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Familia Motoqueiros >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"PCC >  | (/ga)ng | /sequestrar & /desamarrar | /do(minar) | /assaltar | /infoorg | /roubar | (/ang)ang");
				}
				if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Hells Agenls >  | (/ga)ng | /sequestrar & /desamarrar | /assaltar | /infoorg | /roubar | (/anhells)");
				}
				if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Mongols M.C. >  | (/ga)ng | /sequestrar & /desamarrar | /assaltar | /infoorg | /roubar | (/anmon)");
				}
				if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Sons Of Anarchy >  | (/ga)ng | /sequestrar & /desamarrar | /assaltar | /infoorg | /roubar | (/ansons)");
				}
                if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Triads >  | (/ga)ng | /roubar | /laptop | /infoorg | /membros | (/anas)");
				}
                if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Drifters >  | (/ga)ng | /tunar | /sequestrar & /desamarrar | /assaltar | /infoorg | /roubar | (/andrifters) | /do");
                    SendClientMessage(playerid, COLOR_LIGHTBLUE,"Drifters >  Locais de Domínio: Pista de Skate | Posto de Gasolina | Cemitério | Shopping Center");
				}
			}
			if(listitem == 7)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Pesca ______________|");
				SendClientMessage(playerid, COLOR_GRAD3,"Pescaria > /pescar (Tente pegar um peixe)   /peixes (Mostrar os peixes que você pegou)");
				SendClientMessage(playerid, COLOR_GRAD3,"Pescaria > /soltarultimo(Jogue o último peixe Você pegou de volta) /soltartodos(jogue todos seus peixes de volta)");
				SendClientMessage(playerid, COLOR_GRAD3,"Pescaria > /soltarpeixe (Liberação de uma de suas barbatanas) /vender(+ de 20 LBs | 24-7) /comer(Casas de Comida)");
			}
			if(listitem == 8)
			{
	        	SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda IRC ______________|");
				SendClientMessage(playerid, COLOR_WHITE,"Chat IRC > (/irc entrar [nº canal] ou /irc entrar [nº canal] [Senha])  (/irc sair)");
				SendClientMessage(playerid, COLOR_WHITE,"Chat IRC > (/irc senha [nº canal])  (/irc needpass [nº canal])  (/irc trancar [nº canal])");
				SendClientMessage(playerid, COLOR_WHITE,"Chat IRC > (/irc Admins)  (/irc MOTD [motdtext])  (/irc status [nº canal])  (/i [texto])");
			}
			if(listitem == 9)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Cozinha ______________|");
				SendClientMessage(playerid, COLOR_GRAD3,"Cozinha > /cozinhar (Mostra as opcoes disponiveis) /cozido (Mostra o que ja foi cozinhado)");
				SendClientMessage(playerid, COLOR_GRAD3,"Cozinha > /comer (Come o que ja foi cozinhado)");
			}
			if(listitem == 10)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Casamento ______________|");
				SendClientMessage(playerid, COLOR_LIGHTRED,"/padrinho (cada 1 tem que ter 1 padrinho!)");
				SendClientMessage(playerid, COLOR_LIGHTRED,"/casar (quem pedir tem que ter 1 casa!)");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"Não sabe o local? digite /gps - Igreja");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR,"Separação(Digite: /separacao)");
			}
			if(listitem == 11)
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Forum do Server ______________|");
		   		SendClientMessage(playerid, COLOR_YELLOW,"www.brasilplayStart1.forumeiros.com/");
		   		SendClientMessage(playerid, COLOR_YELLOW,"Se cadastre e veja as contas VIP's.");
			}
			if(listitem == 12)
			{
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Créditos ______________|");
                SendClientMessage(playerid, COLOR_YELLOW, "GameMode GodFather, criado por: Denver.");
                SendClientMessage(playerid, COLOR_YELLOW, "Editado por: Theus_Crazzy para o servidor BPF.");
		        SendClientMessage(playerid, COLOR_YELLOW, "Mapas feito com ajuda de Thales_BPF e wet_dias.");
			}
			if(listitem == 13)
			{
				if (PlayerInfo[playerid][pVIP] >= 1)
				{
		    		SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda VIPs e Premiuns ______________|");
					SendClientMessage(playerid, 0xCDB38BAA, "-> /kitvip /mala /desativar celular /v(chat) /relatorio(cor destacada)");
					SendClientMessage(playerid, COLOR_GRAD1, "-> Carros VIPS: /veiculo ajuda");
					SendClientMessage(playerid, COLOR_GRAD1, "-> Casas VIPS: /ajudacasa");
					SendClientMessage(playerid, COLOR_GRAD1, "-> Acessórios VIPS: /menuacessorios");
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "Você não é um jogador VIP/VIP Premium");
				}
			}
			if(listitem == 14)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|______________ Seja VIP ______________|");
		   		SendClientMessage(playerid, COLOR_YELLOW,"/forum - Para virar VIP acesse nosso forum");
		   		SendClientMessage(playerid, COLOR_YELLOW,"Temos VIP's de R$8,00 até R$20,00!");
			    SendClientMessage(playerid, COLOR_YELLOW,"Veja com um ADM online!");
		   		SendClientMessage(playerid, COLOR_LIGHTRED,"Acesse www.brasilplayStart1.forumeiros.com/");
			}
		}
		return 1;
	}
    if(dialogid == 101)
	{
		if(response == 0)
	 	{
	  		format(string,sizeof(string),"Confirma");
	    	OnPlayerText(playerid,string);
	    	return 1;
	    }
	    if(response >= 1)
	    {
	    	format(string,sizeof(string),"Proximo");
	    	OnPlayerText(playerid,string);
	    	ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"Convite da Organização","{00FFFF}Você foi convidado para uma Organização\n{FF8000}Escolha o seu skin preferido\n{0080FF}Se você gostar desse Aperte em '{00FFFF}Pronto{0080FF}'\n{0080FF}Se não gostar use '{00FFFF}Próximo{0080FF}'","Próximo","Pronto");
	    	return 1;
	    }
	    return 1;
	}
    if(dialogid == 468)
	{
		if(response == 0)
	 	{
	  		format(string,sizeof(string),"Nao");
	    	OnPlayerText(playerid,string);
	    	return 1;
	    }
	    if(response >= 1)
	    {
	    	format(string,sizeof(string),"Sim");
	    	OnPlayerText(playerid,string);
	    	return 1;
	    }
	    return 1;
	}
	if(dialogid == 642)
	{
		if(response == 0)
		{
            OnPlayerCommandText(playerid,"/cancelar convite");
		}
		if(response == 1)
		{
			OnPlayerCommandText(playerid,"/aceitar convite");
		}
		return true;
	}
    if(dialogid == 4569)
	{
		if(response == 0)
		{
            ConviteFamy[playerid] = 0;
		}
		if(response == 1)
		{
            PlayerInfo[playerid][pFamyMember] = ConviteFamy[playerid];
            MudarNickAceito[playerid] = 1;
            format(strtheus,sizeof(strtheus),"{33FF99}Você aceitou o convite para a Família!\nAgora digite seu nick abaixo.\n{FFA8FF}O Nick deverá conter o nome de sua Família.\n{33FF99}Ex:{80FFFF} Nome_%s",NomeFamy(playerid));
			ShowPlayerDialog(playerid, 1234, DIALOG_STYLE_INPUT,"Convite Família",strtheus,"Confirmar","Cancelar");
        }
		return true;
	}
    if(dialogid == 1234)
	{
		if(response == 0)
        {
            if(strfind(PlayerName(playerid), "OwnZ", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else if(strfind(PlayerName(playerid), "StrondaH", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else if(strfind(PlayerName(playerid), "DestroyeR", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else if(strfind(PlayerName(playerid), "Insane", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else if(strfind(PlayerName(playerid), "Dorgados", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else if(strfind(PlayerName(playerid), "Start", true) != -1)
            {
                MudarNickAceito[playerid] = 0;
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Cancelou a Mudança de Nick, Para família, Portanto Continuará na Família com Nick Atual.");
            }
            else
            {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Não pode Cancelar a Mudança de Nick Pois Seu nick Não contêm o Nome de Sua Família!");
                SendClientMessage(playerid, 0x00FFFFFF, "Você Não pode Cancelar a Mudança de Nick Pois Seu nick Não contêm o Nome de Sua Família!");
                format(gstring,sizeof(gstring),"{33FF99}Você aceitou o convite para a Família!\nAgora digite seu nick abaixo.\n{FFA8FF}O Nick deverá conter o nome de sua Família.\n{33FF99}Ex:{80FFFF} Nome_%s",NomeFamy(playerid));
			    ShowPlayerDialog(playerid, 1234, DIALOG_STYLE_INPUT,"Convite Família",gstring,"Confirmar","Cancelar");
            }
        }
		if(response == 1)
		{
            format(gstring,sizeof(gstring),"/mudarnick %s",inputtext);
            OnPlayerCommandText(playerid,gstring);
        }
		return true;
	}
    if(dialogid == 643)
	{
		if(response == 0)
		{
            OnPlayerCommandText(playerid,"/sair");
		}
		if(response == 1)
		{
			OnPlayerCommandText(playerid,"/alugarcarro");
		}
		return true;
	}
	if(dialogid == 644)
	{
		if(response == 0)
		{
            OnPlayerCommandText(playerid,"/sair");
		}
		if(response == 1)
		{
			OnPlayerCommandText(playerid,"/alugarheli");
		}
		return true;
	}
    if(dialogid == 1643)
	{
		if(response == 0)
		{
            format(strtheus, sizeof(strtheus), "Driver-By: Vítima {80E3FF}%s {E84F33}NÃO Confirmou a Tentativa de DB, Acusado não será Kickado!",victmname);
            SendClientMessageToAll(COLOR_LIGHTRED,strtheus);
		}
		if(response == 1)
		{
            format(strtheus, sizeof(strtheus), "Driver-By: Vítima {80E3FF}%s {E84F33}CONFIRMOU a Tentativa de DB, Acusado Foi Kickado!",victmname);
            SendClientMessageToAll(COLOR_LIGHTRED,strtheus);
            format(gstring, sizeof(gstring), "Você Foi Acusado de Cometer DB em: %s, e Foi Kickado", victmname);
			SendClientMessage(GetPlayerDB[playerid], COLOR_LIGHTBLUE, gstring);
            Kick(GetPlayerDB[playerid]);
		}
		return true;
	}
    if(dialogid == 1879)
	{
		if(response == 0)
		{
            format(string, sizeof(string), "* Você não Aceitou o Convite para ser solto por %s, Preço: R$ %d.", PlayerName(ConviteAdv[playerid]),AdvogPreco[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s Não aceitou seu Convite para ser Solto por: R$ %d.", PlayerName(playerid),AdvogPreco[playerid]);
						SendClientMessage(ConviteAdv[playerid], COLOR_LIGHTBLUE, string);
                        AdvogPreco[playerid] = 0;
                        ConviteAdv[playerid] = 999;
        }
		if(response == 1)
		{
            if(GetGranaTheus(playerid) < AdvogPreco[playerid])
			{

				SendClientMessage(playerid,COLOR_GREY,"Você não tem este Dinheiro para Ser Solto, Cancelado!");
                AdvogPreco[playerid] = 0;
                ConviteAdv[playerid] = 999;
	   			return 1;
			}
			if(PlayerInfo[playerid][pJailTime] > 60)
                        {
                            new TempoCadeia = PlayerInfo[playerid][pJailTime]/60;
                            format(string, sizeof(string), "[PlayStart News] Advogado %s Tirou %s Da Prisão, Tempo: %d Minutos", PlayerName(ConviteAdv[playerid]), PlayerName(playerid), TempoCadeia);
    						OOCNews(COLOR_LIGHTRED, string);
                        }
                        else
                        {
                            format(string, sizeof(string), "[PlayStart News] Advogado %s Tirou %s Da Prisão, Tempo: %d Segundos", PlayerName(ConviteAdv[playerid]), PlayerName(playerid), PlayerInfo[playerid][pJailTime]);
		 				   OOCNews(COLOR_LIGHTRED, string);
                        }
						ApprovedAdvogado[ConviteAdv[playerid]] = 0;
						JailPrice[playerid] = 0;
						PlayerInfo[playerid][pJailTime] = 1;
						PlayerInfo[ConviteAdv[playerid]][pLawSkill] ++;
                        if(PlayerInfo[ConviteAdv[playerid]][pLawSkill] == 50)
						{ SendClientMessage(ConviteAdv[playerid], COLOR_YELLOW, "* Seu nível de advogado agora é 2, Você ganhará mais dinheiro e vai soltar mais rápido os presos."); }
						else if(PlayerInfo[ConviteAdv[playerid]][pLawSkill] == 100)
						{ SendClientMessage(ConviteAdv[playerid], COLOR_YELLOW, "* Seu nível de advogado agora é 3, Você ganhará mais dinheiro e vai soltar mais rápido os presos."); }
						else if(PlayerInfo[ConviteAdv[playerid]][pLawSkill] == 200)
						{ SendClientMessage(ConviteAdv[playerid], COLOR_YELLOW, "* Seu nível de advogado agora é 4, Você ganhará mais dinheiro e vai soltar mais rápido os presos."); }
						else if(PlayerInfo[ConviteAdv[playerid]][pLawSkill] == 400)
						{ SendClientMessage(ConviteAdv[playerid], COLOR_YELLOW, "* Seu nível de advogado agora é 5, Você ganhará mais dinheiro e vai soltar mais rápido os presos."); }
                        GranaTheus(playerid, -AdvogPreco[playerid]);
                        GranaTheus(ConviteAdv[playerid], AdvogPreco[playerid]);
                        format(string, sizeof(string), "* Você foi libertado da cadeia pelo Advogado: %s, Preço: R$ %d.", PlayerName(ConviteAdv[playerid]),AdvogPreco[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s Aceitou seu Convite e Foi solto por: R$ %d.", PlayerName(playerid),AdvogPreco[playerid]);
						SendClientMessage(ConviteAdv[playerid], COLOR_LIGHTBLUE, string);
                        AdvogPreco[playerid] = 0;
                        ConviteAdv[playerid] = 999;
		}
		return true;
	}
    if(dialogid == 2245)
	{
		if(response == 0)   //n acc
		{
            format(string, sizeof(string), "* Você Recusou Receber uma: %s, de: %s.", NomeArma[playerid],PlayerName(IDpassouArma[playerid]));
			SendClientMessage(playerid, 0xFF7979FF, string);
            format(string, sizeof(string), "* %s Recusou receber uma %s de Você.", PlayerName(playerid),NomeArma[playerid]);
			SendClientMessage(IDpassouArma[playerid], 0xFF7979FF, string);
            PassArmaID[playerid] = 0;
            QuantMun[playerid] = 0;
            IDpassouArma[playerid] = 9999;
        }
		if(response == 1)  // acc
		{
			new ArmaTeste[32];
			GetWeaponName(PassArmaID[playerid],ArmaTeste,sizeof(ArmaTeste));
            strmid(NomeArma[playerid], ArmaTeste, 0, strlen(ArmaTeste), 255);
            format(string, sizeof(string), "* Você Aceitou Receber uma: %s, com %d Munições, de: %s.", NomeArma[playerid],QuantMun[playerid],PlayerName(IDpassouArma[playerid]));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s Aceitou receber uma %s de Você.", PlayerName(playerid),NomeArma[playerid]);
			SendClientMessage(IDpassouArma[playerid], COLOR_LIGHTBLUE, string);
            format(string, sizeof(string), "* %s Esta Passando uma %s para %s.",PlayerName(IDpassouArma[playerid]),NomeArma[playerid],PlayerName(playerid));
  			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerWeapon(playerid, PassArmaID[playerid], QuantMun[playerid]);
            RemovePlayerWeapon(IDpassouArma[playerid], PassArmaID[playerid]);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            PassArmaID[playerid] = 0;
            QuantMun[playerid] = 0;
            IDpassouArma[playerid] = 9999;
		}
		return true;
	}
	if(dialogid == dhitman) //dialog hitmans
    {
        if(response == 0)
	    {
	    return 1;
      	    }
            if(listitem == 0)
            {
                SetPlayerSkin(playerid, 23);
                SetPlayerColor(playerid, 0xFFFFFFAA);
                return 1;
            }
            else if(listitem == 1)
            {
                SetPlayerSkin(playerid, 285);
                SetPlayerColor(playerid, COR_ROTA);
                return 1;
            }
            else if(listitem == 2)
            {
                SetPlayerSkin(playerid, 120);
                SetPlayerColor(playerid, COR_YAK);
                return 1;
            }
            else if(listitem == 3)
            {
                SetPlayerSkin(playerid, 113);
                SetPlayerColor(playerid, COR_COSA);
                return 1;
            }
            else if(listitem == 4)
            {
                SetPlayerSkin(playerid, 270);
                SetPlayerColor(playerid, COR_GRO);
                return 1;
            }
            else if(listitem == 5)
            {
                SetPlayerSkin(playerid, 104);
                SetPlayerColor(playerid, COR_BALLAS);
                return 1;
            }
            else if(listitem == 6)
            {
                SetPlayerSkin(playerid, 295);
                SetPlayerColor(playerid, COR_PF);
                return 1;
            }
            else if(listitem == 7)
            {
                SetPlayerSkin(playerid, 283);
                SetPlayerColor(playerid, COR_PM);
                return 1;
            }
            else if(listitem == 8)
            {
                SetPlayerSkin(playerid, 287);
                SetPlayerColor(playerid, COR_EXE);
                return 1;
            }
            else if(listitem == 9)
            {
                SetPlayerSkin(playerid, 123);
                SetPlayerColor(playerid, COR_AL);
                return 1;
            }
            else if(listitem == 10)
            {
                SetPlayerSkin(playerid, 249);
                SetPlayerColor(playerid, COR_TAL);
            }
            else if(listitem == 11)
            {
                SetPlayerSkin(playerid, 247);
                SetPlayerColor(playerid, COR_HELLS);
                return 1;
            }
            else if(listitem == 12)
            {
                SetPlayerSkin(playerid, 108);
                SetPlayerColor(playerid, COR_VAGOS);
                return 1;
            }
            else if(listitem == 13)
            {
                SetPlayerSkin(playerid, 19);
                SetPlayerColor(playerid, COR_CVM);
                return 1;
            }
            else if(listitem == 14)
            {
                SetPlayerSkin(playerid, 115);
                SetPlayerColor(playerid, COR_AZTECAS);
                return 1;
            }
            else if(listitem == 15)
            {
                SetPlayerSkin(playerid, 3);
                SetPlayerColor(playerid, COR_FARC);
                return 1;
            }
            else if(listitem == 16)
            {
                SetPlayerSkin(playerid, 287);
                SetPlayerColor(playerid, COR_AMERICANOS);
                return 1;
            }
        return 1;
    }
    if(dialogid == 156)
    {
		if(response == 1)
		{
	    }
		else if(response == 0)
		{
        }
        return 0;
  	}
    if(dialogid == 26547)
	{
		if(response)
		{
            new carid = GetPlayerVehicleID(playerid);
            if(listitem == 0) //reparar
			{
                RepairVehicle(carid);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
			}
			if(listitem == 1) //automatico
			{
                TunarCarro(carid);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
			}
			if(listitem == 2) //personalisar
			{
                ShowMenuForPlayer(Principal, playerid);
            	TogglePlayerControllable(playerid, false);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
            }
			if(listitem == 3) //neon
			{
                ShowPlayerDialog(playerid, 8899, DIALOG_STYLE_LIST, "Escolha de Neons", "Azul\nVermelho\nVerde\nBranco\nRosa\nAmarelo\nRemover todos os Neons", "Selecionar", "Cancelar");
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
			}
			if(listitem == 4) //nitro
			{
                AddVehicleComponentEx(carid,1010);
                PlayerPlaySound(playerid, 1133, 0.0, 0.0, 10.0);
			}
        }
	}
	   if(dialogid == 8899){if(response){if(listitem == 0){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
            //blue
            SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon", CreateDynamicObject(18648,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon1", CreateDynamicObject(18648,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "neon"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "neon1"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, COLOR_DBLUE, "Neon Azul Instalado no seu Carro.");}
            if(listitem == 1){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
			//red
			SetPVarInt(playerid, "Status", 1);
			SetPVarInt(playerid, "neon2", CreateDynamicObject(18647,0,0,0,0,0,0));
			SetPVarInt(playerid, "neon3", CreateDynamicObject(18647,0,0,0,0,0,0));
			AttachObjectToVehicle(GetPVarInt(playerid, "neon2"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			AttachObjectToVehicle(GetPVarInt(playerid, "neon3"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Neon Vermelho Instalado no seu Carro.");}
            if(listitem == 2){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
			//green
			SetPVarInt(playerid, "Status", 1);
   			SetPVarInt(playerid, "neon4", CreateDynamicObject(18649,0,0,0,0,0,0));
   			SetPVarInt(playerid, "neon5", CreateDynamicObject(18649,0,0,0,0,0,0));
			AttachObjectToVehicle(GetPVarInt(playerid, "neon4"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
   			AttachObjectToVehicle(GetPVarInt(playerid, "neon5"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, TEAM_GROVE_COLOR, "Neon Verde Instalado no seu Carro.");}
   			if(listitem == 3){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
			//COLOR_WHITE
   			SetPVarInt(playerid, "Status", 1);
   			SetPVarInt(playerid, "neon6", CreateDynamicObject(18652,0,0,0,0,0,0));
   			SetPVarInt(playerid, "neon7", CreateDynamicObject(18652,0,0,0,0,0,0));
   			AttachObjectToVehicle(GetPVarInt(playerid, "neon6"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
   			AttachObjectToVehicle(GetPVarInt(playerid, "neon7"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
   			SendClientMessage(playerid, COLOR_WHITE, "Neon Branco Instalado no seu Carro.");}
			if(listitem == 4){
			DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
            //pink
            SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon8", CreateDynamicObject(18651,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon9", CreateDynamicObject(18651,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "neon8"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "neon9"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, COLOR_GRAD3, "Neon Rosa Instalado no seu Carro.");}
			if(listitem == 5){
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
			//yellow
            SetPVarInt(playerid, "Status", 1);
            SetPVarInt(playerid, "neon10", CreateDynamicObject(18650,0,0,0,0,0,0));
            SetPVarInt(playerid, "neon11", CreateDynamicObject(18650,0,0,0,0,0,0));
            AttachObjectToVehicle(GetPVarInt(playerid, "neon10"), GetPlayerVehicleID(playerid), -0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            AttachObjectToVehicle(GetPVarInt(playerid, "neon11"), GetPlayerVehicleID(playerid), 0.8, 0.0, -0.70, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, TEAM_VAGOS_COLOR, "Neon Amarelo Instalado no seu Carro.");}
            if(listitem == 6){//remove neon
            DestroyDynamicObject(GetPVarInt(playerid, "neon"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon2"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon3"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon4"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon5"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon6"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon7"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon8"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon9"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon10"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon11"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon12"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "neon13"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "interior1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "back1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "front1"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover"));
            DeletePVar(playerid, "Status");
            DestroyDynamicObject(GetPVarInt(playerid, "undercover1"));
            DeletePVar(playerid, "Status");
            new idcarro=GetPlayerVehicleID(playerid);
            if(VeiculoNeon[idcarro] != 0) DestroyDynamicObject(VeiculoNeon[idcarro]);
   	        }}return 0;}
	if(dialogid == 5)
	{
		if(response == 0)
	    {
	    	TheusInfo[playerid][PpLoja2472] = 0;
	        return 1;
      	}
	    if(response >= 1)
	    {
	    	if(listitem == 0)
		    {
      			OnPlayerCommandText(playerid,"/comprar 1");
      			TheusInfo[playerid][PpLoja2472] = 0;
     			return 1;
		    }
		    if(listitem == 1)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 2");
			    TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 2)
		    {
			   	OnPlayerCommandText(playerid,"/comprar 3");
			   	TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 3)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 4");
		    	TheusInfo[playerid][PpLoja2472] = 0;
       			return 1;
		    }
		    if(listitem == 4)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 5");
	    		TheusInfo[playerid][PpLoja2472] = 0;
      			return 1;
		    }
		    if(listitem == 5)
		    {
			    OnPlayerCommandText(playerid,"/comprar 6");
			    TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 6)
		    {
			    OnPlayerCommandText(playerid,"/comprar 7");
			    TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 7)
		    {
			    OnPlayerCommandText(playerid,"/comprar 8");
			    TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 8)
		    {
			    OnPlayerCommandText(playerid,"/comprar 9");
		    	TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 9)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 10");
	    		TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 10)
		    {
	    		OnPlayerCommandText(playerid,"/comprar 11");
	    		TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 11)
		    {
			    OnPlayerCommandText(playerid,"/comprar 12");
			    TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 12)
		    {
			    OnPlayerCommandText(playerid,"/comprar 13");
			    TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    if(listitem == 13)
		    {
			    OnPlayerCommandText(playerid,"/comprar 14");
			    TheusInfo[playerid][PpLoja2472] = 0;
			    return 1;
		    }
		    TheusInfo[playerid][PpLoja2472] = 0;
      		return 1;
      	}
	}
	if(dialogid == 6)
	{
		if(response == 0)
		{
    	    TheusInfo[playerid][PLojaA1] = 0;
		    TheusInfo[playerid][PLojaA2] = 0;
		    return 1;
		}
		if(response == 1)
		{
			if(listitem == 0)
		    {
   				ShowPlayerDialog(playerid, 8, DIALOG_STYLE_LIST, "Escolha seu KitVip", "Kit Vip Bronze\nKit Vip Prata\nKit Vip Ouro", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 1)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "eagle", 0, strlen("eagle"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 2)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "mp5", 0, strlen("mp5"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 3)
		    {
		    	strmid(TheusInfo[playerid][ArmaLoja], "shotgun", 0, strlen("shotgun"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 4)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "ak47", 0, strlen("ak47"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 5)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "m4", 0, strlen("m4"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 6)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "rifle", 0, strlen("rifle"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 7)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "parachute", 0, strlen("parachute"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 8)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "golfclub", 0, strlen("golfclub"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 9)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "nightstick", 0, strlen("nightstick"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 10)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "baseballbat", 0, strlen("baseballbat"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 11)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "shovel", 0, strlen("shovel"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 12)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "poolcue", 0, strlen("poolcue"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 13)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "purpledildo", 0, strlen("purpledildo"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 14)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "whitedildo", 0, strlen("whitedildo"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 15)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "longwhitedildo", 0, strlen("longwhitedildo"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 16)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "whitedildo2", 0, strlen("whitedildo2"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 17)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "flowers", 0, strlen("flowers"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    if(listitem == 18)
		    {
		        strmid(TheusInfo[playerid][ArmaLoja], "cane", 0, strlen("cane"), 255);
		        ShowPlayerDialog(playerid, 7, DIALOG_STYLE_INPUT, "Escolha a quantidade de Munição", "Digite a quantidade de Munição que você deseja!", "Confirmar", "Cancelar");
		        return 1;
		    }
		    TheusInfo[playerid][PLojaA1] = 0;
		    TheusInfo[playerid][PLojaA2] = 0;
		    return 1;
		}
        return 1;
    }
    if(dialogid == 7)
    {
        if(response == 0)
        {
            TheusInfo[playerid][PLojaA1] = 0;
		    TheusInfo[playerid][PLojaA2] = 0;
		    TheusInfo[playerid][ArmaLoja] = 0;
            return 1;
        }
        if(response == 1)
        {
            format(gstring,sizeof(gstring),"/comprararma %s %d",TheusInfo[playerid][ArmaLoja],strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
            TheusInfo[playerid][PLojaA1] = 0;
		    TheusInfo[playerid][PLojaA2] = 0;
		    TheusInfo[playerid][ArmaLoja] = 0;
            return 1;
        }
        TheusInfo[playerid][PLojaA1] = 0;
    	TheusInfo[playerid][PLojaA2] = 0;
    	TheusInfo[playerid][ArmaLoja] = 0;
        return 1;
    }
    if(dialogid == 8)
    {
        if(response == 0)
        {
            TheusInfo[playerid][PLojaA1] = 0;
		    TheusInfo[playerid][PLojaA2] = 0;
            return 1;
        }
        if(response == 1)
        {
            if(listitem == 0)
		    {
            	OnPlayerCommandText(playerid,"/kitvip 1");
            	TheusInfo[playerid][PLojaA1] = 0;
		    	TheusInfo[playerid][PLojaA2] = 0;
		    	TheusInfo[playerid][ArmaLoja] = 0;
            	return 1;
			}
			if(listitem == 1)
		    {
            	OnPlayerCommandText(playerid,"/kitvip 2");
            	TheusInfo[playerid][PLojaA1] = 0;
		    	TheusInfo[playerid][PLojaA2] = 0;
		    	TheusInfo[playerid][ArmaLoja] = 0;
            	return 1;
			}
   			if(listitem == 2)
		    {
            	OnPlayerCommandText(playerid,"/kitvip 3");
            	TheusInfo[playerid][PLojaA1] = 0;
		    	TheusInfo[playerid][PLojaA2] = 0;
		    	TheusInfo[playerid][ArmaLoja] = 0;
            	return 1;
			}
			return 1;
        }
        TheusInfo[playerid][PLojaA1] = 0;
    	TheusInfo[playerid][PLojaA2] = 0;
    	TheusInfo[playerid][ArmaLoja] = 0;
        return 1;
    }
//INICIO SISTEMA DE BANCO
    if(dialogid == 1122) //deposito
    {
        if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
        else if(strval(inputtext) > GetGranaTheus(playerid)) return SendClientMessage(playerid,COLOR_GREY,"Você não possui esta quantia!");
        else if(!IsNumero(inputtext))
        {
        	format(gstring,sizeof(gstring),"Seu Saldo atual é: R$[%d]\nDigite a quantidade que deseja depositar abaixo .",PlayerInfo[playerid][pConta]);
       		ShowPlayerDialog(playerid,1122,DIALOG_STYLE_INPUT,"Depositar",gstring,"Depositar","Sair");
        	SendClientMessage(playerid,COLOR_GREY,"Digite apenas números !");
        }
		else
		{
            format(gstring,sizeof(gstring),"/depositar %d",strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
		}
		return 1;
    }
	if(dialogid == 1123) //saque
	{
     	if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
     	else if(strval(inputtext) > PlayerInfo[playerid][pConta]) return SendClientMessage(playerid,COLOR_GREY,"Você não tem isso tudo na sua conta !");
        else if(!IsNumero(inputtext))
        {
        	format(gstring,sizeof(gstring),"Seu Saldo atual é: [%d]\nColoque a quantidade que deseja sacar agora.",PlayerInfo[playerid][pConta]);
        	ShowPlayerDialog(playerid,1123,DIALOG_STYLE_INPUT,"Sacar",gstring,"Sacar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Digite apenas números!");
        }
		else
		{
            format(gstring,sizeof(gstring),"/sacar %d",strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
		}
		return 1;
	}
	if(dialogid == 1124)
	{
		ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
    	return 1;
 	}
    if(dialogid == 1130) //transferir - playerid
	{
     	if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
     	else if(strval(inputtext) == INVALID_PLAYER_ID) return SendClientMessage(playerid,COLOR_GREY,"O jogador não está online !");
        else if(!IsNumero(inputtext))
        {
	    	format(gstring,sizeof(gstring),"Seu saldo atual é: R$[%d]\nColoque o ID do jogador para transferir :",PlayerInfo[playerid][pConta]);
	    	ShowPlayerDialog(playerid,1130,DIALOG_STYLE_INPUT,"Transferir",gstring,"Proximo","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Use o ID,não o nome - Se não sabe o id use /id [nome/parte do nome]");
        }
		else
		{
			chosenpid = strval(inputtext);
			format(gstring,sizeof(gstring),"Saldo: R$[%d]\nAgora coloque a quantidade que deseja transferir !",PlayerInfo[playerid][pConta]);
			ShowPlayerDialog(playerid,1131,DIALOG_STYLE_INPUT,"Transferir",gstring,"Transferir","Voltar");
		}
		return 1;
	}
	if(dialogid == 1131) //transferir - quantidade
	{
     	if(!response) return ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
     	else if(strval(inputtext) > PlayerInfo[playerid][pConta]) return SendClientMessage(playerid,COLOR_GREY,"Você não tem esta quantia para transferir !");
        else if(strval(inputtext) > 100000000) return SendClientMessage(playerid,COLOR_GREY,"Você não pode transferir mais que R$100000000 de uma vez!");
		else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,1131,DIALOG_STYLE_INPUT,"Transferir","Agora coloque a quantidade que deseja transferir","Transferir","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Por favor,use números !");
        }
		else
		{
            format(gstring,sizeof(gstring),"/transferir %d %d",chosenpid, strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
		}
		return 1;
	}
	if(dialogid == 1125 && response) // /Banco
	{
	    if(response == 0) { return 1; }
	 	switch(listitem)
	   	{
	       	case 0:
	        {
	            format(gstring,sizeof(gstring),"Seu Saldo atual é : R$%d\nColoque a quantidade para depositar .",PlayerInfo[playerid][pConta]);
	           	ShowPlayerDialog(playerid,1122,DIALOG_STYLE_INPUT,"Depositar",gstring,"Depositar","Voltar");
			}
 			case 1:
	        {
	            format(gstring,sizeof(gstring),"Seu Saldo atual é: R$%d\nColoque a quantidade para sacar .",PlayerInfo[playerid][pConta]);
	            ShowPlayerDialog(playerid,1123,DIALOG_STYLE_INPUT,"Sacar",gstring,"Sacar","Voltar");
 			}
 			case 2:
	        {
				format(gstring,sizeof(gstring),"Seu saldo atual é R$%d",PlayerInfo[playerid][pConta]);
				ShowPlayerDialog(playerid,1124,DIALOG_STYLE_MSGBOX,"Saldo",gstring,"Ok","Voltar");
 			}
 			case 3:
	        {
	            format(gstring,sizeof(gstring),"Seu Saldo atual é: R$%d\nColoque o ID do Jogador para transferir .",PlayerInfo[playerid][pConta]);
	            ShowPlayerDialog(playerid,1130,DIALOG_STYLE_INPUT,"Transferir",gstring,"Proximo","Voltar");
 			}
 		}
 	}
 	if(dialogid == 2568)
	{
	    TogglePlayerControllable(playerid, 1);
	    if(!response) { return 1; }
		switch(listitem)
        {
            case 0:
			{
			    ShowPlayerDialog(playerid,2587,DIALOG_STYLE_LIST,"GPS Locais em Geral","Prefeitura\nDepartamento de Policia\n24-7(Mercado)\nLoja de Armas 1\nLoja de Armas 2\nBinco(Loja de Roupas)\nAluguel de Carros\nCentro de Licencas\nHospital\nPosto Sul\nBanco\nLoterica\nConcessionária","Selecionar","Voltar");
			}
			case 1:
			{
			    ShowPlayerDialog(playerid,2588,DIALOG_STYLE_LIST,"GPS Head Quarters","Polícia Mílitar\nR.O.T.A\nExército\nMédicos\nLos Aztecas\nTaliban\nPrefeitura\nHitmans\nReporteres\nTaxistas\nPolicia Federal\nMafia Cosa Nostra\nMafia Yakuza\nGroove Street\nAl'Qaeda\nPolicia Rodoviaria\nBallas\nLos Vagos\nComando Vermelho\nPCC\nHells Angels\nMongols\nSons Of Anarchy\nPolicia Florestal\nAmigo dos Amigos\nB.O.P.E","Selecionar","Voltar");
			}
			case 2:
			{
			    ShowPlayerDialog(playerid,2570,DIALOG_STYLE_LIST,"GPS Territorios","Morro(Gang)\nPista de Skate(Gang)\nEstacao Unity(Mafia)\nCasarao(Mafia)\nPantano(Terrorista)\nPedreira(Terrorista)","Selecionar","Voltar");
			}
			case 3:
			{
			    DisablePlayerCheckpoint(playerid);
			}
		}
	}
//FIM SISTEMA DE BANCO
	if(dialogid == 2587)
	{
		TogglePlayerControllable(playerid, 1);
		EmDialog[playerid] = 0;
		if(response == 0) { return ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar"); }
		switch(listitem)
        {
            case 0:
			{
            	SetPlayerCheckpoint(playerid, 1481.1926,-1764.2736,18.7958,8.0);//prefeitura
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, 1546.2761,-1675.5995,13.5620,8.0);//DP
            }
            case 2:
			{
 				SetPlayerCheckpoint(playerid, 1350.4865,-1753.2505,13.3582,8.0);//24-7
            }
            case 3:
			{
				SetPlayerCheckpoint(playerid, 1790.5725,-1167.3705,23.8281,8.0);//Loja de armas
            }
            case 4:
			{
				SetPlayerCheckpoint(playerid, 1068.7330,-1875.4727,13.5469,8.0);//Loja de armas 2
            }
            case 5:
			{
            	SetPlayerCheckpoint(playerid, 2244.7954,-1663.5021,15.4766,8.0);//Binco
            }
            case 6:
			{
				SetPlayerCheckpoint(playerid, 550.7012,-1278.5721,17.2482,8.0);//Aluguel de Carros
            }
            case 7:
			{
 				SetPlayerCheckpoint(playerid, 1411.5593,-1699.5270,13.5395,8.0);//Centro de Licencas
            }
            case 8:
			{
				SetPlayerCheckpoint(playerid, 1175.3164,-1323.7809,14.3906,8.0);//Hospital
            }
            case 9:
			{
				SetPlayerCheckpoint(playerid, 1928.826904,-1776.405517,13.546895,8.0);//Posto Sul
            }
            case 10:
			{
				SetPlayerCheckpoint(playerid, 1462.395751,-1012.391174,26.843799,8.0);//Banco
            }
            case 11:
			{
				SetPlayerCheckpoint(playerid, 1631.8547,-1172.5637,24.0843,8.0);//Loterica
            }
            case 12:
			{
				SetPlayerCheckpoint(playerid, 2780.4939,-1812.2635,11.8438,8.0);//Conce
            }
        }
	}
	if(dialogid == 2588)
	{
		TogglePlayerControllable(playerid, 1);
		EmDialog[playerid] = 0;
		if(response == 0) { return ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar"); }
        switch(listitem)
        {
            case 0:
			{
            	SetPlayerCheckpoint(playerid, 1554.2512,-1675.5313,16.1953,10.0);//pm
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, 328.7618,-1511.8379,36.0391,10.0);//R.O.T.A
            }
            case 2:
			{
 				SetPlayerCheckpoint(playerid, -1531.4238,481.8620,7.1875,10.0);//exercito
            }
            case 3:
			{
				SetPlayerCheckpoint(playerid, 1176.7383,-1323.5166,14.0361,10.0);//medicos
            }
            case 4:
			{
				SetPlayerCheckpoint(playerid, 1673.9886,-2122.1403,14.6014,10.0);//aztecas
            }
            case 5:
			{
            	SetPlayerCheckpoint(playerid, 2721.3413,-2405.5291,13.4609,10.0);//taliban
            }
            case 6:
			{
				SetPlayerCheckpoint(playerid, 1480.9232,-1772.3057,18.7958,10.0);//prefeitura
            }
            case 7:
			{
 				SetPlayerCheckpoint(playerid, 1099.7896,-307.3787,73.9922,10.0);//hitmans
            }
            case 8:
			{
				SetPlayerCheckpoint(playerid, 777.1924,-1331.4585,13.5471,10.0);//reporteres
            }
            case 9:
			{
				SetPlayerCheckpoint(playerid, 959.2765,-1416.2083,13.5469,10.0);//taxistas
            }
            case 10:
			{
				SetPlayerCheckpoint(playerid, 914.2606,-1003.7186,37.9976,10.0);//PF
            }
            case 11:
			{
				SetPlayerCheckpoint(playerid, 1495.9410,-699.4916,94.7500,10.0);//cosa nostra
            }
            case 12:
			{
				SetPlayerCheckpoint(playerid, 664.3810,-1309.7341,13.4609,10.0);//yakuza
            }
            case 13:
			{
				SetPlayerCheckpoint(playerid, 2495.1697,-1690.5923,14.7656,10.0);//groove
            }
            case 14:
			{
				SetPlayerCheckpoint(playerid, 414.1553,2527.6807,16.5741,10.0);//al'qaeda
            }
            case 15:
			{
				SetPlayerCheckpoint(playerid, 925.5594,-1222.8481,16.9782,10.0);//PC
            }
            case 16:
			{
				SetPlayerCheckpoint(playerid, 1119.2783,-1159.2039,23.5971,10.0);//Ballas
            }
            case 17:
			{
				SetPlayerCheckpoint(playerid, 2828.2498,-1184.3743,24.9464,10.0);//vagos
            }
            case 18:
			{
				SetPlayerCheckpoint(playerid, 2185.1260,-1765.0551,13.3761,10.0);//cv
            }
            case 19:
			{
				SetPlayerCheckpoint(playerid, 1338.2207,-916.5588,35.9187,10.0);//pcc
            }
            case 20:
			{
				SetPlayerCheckpoint(playerid, 681.344543,-478.446380,16.335937,10.0);//hells Angels
            }
            case 21:
			{
				SetPlayerCheckpoint(playerid, 21.241252,-2646.615966,40.464191,10.0);//Mongols
            }
            case 22:
			{
				SetPlayerCheckpoint(playerid, -1569.083984,-2744.807128,48.533473,10.0);//Sons
            }
            case 23:
			{
				SetPlayerCheckpoint(playerid, -1205.5875,-984.1795,128.5046,10.0);//HQ Policia Florestal
            }
            case 24:
			{
				SetPlayerCheckpoint(playerid, 1620.7249,-1322.6946,17.4688,10.0);//HQ Amigo dos Amigos
            }
            case 25:
			{
				SetPlayerCheckpoint(playerid, 1274.0706,-1843.8118,13.3944,10.0);//HQ B.O.P.E
            }
        }
	}
	if(dialogid == 2569)
	{
	    TogglePlayerControllable(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return 1; }
		switch(listitem)
        {
            case 0:
			{
		    	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","* Você está prestes a se tornar um Detetive, terá que cumprir 5 horas de contrato.\nPara se tornar Detetive, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 1;
		    	TogglePlayerControllable(playerid, 1);
            }
            case 1:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","* Você está prestes a se tornar um Advogado, terá que cumprir 5 horas de contrato.\nPara se tornar um Advogado, clique em aceitar.","Aceitar","Cancelar");
   				GettingEmprego[playerid] = 2;
   				TogglePlayerControllable(playerid, 1);
            }
            case 2:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","* Você está prestes a se tornar uma Profissional do sexo, terá que cumprir 5 horas de contrato.\nPara se tornar uma Profissional do sexo, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 3;
				TogglePlayerControllable(playerid, 1);
            }
            case 3:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","* Você está prestes a se tornar um Vendedor De Drogas, terá que cumprir 5 horas de contrato.\nPara aceitar o emprego, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 4;
				TogglePlayerControllable(playerid, 1);
            }
            case 4:
			{
  				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","*Você está prestes a se tornar um Mecânico, terá que cumprir 5 horas de contrato.\nPara se tornar um Mecânico, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 5;
		    	TogglePlayerControllable(playerid, 1);
            }
            case 5:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","* Você está prestes a se tornar um Segurança, terá que cumprir 5 horas de contrato.\nPara se tornar um Segurança, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 6;
				TogglePlayerControllable(playerid, 1);
            }
            case 6:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","* Você está prestes a se tornar um Vendedor De Armas, terá que cumprir 5 horas de contrato.\nPara se tornar um Vendedor De Armas, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 7;
				TogglePlayerControllable(playerid, 1);
            }
            case 7:
			{
   				ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","* Você está prestes a se tornar um Boxeador, terá que cumprir 5 horas de contrato.\nPara se tornar um Boxeador, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 8;
				TogglePlayerControllable(playerid, 1);
            }
            case 8:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","* Você está prestes a se tornar um Motorista de Onibus, terá que cumprir 5 horas de contrato.\nPara se tornar um Motorista de Onibus, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 9;
				TogglePlayerControllable(playerid, 1);
            }
            case 9:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","* Você está prestes a se tornar um Mendigo, terá que cumprir 5 horas de contrato.\nPara se tornar um Mendigo, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 10;
		    	TogglePlayerControllable(playerid, 1);
            }
            case 10:
			{
            	ShowPlayerDialog(playerid,2586,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start","* Você está prestes a se tornar um Caminhoneiro, terá que cumprir 5 horas de contrato.\nPara se tornar um Caminhoneiro, clique em aceitar.","Aceitar","Cancelar");
		    	GettingEmprego[playerid] = 11;
		    	TogglePlayerControllable(playerid, 1);
            }
	     }
	}
   	if(dialogid == 2586)
	{
	    if(!response)
		{
			GettingEmprego[playerid] = 0;
			return SendClientMessage(playerid, COLOR_GREY, "Você cancelou o emprego.");
		}
		else
		{
			PlayerInfo[playerid][pEmprego] = GettingEmprego[playerid];
			if(PlayerInfo[playerid][pEmprego] == 1) { PlayerInfo[playerid][pDetSkill] = 400; }
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Parabens com seu novo emprego, digite /ajuda para ver seus novos comandos!");
		}
	}
	if(dialogid == 2570)
	{
	    TogglePlayerControllable(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","Locais em Geral\nHead Quarters\nTerritorios\nDesligar GPS","Aceitar","Cancelar"); }
		switch(listitem)
        {
        	case 0:
			{
            	SetPlayerCheckpoint(playerid, 2155.7847,-1010.8846,62.9648,8.0);//Morro
            }
            case 1:
			{
				SetPlayerCheckpoint(playerid, 1919.1139,-1411.3921,13.5703,8.0);//Pista de Skate
            }
            case 2:
			{
				SetPlayerCheckpoint(playerid, 1741.1454,-1945.1676,13.5640,8.0);//Estacao Unity
            }
            case 3:
			{
            	SetPlayerCheckpoint(playerid, 1242.5569,-2036.5902,60.0824,8.0);//Casarao
            }
            case 4:
			{
            	SetPlayerCheckpoint(playerid, 632.8773,-1833.1636,25.0540,8.0);//Pantano
            }
            case 5:
			{
            	SetPlayerCheckpoint(playerid, 828.2853,1143.3212,28.4200,8.0);//Pedreira
            }
        }
	}
	if(dialogid == 2571)
	{
	    TogglePlayerControllable(playerid, 1);
	    EmDialog[playerid] = 0;
	    if(response == 0) { return 1; }
        switch(listitem)
        {
            case 0:
			{
                //Motorista
                if(GetGranaTheus(playerid) < 2000) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$2000 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GranaTheus(playerid,-2000);
                BizzInfo[5][bTill] += 2000;
			    ExtortionBiz(5, 2000);
                PlayerInfo[playerid][pCarLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licença De Motorista!");
            }
            case 1:
			{
                //Voo
                if(GetGranaTheus(playerid) < 2500) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$2500 para comprar");
                TogglePlayerControllable(playerid, 1);
                GranaTheus(playerid,-2500);
                BizzInfo[5][bTill] += 2500;
			    ExtortionBiz(5, 2500);
                PlayerInfo[playerid][pFlyLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licença De Voo!");
            }
            case 2:
			{
                //Navegacao
                if(GetGranaTheus(playerid) < 2000) return SendClientMessage(playerid,COLOR_GREY,"Você não R$2000 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GranaTheus(playerid,-2000);
                BizzInfo[5][bTill] += 2000;
			    ExtortionBiz(5, 2000);
                PlayerInfo[playerid][pBoatLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licença De Navegação!");
            }
            case 3:
			{
                //Pesca
                if(GetGranaTheus(playerid) < 1000) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$1000 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GranaTheus(playerid,-1000);
                BizzInfo[5][bTill] += 1000;
			    ExtortionBiz(5, 1000);
                PlayerInfo[playerid][pFishLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licença De Pesca!");
            }
            case 4:
			{
                //Armas
                if(GetGranaTheus(playerid) < 2500) return SendClientMessage(playerid,COLOR_GREY,"Você não tem R$2500 para comprar!");
                TogglePlayerControllable(playerid, 1);
                GranaTheus(playerid,-2500);
                BizzInfo[5][bTill] += 2500;
			    ExtortionBiz(5, 2500);
                PlayerInfo[playerid][pGunLic] = 1;
                SendClientMessage(playerid, COLOR_LIGHTBLUE,"Comprou a Licença De Armas!");
            }
        }
	}
	if(dialogid == 2572)
	{
	    TogglePlayerControllable(playerid, 1);
	    if(!response) { return 1; }
	    switch(listitem)
    	{
	       	case 0:
		    {
	            ShowPlayerDialog(playerid,2573,DIALOG_STYLE_INPUT,"Pegar Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
 			}
 			case 1:
	        {
		    	ShowPlayerDialog(playerid,2574,DIALOG_STYLE_INPUT,"Pegar Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
 			}
 			case 2:
    		{
	        	ShowPlayerDialog(playerid,2575,DIALOG_STYLE_INPUT,"Pegar Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
 			}
	 		case 3:
		    {
	            ShowPlayerDialog(playerid,2576,DIALOG_STYLE_INPUT,"Esconder Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
 			}
 			case 4:
	        {
		    	ShowPlayerDialog(playerid,2577,DIALOG_STYLE_INPUT,"Esconder Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
 			}
 			case 5:
    		{
	        	ShowPlayerDialog(playerid,2578,DIALOG_STYLE_INPUT,"Esconder Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
 			}
 			case 6:
		    {
	            ShowPlayerDialog(playerid,2579,DIALOG_STYLE_INPUT,"Pegar Safe Maconha","Digite a quantia de safe maconha em gramas","Pegar","Voltar");
 			}
 			case 7:
	        {
		    	ShowPlayerDialog(playerid,2580,DIALOG_STYLE_INPUT,"Pegar Safe Cocaina","Digite a quantia de safe cocaina em gramas","Pegar","Voltar");
 			}
 			case 8:
    		{
	        	ShowPlayerDialog(playerid,2581,DIALOG_STYLE_INPUT,"Pegar Safe Crack","Digite a quantia de safe crack em gramas","Pegar","Voltar");
 			}
		}
	}
	if(dialogid == 2573)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2573,DIALOG_STYLE_INPUT,"Pegar Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new price, tel;
		new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 51 && level <= 100)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 200 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 101 && level <= 200)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 350 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 201 && level <= 400)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 500 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 401)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 999 graças ao lvl de sua Habilidade!"); return 1; } }
		if(PlayerInfo[playerid][pDrogas] > 4)
		{
			format(gstring, sizeof(gstring), "  Você ainda tem %d gramas de maconha, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas]);
			SendClientMessage(playerid, COLOR_GREY, gstring);
		    return 1;
		}
		price = strval(inputtext) * tel;
		if(GetGranaTheus(playerid) > strval(inputtext))
		{
			format(gstring, sizeof(gstring), "* Você comprou %d gramas por $%d.", strval(inputtext), price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GranaTheus(playerid, -price);
			SBizzInfo[17][sbTill] += price;
		    ExtortionSBiz(17, price);
			PlayerInfo[playerid][pDrogas] = strval(inputtext)+PlayerInfo[playerid][pDrogas];
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso !");
		}
	}
	if(dialogid == 2574)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2574,DIALOG_STYLE_INPUT,"Pegar Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new price, tel;
		new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 51 && level <= 100)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 200 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 101 && level <= 200)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 350 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 201 && level <= 400)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 500 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 401)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode pegar abaixo de 1 ou superior 999 graças ao lvl de sua Habilidade!"); return 1; } }
		if(PlayerInfo[playerid][pDrogas2] > 4)
		{
			format(gstring, sizeof(gstring), "  Você ainda tem %d gramas de cocaina, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas2]);
			SendClientMessage(playerid, COLOR_GREY, gstring);
		    return 1;
		}
		price = strval(inputtext) * tel;
		if(GetGranaTheus(playerid) > strval(inputtext))
		{
			format(gstring, sizeof(gstring), "* Você comprou %d gramas por $%d.", strval(inputtext), price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GranaTheus(playerid, -price);
			SBizzInfo[14][sbTill] += price;
		    ExtortionSBiz(14, price);
			PlayerInfo[playerid][pDrogas2] = strval(inputtext)+PlayerInfo[playerid][pDrogas2];
   		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso !");
		}
	}
	if(dialogid == 2575)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2575,DIALOG_STYLE_INPUT,"Pegar Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new price, tel;
		new level = PlayerInfo[playerid][pDrogasSkill];
        if(level >= 0 && level <= 50)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 100 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 51 && level <= 100)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 200 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 101 && level <= 200)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 350) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 350 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 201 && level <= 400)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 500) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 500 graças ao lvl de sua Habilidade!"); return 1; } }
		else if(level >= 401)
		{ tel = 30; if(strval(inputtext) < 1 || strval(inputtext) > 999) { SendClientMessage(playerid, COLOR_GREY, "   Você não pode ir abaixo de 1 ou superior 999 graças ao lvl de sua Habilidade!"); return 1; } }
		if(PlayerInfo[playerid][pDrogas3] > 4)
		{
			format(gstring, sizeof(gstring), "  Você ainda tem %d gramas de crack, Venda tudo primeiro !", PlayerInfo[playerid][pDrogas3]);
			SendClientMessage(playerid, COLOR_GREY, gstring);
		    return 1;
		}
		price = strval(inputtext) * tel;
		if(GetGranaTheus(playerid) > strval(inputtext))
		{
			format(gstring, sizeof(gstring), "* Você comprou %d gramas por $%d.", strval(inputtext), price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GranaTheus(playerid, -price);
			SBizzInfo[15][sbTill] += price;
		    ExtortionSBiz(15, price);
			PlayerInfo[playerid][pDrogas3] = strval(inputtext)+PlayerInfo[playerid][pDrogas3];
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro para isso !");
		}
	}
	if(dialogid == 2576)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2576,DIALOG_STYLE_INPUT,"Esconder Maconha","Digite a quantia de crack em gramas","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode esconder menos de 1 e nem mais de 10000");
			return 1;
		}
        if(PlayerInfo[playerid][pDrogas] >= ammount)
		{
			PlayerInfo[playerid][pDrogas] = PlayerInfo[playerid][pDrogas]-ammount;
			PlayerInfo[playerid][pSafeDrogas] = PlayerInfo[playerid][pSafeDrogas]+ammount;
			format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2577)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2577,DIALOG_STYLE_INPUT,"Esconder Cocaina","Digite a quantia de cocaina em gramas","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode esconder menos de 1 e nem mais de 10000");
			return 1;
		}
        if(PlayerInfo[playerid][pDrogas2] >= ammount)
		{
			PlayerInfo[playerid][pDrogas2] = PlayerInfo[playerid][pDrogas2]-ammount;
			PlayerInfo[playerid][pSafeDrogas2] = PlayerInfo[playerid][pSafeDrogas2]+ammount;
			format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2578)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2578,DIALOG_STYLE_INPUT,"Esconder Crack","Digite a quantia de crack em gramas","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode esconder menos de 1 e nem mais de 10000");
			return 1;
		}
        if(PlayerInfo[playerid][pDrogas3] >= ammount)
		{
			PlayerInfo[playerid][pDrogas3] = PlayerInfo[playerid][pDrogas3]-ammount;
			PlayerInfo[playerid][pSafeDrogas3] = PlayerInfo[playerid][pSafeDrogas3]+ammount;
			format(gstring, sizeof(gstring), "* Você escondeu %d gramas!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2579)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2579,DIALOG_STYLE_INPUT,"Pegar Safe Maconha","Digite a quantia de maconha em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
			return 1;
		}
		if(PlayerInfo[playerid][pSafeDrogas] >= ammount)
		{
			PlayerInfo[playerid][pDrogas] = PlayerInfo[playerid][pDrogas]+ammount;
			PlayerInfo[playerid][pSafeDrogas] = PlayerInfo[playerid][pSafeDrogas]-ammount;
			format(gstring, sizeof(gstring), "* Você pegou %d gramas de maconha no esconderijo!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Você não tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2580)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2580,DIALOG_STYLE_INPUT,"Pegar Safe Cocaina","Digite a quantia de cocaina em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
			return 1;
		}
		if(PlayerInfo[playerid][pSafeDrogas2] >= ammount)
		{
			PlayerInfo[playerid][pDrogas2] = PlayerInfo[playerid][pDrogas2]+ammount;
			PlayerInfo[playerid][pSafeDrogas2] = PlayerInfo[playerid][pSafeDrogas2]-ammount;
			format(gstring, sizeof(gstring), "* Você pegou %d gramas de cocaína no esconderijo!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Você não tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2581)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2581,DIALOG_STYLE_INPUT,"Pegar Safe Crack","Digite a quantia de crack em gramas","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
			return 1;
		}
		if(PlayerInfo[playerid][pSafeDrogas3] >= ammount)
		{
			PlayerInfo[playerid][pDrogas3] = PlayerInfo[playerid][pDrogas3]+ammount;
			PlayerInfo[playerid][pSafeDrogas3] = PlayerInfo[playerid][pSafeDrogas3]-ammount;
			format(gstring, sizeof(gstring), "* Você pegou %d gramas de crack no esconderijo!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Você não tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2582)
	{
	    if(!response) { return 1; }
		switch(listitem)
    	{
	       	case 0:
		    {
	            OnPlayerCommandText(playerid, "/equiparm");
 			}
            case 1:
	        {
		    	ShowPlayerDialog(playerid,2590,DIALOG_STYLE_INPUT,"Pegar Pacotes","Digite a quantia de Pacotes que deseja pegar","Pegar","Voltar");
 			}
 			case 2:
	        {
		    	ShowPlayerDialog(playerid,2583,DIALOG_STYLE_INPUT,"Pegar Safe Materiais","Digite a quantia de safe materiais que deseja pegar","Pegar","Voltar");
 			}
 			case 3:
    		{
	        	ShowPlayerDialog(playerid,2584,DIALOG_STYLE_INPUT,"Esconder Materiais","Digite a quantia de materiais para esconder","Esconder","Voltar");
 			}
		}
	}
    if(dialogid == 2590)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Pacotes\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2590,DIALOG_STYLE_INPUT,"Pegar Pacotes","Digite a quantia de Pacotes que deseja pegar","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new quantidade = strval(inputtext);
        if(quantidade < 1 || quantidade > 55)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 55");
			return 1;
		}
        else
        {
            format(gstring,sizeof(gstring),"/mafia pegar %d",quantidade);
            OnPlayerCommandText(playerid,gstring);
        }
	}
	if(dialogid == 2583)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Pacotes\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2583,DIALOG_STYLE_INPUT,"Pegar Safe Materiais","Digite a quantia de safe materiais que deseja pegar","Pegar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new quantidade = strval(inputtext);
        if(quantidade < 1 || quantidade > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
			return 1;
		}
		if(PlayerInfo[playerid][psMats] >= quantidade)
		{
			PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]+quantidade;
			PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]-quantidade;
			format(gstring, sizeof(gstring), "* Você pegou %d materiais no esconderijo!",quantidade);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2584)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Pacotes\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid,2584,DIALOG_STYLE_INPUT,"Esconder Materiais","Digite a quantia de materiais para esconder","Esconder","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor,use números !");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(ammount < 1 || ammount > 10000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "não pode pegar menos de 1 e nem mais de 10000");
			return 1;
		}
		if(PlayerInfo[playerid][pMats] >= ammount)
		{
			PlayerInfo[playerid][pMats] = PlayerInfo[playerid][pMats]-ammount;
			PlayerInfo[playerid][psMats] = PlayerInfo[playerid][psMats]+ammount;
			format(gstring, sizeof(gstring), "* Você escondeu %d materiais!",ammount);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não tem tudo isso!");
			return 1;
		}
	}
	if(dialogid == 2585)
	{
		if(!response) { return 1; }
		switch(listitem)
    	{
	       	case 0:
		    {
		        SetPlayerInterior(playerid, 0);
	            SetPlayerPos(playerid, 1524.4977,-1677.9469,6.2188);
 			}
 			case 1:
	        {
	            SetPlayerInterior(playerid, 6);
		    	SetPlayerPos(playerid, 246.2975,87.4735,1003.6406);
 			}
 			case 2:
    		{
                SetPlayerInterior(playerid, 0);
	        	SetPlayerPos(playerid, 1565.1235,-1666.9944,28.3956);
 			}
		}
	}
	if(dialogid == 2586)
	{
	 	if(!response) { return ShowPlayerDialog(playerid, 2586, DIALOG_STYLE_INPUT, "Pegar Materiais", "Digite a quantidade de materiais/nque deseja pegar", "Pegar", "Cancelar"); }
     	else if(!IsNumero(inputtext))
        {
			ShowPlayerDialog(playerid, 2586, DIALOG_STYLE_INPUT, "Pegar Materiais", "Digite a quantidade de materiais/nque deseja pegar", "Pegar", "Cancelar");
        	SendClientMessage(playerid,COLOR_GREY,"Porfavor, use números!");
        	return 1;
        }
        new ammount = strval(inputtext);
        if(MatsHolding[playerid] >= 10)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você já tem pacotes !");
			return 1;
        }
        if(ammount < 1 || ammount > 10) { SendClientMessage(playerid, COLOR_GREY, "   Número de pacotes mínimo 1 máximo 10 !"); return 1; }
        new price = ammount * 100;
		if(GetGranaTheus(playerid) > price)
		{
  			format(gstring, sizeof(gstring), "* Você recebeu %d materiais por R$%d.", ammount, price);
	    	SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
		    GranaTheus(playerid, - price);
		    MatsHolding[playerid] = ammount;
		}
		else
		{
  			format(gstring, sizeof(gstring), "   Você não tem R$%d !", price);
  			SendClientMessage(playerid, COLOR_GREY, gstring);
		}
	}
//Sistema de Cofre ORG
    if(dialogid == 11)
    {
	    if(response == 0)
	    {
			SendClientMessage(playerid, COLOR_DBLUE, "Você não quis ir ao evento criado pelo Admin");
            return 1;
        }
	    if(response >= 1)
	    {
            if(PlayerInfo[playerid][pJailed] >= 1)
	        {
         		SendClientMessage(playerid, COLOR_GREY, "Você está preso e por isso não poderá comparecer ao evento criado pelo Admin.");
	           	return 1;
	        }
	        ResetPlayerWeapons(playerid);
            SetPlayerArmour(playerid, 0.0);
			SetPlayerHealth(playerid, 100.0);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Obrigado por comparecer a este evento criado pelo Admin!");
            SetPlayerPos(playerid,vc,vy,vz);
            return 1;
        }
        return 1;
    }
    if(dialogid == 12)
	{
	    if(!response) return 1;
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
			if(listitem == 0)
			{
			    format(string,sizeof(string),"O Saldo da Sua Organização é de R$%d\nO que você deseja fazer ?",CofreOrg[org][Dinheiro]);
			    ShowPlayerDialog(playerid, 13, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
			    return 1;
			}
			if(listitem == 1)
			{
			    format(string,sizeof(string),"A Sua Organização tem %d de Materiais\nO que você deseja fazer ?",CofreOrg[org][Materiais]);
			    ShowPlayerDialog(playerid, 14, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
			    return 1;
			}
			if(listitem == 2)
			{
			    format(string,sizeof(string),"A Sua Organização tem %d de Maconha\nO que você deseja fazer ?",CofreOrg[org][Maconha]);
			    ShowPlayerDialog(playerid, 15, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
			    return 1;
			}
			if(listitem == 3)
			{
			    format(string,sizeof(string),"A Sua Organização tem %d de Cocaina\nO que você deseja fazer ?",CofreOrg[org][Cocaina]);
			    ShowPlayerDialog(playerid, 16, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
			    return 1;
			}
			if(listitem == 4)
			{
			    format(string,sizeof(string),"A Sua Organização tem %d de Crack\nO que você deseja fazer ?",CofreOrg[org][Crack]);
			    ShowPlayerDialog(playerid, 17, DIALOG_STYLE_MSGBOX, "Cofre da Organização", string, "Sacar", "Depositar");
			    return 1;
			}
		}
	    return 1;
	}
	if(dialogid == 13)
	{
	    new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
		    format(string,sizeof(string),"O Saldo da Sua Organização é de R$%d\nQuantos você deseja Depositar ?",CofreOrg[org][Dinheiro]);
		    ShowPlayerDialog(playerid, 18, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
			return 1;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"O Saldo da Sua Organização é de R$%d\nQuantos você deseja Sacar ?",CofreOrg[org][Dinheiro]);
		    ShowPlayerDialog(playerid, 19, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
			return 1;
		}
	    return 1;
	}
	if(dialogid == 14)
	{
	    new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Materiais\nQuantos você deseja Depositar ?",CofreOrg[org][Materiais]);
		    ShowPlayerDialog(playerid, 20, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
			return 1;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Materiais\nQuantos você deseja Sacar ?",CofreOrg[org][Materiais]);
		    ShowPlayerDialog(playerid, 21, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
			return 1;
		}
	    return 1;
	}
	if(dialogid == 15)
	{
	    new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Maconha\nQuantos você deseja Depositar ?",CofreOrg[org][Maconha]);
		    ShowPlayerDialog(playerid, 22, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
			return 1;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Maconha\nQuantos você deseja Sacar ?",CofreOrg[org][Maconha]);
		    ShowPlayerDialog(playerid, 23, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
			return 1;
		}
	    return 1;
	}
	if(dialogid == 16)
	{
	    new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Cocaina\nQuantos você deseja Depositar ?",CofreOrg[org][Cocaina]);
		    ShowPlayerDialog(playerid, 24, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
			return 1;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Cocaina\nQuantos você deseja Sacar ?",CofreOrg[org][Cocaina]);
		    ShowPlayerDialog(playerid, 25, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
			return 1;
		}
	    return 1;
	}
	if(dialogid == 17)
	{
	    new org = GetPlayerOrg(playerid);
	    if(response == 0)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Crack\nQuantos você deseja Depositar ?",CofreOrg[org][Crack]);
		    ShowPlayerDialog(playerid, 26, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Depositar", "Cancelar");
			return 1;
		}
		if(response >= 1)
		{
		    format(string,sizeof(string),"A Sua Organização tem %d de Crack\nQuantos você deseja Sacar ?",CofreOrg[org][Crack]);
		    ShowPlayerDialog(playerid, 27, DIALOG_STYLE_INPUT, "Cofre da Organização", string, "Sacar", "Cancelar");
			return 1;
		}
	    return 1;
	}
	if(dialogid == 18)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new depgrana = strval(inputtext);
			if(GetGranaTheus(playerid) < depgrana)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
			    return 1;
			}
			if(depgrana > 0)
			{
			    if(GetGranaTheus(playerid) >= depgrana)
			    {
			        GranaTheus(playerid, -depgrana);
		    		DepositarGranaOrg(org,depgrana);
                    for(new k=0; k<MaiorID; k++)
					{
                        if(GetPlayerOrg(k) == GetPlayerOrg(playerid))
                        {
                            format(gstring, sizeof(gstring), "** Agência %s: %s Depositou R$%d no Cofre, Novo Saldo da Organização: R$%d.",NomeORG(playerid),PlayerName(playerid),depgrana,CofreOrg[org][Dinheiro]);
                            SendClientMessage(k, 0x77EEA1FF, gstring);
                        }
                    }
                    format(string,sizeof(string),"Você Depositou R$%d",depgrana);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		if(GetPlayerOrg(playerid) == 7)
		    		{
		    			Text3DTheus();
		    		}
		    		return 1;
	    		}
		    }
			return 1;
		}
	    return 1;
	}
	if(dialogid == 19)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new sacgrana = strval(inputtext);
			if(sacgrana > CofreOrg[org][Dinheiro])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
			    return 1;
			}
			if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Dinheiro");
			    return 1;
			}
			if(sacgrana > 0)
			{
			    if(sacgrana <= CofreOrg[org][Dinheiro])
			    {
   					GranaTheus(playerid, sacgrana);
		    		SacarGranaOrg(org,sacgrana);
                    for(new k=0; k<MaiorID; k++)
					{
                        if(GetPlayerOrg(k) == GetPlayerOrg(playerid))
                        {
                            format(gstring, sizeof(gstring), "** Agência %s: %s Sacou R$%d do Cofre, Novo Saldo da Organização: R$%d.",NomeORG(playerid),PlayerName(playerid),sacgrana,CofreOrg[org][Dinheiro]);
                            SendClientMessage(k, 0x77EEA1FF, gstring);
                        }
                    }
                    format(string,sizeof(string),"Você Sacou R$%d",sacgrana);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		if(GetPlayerOrg(playerid) == 7)
		    		{
		    			Text3DTheus();
		    			if(PlayerInfo[playerid][pLider] == 7)
		    			{
							format(string, sizeof(string), "[PlayStart News] O Prefeito: %s, Acabou de Sacar alguma Quantia Em Dinheiro dos Cofres Públicos!",PlayerName(playerid));
							OOCNews(0x1583F0FF, string);
						}
		    		}
		    		return 1;
	    		}
		    }
			return 1;
		}
	    return 1;
	}
	if(dialogid == 20)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new depmat = strval(inputtext);
		    new pMateriais = PlayerInfo[playerid][pMats];
			if(pMateriais < depmat)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
			    return 1;
			}
			if(depmat > 0)
			{
			    if(pMateriais >= depmat)
			    {
			        PlayerInfo[playerid][pMats] = pMateriais-depmat;
		    		DepositarMaterialOrg(org,depmat);
		    		format(string,sizeof(string),"Você Depositou %d de Materiais, o Novo Saldo de Materiais é de %d",depmat,CofreOrg[org][Materiais]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return 1;
	    		}
		    }
			return 1;
		}
	    return 1;
	}
	if(dialogid == 21)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new sacmat = strval(inputtext);
		    new pMateriais = PlayerInfo[playerid][pMats];
			if(sacmat > CofreOrg[org][Materiais])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
			    return 1;
			}
			if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Materiais");
			    return 1;
			}
			if(sacmat > 0)
			{
			    if(sacmat <= CofreOrg[org][Materiais])
			    {
			        PlayerInfo[playerid][pMats] = pMateriais+sacmat;
		    		SacarMaterialOrg(org,sacmat);
		    		format(string,sizeof(string),"Você Sacou %d Materiais, o Novo Saldo de Materiais é %d",sacmat,CofreOrg[org][Materiais]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return 1;
	    		}
		    }
			return 1;
		}
	    return 1;
	}
	if(dialogid == 22)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new depmac = strval(inputtext);
		    new pMaconha = PlayerInfo[playerid][pDrogas];
			if(pMaconha < depmac)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
			    return 1;
			}
			if(depmac > 0)
			{
			    if(pMaconha >= depmac)
			    {
			        PlayerInfo[playerid][pDrogas] = pMaconha-depmac;
		    		DepositarMaconhaOrg(org,depmac);
		    		format(string,sizeof(string),"Você Depositou %d de Maconha, o Novo Saldo de Maconha é de %d",depmac,CofreOrg[org][Maconha]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return 1;
	    		}
		    }
			return 1;
		}
	    return 1;
	}
	if(dialogid == 23)
	{
	    if(response == 0)
		{
			return 1;
		}
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new sacmac = strval(inputtext);
		    new pMaconha = PlayerInfo[playerid][pDrogas];
			if(sacmac > CofreOrg[org][Maconha])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
			    return 1;
			}
			if(PlayerInfo[playerid][pCargo] < 5)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Lider e Sub-Lider Podem Sacar Maconha");
			    return 1;
			}
			if(sacmac > 0)
			{
			    if(sacmac <= CofreOrg[org][Maconha])
			    {
			        PlayerInfo[playerid][pDrogas] = pMaconha+sacmac;
		    		SacarMaconhaOrg(org,sacmac);
		    		format(string,sizeof(string),"Você Sacou %d de Maconha, o Novo Saldo de Maconha é de %d",sacmac,CofreOrg[org][Maconha]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return 1;
	    		}
		    }
			return 1;
		}
	    return 1;
	}
	if(dialogid == 24)
	{
		if(response >= 1)
		{
      		new org = GetPlayerOrg(playerid);
		    new depcoca = strval(inputtext);
		    new pCocaina = PlayerInfo[playerid][pDrogas2];
			if(pCocaina < depcoca)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
			    return 1;
			}
			if(depcoca > 0)
			{
			    if(pCocaina >= depcoca)
			    {
			        PlayerInfo[playerid][pDrogas2] = pCocaina-depcoca;
		    		DepositarCocainaOrg(org,depcoca);
		    		format(string,sizeof(string),"Você Depositou %d de Cocaina, o Novo Saldo de Cocaina é de %d",depcoca,CofreOrg[org][Cocaina]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return 1;
	    		}
		    }
			return 1;
		}
	    return 1;
	}
	if(dialogid == 25)
	{
		if(response >= 1)
		{
      		new org = GetPlayerOrg(playerid);
		    new saccoca = strval(inputtext);
		    new pCocaina = PlayerInfo[playerid][pDrogas2];
			if(saccoca > CofreOrg[org][Cocaina])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
			    return 1;
			}
			if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Cocaína");
			    return 1;
			}
			if(saccoca > 0)
			{
			    if(saccoca <= CofreOrg[org][Cocaina])
			    {
			        PlayerInfo[playerid][pDrogas2] = pCocaina+saccoca;
		    		SacarCocainaOrg(org,saccoca);
		    		format(string,sizeof(string),"Você Sacou %d de Cocaína, o Novo Saldo de Cocaína é de %d",saccoca,CofreOrg[org][Cocaina]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return 1;
	    		}
		    }
			return 1;
		}
	    return 1;
	}
	if(dialogid == 26)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new depcrac = strval(inputtext);
		    new pCrack = PlayerInfo[playerid][pDrogas3];
			if(pCrack < depcrac)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Você não tem tudo isso!");
			    return 1;
			}
			if(depcrac > 0)
			{
			    if(pCrack >= depcrac)
			    {
			        PlayerInfo[playerid][pDrogas3] = pCrack-depcrac;
		    		DepositarCrackOrg(org,depcrac);
		    		format(string,sizeof(string),"Você Depositou %d de Crack, o Novo Saldo de Crack é de %d",depcrac,CofreOrg[org][Crack]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return 1;
	    		}
		    }
			return 1;
		}
	    return 1;
	}
	if(dialogid == 27)
	{
		if(response >= 1)
		{
		    new org = GetPlayerOrg(playerid);
		    new saccrac = strval(inputtext);
		    new pCrack = PlayerInfo[playerid][pDrogas3];
			if(saccrac > CofreOrg[org][Crack])
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Sua Organização não tem tudo isso!");
			    return 1;
			}
			if(PlayerInfo[playerid][pCargo] < 5 && PlayerInfo[playerid][pLider] < 1)
			{
			    SendClientMessage(playerid,COLOR_GRAD1,"Somente Líder e Sub-Líder Podem Sacar Crack");
			    return 1;
			}
			if(saccrac > 0)
			{
			    if(saccrac <= CofreOrg[org][Crack])
			    {
			        PlayerInfo[playerid][pDrogas3] = pCrack+saccrac;
		    		SacarCrackOrg(org,saccrac);
		    		format(string,sizeof(string),"Você Sacou %d de Crack, o Novo Saldo de Crack é de %d",saccrac,CofreOrg[org][Crack]);
		    		SendClientMessage(playerid,COLOR_GRAD1,string);
		    		return 1;
	    		}
		    }
			return 1;
		}
	    return 1;
	}
	if(dialogid == 28)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return 1;
		if (GetGranaTheus(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return 1;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come um espetinho de coração.", sendername);
				GranaTheus(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come um churrasco de carne de vaca.", sendername);
				GranaTheus(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come um churrasco de jacare.", sendername);
				GranaTheus(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come um churrasco de frango.", sendername);
				GranaTheus(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu água.", sendername);
				GranaTheus(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GranaTheus(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}
	if(dialogid == 29)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return 1;
		if (GetGranaTheus(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return 1;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come um X-SIMPLES.", sendername);
				GranaTheus(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come um X-TUDO.", sendername);
				GranaTheus(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come um X-ESPECIAL.", sendername);
				GranaTheus(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come um X-FRANGO.", sendername);
				GranaTheus(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu água.", sendername);
				GranaTheus(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GranaTheus(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	if(dialogid == 30)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return 1;
		if (GetGranaTheus(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return 1;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come uma pizza pequena de presunto e mussarela.", sendername);
				GranaTheus(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come uma pizza grande de presunto e mussarela.", sendername);
				GranaTheus(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come uma pizza extra grande.", sendername);
				GranaTheus(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come uma pizza de Bacon e Chocolate.", sendername);
				GranaTheus(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu água.", sendername);
				GranaTheus(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GranaTheus(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
    if(dialogid == 31)
	{
		new Float:health;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		GetPlayerHealth(playerid, health);
		if(!response) return 1;
		if (GetGranaTheus(playerid) <= 0)
		{
			GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro", 5000, 1);
			return 1;
		}
	    if(response)
	    {
	        if(listitem == 0)
			{
				format(string, sizeof(string), "* %s come uma rosquinha pequena.", sendername);
				GranaTheus(playerid, -2);
				SetPlayerHealth(playerid, health + 20);
			}
			if(listitem == 1)
			{
				format(string, sizeof(string), "* %s come uma rosquinha normal.", sendername);
				GranaTheus(playerid, -4);
				SetPlayerHealth(playerid, health + 50);
			}
			if(listitem == 2)
			{
				format(string, sizeof(string), "* %s come uma rosquinha de chefe.", sendername);
				GranaTheus(playerid, -5);
				SetPlayerHealth(playerid, health + 80);
			}
			if(listitem == 3)
			{
				format(string, sizeof(string), "* %s come uma super rosquinha.", sendername);
				GranaTheus(playerid, -3);
				SetPlayerHealth(playerid, health + 35);
			}
			if(listitem == 4)
			{
				format(string, sizeof(string), "* %s bebeu água.", sendername);
				GranaTheus(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			if(listitem == 5)
			{
				format(string, sizeof(string), "* %s bebeu suco.", sendername);
				GranaTheus(playerid, -1);
				SetPlayerHealth(playerid, health + 10);
				ApplyAnimation(playerid,"VENDING","VEND_Drink_P",4.1,0,1,1,0,1);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
    if(dialogid == 14697)
    {
        if(response == 0) OnPlayerCommandText(playerid,"/gorg");
    }
    if(dialogid == 14657)
    {
        if(response >= 1) //sim
		{
            if(listitem == 0)
			{
                OnPlayerCommandText(playerid,"/gorg");
                SendClientMessage(playerid, COLOR_GRAD2, "ERRO: Este Membro não pode Ser Gerenciado!");
            }
            else
            {
                ShowPlayerDialog(playerid,26457,DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF} - Limpar Vaga","{33FF99}Menu para Demitir membros da Organização.\n{69B4FF}Coloque Abaixo, o Motivo da Demição do Membro.\nEm Seguida Clique em '{80FFFF}Limpar{69B4FF}', Para Cancelar ..\nClique em '{80FFFF}Voltar{69B4FF}'!","Limpar","Voltar");
                VagaLimpar[playerid] = listitem-1;
            }
        }
    }
    if(dialogid == 26457)
    {
        if(response == 1) //sim
		{
            new StrOrgLimpar[100];
            if(VagaLimpar[playerid] == 0) format(StrOrgLimpar,sizeof(StrOrgLimpar),"sub %s",inputtext);
            else format(StrOrgLimpar,sizeof(StrOrgLimpar),"%d %s",VagaLimpar[playerid],inputtext);
            format(gstring,sizeof(gstring),"/limparvaga %s",StrOrgLimpar);
            OnPlayerCommandText(playerid,gstring);
            OnPlayerCommandText(playerid,"/gorg");
            VagaLimpar[playerid] = 99;
        }
        else
        {
            OnPlayerCommandText(playerid,"/gorg");
            VagaLimpar[playerid] = 99;
        }
    }
    /*if(dialogid == 14657)
    {
        if(response == 1) //sim
		{
            ShowPlayerDialog(playerid,26457,DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF} - Limpar Vaga","{33FF99}Menu para Demitir membros da Organização.\n{FFA8FF}Coloque Abaixo, o Número da Vaga que Quer limpar.\nEm Seguida Clique em '{80FFFF}Limpar{FFA8FF}', Para Cancelar ..\nClique em '{80FFFF}Voltar{FFA8FF}'!","Limpar","Voltar");
        }
    }
    if(dialogid == 26457)
    {
        if(!IsNumero(inputtext))
        {
            ShowPlayerDialog(playerid,26457,DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF} - Limpar Vaga","{33FF99}Menu para Demitir membros da Organização.\n{FFA8FF}Coloque Abaixo, o Número da Vaga que Quer limpar.\nEm Seguida Clique em '{80FFFF}Limpar{FFA8FF}', Para Cancelar ..\nClique em '{80FFFF}Voltar{FFA8FF}'!","Limpar","Voltar");
        	SendClientMessage(playerid,COLOR_GREY,"Digite apenas números de 1 à 30!");
            return 1;
        }
        if(response == 1) //sim
		{
            format(gstring,sizeof(gstring),"/limparvaga %d",strval(inputtext));
            OnPlayerCommandText(playerid,gstring);
            OnPlayerCommandText(playerid,"/infoorg");
        }
        else
        {
            OnPlayerCommandText(playerid,"/infoorg");
        }
    }     */
    if(dialogid == 1319)
    {
        if(response == 1)
        {
            if(listitem == 0)
            {
                ShowPlayerDialog(playerid,1320,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF} - Concessionária","Você Está Prestes a Vender seu Veículo.\nTem Certeza que deseja Fazer isto?","Sim","Não");
            }
            if(listitem == 1)
            {
				new GranaComprar;
				if(PlayerInfo[playerid][pVIP] == 0)
			    {
			         GranaComprar = PRECOCARRO;
			    }
			    else if(PlayerInfo[playerid][pVIP] == 1)
			    {
			         GranaComprar = 3000000;
			    }
			    else if(PlayerInfo[playerid][pVIP] == 2)
			    {
			         GranaComprar = 1000000;
			    }
			    else if(PlayerInfo[playerid][pVIP] == 3)
			    {
			        GranaComprar = 1;
			    }
				format(strtheus,sizeof(strtheus),"{33FF99}Bem Vindo %s à Concessionária Brasil PlayStart!\n{FFA8FF}Escolha o Tipo de Veículo que Deseja abaixo.\n{33FF99}Para comprar um Veículo você Deverá ter em Mãos{80FFFF} R$ %d.",PlayerName(playerid),GranaComprar);
                ShowPlayerDialog(playerid, 5467, DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF} - Concessionária",strtheus,"Carro","Moto/Bike");
            }
        }
        else
        {
            //Tudo que vai acontecer no botão direito.
        }
    }
    if(dialogid == 5467)
    {
        if(response == 1)
        {
                new textdialog[1000];
                strins(textdialog,"Bravura\n",strlen(textdialog)); //401
                strins(textdialog,"Buffalo\n",strlen(textdialog)); //402
                strins(textdialog,"Perenniel\n",strlen(textdialog)); //404
                strins(textdialog,"Sentinel\n",strlen(textdialog)); //405
                strins(textdialog,"Limosine\n",strlen(textdialog)); //409
                strins(textdialog,"Manana\n",strlen(textdialog)); //410
                strins(textdialog,"Voodoo\n",strlen(textdialog)); //412
                strins(textdialog,"Cheetah\n",strlen(textdialog)); //415
                strins(textdialog,"Moonbeam\n",strlen(textdialog)); //418
                strins(textdialog,"Esperanto\n",strlen(textdialog)); //419
                strins(textdialog,"Washington\n",strlen(textdialog)); //421
                strins(textdialog,"Premier\n",strlen(textdialog)); //426
                strins(textdialog,"Banshee\n",strlen(textdialog)); //429
                strins(textdialog,"Hotknife\n",strlen(textdialog)); //434
                strins(textdialog,"Previon\n",strlen(textdialog)); //436
                strins(textdialog,"Stallion\n",strlen(textdialog)); //439
                strins(textdialog,"Romero\n",strlen(textdialog)); //442
                strins(textdialog,"Admiral\n",strlen(textdialog)); //445
                strins(textdialog,"Turismo\n",strlen(textdialog)); //451
                strins(textdialog,"Solair\n",strlen(textdialog)); //458
                strins(textdialog,"Glendale\n",strlen(textdialog)); //466
                strins(textdialog,"Oceanic\n",strlen(textdialog)); //467
                strins(textdialog,"Hermes\n",strlen(textdialog)); //474
                strins(textdialog,"Sabre\n",strlen(textdialog)); //475
                strins(textdialog,"ZR-350\n",strlen(textdialog)); //477
                strins(textdialog,"Regina\n",strlen(textdialog)); //479
                strins(textdialog,"Comet\n",strlen(textdialog)); //480
                strins(textdialog,"Camper\n",strlen(textdialog)); //483
                strins(textdialog,"Virgo\n",strlen(textdialog)); //491
                strins(textdialog,"Greenwood\n",strlen(textdialog)); //492
                strins(textdialog,"Blista Compact\n",strlen(textdialog)); //496
                strins(textdialog,"Super GT\n",strlen(textdialog)); //506
                strins(textdialog,"Elegant\n",strlen(textdialog)); //507
                strins(textdialog,"Nebula\n",strlen(textdialog)); //516
                strins(textdialog,"Majestic\n",strlen(textdialog)); //517
                strins(textdialog,"Buccaneer\n",strlen(textdialog)); //518
                strins(textdialog,"Fortune\n",strlen(textdialog)); //526
                strins(textdialog,"Cadrona\n",strlen(textdialog)); //527
                strins(textdialog,"Willard\n",strlen(textdialog)); //529
                strins(textdialog,"Feltzer\n",strlen(textdialog)); //533
                strins(textdialog,"Remington\n",strlen(textdialog)); //534
                strins(textdialog,"Slamvan\n",strlen(textdialog)); //535
                strins(textdialog,"Blade\n",strlen(textdialog)); //536
                strins(textdialog,"Vincent\n",strlen(textdialog)); //540
                strins(textdialog,"Bullet\n",strlen(textdialog)); //541
                strins(textdialog,"Clover\n",strlen(textdialog)); //542
                strins(textdialog,"Hustler\n",strlen(textdialog)); //545
                strins(textdialog,"Intruder\n",strlen(textdialog)); //546
                strins(textdialog,"Primo\n",strlen(textdialog)); //547
                strins(textdialog,"Tampa\n",strlen(textdialog)); //549
                strins(textdialog,"Sunrise\n",strlen(textdialog)); //550
                strins(textdialog,"Merit\n",strlen(textdialog)); //551
                strins(textdialog,"Windsor\n",strlen(textdialog)); //555
                strins(textdialog,"Uranus\n",strlen(textdialog)); //558
                strins(textdialog,"Jester\n",strlen(textdialog)); //559
                strins(textdialog,"Sultan\n",strlen(textdialog)); //560
                strins(textdialog,"Stratum\n",strlen(textdialog)); //561
                strins(textdialog,"Elegy\n",strlen(textdialog)); //562
                strins(textdialog,"Flash\n",strlen(textdialog)); //565
                strins(textdialog,"Tahoma\n",strlen(textdialog)); //566
                strins(textdialog,"Savanna\n",strlen(textdialog)); //567
                strins(textdialog,"Broadway\n",strlen(textdialog)); //575
                strins(textdialog,"Tornado\n",strlen(textdialog)); //576
                strins(textdialog,"Stafford\n",strlen(textdialog)); //580
                strins(textdialog,"Emperor\n",strlen(textdialog)); //585
                strins(textdialog,"Euros\n",strlen(textdialog)); //587
                strins(textdialog,"Club\n",strlen(textdialog)); //589
                strins(textdialog,"Alpha\n",strlen(textdialog)); //602
                strins(textdialog,"Phoenix\n",strlen(textdialog)); //603
                strins(textdialog,"Infernus",strlen(textdialog)); //411
                ShowPlayerDialog(playerid,1321,DIALOG_STYLE_LIST,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF} - Concessionária",textdialog,"Selecionar","Cancelar");
                SendClientMessage(playerid, 0x23C0FCFF, "[BPF Veículo] {FFFFFF}Escolha o Modelo do Veículo que Deseja Comprar!");

        }
        if(response == 0)
        {
            	new textdialog[256];
                strins(textdialog,"PCJ-600\n",strlen(textdialog)); //461
                strins(textdialog,"Faggio\n",strlen(textdialog)); //462
                strins(textdialog,"Freeway\n",strlen(textdialog)); //463
                strins(textdialog,"Sanchez\n",strlen(textdialog)); //468
                strins(textdialog,"Quad Motor\n",strlen(textdialog)); //471
                strins(textdialog,"BMX Bike\n",strlen(textdialog)); //481
                strins(textdialog,"Mountain Bike\n",strlen(textdialog)); //510
                strins(textdialog,"FCR-900\n",strlen(textdialog)); //521
                strins(textdialog,"NRG-500\n",strlen(textdialog)); //522
                strins(textdialog,"BF-400\n",strlen(textdialog)); //581
                strins(textdialog,"Wayfarer",strlen(textdialog)); //586
                ShowPlayerDialog(playerid,1647,DIALOG_STYLE_LIST,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF} - Concessionária",textdialog,"Selecionar","Cancelar");
                SendClientMessage(playerid, 0x23C0FCFF, "[BPF Veículo] {FFFFFF}Escolha o Modelo do Veículo que Deseja Comprar!");
        }
    }
    if(dialogid == 1647)
    {
        if(response == 1)
		{
            if(listitem == 0){ ModeloCarro[playerid] = 461; ComprarCarro(playerid); }
            if(listitem == 1){ ModeloCarro[playerid] = 462; ComprarCarro(playerid); }
            if(listitem == 2){ ModeloCarro[playerid] = 463; ComprarCarro(playerid); }
            if(listitem == 3){ ModeloCarro[playerid] = 468; ComprarCarro(playerid); }
            if(listitem == 4){ ModeloCarro[playerid] = 471; ComprarCarro(playerid); }
            if(listitem == 5){ ModeloCarro[playerid] = 481; ComprarCarro(playerid); }
            if(listitem == 6){ ModeloCarro[playerid] = 510; ComprarCarro(playerid); }
            if(listitem == 7){ ModeloCarro[playerid] = 521; ComprarCarro(playerid); }
            if(listitem == 8){ ModeloCarro[playerid] = 522; ComprarCarro(playerid); }
            if(listitem == 9){ ModeloCarro[playerid] = 581; ComprarCarro(playerid); }
            if(listitem == 10){ ModeloCarro[playerid] = 586; ComprarCarro(playerid); }
        }
        else
        {
            return SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Veículo] {FFFFFF} Compra do veículo Cancelada!");
        }
    }
    if(dialogid == 1321)
    {
        if(response == 1)
		{
            if(listitem == 0){ ModeloCarro[playerid] = 401; ComprarCarro(playerid); }
            if(listitem == 1){ ModeloCarro[playerid] = 402; ComprarCarro(playerid); }
            if(listitem == 2){ ModeloCarro[playerid] = 404; ComprarCarro(playerid); }
            if(listitem == 3){ ModeloCarro[playerid] = 405; ComprarCarro(playerid); }
            if(listitem == 4){ ModeloCarro[playerid] = 409; ComprarCarro(playerid); }
            if(listitem == 5){ ModeloCarro[playerid] = 410; ComprarCarro(playerid); }
            if(listitem == 6){ ModeloCarro[playerid] = 412; ComprarCarro(playerid); }
            if(listitem == 7){ ModeloCarro[playerid] = 415; ComprarCarro(playerid); }
            if(listitem == 8){ ModeloCarro[playerid] = 418; ComprarCarro(playerid); }
            if(listitem == 9){ ModeloCarro[playerid] = 419; ComprarCarro(playerid); }
            if(listitem == 10){ ModeloCarro[playerid] = 421; ComprarCarro(playerid); }
            if(listitem == 11){ ModeloCarro[playerid] = 426; ComprarCarro(playerid); }
            if(listitem == 12){ ModeloCarro[playerid] = 429; ComprarCarro(playerid); }
            if(listitem == 13){ ModeloCarro[playerid] = 434; ComprarCarro(playerid); }
            if(listitem == 14){ ModeloCarro[playerid] = 436; ComprarCarro(playerid); }
            if(listitem == 15){ ModeloCarro[playerid] = 439; ComprarCarro(playerid); }
            if(listitem == 16){ ModeloCarro[playerid] = 442; ComprarCarro(playerid); }
            if(listitem == 17){ ModeloCarro[playerid] = 445; ComprarCarro(playerid); }
            if(listitem == 18){ ModeloCarro[playerid] = 451; ComprarCarro(playerid); }
            if(listitem == 19){ ModeloCarro[playerid] = 458; ComprarCarro(playerid); }
            if(listitem == 20){ ModeloCarro[playerid] = 466; ComprarCarro(playerid); }
            if(listitem == 21){ ModeloCarro[playerid] = 467; ComprarCarro(playerid); }
            if(listitem == 22){ ModeloCarro[playerid] = 474; ComprarCarro(playerid); }
            if(listitem == 23){ ModeloCarro[playerid] = 475; ComprarCarro(playerid); }
            if(listitem == 24){ ModeloCarro[playerid] = 477; ComprarCarro(playerid); }
            if(listitem == 25){ ModeloCarro[playerid] = 479; ComprarCarro(playerid); }
            if(listitem == 26){ ModeloCarro[playerid] = 480; ComprarCarro(playerid); }
            if(listitem == 27){ ModeloCarro[playerid] = 483; ComprarCarro(playerid); }
            if(listitem == 28){ ModeloCarro[playerid] = 491; ComprarCarro(playerid); }
            if(listitem == 29){ ModeloCarro[playerid] = 492; ComprarCarro(playerid); }
            if(listitem == 30){ ModeloCarro[playerid] = 496; ComprarCarro(playerid); }
            if(listitem == 31){ ModeloCarro[playerid] = 506; ComprarCarro(playerid); }
            if(listitem == 32){ ModeloCarro[playerid] = 507; ComprarCarro(playerid); }
            if(listitem == 33){ ModeloCarro[playerid] = 516; ComprarCarro(playerid); }
            if(listitem == 34){ ModeloCarro[playerid] = 517; ComprarCarro(playerid); }
            if(listitem == 35){ ModeloCarro[playerid] = 518; ComprarCarro(playerid); }
            if(listitem == 36){ ModeloCarro[playerid] = 526; ComprarCarro(playerid); }
            if(listitem == 37){ ModeloCarro[playerid] = 527; ComprarCarro(playerid); }
            if(listitem == 38){ ModeloCarro[playerid] = 529; ComprarCarro(playerid); }
            if(listitem == 39){ ModeloCarro[playerid] = 533; ComprarCarro(playerid); }
            if(listitem == 40){ ModeloCarro[playerid] = 534; ComprarCarro(playerid); }
            if(listitem == 41){ ModeloCarro[playerid] = 535; ComprarCarro(playerid); }
            if(listitem == 42){ ModeloCarro[playerid] = 536; ComprarCarro(playerid); }
            if(listitem == 43){ ModeloCarro[playerid] = 540; ComprarCarro(playerid); }
            if(listitem == 44){ ModeloCarro[playerid] = 541; ComprarCarro(playerid); }
            if(listitem == 45){ ModeloCarro[playerid] = 542; ComprarCarro(playerid); }
            if(listitem == 46){ ModeloCarro[playerid] = 545; ComprarCarro(playerid); }
            if(listitem == 47){ ModeloCarro[playerid] = 546; ComprarCarro(playerid); }
            if(listitem == 48){ ModeloCarro[playerid] = 547; ComprarCarro(playerid); }
            if(listitem == 49){ ModeloCarro[playerid] = 549; ComprarCarro(playerid); }
            if(listitem == 50){ ModeloCarro[playerid] = 550; ComprarCarro(playerid); }
            if(listitem == 51){ ModeloCarro[playerid] = 551; ComprarCarro(playerid); }
            if(listitem == 52){ ModeloCarro[playerid] = 555; ComprarCarro(playerid); }
            if(listitem == 53){ ModeloCarro[playerid] = 558; ComprarCarro(playerid); }
            if(listitem == 54){ ModeloCarro[playerid] = 559; ComprarCarro(playerid); }
            if(listitem == 55){ ModeloCarro[playerid] = 560; ComprarCarro(playerid); }
            if(listitem == 56){ ModeloCarro[playerid] = 561; ComprarCarro(playerid); }
            if(listitem == 57){ ModeloCarro[playerid] = 562; ComprarCarro(playerid); }
            if(listitem == 58){ ModeloCarro[playerid] = 565; ComprarCarro(playerid); }
            if(listitem == 59){ ModeloCarro[playerid] = 566; ComprarCarro(playerid); }
            if(listitem == 60){ ModeloCarro[playerid] = 567; ComprarCarro(playerid); }
            if(listitem == 61){ ModeloCarro[playerid] = 575; ComprarCarro(playerid); }
            if(listitem == 62){ ModeloCarro[playerid] = 576; ComprarCarro(playerid); }
            if(listitem == 63){ ModeloCarro[playerid] = 580; ComprarCarro(playerid); }
            if(listitem == 64){ ModeloCarro[playerid] = 585; ComprarCarro(playerid); }
            if(listitem == 65){ ModeloCarro[playerid] = 587; ComprarCarro(playerid); }
            if(listitem == 66){ ModeloCarro[playerid] = 589; ComprarCarro(playerid); }
            if(listitem == 67){ ModeloCarro[playerid] = 602; ComprarCarro(playerid); }
            if(listitem == 68){ ModeloCarro[playerid] = 603; ComprarCarro(playerid); }
            if(listitem == 69){ ModeloCarro[playerid] = 411; ComprarCarro(playerid); }
        }
        else
        {
            return SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Veículo] {FFFFFF} Compra do veículo Cancelada!");
        }
    }
    if(dialogid == 1320)
    {
        if(response == 1)
		{
            if(PlayerInfo[playerid][pChave] != 0)
            {
                for(new idx = 0; idx < sizeof(Carro); idx++)
    			{
                    if(strcmp(Carro[idx][Dono],PlayerName(playerid),true)==0 || Carro[idx][CarroID] == PlayerInfo[playerid][pChave])
                    {
						new PrecoCarVenda;
						strmid(Carro[idx][Dono], "Ninguem", 0, strlen("Ninguem"), 256);
                        Carro[idx][CarroON] = 0;
                        Carro[idx][Modelo] = 0;
                        Carro[idx][cSpawnX] = 0.000000;
            	        Carro[idx][cSpawnY] = 0.000000;
            	        Carro[idx][cSpawnZ] = 0.000000;
                        Carro[idx][cAngulo] = 0.000000;
                        Carro[idx][CorUm] = 0;
                        Carro[idx][CorDois] = 0;
                        LimparTunning(idx);
                        DestroyVehicle(Carro[idx][CarroID]);
                        Carro[idx][CarroID] = 0;
                        Carro[idx][cDate] = 0;
                        if(PlayerInfo[playerid][pVIP] == 0)
                        {
            			    PrecoCarVenda = 500000;
                            SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Veículo] {FFFFFF}Seu Veículo foi vendido Pela Metade do Preço (R$ 500000)!");
                        }
                        else if(PlayerInfo[playerid][pVIP] == 1)
                        {
            			    PrecoCarVenda = 500000;
                            SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Veículo] {FFFFFF}Seu Veículo foi vendido Pela Metade do Preço que Você Comprou (R$ 50000)!");
                        }
                        else if(PlayerInfo[playerid][pVIP] == 2)
                        {
            			    PrecoCarVenda = 500000;
                            SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Veículo] {FFFFFF}Seu Veículo foi vendido Pela Metade do Preço que Você Comprou (R$ 50000)!");
                        }
                        else if(PlayerInfo[playerid][pVIP] == 3)
                        {
                            PrecoCarVenda = 0;
                            SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Veículo] {FFFFFF}Você não Receberá nada pelo carro, Pois é VIP Sócio, e Troca Quando quiser!");
                        }
                        GranaTheus(playerid, PrecoCarVenda);
                        SBizzInfo[24][sbTill] -= PrecoCarVenda;
                        for(new i;i<MaiorID;i++) {CheckDonoCarro(i);}
                        SaveCarros();
                        break;
					}
                }
            }
            else
            {
                return SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Veículo] {FFFFFF}Você não tem um Veículo!");
            }

        }
        else
        {
        	return SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Veículo] {FFFFFF} Venda do veículo Cancelada!");
        }
    }
    if(dialogid==148)
	{
  		if(response == 1)
		{
			if(listitem==0)
			{
				OnPlayerCommandText(playerid,"/estacionarcarro");
			}
			if(listitem==1)
			{
				OnPlayerCommandText(playerid,"/trancarcarro");
			}
			if(listitem==2)
			{
		        ShowPlayerDialog(playerid, 1554, DIALOG_STYLE_INPUT, "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF} - Pintura", "{55FFAA}Escolha a Nova cor do Seu veículo.\nVocê Deverá escolher a Cor Um e a Cor Dois.\nSeparando-as com EPAÇO Ex: 0 3(Preto - Vermelho)", "Pintar", "Cancelar");
			}
			if(listitem==3)
			{
				if(!IsPlayerInVehicle(playerid, PlayerInfo[playerid][pChave])) return SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você Precisa estar dentro do seu Veículo para Ligar ou Desligar o Motor!");
                new veh = PlayerInfo[playerid][pChave],engine,farois,alarm,doors,bonnet,boot,objective;
				GetVehicleParamsEx(veh,engine,farois,alarm,doors,bonnet,boot,objective);
				if(Engine[playerid]==0 || engine == 0)
			 	{
					SetVehicleParamsEx(veh,VEHICLE_PARAMS_ON,farois,alarm,doors,bonnet,boot,objective);
					Engine[playerid]=1;
				}
				else if(Engine[playerid]==1 || engine == 1)
				{
					SetVehicleParamsEx(veh,VEHICLE_PARAMS_OFF,farois,alarm,doors,bonnet,boot,objective);
					Engine[playerid]=0;
				}
			}
			if(listitem==4)
			{
                if(!IsPlayerInVehicle(playerid, PlayerInfo[playerid][pChave])) return SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você Precisa estar dentro do seu Veículo para Ligar ou Desligar o Farol!");
                new veh = PlayerInfo[playerid][pChave],engine,farois,alarm,doors,bonnet,boot,objective;
				GetVehicleParamsEx(veh,engine,farois,alarm,doors,bonnet,boot,objective);
				if(Farois[playerid]==0 || farois ==0)
				{
					SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
					Farois[playerid]=1;
				}
				else if(Farois[playerid]==1 || farois == 1)
				{
                    SetVehicleParamsEx(veh,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
					Farois[playerid]=0;
				}
			}
			if(listitem==5)
			{
				OnPlayerCommandText(playerid,"/rcomponentes");
			}
            if(listitem==6)
			{
				OnPlayerCommandText(playerid,"/mapacarro");
			}
            if(listitem==7)
			{
				ShowPlayerDialog(playerid, 1356, DIALOG_STYLE_INPUT, "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF} - Transferência", "{33FF99}Escolha o Novo Dono do Seu veículo.\nColoque Abaixo o ID do Jogador,\nQue você Deseja Transferir o Veículo.\n{80FFFF}OBS: Após Transferido, o Veículo não Pertencerá mais a Você!", "Transferir", "Cancelar");
			}
		}
		else { }
	}
	if(dialogid == 1554)
	{
		if(response == 1)
		{
	  		format(gstring,sizeof(gstring),"/carrocor %s",inputtext);
	  		OnPlayerCommandText(playerid,gstring);
	  	}
	}
	if(dialogid == 1356)
	{
		if(response == 1)
		{
	  		format(gstring,sizeof(gstring),"/transferircarro %s",inputtext);
	  		OnPlayerCommandText(playerid,gstring);
	  	}
	  	else
		{
	  		SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Veículo] {FFFFFF}Transferência Cancelada!");
	  	}
	}
	return 1;
}
public Spectator()
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Spectate[i] < 253 && Spectate[i] != 255)
			{
				SetPlayerToTeamColor(i);
				//TogglePlayerControllable(i, 0);
				new targetid = Spectate[i];
				if(IsPlayerConnected(targetid))
				{
				    TogglePlayerSpectating(i, 1);
				    if(PlayerInfo[i][pAdmin] >= 1)
				    {
				        new Float:health;
					    GetPlayerHealth(targetid, health);
					    format(gstring, sizeof(gstring), "~n~~n~~n~~n~~n~~n~~y~%s(ID:%d)~n~~y~Vida:%.1f",PlayerName(targetid),targetid,health);
					    GameTextForPlayer(i, gstring, 2500, 3);
				    }
				    if(IsPlayerInAnyVehicle(targetid))
					{
					    new carid = GetPlayerVehicleID(targetid);
					    PlayerSpectateVehicle(i, carid);
					}
					else
					{
					    PlayerSpectatePlayer(i, targetid);
					}
					if(GetPlayerInterior(targetid) == 0)
					{
						SetPlayerInterior(i,0);
					}
					else if(GetPlayerInterior(targetid) > 0)
					{
						SetPlayerInterior(i,GetPlayerInterior(targetid));
					}
				}//Targetid connected
			}
			if(Spectate[i] == 253)
			{
				TogglePlayerControllable(i, 1);
				TogglePlayerSpectating(i, 0);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				Unspec[i][sLocal] = 255;
				SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pSkin], Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]-1.0, 1.0, -1, -1, -1, -1, -1, -1);
				gTeam[i] = PlayerInfo[i][pTeam];
				SetPlayerToTeamColor(i);
				Hospital[i] = 1;
				if(PlayerInfo[i][pVIP] > 0)
		        {
		            SetSpawnInfo(i, PlayerInfo[i][pTeam], PlayerInfo[i][pSkin], Unspec[i][Coords][0], Unspec[i][Coords][1], Unspec[i][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
                    SpawnPlayer(i);
					SetCameraBehindPlayer(i);
		        }
		        else
		        {
                    SpawnPlayer(i);
				}
				Spectate[i] = 255;
			}
			if(Spectate[i] == 254)
			{
				TogglePlayerControllable(i, 1);
				SetPlayerInterior(i,Unspec[i][sPint]);
				PlayerInfo[i][pInt] = Unspec[i][sPint];
				PlayerInfo[i][pLocal] = Unspec[i][sLocal];
				SetPlayerPos(i, Unspec[i][sPx],  Unspec[i][sPy], Unspec[i][sPz]);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 256)
			{
				SetPlayerToTeamColor(i);
				Spectate[i] = 255;
			}
			if(Spectate[i] == 257)
			{
				Spectate[i] = 254;
			}
		}
	}
}

//------------------------------------------------------------------------------------------------------

public IsAMember(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==6 || member==8)
		{
		    return 1;
		}
		if(lider==5 || lider==6 || lider==8)
		{
		    return 1;
		}
	}
	return 0;
}

public IsACop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==1 || member==2 || member==3 || member==16 || member==11 || member==28 || member==30 || member==32 || member==34)
		{
		    return 1;
		}
		else if(lider==1 || lider==2 || lider==3 || lider==16 || lider==11 || lider==28 || lider==30 || lider==32 || lider==34)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAGang(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==14 || member==17 || member==18 || member==19 || member==20 || member==21 || member==22 || member==23 || member==25 || member== 29 || member== 31)
		{
		    return 1;
		}
		else if(lider==5 || lider==14 || lider==17 || lider==18 || lider==19 || lider==20  || lider==21 || lider==22 || lider==23 || lider==25 || lider==29 || lider==31)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAClub(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==21 || member==22)
		{
		    return 1;
		}
		else if(lider==21 || lider==22)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAMon(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==22)
		{
		    return 1;
		}
		else if(lider==22)
		{
		    return 1;
		}
	}
	return 0;
}
public IsASons(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==23)
		{
		    return 1;
		}
		else if(lider==23)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAHell(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==21)
		{
		    return 1;
		}
		else if(lider==21)
		{
		    return 1;
		}
	}
	return 0;
}

public IsAtClothShop(playerid)
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerToPoint(25.0,playerid,207.5627,-103.7291,1005.2578) || PlayerToPoint(25.0,playerid,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
		    return 1;
		}
		else if(PlayerToPoint(30.0,playerid,214.4470,-7.6471,1001.2109) || PlayerToPoint(50.0,playerid,161.3765,-83.8416,1001.8047) || PlayerToPoint(50.0,playerid,162.6288,-86.3102,1001.8047))
		{//Zip & Victim
		    return 1;
		}
	}
	return 0;
}

public IsAtGasStation(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(15.0,playerid,1941.9850,-1774.6639,19.7006))
	    {
	        if(IsAPlane(GetPlayerVehicleID(playerid)))
	        {
	            return 1;
	        }
		}
		if(PlayerToPoint(6.0,playerid,1004.0070,-939.3102,42.1797) || PlayerToPoint(6.0,playerid,1944.3260,-1772.9254,13.3906) || PlayerToPoint(6.0,playerid,1400.6882,-1680.5344,42.4339) || PlayerToPoint(6.0,playerid,1496.5316,-1544.0677,23.5481) || PlayerToPoint(6.0,playerid,2737.3364,-1774.2123,43.7973))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-1609.7958,-2718.2048,48.5391))
		{//LS
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,-2029.4968,156.4366,28.9498) || PlayerToPoint(8.0,playerid,-2408.7590,976.0934,45.4175))
		{//SF
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,1380.4712,462.7467,20.1107) || PlayerToPoint(8.0,playerid,1385.0475,460.5417,20.1068))
		{//PC
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,1383.5532,457.1286,19.9561) || PlayerToPoint(8.0,playerid,1379.1952,459.1295,19.9587))
		{//PC
		    return 1;
		}
		else if(PlayerToPoint(5.0,playerid,-2243.9629,-2560.6477,31.8841) || PlayerToPoint(8.0,playerid,-1676.6323,414.0262,6.9484))
		{//Between LS and SF
		    return 1;
		}
		else if(PlayerToPoint(6.0,playerid,2202.2349,2474.3494,10.5258) || PlayerToPoint(10.0,playerid,614.9333,1689.7418,6.6968))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,-1328.8250,2677.2173,49.7665) || PlayerToPoint(6.0,playerid,70.3882,1218.6783,18.5165))
		{//LV
		    return 1;
		}
		else if(PlayerToPoint(8.0,playerid,2113.7390,920.1079,10.5255) || PlayerToPoint(6.0,playerid,-1327.7218,2678.8723,50.0625))
		{//LV
		    return 1;
		}
	}
	return 0;
}
public IsAtGasStationgang(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(15.0,playerid,-91.4212,-1169.1992,2.4298))
		{// posto abandoado
		    return 1;
		}
	}
	return 0;
}
public IsAtFishPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(1.0,playerid,403.8266,-2088.7598,7.8359) || PlayerToPoint(1.0,playerid,398.7553,-2088.7490,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,396.2197,-2088.6692,7.8359) || PlayerToPoint(1.0,playerid,391.1094,-2088.7976,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,383.4157,-2088.7849,7.8359) || PlayerToPoint(1.0,playerid,374.9598,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,369.8107,-2088.7927,7.8359) || PlayerToPoint(1.0,playerid,367.3637,-2088.7925,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
		else if(PlayerToPoint(1.0,playerid,362.2244,-2088.7981,7.8359) || PlayerToPoint(1.0,playerid,354.5382,-2088.7979,7.8359))
		{//Fishplace at the bigwheel
		    return 1;
		}
        else if(PlayerToPoint(1.0,playerid,1990.4675,-1183.3180,20.5116) || PlayerToPoint(1.0,playerid,1991.7828,-1183.4724,20.5116) || PlayerToPoint(1.0,playerid,1949.8274,-1215.4484,20.5019) || PlayerToPoint(1.0,playerid,1948.1309,-1215.2512,20.5019))
		{//Parque Gleen
		    return 1;
		}
	}
	return 0;
}

public IsAtCookPlace(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
	    {//Cluckin Bell
	        return 1;
	    }
	    else if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078) || PlayerToPoint(4.0,playerid,681.5817,-456.0235,-25.6099))
		{//Burgershot
		    return 1;
		}
		else if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
		{//Well Stacked Pizza
		    return 1;
		}
	}
	return 0;
}
public IsAtBar(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		if(PlayerToPoint(4.0,playerid,495.7801,-76.0305,998.7578) || PlayerToPoint(4.0,playerid,499.9654,-20.2515,1000.6797) || PlayerToPoint(4.0,playerid,1551.4578,-1717.0885,13.5469) || PlayerToPoint(4.0,playerid,1254.0154,-792.7376,1084.2344) || PlayerToPoint(15.0,playerid,942.4760,4.9500,1000.9297))
		{//In grove street bar (with girlfriend), and in Havanna
		    return 1;
		}
		else if(PlayerToPoint(4.0,playerid,1215.9480,-13.3519,1000.9219) || PlayerToPoint(10.0,playerid,-2658.9749,1407.4136,906.2734) || PlayerToPoint(10.0,playerid,378.5476,-189.0421,1000.6328) || PlayerToPoint(10.0,playerid,968.8497,-46.3663,1001.1172) || PlayerToPoint(6.0,playerid,2372.4138,-1133.9048,1050.8750))
		{//PIG Pen
		    return 1;
		}
		else if(PlayerToPoint(2.0,playerid,1511.2272,-1711.9803,14.0469) || PlayerToPoint(2.0,playerid,1511.2172,-1714.7565,14.0469) || PlayerToPoint(10.0,playerid,239.0100,-2241.8064,1.9766))
		{
		    return 1;
		}
	}
	return 0;
}
public IsABoat(carid)
{
    new oo = GetVehicleModel(carid);
 	if(oo == 430 || oo == 452 || oo == 453 || oo == 454 || oo == 472 || oo == 473 || oo == 484 || oo == 493 || oo == 595)
	{
		return 1;
	}
	return 0;
}

public IsAPlane(carid)
{
	new oo = GetVehicleModel(carid);
	if(oo == 487 || oo == 520 || oo == 417 || oo == 425 || oo == 447 || oo == 460 || oo == 464 || oo == 465 || oo == 469 || oo == 476 || oo == 488 || oo == 497
	|| oo == 501 || oo == 511  || oo == 512 || oo == 513 || oo == 519 || oo == 548 || oo == 553 || oo == 563 || oo == 577 || oo == 592 || oo == 593)
	{
		return 1;
	}
	return 0;
}

public IsACopCar(carid)//copcarroo
{
    for(new i=0;i<sizeof(CopCarros);i++)
	{
		if(carid == CopCarros[i])
		{
            SetVehicleNumberPlate(carid, "BPF Cop");
			return 1;
		}
	}
	return 0;
}

public IsAEnforcerCar(carid) // Enforcers
{
	if(GetVehicleModel(carid) == 428 || GetVehicleModel(carid) == 247 || GetVehicleModel(carid) == 427)
	{
		return 1;
	}
	return 0;
}
public IsABlindadoCar(carid) // Enforcers
{
	if(GetVehicleModel(carid) == 528)
	{
		return 1;
	}
	return 0;
}
public IsACaminhaozinhoCar(carid) // Trocar e Pegar Materiais
{
  	if(GetVehicleModel(carid) == 609)
	{
		return 1;
	}
	return 0;
}
public IsAAmbu(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==4 || member==4)
		{
		    return 1;
		}
		else if(lider==4 || lider==4)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAnAmbulanceCar(carid)
{
    for(new i=0;i<sizeof(MedicosCar);i++)
    {
    	if(carid == MedicosCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Gov");
    		return 1;
    	}
    }
	return 0;
}

public IsAGatev(carid)
{
	if((carid == 189) || (carid == 190) || (carid == 188) || (carid == 187))
	{
		return 1;
	}
	return 0;
}

//------------------------------------------------------------------------------------------------------

public OnPlayerConnect(playerid)
{
    PlayAudioStreamForPlayer(playerid, "http://195.122.253.112/public/mp3/Metallica/Metallica%20'Wherever%20I%20May%20Roam'.mp3");
    TextDrawShowForPlayer(playerid, TextLogin0);
    TextDrawShowForPlayer(playerid, TextLogin1);
    TextDrawShowForPlayer(playerid, TextLogin2);
    TextDrawShowForPlayer(playerid, TextLogin3);
    TextDrawShowForPlayer(playerid, TextLogin4);
    TextDrawShowForPlayer(playerid, TextLogin5);
    TextDrawShowForPlayer(playerid, TextLogin6);
    TextDrawShowForPlayer(playerid, TextLogin7);
    TextDrawShowForPlayer(playerid, TextLogin8);
    TextDrawShowForPlayer(playerid, TextLogin9);
    TextDrawShowForPlayer(playerid, TextLogin10);

    ContarJogadores();
    RemoveBuildingForPlayer(playerid, 1311, 1823.4219, -1647.2734, 16.6719, 0.25);
    RemoveBuildingForPlayer(playerid, 1226, 1817.5156, -1623.8359, 16.3594, 0.25);
    RemoveBuildingForPlayer(playerid, 4024, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 4044, 1481.1875, -1785.0703, 22.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 4002, 1479.8672, -1790.3984, 56.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 3980, 1481.1875, -1785.0703, 22.3828, 0.25);
    RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.1);
    RemoveBuildingForPlayer(playerid, 1527, 1448.2344, -1755.8984, 14.5234, 0.25);
    //postes
    RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1721.6328, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1693.9688, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1688.0859, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1673.7109, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1647.6406, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1621.9609, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1525.3828, -1611.1563, 16.4219, 0.25);
	//Amigo dos Amigos
	RemoveBuildingForPlayer(playerid, 1294, 1613.8672, -1314.4609, 20.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1611.7344, -1311.2734, 19.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1625.3672, -1361.9063, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1625.3984, -1349.5781, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1625.4766, -1354.7500, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1625.4375, -1330.1250, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1625.4766, -1337.2266, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1625.4766, -1342.3984, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1639.7344, -1349.7031, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1639.7344, -1337.3984, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1639.7656, -1330.2813, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1653.0938, -1323.7422, 16.9766, 0.25);
	RemoveBuildingForPlayer(playerid, 1215, 1651.9531, -1324.9922, 16.9766, 0.25);
    if(IsPlayerNPC(playerid))
  	{
        Hospital[playerid] = 1;
        SpawnPlayer(playerid);
        new nome[24], str[50];
		GetPlayerName(playerid, nome, 24);
		format(str, sizeof str, "%s - Arara", nome);
		if(dini_Isset("Araras.ini", str))
		{
			Infoa[playerid][Arara] = bool:dini_Bool("Araras.ini", str);
			format(str, sizeof str, "%s - Racao", nome);
			Infoa[playerid][Racao] = bool:dini_Bool("Araras.ini", str);
			format(str, sizeof str, "%s - Grande", nome);
			Infoa[playerid][Grande] = dini_Int("Araras.ini", str);
			if(Infoa[playerid][Arara])
			{
				Infoa[playerid][Tempo] = SetTimerEx("Crescimento", 300000, true, "i", playerid);
				SendClientMessage(playerid, 0xFFFF00FF, "Alimente sua arara ou ela morrerá.");
			}
	  	}
	 	return 1;
   	}
    if(!IsPlayerNPC(playerid)) pObject[playerid][slotreserved] = false;
//===============================[INICIO DO GET IP]=============================//
   	IPlog(playerid);
    MorroShowForPlayer(playerid);
    if(Morro[Guerra] >= 1)
    {
    	MorroFlashForPlayer(playerid);
    }
    PedreiraShowForPlayer(playerid);
    if(Pedreira[Guerra] >= 1)
    {
    	PedreiraFlashForPlayer(playerid);
    }

//===============================[FIM DO GET IP]================================//
	if(strfind(PlayerName(playerid), "_", true) == -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "]", true) != -1 || strfind(PlayerName(playerid), "lixo", true) != -1 || strfind(PlayerName(playerid), "buceta", true) != -1 || strfind(PlayerName(playerid), "caralho", true) != -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "server", true) != -1
	|| strfind(PlayerName(playerid), "servidor", true) != -1 || strfind(PlayerName(playerid), "crash", true) != -1 || strfind(PlayerName(playerid), "bpl", true) != -1 || strfind(PlayerName(playerid), "gamerx", true) != -1 || strfind(PlayerName(playerid), "[", true) != -1 || strfind(PlayerName(playerid), "189", true) != -1 || strfind(PlayerName(playerid), "201", true) != -1 || strfind(PlayerName(playerid), "200", true) != -1 || strfind(PlayerName(playerid), ".", true) != -1
	|| strfind(PlayerName(playerid), "*", true) != -1 || strfind(PlayerName(playerid), "(", true) != -1 || strfind(PlayerName(playerid), ")", true) != -1 || strfind(PlayerName(playerid), "@", true) != -1 || strfind(PlayerName(playerid), "amx", true) != -1 || strfind(PlayerName(playerid), "prn", true) != -1 || strfind(PlayerName(playerid), "__", true) != -1)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você Foi Kickado por usar algum nome incorreto!");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Seu nome deve ser no formato Nome_Sobrenome Ex: Guru_Josh");
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Troque-o e volte, Obrigado.");
        format(gstring,64,OpenAccPlayer,PlayerName(playerid));
		Kick(playerid);
		dini_Remove(gstring);
		return 1;
	}
	for(new i; i<sizeof(NicksProibidos); i++)
	{
  		if(strcmp(NicksProibidos[i],PlayerName(playerid),true)==0)
		{
			SendClientMessage(playerid,CORS,"Você está usando um nome que é proibido no BPF!");
			SendClientMessage(playerid,CORS,"Você foi banido!");
            getdate(Ano, Mes, Dia);
			SBan(playerid, "Pego Usando um nome que é proibido no BPF", "Automático");
		}
	}
	//above hp textdraw
	SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
	//=========================================
	gActivePlayers[playerid]++;
	strmid(InfoTheus[playerid][pMotivo], "Nenhum", 0, strlen("Nenhum"), 256);
	strmid(InfoTheus[playerid][pAdmBan], "Nenhum", 0, strlen("Nenhum"), 256);
	strmid(InfoTheus[playerid][pData], "0/0/0", 0, strlen("0/0/0"), 256);
	strmid(InfoTheus[playerid][pHora], "0:0:0", 0, strlen("0:0:0"), 256);
	//pban[playerid] = 0;
	Reduzido[playerid] = 0; // pedagio
	var1[playerid] = 0;
	EmDialog[playerid] = 0;
	votou[playerid] = true;
	VagaLimpar[playerid] = 99;
	TruckMission[playerid] = 0;
//	emguerra[playerid] = 0;
	storeexit[playerid] = 0;
	away[playerid] = 0;
	pCofreOrg[playerid] = 0;
	InviteOffer[playerid] = 999;
	InviteJob[playerid] = 0;
	mudandonick[playerid] = 0;
	gpTimes[playerid] = 0;
	gPlayerTerminal[playerid] = 0;
 	HideIR[playerid] = 0;
    Refueling[playerid] = 0;
    GasETanto[playerid] = 0;
    GranaGas[playerid] = 0;
    cdivulgar[playerid] = 0;
    PlayerInfo[playerid][pMuted] = 0;
    PlayerInfo[playerid][pVotou] = 0;
    PlayerInfo[playerid][pOnline] = 0;
    PlayerInfo[playerid][pChave] = 0;
    Engine[playerid]=0;
	Farois[playerid]=0;
	SelectChar[playerid] = 0;  HidePM[playerid] = 0; PhoneOnline[playerid] = 0; OfAssalto[playerid] = 999; precoassalto[playerid] = 0;
	SelectCharID[playerid] = 0; SelectCharPlace[playerid] = 0; ChosenSkin[playerid] = 0; SemBombas[playerid] = 0;
	GettingEmprego[playerid] = 0; GuardOffer[playerid] = 999; GuardPrice[playerid] = 0;
    ApprovedAdvogado[playerid] = 0;
	CurrentMoney[playerid] = 0; UsedFind[playerid] = 0;
	CP[playerid] = 0; Robbed[playerid] = 0; PlayerInfo[playerid][pSpawn] = 0;
	CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; CarCalls[playerid] = 0;
	RobbedTime[playerid] = 0; MoneyMessage[playerid] = 0; Condom[playerid] = 0;
	SexOffer[playerid] = 999; SexPrice[playerid] = 0; MendigoOffer[playerid] = 999; MendigoPrice[playerid] = 0;
	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0;
	TalkingLive[playerid] = 255; LiveOffer[playerid] = 999;
	RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; MapIconsShown[playerid] = 0;
	DrugOffer[playerid] = 999; PlayerCuffed[playerid] = 0; PlayerCuffedTime[playerid] = 0;
	DrugPrice[playerid] = 0; RegistrationStep[playerid] = 0;
	DrugGram[playerid] = 0; ConnectedToPC[playerid] = 0; OrderReady[playerid] = 0;
	JailPrice[playerid] = 0; Hospital[playerid] = 1; GotHit[playerid] = 0;
	WantedPoints[playerid] = 0; SetPlayerWantedLevel(playerid, 0); GoChase[playerid] = 999; GetChased[playerid] = 999; PlacedNews[playerid] = 0;
	OnDuty[playerid] = 0; TestFishes[playerid] = 0;
	BoxWaitTime[playerid] = 0; ChangePos2[playerid][1] = 0;
	SafeTime[playerid] = 60; TransportDuty[playerid] = 0; PlayerTied[playerid] = 0;
	BusCallTime[playerid] = 0; CopsrondaCallTime[playerid] = 0; TaxiCallTime[playerid] = 0; MedicCallTime[playerid] = 0; MechanicCallTime[playerid] = 0;
	BusrouteEast[playerid][0] = 0; BusrouteWest[playerid][0] = 0; BusShowLocation[playerid][0] = 0; BusShowLocationC[playerid] = 0;
	FindTimePoints[playerid] = 0; FindTime[playerid] = 0; EmpregoDuty[playerid] = 0; EmRondaCop[playerid] = 0;
	Mobile[playerid] = 255; Music[playerid] = 0; BoxOffer[playerid] = 999; PlayerBoxing[playerid] = 0;
	Spectate[playerid] = 255; PlayerDrunk[playerid] = 0; PlayerDrunkTime[playerid] = 0;
	Unspec[playerid][sLocal] = 255; FishCornt[playerid] = 0; ConsumingMoney[playerid] = 0;
    gLastCar[playerid] = 0; HideAdm[playerid] = 0;
	/*gNews[playerid] = 0;*/ BigEar[playerid] = 0; gDice[playerid] = 0; gFam[playerid] = 0;
	gPlayerLogged[playerid] = 0; gPlayerLogTries[playerid] = 0; gPlayerConta[playerid] = 0;
	gPlayerSpawned[playerid] = 0;
	PlayerTazeTime[playerid] = 0; PlayerStoned[playerid] = 0;
	TicketOffer[playerid] = 999; TicketMoney[playerid] = 0;
	MatsHolding[playerid] = 0;
	gPlayerMission[playerid] = 0; TaxiAccepted[playerid] = 999; BusAccepted[playerid] = 999; MedicAccepted[playerid] = 999; MechanicAccepted[playerid] = 999; CopsrondaAccepted[playerid] = 999;
	PlayerInfo[playerid][pCash] = 1000; NoFuel[playerid] = 0;
	HireCar[playerid] = 0;
	TransportValue[playerid] = 0; TransportMoney[playerid] = 0; TransportTime[playerid] = 0; TransportCost[playerid] = 0; TransportDriver[playerid] = 999;
	Locator[playerid] = 0; ConviteFamy[playerid] = 0;
	WatchingTV[playerid] = 0; PlayerPaintballing[playerid] = 0; PlayerPaintballKills[playerid] = 0;
	Fishes[playerid][pLastFish] = 0; Fishes[playerid][pFishID] = 0;
	ProposeOffer[playerid] = 999; MarryWitness[playerid] = 999; MarryWitnessOffer[playerid] = 999; MarriageCeremoney[playerid] = 0; ProposedTo[playerid] = 999; GotProposedBy[playerid] = 999; DivorceOffer[playerid] = 999;
	GranaTheus(playerid,PlayerInfo[playerid][pCash]);
    InfoTheus[playerid][NumSenha] = 999;
    AdvogPreco[playerid] = 0;
    ConviteAdv[playerid] = 999;
	ServerOwner[playerid] = 0;
    RelatoEntregue[playerid] = 0;
    BaniuPlayer[playerid] = 0;
	MudarNickAceito[playerid] = 0;
    MudarSenhaAceito[playerid] = 0;
    antifakekill[playerid] = 0;
    XiterCrashando[playerid] = 0;
    Sequestrado[playerid] = 999;
	InAFoodPlace[playerid] = 0;
	MiraInfo[playerid] = 0;
	OnEquipado[playerid] = 0;
	OnMafiaEquipado[playerid] = 0;
	TheusInfo[playerid][PLojaA1] = 0;
	TheusInfo[playerid][PLojaA2] = 0;
	TheusInfo[playerid][PpLoja247] = 0;
	TheusInfo[playerid][PpLoja2472] = 0;
	PlayerInfo[playerid][pLevel] = 0;
    PlayerInfo[playerid][pCone] = 0;
	PlayerInfo[playerid][pAdmin] = 0;
    PlayerInfo[playerid][pHelper] = 0;
    IDpassouArma[playerid] = 9999;
    PlayerInfo[playerid][pVIP] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pSex] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pExp] = 0;
	PlayerInfo[playerid][pConta] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pDeaths] = 0;
	PlayerInfo[playerid][pPhoneBook] = 0;
	PlayerInfo[playerid][pLottoNr] = 0;
	PlayerInfo[playerid][pFishes] = 0;
	PlayerInfo[playerid][pBiggestFish] = 0;
	PlayerInfo[playerid][pEmprego] = 0;
	PlayerInfo[playerid][pSalario] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pDorgado] = 0;
	PlayerInfo[playerid][pDorgado2] = 0;
	PlayerInfo[playerid][pDoenca] = 0;
	PlayerInfo[playerid][pDrogas] = 0;
	PlayerInfo[playerid][pDrogas2] = 0;
	PlayerInfo[playerid][pDrogas3] = 0;
	PlayerInfo[playerid][pSafeDrogas] = 0;
	PlayerInfo[playerid][pSafeDrogas2] = 0;
	PlayerInfo[playerid][pSafeDrogas3] = 0;
	PlayerInfo[playerid][pLider] = 0;
	PlayerInfo[playerid][pMembro] = 0;
	PlayerInfo[playerid][pFamyLider] = 0;
	PlayerInfo[playerid][pFamyMember] = 0;
	PlayerInfo[playerid][pCargo] = 0;
	PlayerInfo[playerid][pContractTime] = 0;
	PlayerInfo[playerid][pDetSkill] = 0;
	PlayerInfo[playerid][pSexSkill] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pLawSkill] = 0;
	PlayerInfo[playerid][pMechSkill] = 0;
	PlayerInfo[playerid][pNewsSkill] = 0;
	PlayerInfo[playerid][pDrogasSkill] = 0;
	PlayerInfo[playerid][pCookSkill] = 0;
	PlayerInfo[playerid][pFishSkill] = 0;
	PlayerInfo[playerid][pSHealth] = 0.0;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pLocal] = 255;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pSkin] = 23;
	admtrampando[playerid] = 0;
    helptrampando[playerid] = 0;
    IsXiter[playerid] = 0;
    new randphone = 1000 + random(9999);//minimum 1000  max 9999 //giving one at the start
	PlayerInfo[playerid][pPnumber] = randphone;
	PlayerInfo[playerid][pPHousekey] = 255;
	PlayerInfo[playerid][pPbiskey] = 255;
	PlayerInfo[playerid][pCarLic] = 0;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 0;
	PlayerInfo[playerid][pFishLic] = 0;
	PlayerInfo[playerid][pGunLic] = 0;
	PlayerInfo[playerid][pPayDay] = 0;
	PlayerInfo[playerid][pCDPlayer] = 0;
	PlayerInfo[playerid][pWins] = 0;
	PlayerInfo[playerid][pLoses] = 0;
	PlayerInfo[playerid][pAlcoholPerk] = 0;
	PlayerInfo[playerid][pDrugPerk] = 0;
	PlayerInfo[playerid][pMiserPerk] = 0;
	PlayerInfo[playerid][pPainPerk] = 0;
	PlayerInfo[playerid][pTraderPerk] = 0;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	pRoadblock[playerid] = 0;
	PlayerInfo[playerid][pParedao] = 0;
	pRoadBloq[playerid] = 0;
	SpikeInfo[playerid][sCreated] = 0;
	PlayerInfo[playerid][pRequestingBackup] = 0;
	PlayerInfo[playerid][pMask] = 0;
	PlayerInfo[playerid][pMaskuse] = 0;
	PlayerInfo[playerid][pBarraca] = 0;
	PlayerInfo[playerid][pLuta] = 0;
	CurarAtivo[playerid] = 999;
	CurarPreco[playerid] = 0;
 	PlayerInfo[playerid][pLastDia] = 0;
    PlayerInfo[playerid][pLastMes] = 0;
    PlayerInfo[playerid][pLastAno] = 1012;
    PlayerInfo[playerid][pLastHora] = 0;
    PlayerInfo[playerid][pLastMinuto] = 0;
    PlayerInfo[playerid][pLastSegundo] = 0;
   	SetPVarInt(playerid, "PlayerMorto", 0);
    ClearCrime(playerid);
	ClearFishes(playerid);
	ClearCooking(playerid);
	ClearGroceries(playerid);
	ClearMarriage(playerid);
	strmid(StrPasswrd[playerid], "PlayStartOwna", 0, strlen("PlayStartOwna"), 255);
	SetPlayerColor(playerid,COLOR_GRAD2);
	TextShow[playerid] = false;
	HouseEntered[playerid] = 255;
	new string2[64];
	format(string2, sizeof(string2), OpenAccPlayer, PlayerName(playerid));
	SendClientMessage(playerid, 0x1E90FFAA, "[BPF]{FFFFFF} Carregando... aguarde alguns segundos!");
	//mapaicone
	SetPlayerMapIcon(playerid, 1,-1956.6346,293.0974,35.4688, 55, 0xE6E6E6E6);//wang cars sf
	SetPlayerMapIcon(playerid, 2,1552.6703,-1675.5068,16.1953, 30, 0xE6E6E6E6);//dp ls
	SetPlayerMapIcon(playerid, 3,2802.2051,-1180.1276,25.5363, 60, 0xE6E6E6E6);//vagos
	SetPlayerMapIcon(playerid, 4,2516.1411,-1675.4065,13.9113, 62, 0xE6E6E6E6);//grove
	SetPlayerMapIcon(playerid, 5,1687.0999,-2120.1000,13.1999, 58, 0xE6E6E6E6);//aztecas
	SetPlayerMapIcon(playerid, 6,1105.7688,-1206.7142,17.8047, 59, 0xE6E6E6E6);//ballas
	SetPlayerMapIcon(playerid, 7,11484.3788,-1777.2107,13.6554, 56, 0xE6E6E6E6);//Prefeitura
	SetPlayerMapIcon(playerid, 9,2243.6750,-1669.8136,21.0313, 45, 0xE6E6E6E6);//Binco
	SetPlayerMapIcon(playerid, 10,461.3484,-1500.9084,31.0592, 45, 0xE6E6E6E6);//ZIP
	SetPlayerMapIcon(playerid, 11,1461.8320,-1010.3407,26.8438, 52, 0xE6E6E6E6);//Banco
	SetPlayerMapIcon(playerid, 12,1070.3787,-1873.8467,13.5469, 18, 0xE6E6E6E6);//Loja de Armas 2
	SetPlayerMapIcon(playerid, 16,1415.8468,-1693.0602,13.5469, 32, 0xE6E6E6E6); // - centro de licencas
	SetPlayerMapIcon(playerid, 19,1310.1265,-1367.8122,13.5408, 32, 0xE6E6E6E6); // - paintball
	SetPlayerMapIcon(playerid, 20,2350.0000,-1411.8000,23.9923, 32, 0xE6E6E6E6); // - UpCasa
	SetPlayerMapIcon(playerid, 21,1205.9715,-1459.6737,13.3859, 32, 0xE6E6E6E6); // - 24-7's
	SetPlayerMapIcon(playerid, 24,334.0479,-1507.9438,36.0391, 30, 0xE6E6E6E6); //dp R.O.T.A
	SetPlayerMapIcon(playerid, 25,918.8992,-1252.3286,16.2109, 30, 0xE6E6E6E6); //dp pc
	SetPlayerMapIcon(playerid, 26,1791.212036,-1164.631713,23.828100, 18 , 0xE6E6E6E6);//Loja de Armas 1
	SetPlayerMapIcon(playerid, 25,914.2606,-1003.7186,37.9976, 30 , 0xE6E6E6E6);//cp PF
	SetPlayerMapIcon(playerid, 29,2644.5134,-2035.1990,14.8270, 27 , 0xE6E6E6E6);//TUNAR CARROS GANGS
	SetPlayerMapIcon(playerid, 31,2104.2051,-1806.5345,13.5547, 29 , 0xE6E6E6E6);//PIZZARIA LS
    SetPlayerMapIcon(playerid, 33,550.7012,-1278.5721,17.2482, 55 , 0xE6E6E6E6);//Carros Aluguel 1
    SetPlayerMapIcon(playerid, 35,1172.6062,-1323.6276,15.4031, 22 , 0xE6E6E6E6);//Hospital
    SetPlayerMapIcon(playerid, 36,-2396.6487,-2194.7942,32.9527, 53 , 0xE6E6E6E6); // PISTA DE RALLY
    SetPlayerMapIcon(playerid, 37,-1529.5208,476.5718,7.1875, 30 , 0xE6E6E6E6); // HQ EXERCITO
    SetPlayerMapIcon(playerid, 38,975.4691,-1335.9618,13.5319, 49 , 0xE6E6E6E6); // BAR PAWNO
 	SetPlayerMapIcon(playerid, 8,1498.4795,-1582.9222,13.5469, 32 , 0xE6E6E6E6); //restaurante
 	SetPlayerMapIcon(playerid, 13,1206.6914,-1751.1108,13.5938, 32 , 0xE6E6E6E6); //aluguel de carros
    SetPlayerMapIcon(playerid, 14,1327.8535,-1558.0070,13.5469, 32 , 0xE6E6E6E6);//phone company
    SetPlayerMapIcon(playerid, 15,-33.7243,-1127.6255,1.0781, 32 , 0xE6E6E6E6);//gas company
    SetPlayerMapIcon(playerid, 17,-2521.0059,-623.3312,132.7690, 32 , 0xE6E6E6E6);//eletricity company
    SetPlayerMapIcon(playerid, 18,1636.6891,-1521.8157,13.5987, 32 , 0xE6E6E6E6);//pay'n spray
    SetPlayerMapIcon(playerid, 22,844.6560,-1045.5557,25.4301, 32 , 0xE6E6E6E6);//cnn
    SetPlayerMapIcon(playerid, 23,1374.7015,-1599.6871,13.5469, 32 , 0xE6E6E6E6);//car wash
    SetPlayerMapIcon(playerid, 28,2281.9092,-2364.2791,13.5469, 32 , 0xE6E6E6E6);//kart
    SetPlayerMapIcon(playerid, 30,931.9179,-1071.1412,24.2962, 32 , 0xE6E6E6E6);//cemiterio
	SetPlayerMapIcon(playerid, 32,1022.5547,-1121.6744,23.8720, 32 , 0xE6E6E6E6); //cassino
	SetPlayerMapIcon(playerid, 39,1577.2410,-1474.7906,14.2203, 43 , 0xE6E6E6E6); //cocaina
	SetPlayerMapIcon(playerid, 44,1892.746704,-2244.098876,13.546899, 32 , 0xE6E6E6E6); //aeroporto
	SetPlayerMapIcon(playerid, 45,-1968.559814,296.269592,35.171901, 32 , 0xE6E6E6E6); //wang cars
	SetPlayerMapIcon(playerid, 46,1330.193603,-984.074523,33.896598, 32 , 0xE6E6E6E6); //aluguel de carros 2
	SetPlayerMapIcon(playerid, 47,1703.2197,-1470.1509,13.5469, 32 , 0xE6E6E6E6); //produtos
	SetPlayerMapIcon(playerid, 48,1272.3673,-1124.3743,24.1633, 32 , 0xE6E6E6E6); //trocar interior
	SetPlayerMapIcon(playerid, 49,154.1630,-1946.4764,5.2996, 32 , 0xE6E6E6E6); //condominio vip praia
    //SetPlayerMapIcon(playerid, 55,2780.4939,-1812.2635,11.8438, 32 , 0xE6E6E6E6); //conce
    SetPlayerMapIcon(playerid, 33,2780.4939,-1812.2635,11.8438, 55 , 0xE6E6E6E6);//Carros Aluguel 1
	if(dini_Exists(string2))
	{
		gPlayerConta[playerid] = 1;
	}
	else
	{
		gPlayerConta[playerid] = 0;
	}
	new connecting_ip[32+1];
    GetPlayerIp(playerid,connecting_ip,32);
    new num_players_on_ip = GetNumberOfPlayersOnThisIP(connecting_ip);
    if(num_players_on_ip > MAX_IPSCONNECT)
    {
        GetPlayerName(playerid, sendername, sizeof(sendername));
        printf("MAXIPs: Player ID(%d) Limite IP: %d, IP %s Banido!", playerid, MAX_IPSCONNECT, connecting_ip);
        format(gstring, sizeof(gstring), "AntiAttack:{80E3FF}%s{E84F33}[ID: {80E3FF}%d{E84F33}] Foi acusado ser ser Um BotAttack e Foi banido!",sendername,playerid);
        ABroadCast(COLOR_LIGHTRED,gstring,1);
        Ban(playerid);
        return 1;
    }
    for(new i = 0; i < sizeof(Carro); i++)
	{
        if(Carro[i][CarroON] == 1)
        {
            OnVehicleStreamIn(i, playerid);
        }
    }
	return 1;
}
public ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid))
	{
  		strmid(PlayerInfo[playerid][pMarriedTo], "Ninguem", 0, strlen("Ninguem"), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return 1;
}
public ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
	}
	return 1;
}

public FishCost(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new cost = 0;
		switch (fish)
		{
		    case 1:
		    {
		        cost = 1;
		    }
		    case 2:
		    {
		        cost = 3;
		    }
		    case 3:
		    {
		        cost = 3;
		    }
		    case 5:
		    {
		        cost = 5;
		    }
		    case 6:
		    {
		        cost = 2;
		    }
		    case 8:
		    {
		        cost = 8;
		    }
		    case 9:
		    {
		        cost = 12;
		    }
		    case 11:
		    {
		        cost = 9;
		    }
		    case 12:
		    {
		        cost = 7;
		    }
		    case 14:
		    {
		        cost = 12;
		    }
		    case 15:
		    {
		        cost = 9;
		    }
		    case 16:
		    {
		        cost = 7;
		    }
		    case 17:
		    {
		        cost = 7;
		    }
		    case 18:
		    {
		        cost = 10;
		    }
		    case 19:
		    {
		        cost = 4;
		    }
		    case 21:
		    {
		        cost = 3;
		    }
		}
		return cost;
	}
	return 0;
}

public ClearFishes(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Fishes[playerid][pFid1] = 0; Fishes[playerid][pFid2] = 0; Fishes[playerid][pFid3] = 0;
		Fishes[playerid][pFid4] = 0; Fishes[playerid][pFid5] = 0;
		Fishes[playerid][pWeight1] = 0; Fishes[playerid][pWeight2] = 0; Fishes[playerid][pWeight3] = 0;
		Fishes[playerid][pWeight4] = 0; Fishes[playerid][pWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearFishID(playerid, fish)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		switch (fish)
		{
		    case 1:
		    {
		        strmid(Fishes[playerid][pFish1], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight1] = 0;
		        Fishes[playerid][pFid1] = 0;
		    }
		    case 2:
		    {
		        strmid(Fishes[playerid][pFish2], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight2] = 0;
		        Fishes[playerid][pFid2] = 0;
		    }
		    case 3:
		    {
		        strmid(Fishes[playerid][pFish3], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight3] = 0;
		        Fishes[playerid][pFid3] = 0;
		    }
		    case 4:
		    {
		        strmid(Fishes[playerid][pFish4], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight4] = 0;
		        Fishes[playerid][pFid4] = 0;
		    }
		    case 5:
		    {
		        strmid(Fishes[playerid][pFish5], string, 0, strlen(string), 255);
		        Fishes[playerid][pWeight5] = 0;
		        Fishes[playerid][pFid5] = 0;
		    }
		}
	}
	return 1;
}

public ClearCooking(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Cooking[playerid][pCookID1] = 0; Cooking[playerid][pCookID2] = 0; Cooking[playerid][pCookID3] = 0;
		Cooking[playerid][pCookID4] = 0; Cooking[playerid][pCookID5] = 0;
		Cooking[playerid][pCWeight1] = 0; Cooking[playerid][pCWeight2] = 0; Cooking[playerid][pCWeight3] = 0;
		Cooking[playerid][pCWeight4] = 0; Cooking[playerid][pCWeight5] = 0;
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
	}
	return 1;
}

public ClearCookingID(playerid, cook)
{
	if(IsPlayerConnected(playerid))
	{
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nenhum");
		switch (cook)
		{
		    case 1:
		    {
		        strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight1] = 0;
		        Cooking[playerid][pCookID1] = 0;
		    }
		    case 2:
		    {
		        strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight2] = 0;
		        Cooking[playerid][pCookID2] = 0;
		    }
		    case 3:
		    {
		        strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight3] = 0;
		        Cooking[playerid][pCookID3] = 0;
		    }
		    case 4:
		    {
		        strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight4] = 0;
		        Cooking[playerid][pCookID4] = 0;
		    }
		    case 5:
		    {
		        strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
		        Cooking[playerid][pCWeight5] = 0;
		        Cooking[playerid][pCookID5] = 0;
		    }
		}
	}
	return 1;
}

public ClearGroceries(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
	    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
	    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
	}
	return 1;
}

public Lotto(number)
{
	new JackpotFallen = 0;
	format(gstring, sizeof(gstring), "Loterica: Hoje o numero sorteado foi o nº %d.", number);
    OOCNews(COLOR_WHITE, gstring);
    for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pLottoNr] > 0)
		    {
			    if(PlayerInfo[i][pLottoNr] == number)
			    {
			        JackpotFallen = 1;
					format(gstring, sizeof(gstring), "Loterica: %s ganhou R$%d com seu bilhete.", PlayerName(i), Jackpot);
					OOCNews(COLOR_WHITE, gstring);
					format(gstring, sizeof(gstring), "* Você ganhou R$%d com seu bilhete de loteria.", Jackpot);
					SendClientMessage(i, COLOR_YELLOW, gstring);
					ConsumingMoney[i] = 1;
					GranaTheus(i, Jackpot);
			    }
			    else
			    {
			        SendClientMessage(i, COLOR_GREY, " Você não tem um bilhete.");
			    }
			}
			PlayerInfo[i][pLottoNr] = 0;
		}
	}
	if(JackpotFallen)
	{
	    new rand = random(125000); rand += 15789;
	    Jackpot = rand;
	    SaveStuff();
	    format(gstring, sizeof(gstring), "Loterica: O prêmio acumulou para: R$%d.", Jackpot);
		OOCNews(COLOR_WHITE, gstring);
	}
	else
	{
	    new rand = random(15000); rand += 2158;
	    Jackpot += rand;
	    SaveStuff();
	    format(gstring, sizeof(gstring), "Loterica: O prêmio acumulou para: R$%d.", Jackpot);
		OOCNews(COLOR_WHITE, gstring);
	}
	return 1;
}

//------------------------------------------------------------------------------------------------------
public OnPlayerDisconnect(playerid, reason)
{
   	DeletePVar(playerid, "PlayerMorto");
    PlayerInfo[playerid][pOnline] = 0;
	SalvarPlayer(playerid);
    new caller = Mobile[playerid];
    new nome[24], str[50];
	GetPlayerName(playerid, nome, 24);
	format(str, sizeof str, "%s - Arara", nome);
	dini_BoolSet("Araras.ini", str, Infoa[playerid][Arara]);
	format(str, sizeof str, "%s - Racao", nome);
	dini_BoolSet("Araras.ini", str, Infoa[playerid][Racao]);
	format(str, sizeof str, "%s - Grande", nome);
	dini_IntSet("Araras.ini", str, Infoa[playerid][Grande]);
	if(caller != 255)
	{
		if(caller < 255)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "A ligação caiu...");
			CellTime[caller] = 0;
			CellTime[playerid] = 0;
			Mobile[caller] = 255;
		}
		Mobile[playerid] = 255;
		CellTime[playerid] = 0;
	}
	if(HireCar[playerid] > 0)
	{
		VTrancado[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
		SetVehicleToRespawn(HireCar[playerid]);
		HireCar[playerid] = 0;
	}
    if (PlayerInfo[playerid][pBarraca] != 0)
	{
		RemoveBarraca(playerid);
	}
	if (PlayerInfo[playerid][pParedao] != 0)
	{
		RemoveParedao(playerid);
	}
	if(pRoadblock[playerid] != 0)
	{
		RemoveRoadblock(playerid);
	}
    if(SpikeInfo[playerid][sCreated] != 0)
	{
		RemoveRoadPregos(playerid);
	}
	if(pRoadBloq[playerid] != 0)
	{
		RemoveRoadBloq(playerid);
	}
    if(PlayerInfo[playerid][pCone] != 0)
    {
        RemoveCone(playerid);
    }
    if(pRoadRampa[playerid][1] != 0) RemovePlataforma(playerid);
 	/*if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] != 3000)
	{
    	format(gstring, sizeof(gstring), "~p~%s: ~r~~h~OFF", PlayerName(playerid));
  		for(new i=0; i<MaiorID; i++)
		{
		    if(IsPlayerConnected(i))
			{
   				GameTextForPlayer(i, gstring , 1000, 1);
			}
		}
	}*/
    if(InfoTheus[playerid][NumSenha] != 999)
    {
        InfoTheus[playerid][NumSenha] = 999;
        strmid(InfoTheus[playerid][PergSenha], "Vazia", 0, strlen("Vazia"), 255);
        SenhasAtendimento --;
    }
    switch(reason)
    {
        case 0: format(gstring, sizeof(gstring), "%s saiu do server por perda de conexão ou crash.", PlayerName(playerid));
        case 1: format(gstring, sizeof(gstring), "%s saiu por vontade propria.", PlayerName(playerid));
        case 2: format(gstring, sizeof(gstring), "%s Saiu do servidor kickado ou banido.", PlayerName(playerid));
    }
    ProxDetector(100.0, playerid, gstring,0xFFBB77AA,0xFFBB77AA,0xFFBB77AA,0xFFBB77AA,0xFFBB77AA);
	gActivePlayers[playerid]--;
	if(MudarNickAceito[playerid] == 1)
	{
		MudarNickAceito[playerid] = 0;
	}
	if(ProvocoCasarao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZCasarao);
		GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
		GuerranoCasarao = 0;
		ProvocoCasarao[playerid] = 0;
		donocasarao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraCasarao);
	}
	if(ProvocoEstacao[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZEstacao);
		GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
		GuerranaEstacao = 0;
		ProvocoEstacao[playerid] = 0;
		donoestacao = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraEstacao);
	}
    if(ProvocoCemiterio[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZCemiterio);
		GangZoneShowForAll(GZCemiterio, 0xFFFFFF96);
		GuerranoCemiterio = 0;
		ProvocoCemiterio[playerid] = 0;
		donoCemiterio = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraCemiterio);
	}
	if(ProvocoShop[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZShop);
		GangZoneShowForAll(GZShop, 0xFFFFFF96);
		GuerranoShop = 0;
		ProvocoShop[playerid] = 0;
		donoShop = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraShop);
	}
    if(ProvocoPark[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZPark);
		GangZoneShowForAll(GZPark, 0xFFFFFF96);
		GuerranoPark = 0;
		ProvocoPark[playerid] = 0;
		donoPark = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraPark);
	}
	if(ProvocoSkate[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZSkate);
		GangZoneShowForAll(GZSkate, 0xFFFFFF96);
		GuerranoSkate = 0;
		ProvocoSkate[playerid] = 0;
		donoskate = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraSkate);
	}
	if(ProvocoPantano[playerid] == 1)
	{
		GangZoneStopFlashForAll(GZPantano);
		GangZoneShowForAll(GZPantano, 0xFFFFFF96);
		GuerranoPantano = 0;
		ProvocoPantano[playerid] = 0;
		donopantano = 0;
		Dominando[playerid] = 0;
		KillTimer(TempoGuerraPantano);
	}
 	for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(TaxiAccepted[i] < 999)
	        {
		        if(TaxiAccepted[i] == playerid)
		        {
		            TaxiAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            TaxiCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(CopsrondaAccepted[i] < 999)
	        {
		        if(CopsrondaAccepted[i] == playerid)
		        {
		            CopsrondaAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~Policial o player~n~~r~Deixou o jogo", 5000, 1);
		            CopsrondaCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(MedicAccepted[i] < 999)
	        {
		        if(MedicAccepted[i] == playerid)
		        {
		            MedicAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            MedicCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(MechanicAccepted[i] < 999)
	        {
		        if(MechanicAccepted[i] == playerid)
		        {
		            MechanicAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            MechanicCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	        else if(BusAccepted[i] < 999)
	        {
		        if(BusAccepted[i] == playerid)
		        {
		            BusAccepted[i] = 999;
		            GameTextForPlayer(i, "~w~O Cliente~n~~r~Saiu do jogo", 5000, 1);
		            BusCallTime[i] = 0;
		            DisablePlayerCheckpoint(i);
		        }
	        }
	    }
	}
	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
	{
	    if(IsPlayerConnected(TransportDriver[playerid]))
		{
		    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
		    TransportTime[TransportDriver[playerid]] = 0;
		    TransportCost[TransportDriver[playerid]] = 0;
		    format(gstring, sizeof(gstring), "~w~Passageiro saiu~n~~g~ganhou R$%d",TransportCost[playerid]);
		    GameTextForPlayer(TransportDriver[playerid], gstring, 5000, 1);
		}
	}
	if(GotHit[playerid] > 0)
	{
	    if(GetChased[playerid] < 999)
	    {
	        if(IsPlayerConnected(GetChased[playerid]))
	        {
	        	SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Seu contrato saiu do servidor.");
	            GoChase[GetChased[playerid]] = 999;
			}
	    }
	}
	if(PlayerPaintballing[playerid] != 0)
	{
	    PaintballPlayers --;
	}
	if(HireCar[playerid] != 299)
	{
		gLastDriver[HireCar[playerid]] = 300;
		VTrancado[HireCar[playerid]] = 0;
		UnLockCar(HireCar[playerid]);
	}
	if (gLastCar[playerid] > 0)
	{
		gLastDriver[gLastCar[playerid]] = 300;
		if(PlayerInfo[playerid][pPHousekey] != gLastCar[playerid]-1)
		{
			VTrancado[gLastCar[playerid]] = 0;
			UnLockCar(gLastCar[playerid]);
		}
	}
	if(PlayerBoxing[playerid] > 0)
	{
	    if(Boxer1 == playerid)
	    {
	        if(IsPlayerConnected(Boxer2))
	        {
	        	PlayerBoxing[Boxer2] = 0;
	        	SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
	        	SetPlayerInterior(Boxer2, 5);
	        	GameTextForPlayer(Boxer2, "~r~Luta interrompida", 5000, 1);
			}
	    }
	    else if(Boxer2 == playerid)
	    {
	        if(IsPlayerConnected(Boxer1))
	        {
	        	PlayerBoxing[Boxer1] = 0;
	        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186);
	        	SetPlayerInterior(Boxer1, 5);
	        	GameTextForPlayer(Boxer1, "~r~Luta interrompida", 5000, 1);
			}
	    }
	    InRing = 0;
     	RorndStarted = 0;
		Boxer1 = 255;
		Boxer2 = 255;
		TBoxer = 255;
	}
    if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
    else if(TransportDuty[playerid] == 2)
	{
		BusDrivers -= 1;
	}
	if(IsACop(playerid))
	{
	    if(EmRondaCop[playerid] == 1) { Copsronda -= 1; }
	}
	if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
	{
	    if(EmpregoDuty[playerid] == 1) { Medics -= 1; }
	}
	else if(IsAMec(playerid))
	{
	    if(EmpregoDuty[playerid] == 1) { Mechanics -= 1; }
	}
	BusrouteEast[playerid][0] = 0;
	BusrouteWest[playerid][0] = 0;
 	Delete3DTextLabel(ProcuradoP[playerid]);
    SetTimer("ContarJogadores", 3000, 0);
    gPlayerLogged[playerid] = 0;
}
public SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	{
	    if(sincronizando[playerid] == 1)
		{
			return 1;
  		}
		if(PlayerInfo[playerid][pVIP] > 0) { SetPlayerHealth(playerid, 100.0); }
		else { SetPlayerHealth(playerid, 50.0+PlayerInfo[playerid][pSHealth]); }
  		spawnado[playerid] = 1;
	    SetPlayerToTeamColor(playerid);
	    if(PlayerInfo[playerid][pTut] == 0)
	    {
			/*gNews[playerid] = 1;*/ gFam[playerid] = 1;
			TogglePlayerControllable(playerid, 0);
			RegistrationStep[playerid] = 1;
			ClearChatbox(playerid, 8);
			SetPlayerVirtualWorld(playerid,playerid+1);
			TextDrawShowForPlayer(playerid, BoxTuto1);
			TextDrawShowForPlayer(playerid, BoxTuto2);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Seja Bem Vindo ao Brasil PlayStart{FFD700}- RPG");
			ShowPlayerDialog(playerid,9,DIALOG_STYLE_MSGBOX,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start RPG - Registro","{FF8000}Seja Bem Vindo!\n{FF8000}Diga O Seu Sexo.\n ","Masculino","Feminino");
			PlayerPlaySound(playerid, 1131, 0.0, 0.0, 0.0);
        }
		new rand;
		new House = PlayerInfo[playerid][pPHousekey];
		if(GetPlayerFamy(playerid) == FamilyBloqueada)
		{
  			SendClientMessage(playerid, COLOR_LIGHTRED, "* A sua Família Cancelada, Você foi Expulso Automaticamente.");
            PlayerInfo[playerid][pFamyLider] = 0;
			PlayerInfo[playerid][pFamyMember] = 0;
		}
		if(PlayerInfo[playerid][pLuta] == 1)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
		}
		if(PlayerInfo[playerid][pLuta] == 2)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
		}
		if(PlayerInfo[playerid][pLuta] == 3)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
		}
		if(PlayerInfo[playerid][pLuta] == 4)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
		}
		if(PlayerInfo[playerid][pLuta] == 5)
		{
		    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
		}
		if(PlayerInfo[playerid][pLuta] == 6)
		{
			SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
		}
        if(PlayerPaintballing[playerid] != 0)
		{
		    ResetPlayerWeapons(playerid);
      		GivePlayerWeapon(playerid, 29, 999);
      		GivePlayerWeapon(playerid, 31, 999);
      		GivePlayerWeapon(playerid, 25, 999);
      		SetPlayerArmour(playerid, 100);
      		SetPlayerHealth(playerid, 100);
      		SetPlayerInterior(playerid, 10);
      		PlayerInfo[playerid][pInt] = 10;
		    rand = random(sizeof(PaintballSpawns));
			SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
      //return true;
		}
		else if(PlayerInfo[playerid][pHosp] > 0) EntrarHospital(playerid);
        else if(GetPVarInt(playerid, "PlayerMorto") >= 1 && PlayerInfo[playerid][pJailed] == 0 && PlayerPaintballing[playerid] == 0 && admtrampando[playerid] == 0)
		{
		    ResetPlayerWeapons(playerid);
			Hospital[playerid] = 1;
			PlayerInfo[playerid][pDeaths] += 1;
			SetPVarInt(playerid, "PlayerMorto", 0);
			PlayerInfo[playerid][pHosp] = 1;
            PlayerInfo[playerid][pHospTime] = TEMPO_HOSPITAL;
            EntrarHospital(playerid);
            //return true;
		}
		else if(PlayerInfo[playerid][pJailed] == 1)
		{
		    SetPlayerInterior(playerid, 6);
			rand = random(sizeof(gPresoPmSpawns));
			SetPlayerPos(playerid, gPresoPmSpawns[rand][0], gPresoPmSpawns[rand][1], gPresoPmSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoPmSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
		}
		else if(PlayerInfo[playerid][pJailed] == 2)
		{
		    SetPlayerInterior(playerid, 0);
            SetPlayerPos(playerid, 346.5848, 306.1026, 999.1484);
            SetPlayerInterior(playerid,6);
            SetPlayerVirtualWorld(playerid,random(20));
            TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
		}
		else if(PlayerInfo[playerid][pJailed] == 3)
		{
		    SetPlayerInterior(playerid, 10);
			rand = random(sizeof(gPresoROTASpawns));
			SetPlayerPos(playerid, gPresoROTASpawns[rand][0], gPresoROTASpawns[rand][1], gPresoROTASpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoROTASpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
		}
  		else if(PlayerInfo[playerid][pJailed] == 4)
		{
		    SetPlayerInterior(playerid, 3);
		    rand = random(sizeof(gPresoPcSpawns));
			SetPlayerPos(playerid, gPresoPcSpawns[rand][0], gPresoPcSpawns[rand][1], gPresoPcSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoPcSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
		}
		else if(PlayerInfo[playerid][pJailed] == 5)
		{
		    SetPlayerInterior(playerid, 5);
			rand = random(sizeof(gPresoPfSpawns));
			SetPlayerPos(playerid, gPresoPfSpawns[rand][0], gPresoPfSpawns[rand][1], gPresoPfSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoPfSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
		}
		else if(PlayerInfo[playerid][pJailed] == 6)
		{
		    SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,2695.6262,-2126.2393,13.5488);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
		}
		else if(PlayerInfo[playerid][pJailed] == 7)
		{
		    SetPlayerInterior(playerid, 0);
			SetPlayerPos(playerid,-1293.2203,490.5885,11.1953);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
		}
		else if(PlayerInfo[playerid][pJailed] == 8)
		{
		    SetPlayerInterior(playerid, 10);
			rand = random(sizeof(gPresoROTASpawns));
			SetPlayerPos(playerid, gPresoROTASpawns[rand][0], gPresoROTASpawns[rand][1], gPresoROTASpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoROTASpawns[rand][3]);
			SetPlayerVirtualWorld(playerid, 1);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
		}
		else if(PlayerInfo[playerid][pJailed] == 30)
		{
		    SetPlayerInterior(playerid, 10);
			rand = random(sizeof(gPresoROTASpawns));
			SetPlayerPos(playerid, gPresoROTASpawns[rand][0], gPresoROTASpawns[rand][1], gPresoROTASpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoROTASpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
		}
		else if(PlayerInfo[playerid][pJailed] == 28)
		{
		    SetPlayerInterior(playerid, 10);
			rand = random(sizeof(gPresoROTASpawns));
			SetPlayerPos(playerid, gPresoROTASpawns[rand][0], gPresoROTASpawns[rand][1], gPresoROTASpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoROTASpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
		else if(PlayerInfo[playerid][pJailed] == 32)
		{
			rand = random(sizeof(gPresoROTASpawns));
			SetPlayerPos(playerid, 277.3999900,2046.4000000,19.5000000); // Warp the player
  			SetPlayerFacingAngle(playerid, gPresoROTASpawns[rand][3]);
  			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
  			TogglePlayerControllable(playerid, 0); // Congela o player
            SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
		else if(PlayerInfo[playerid][pJailed] == 34)
		{
		    SetPlayerInterior(playerid, 5);
			rand = random(sizeof(gPresoPfSpawns));
			SetPlayerPos(playerid, gPresoPfSpawns[rand][0], gPresoPfSpawns[rand][1], gPresoPfSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, gPresoPfSpawns[rand][3]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sentença incompleta,Você voltou para Prisão");
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
		}
		else if(House !=255 && PlayerInfo[playerid][pSpawn] == 1)
		{
		    SetPlayerToTeamColor(playerid);
			SetPlayerInterior(playerid,HouseInfo[House][hInt]);
			SetPlayerVirtualWorld(playerid,HouseInfo[House][hWorld]);
			SetPlayerPos(playerid, HouseInfo[House][hExitx], HouseInfo[House][hExity],HouseInfo[House][hExitz]); // Warp the player
			PlayerInfo[playerid][pLocal] = House;
			PlayerInfo[playerid][pInt] = HouseInfo[House][hInt];
			HouseEntered[playerid] = House;
   //return true;
		}
        else if ((PlayerInfo[playerid][pFamyMember] == 3 || PlayerInfo[playerid][pFamyLider] == 3) && PlayerInfo[playerid][pSpawn] == 4)//Familia Play
		{
            SetPlayerToTeamColor(playerid);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 788.7240,-2209.8838,15.2078);
		    SetPlayerFacingAngle(playerid, 77.0296);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
        else if ((PlayerInfo[playerid][pFamyMember] == 4 || PlayerInfo[playerid][pFamyLider] == 4) && PlayerInfo[playerid][pSpawn] == 4)//Familia Play
		{
            SetPlayerToTeamColor(playerid);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -73.4000,-1748.6999,10.5000);
		    SetPlayerFacingAngle(playerid, 77.0296);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
        else if ((PlayerInfo[playerid][pFamyMember] == 5 || PlayerInfo[playerid][pFamyLider] == 5) && PlayerInfo[playerid][pSpawn] == 4)//Familia Play
		{
            SetPlayerToTeamColor(playerid);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid, 932.5859,-2.5810,1001.5469);
		    SetPlayerFacingAngle(playerid, 275.5027);
		    PlayerInfo[playerid][pInt] = 3;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
        else if ((PlayerInfo[playerid][pFamyMember] == 1 || PlayerInfo[playerid][pFamyLider] == 1) && PlayerInfo[playerid][pSpawn] == 4)//Family StrondaH
		{
            SetPlayerToTeamColor(playerid);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 6);
		    SetPlayerPos(playerid, 761.412963,1440.191650,1102.803125);
		    SetPlayerFacingAngle(playerid, 77.0296);
		    PlayerInfo[playerid][pInt] = 6;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
        else if ((PlayerInfo[playerid][pFamyMember] == 2 || PlayerInfo[playerid][pFamyLider] == 2) && PlayerInfo[playerid][pSpawn] == 4)//Family StrondaH
		{
            SetPlayerToTeamColor(playerid);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1356.5128,-2881.5972,14.2059);
		    SetPlayerFacingAngle(playerid, 345.4498);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
        else if ((PlayerInfo[playerid][pFamyMember] == 6 || PlayerInfo[playerid][pFamyLider] == 6) && PlayerInfo[playerid][pSpawn] == 4)//Familia Play
		{
            SetPlayerToTeamColor(playerid);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 6);
		    SetPlayerPos(playerid, 768.3229,-36.9015,1000.6865);
		    SetPlayerFacingAngle(playerid, 183.1041);
		    PlayerInfo[playerid][pInt] = 6;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
		else if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)// Taxistas Nascimento
	    {
			SetPlayerPos(playerid, 1004.5120,-1431.9630,13.5469);
			SetPlayerFacingAngle(playerid,181.6931);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
     	else if ((PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27) && PlayerInfo[playerid][pSpawn] == 3)//Hells Angels Sub HQ
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 2344.1047,-1353.3613,27.1266);
		    SetPlayerFacingAngle(playerid, 264.9378);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
        else if (PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)// Motoqueiros Nascimento
	    {
			SetPlayerPos(playerid, 209.7866,-33.6813,1001.9297);
			SetPlayerFacingAngle(playerid,176.3347);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,1);
			PlayerInfo[playerid][pInt] = 1;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
		else if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)//Polícia Mílitar Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1529.4567,-1671.7179,6.2188);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
	    }
		else if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//R.O.T.A Nascimento
		{
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 302.7333,-1529.8196,24.9219);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
	    }
	    else if (PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)//B.O.P.E Nascimento
		{
            SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid, 229.7267,165.0443,1003.0234);
		    PlayerInfo[playerid][pInt] = 3;
		    SetPlayerWantedLevel(playerid, 0);
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
   //return true;
	    }
		else if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Exército Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -1346.9358,492.0078,11.2027);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
		else if (PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)//Americano Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 289.0527,2012.4290,17.6406);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
		else if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//MEDICO Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1705.5629,1174.0107,34.8259);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
		else if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)//Aztecas Nascimento
		{
			GivePlayerWeapon(playerid, 24, 70);
			GivePlayerWeapon(playerid, 29, 120);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1676.0964,-2113.3378,13.5468);
		    SetPlayerFacingAngle(playerid,181.4693);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
		else if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//Taliban Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid,2748.6006,-2453.4863,13.8623);
			SetPlayerFacingAngle(playerid,0.8485);
		    PlayerInfo[playerid][pInt] = 0;
      //return true;
		}
		else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Prefeito Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 3);
		    SetPlayerPos(playerid, 354.8267,154.4102,1025.7964);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerArmour(playerid, 100);
			SetPlayerWantedLevel(playerid, 0);
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
	    else if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) //Hitmans Nascimento
	    {
			SetPlayerPos(playerid, 1098.9488,-306.2745,73.9921);
			SetPlayerFacingAngle(playerid,334.6795);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
        else if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) //Hitmans Nascimento
	    {
			SetPlayerPos(playerid, -382.4262,-1438.9282,25.7266);
			SetPlayerFacingAngle(playerid,334.6795);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
	    else if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9) //Repórters Nascimento
	    {
			SetPlayerPos(playerid, 735.3049,-1350.8284,13.5000);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
	    else if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) //Groove Nascimento
	    {
	        GivePlayerWeapon(playerid, 24, 70);
			GivePlayerWeapon(playerid, 29, 120);
			SetPlayerPos(playerid, 2516.1411,-1675.4065,13.9113);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
        else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15) //Al'qaeda Nascimento
	    {
			SetPlayerPos(playerid, 414.5280,2531.5229,19.1648);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
	    else if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33) //Al'qaeda Nascimento
	    {
			SetPlayerPos(playerid, -314.5886,1774.3964,43.6406);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
	    else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) //Policia Rodoviaria Nascimento
	    {
			SetPlayerPos(playerid, 241.862548,117.565650,1003.734130);
			SetPlayerFacingAngle(playerid, 87.4229);
			SetPlayerVirtualWorld(playerid, 0);
			SetPlayerInterior(playerid, 10);
			PlayerInfo[playerid][pInt] = 0;
 			SetPlayerWantedLevel(playerid, 0);
 			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
	    else if (PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) //R.O.T.A P.M.E.R.J
	    {
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, -1051.8932,-948.4368,129.2188);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
	    else if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17) //Ballas Membros  Nascimento
	    {
	        GivePlayerWeapon(playerid, 24, 70);
			GivePlayerWeapon(playerid, 29, 120);
			SetPlayerPos(playerid, 1150.5472,-1180.6296,32.0275);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
	    else if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18) //Vagos Nascimento
	    {
	        GivePlayerWeapon(playerid, 24, 70);
			GivePlayerWeapon(playerid, 29, 120);
			SetPlayerPos(playerid, 2808.3562,-1176.4606,25.3687);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
	    else if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) //Máfia Yakuza Nascimento
	    {
			SetPlayerPos(playerid, 679.7172,-1275.9229,13.5931);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
	    else if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12) //Máfia Cosa Nostra Nascimento
	    {
			SetPlayerPos(playerid, 1496.7037,-691.6765,94.7500);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         //return true;
	    }
  		else if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//Policia Federal Nascimento
		{
		    SetPlayerInterior(playerid, 5);
		    SetPlayerPos(playerid, 323.8034,306.4516,999.14843);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 5;
		    SetPlayerWantedLevel(playerid, 0);
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
		else if (PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)//Policia Cívil Nascimento
		{
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1658.3741,-1691.3866,15.6094);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
		    SetPlayerWantedLevel(playerid, 0);
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
	    else if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19) //comando vermelho
	    {
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 2151.3245,-1807.9917,13.5465);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
      //return true;
		}
        else if (PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26) //comando vermelho
	    {
		    SetPlayerInterior(playerid, 5);
		    SetPlayerPos(playerid, 1266.2449,-780.4428,1091.9063);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 5;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
		else if (PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29) //Amigo dos Amigos
	    {
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1668.3038,-1359.8749,17.5243);
		    SetPlayerVirtualWorld(playerid,0);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
	    else if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) //PCC
	    {
			SetPlayerPos(playerid, 1333.1842,-855.9254,39.5781);
			SetPlayerFacingAngle(playerid, 180.5602);
			SetPlayerVirtualWorld(playerid,0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	    }
        else if ((PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21) && PlayerInfo[playerid][pSpawn] == 3)//Hells Angels Sub HQ
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 1960.9839, -2041.2151, 0.5250);
		    SetPlayerFacingAngle(playerid, 91.6009);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
        else if ((PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22) && PlayerInfo[playerid][pSpawn] == 3)//Hells Angels Sub HQ
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 2126.1000,-1773.6999,13.6000);
		    SetPlayerFacingAngle(playerid, 91.6009);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
        else if ((PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23) && PlayerInfo[playerid][pSpawn] == 3)//Hells Angels Sub HQ
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 2410.8999,-1223.9000,24.7000);
		    SetPlayerFacingAngle(playerid, 91.6009);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
        else if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)//Hells Angels Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 11);
		    SetPlayerPos(playerid, 508.1166,-86.4055,998.9609);
		    SetPlayerFacingAngle(playerid,2.9314);
		    PlayerInfo[playerid][pInt] = 11;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
        else if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)//Mongols Nascimento
		{
		    SetPlayerVirtualWorld(playerid,1);
		    SetPlayerInterior(playerid, 1);
		    SetPlayerPos(playerid, 681.5294,-453.1663,-25.6171);
		    SetPlayerFacingAngle(playerid,2.9314);
		    PlayerInfo[playerid][pInt] = 1;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
		else if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)//sons Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 18);
		    SetPlayerPos(playerid, -225.6823,1411.0549,27.6048);    //nascimentosons
		    SetPlayerFacingAngle(playerid,2.9314);
		    PlayerInfo[playerid][pInt] = 18;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
		else if (PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)//yStiflerS Nascimento
		{
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 2491.3125,-1545.9629,24.0258);
		    SetPlayerFacingAngle(playerid, 2.9314);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
        else if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)//Drifters Nascimento
		{
			GivePlayerWeapon(playerid, 24, 70);
			GivePlayerWeapon(playerid, 29, 120);
		    SetPlayerVirtualWorld(playerid,0);
		    SetPlayerInterior(playerid, 0);
		    SetPlayerPos(playerid, 839.5292,-2052.7095,12.8672);    //nascimento       triads
		    SetPlayerFacingAngle(playerid,354.4844);
		    PlayerInfo[playerid][pInt] = 0;
		    TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
	    else if ((gTeam[playerid]) == 1)
	    {
			SetPlayerToTeamColor(playerid);
			rand = random(sizeof(gMedPlayerSpawns));
			SetPlayerPos(playerid, gMedPlayerSpawns[rand][0], gMedPlayerSpawns[rand][1], gMedPlayerSpawns[rand][2]); // Warp the player
			SetPlayerFacingAngle(playerid, 270.0);
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
		else
		{
   		    SetPlayerPos(playerid,1568.0182,-1896.5948,13.5605);
			SetPlayerFacingAngle(playerid, 107.0826);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			TogglePlayerControllable(playerid, 0); // Congela o player
			SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		}
        Hospital[playerid] = 1;
        SetPVarInt(playerid, "PlayerMorto", 0);
	}
	return 1;
}
//------------------------------------------------------------------------------------------------------

public OnPlayerDeath(playerid, killerid, reason)
{
    new string[128];
    if(gettime() - GetPVarInt(playerid, "ultimaDeath") < 2) //  ou o jogador morreu mais de uma vez nos últimos 2 segundos
    {
        format(string,sizeof(string), "AntiAttack:{80E3FF}%s{E84F33}[ID: {80E3FF}%d{E84F33}] Foi acusado ser Fake Kill e Foi Kickado(Ant Xiter: 3)!",PlayerName(playerid),playerid);
		ABroadCast(COLOR_LIGHTRED,string,1);
        Kick(playerid);
        //return true;
    }
    if(IsPlayerConnected(killerid) && killerid != INVALID_PLAYER_ID)
    { // caso ouver killerid
        if(GetDistanceBetweenPlayers(killerid, playerid) > 300 && GetPVarInt(playerid, "ultimoShoot") != killerid)
        { // caso a distancia entre o killerid for menor que 300
            format(string,sizeof(string), "AntiAttack:{80E3FF}%s{E84F33}[ID: {80E3FF}%d{E84F33}] Foi acusado ser Fake Kill e Foi Kickado(Ant Xiter: 3)!",PlayerName(playerid),playerid);
		  	ABroadCast(COLOR_LIGHTRED,string,1);
            Kick(playerid);
            //return true;
        }
    }
    SetPVarInt(playerid, "ultimaDeath", gettime());
    SetPVarInt(playerid, "PlayerMorto", 1);

    if(FakeKillOn == 1)
    {
	  	if(killerid != INVALID_PLAYER_ID)
	  	{
	  		if(!PlayerShotPlayer[killerid][playerid])
	  		{
	            new NomePlayer[MAX_PLAYER_NAME];
				GetPlayerName(playerid,NomePlayer,sizeof(NomePlayer));
				format(string,sizeof(string), "AntiAttack:{80E3FF}%s{E84F33}[ID: {80E3FF}%d{E84F33}] Foi acusado ser Fake Kill e Foi Banido(Ant Xiter: 1)!",NomePlayer,playerid);
		  		ABroadCast(COLOR_LIGHTRED,string,1);
	            Ban(playerid);
                SetTimer("DesligarFakeKill", 15000, false);
			}
	  	}
	  	foreach(Player,i)
	  	{
	  		PlayerShotPlayer[i][playerid] = 0;
	  	}
        antifakekill[playerid] ++;
        SetTimerEx("FakeKillAtivo", 1000,false,"i",playerid);
   	}
    else if(FakeKillOn == 0)
    {
        antifakekill[playerid] ++;
        SetTimerEx("LigarFakeKill", 1000,false,"i",playerid);
        if(killerid != INVALID_PLAYER_ID)
	  	{
	  		if(!PlayerShotPlayer[killerid][playerid])
	  		{
                LigarFakeKill(playerid);
			}
	  	}
	  	foreach(Player,i)
	  	{
	  		PlayerShotPlayer[i][playerid] = 0;
	  	}
        if(Verck >= 1)
    	{
            SendDeathMessage(killerid, playerid, reason); //chat kill
    	}
        new Float:px,Float:py,Float:pz;
    	gPlayerSpawned[playerid] = 0;
    	PlayerInfo[playerid][pLocal] = 255;
    	GetPlayerPos(playerid, px, py, pz);
    	spawnado[playerid] = 0;
        if(Verdm >= 1 && GetPlayerOrg(killerid) != 8 && GetPlayerOrg(killerid) != 24)
    	{
            new NomePlayer[MAX_PLAYER_NAME], NomeKiller[MAX_PLAYER_NAME];
            GetPlayerName(playerid,NomePlayer,sizeof(NomePlayer));
            GetPlayerName(killerid,NomeKiller,sizeof(NomeKiller));
            format(string, sizeof(string), "AdmCmd: %s[ORG: %s] matou o %s [ORG:%s]", NomeKiller, NomeORG(killerid), NomePlayer, NomeORG(playerid));
            ABroadCast(0xFF5959AA,string,1);
    	}
    	if(Sequestrado[playerid] != 999)
    	{
    		format(string, sizeof(string), "[PlayStart News] O Refem %s Foi Morto, Sequestro foi Acabado!", PlayerName(playerid));
			OOCNews(COLOR_LIGHTRED, string);
			Sequestrado[playerid] = 999;
    	}
        if (gPlayerTerminal[playerid] != 0)
    	{
    		BusrouteEnd(playerid);
    	}
    	if(PlayerPaintballing[killerid] == 0)
    	{
    		SetPlayerCriminal(killerid, 255, "Assassinato");
    		PlayerInfo[killerid][pKills] += 1;
		}
        if(PlayerInfo[playerid][pHeadValue] > 0)
    	{
    	    if(IsPlayerConnected(killerid))
    	    {
    		    if(GetPlayerOrg(killerid) == 8 || GetPlayerOrg(killerid) == 24)
    		    {
    		        if(GoChase[killerid] == playerid)
    		        {
    		            ConsumingMoney[killerid] = 1;
    					GranaTheus(killerid, PlayerInfo[playerid][pHeadValue]);
    					format(string, sizeof(string), "Você foi morto por contrato pelo Assassino %s no valor de %d e não foi DM!",PlayerName(killerid),PlayerInfo[playerid][pHeadValue]);
    					//SendClientMessage(playerid, 0x33FF00FF, string);
    					SendClientMessage(playerid, COLOR_YELLOW, string);
    					format(string, sizeof(string), "<< [%s] Assassino %s Cumpriu o contrato em %s e recebeu $%d >>",NomeORG(killerid), PlayerName(killerid),PlayerName(playerid),PlayerInfo[playerid][pHeadValue]);
                        SendFamilyMessage(8, COLOR_YELLOW, string);
                        SendFamilyMessage(24, COLOR_YELLOW, string);
                        if(Verdm >= 1)
				    	{
				            new NomePlayer[MAX_PLAYER_NAME], NomeKiller[MAX_PLAYER_NAME];
				            GetPlayerName(playerid,NomePlayer,sizeof(NomePlayer));
				            GetPlayerName(killerid,NomeKiller,sizeof(NomeKiller));
				            format(string, sizeof(string), "AdmCmd: %s[ORG: %s] Compriu Contrato Em %s [ORG:%s]", PlayerName(killerid), NomeORG(killerid), PlayerName(playerid), NomeORG(playerid));
				            ABroadCast(0xFF5959AA,string,1);
				    	}
    					if(GetPlayerOrg(killerid) == 8)
                        {
                            InfoCont[1]++;
                        }
                        else if(GetPlayerOrg(killerid) == 24)
                        {
                            InfoCont[2]++;
                        }
    					PlayerInfo[playerid][pHeadValue] = 0;
    					GotHit[playerid] = 0;
    					GetChased[playerid] = 999;
    					GoChase[killerid] = 999;
    				}
    			}
    		}
    	}
		if(TendoGuerra == 1 && IsPlayerInTerritorio(playerid) && IsPlayerInTerritorio(killerid))
    	{
    		if(PlayerInfo[killerid][pMembro] == 3 || PlayerInfo[killerid][pLider] == 3)
    		{
    	    	if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
    			{
    				Territorio[talmortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
    			{
    				Territorio[almortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
    			{
    				Territorio[bramortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
    			{
    				Territorio[famortos] += 1;
    			}
    		}
    		if(PlayerInfo[killerid][pMembro] == 6 || PlayerInfo[killerid][pLider] == 6)
    		{
    	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    			{
    				Territorio[exemortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
    			{
    				Territorio[almortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
    			{
    				Territorio[bramortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
    			{
    				Territorio[famortos] += 1;
    			}
    		}
    		if(PlayerInfo[killerid][pMembro] == 15 || PlayerInfo[killerid][pLider] == 15)
    		{
    	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    			{
    				Territorio[exemortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
    			{
    				Territorio[talmortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
    			{
    				Territorio[bramortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
    			{
    				Territorio[famortos] += 1;
    			}
    		}
    		if(PlayerInfo[killerid][pMembro] == 32 || PlayerInfo[killerid][pLider] == 32)
    		{
    	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    			{
    				Territorio[exemortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
    			{
    				Territorio[talmortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
    			{
    				Territorio[almortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
    			{
    				Territorio[famortos] += 1;
    			}
    		}
    		if(PlayerInfo[killerid][pMembro] == 33 || PlayerInfo[killerid][pLider] == 33)
    		{
    	    	if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    			{
    				Territorio[exemortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
    			{
    				Territorio[talmortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
    			{
    				Territorio[almortos] += 1;
    			}
    			if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
    			{
    				Territorio[bramortos] += 1;
    			}
    		}
    	}
    //==================================[SUSPEITO MORTO]=========================//
    	if(WantedPoints[playerid] >= 1)
    	{
    			new price = WantedPoints[playerid] * 1000;
    		    if(PlayerInfo[killerid][pMembro] == 1 || PlayerInfo[killerid][pLider] == 1)
    		    {
                    if(!IsPlayerInMorro(killerid) || IsPlayerInEvento(killerid) || IsPlayerInPedreira(killerid))
                    {
                        format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
        				GameTextForPlayer(killerid, string, 5000, 1);
        				ConsumingMoney[killerid] = 1;
        				GranaTheus(killerid, price / 2);
        				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
        				GranaTheus(playerid, - price);
        				PlayerInfo[playerid][pJailed] = 1;
                        if(PlayerInfo[playerid][pVIP] >= 2)
		                {
        			         PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(150);
                        }
                        else
                        {
                            PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(300);
                        }
        			    format(string, sizeof(string), "* Você está preso por %d Segundos na Polícia Mílitar, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
        			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
               			WantedPoints[playerid] = 0;
               			SetPlayerWantedLevel(playerid, 0);
        				PlayerInfo[playerid][pDrogas] = 0;
                        PlayerInfo[playerid][pDrogas2] = 0;
                        PlayerInfo[playerid][pDrogas3] = 0;
                        PlayerInfo[playerid][pMats] = 0;
                    }
    			}
    			else if(PlayerInfo[killerid][pMembro] == 2 || PlayerInfo[killerid][pLider] == 2)
    		    {
                    if(!IsPlayerInMorro(killerid) || IsPlayerInEvento(killerid) || IsPlayerInPedreira(killerid))
                    {
                        format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
        				GameTextForPlayer(killerid, string, 5000, 1);
        				ConsumingMoney[killerid] = 1;
        				GranaTheus(killerid, price / 2);
        				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
        				GranaTheus(playerid, - price);
        				PlayerInfo[playerid][pJailed] = 4;
                        if(PlayerInfo[playerid][pVIP] >= 2)
		                {
        			         PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(150);
                        }
                        else
                        {
                            PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(300);
                        }
        			    format(string, sizeof(string), "* Você está preso por %d Segundos na HQ R.O.T.A, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
        			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
               			WantedPoints[playerid] = 0;
               			SetPlayerWantedLevel(playerid, 0);
        				PlayerInfo[playerid][pDrogas] = 0;
                        PlayerInfo[playerid][pDrogas2] = 0;
                        PlayerInfo[playerid][pDrogas3] = 0;
                        PlayerInfo[playerid][pMats] = 0;
                        SetPlayerVirtualWorld(playerid, OUTRO_MUNDO);
                    }
    			}
    			else if(PlayerInfo[killerid][pMembro] == 3 || PlayerInfo[killerid][pLider] == 3)
    		    {
                    if(!IsPlayerInMorro(killerid) || IsPlayerInEvento(killerid) || IsPlayerInPedreira(killerid))
                    {
                        format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
        				GameTextForPlayer(killerid, string, 5000, 1);
        				ConsumingMoney[killerid] = 1;
        				GranaTheus(killerid, price / 2);
        				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
        				GranaTheus(playerid, - price);
        				PlayerInfo[playerid][pJailed] = 7;
                        if(PlayerInfo[playerid][pVIP] >= 2)
		                {
        			         PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(150);
                        }
                        else
                        {
                            PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(300);
                        }
        			    format(string, sizeof(string), "* Você está preso por %d Segundos no Exército, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
        			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
               			WantedPoints[playerid] = 0;
               			SetPlayerWantedLevel(playerid, 0);
        				PlayerInfo[playerid][pDrogas] = 0;
                        PlayerInfo[playerid][pDrogas2] = 0;
                        PlayerInfo[playerid][pDrogas3] = 0;
                        PlayerInfo[playerid][pMats] = 0;
                        //ProcuradoPlayer(playerid);
                    }
    			}
    			else if(PlayerInfo[killerid][pMembro] == 32 || PlayerInfo[killerid][pLider] == 32)
    		    {
                    if(!IsPlayerInMorro(killerid) || IsPlayerInEvento(killerid) || IsPlayerInPedreira(killerid))
                    {
                        format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
        				GameTextForPlayer(killerid, string, 5000, 1);
        				ConsumingMoney[killerid] = 1;
        				GranaTheus(killerid, price / 2);
        				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
        				GranaTheus(playerid, - price);
        				PlayerInfo[playerid][pJailed] = 32;
                        if(PlayerInfo[playerid][pVIP] >= 2)
		                {
        			         PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(150);
                        }
                        else
                        {
                            PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(300);
                        }
        			    format(string, sizeof(string), "* Você está preso por %d Segundos na Americano, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
        			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
               			WantedPoints[playerid] = 0;
               			SetPlayerWantedLevel(playerid, 0);
        				PlayerInfo[playerid][pDrogas] = 0;
                        PlayerInfo[playerid][pDrogas2] = 0;
                        PlayerInfo[playerid][pDrogas3] = 0;
                        PlayerInfo[playerid][pMats] = 0;
                    }
    			}
    			else if(PlayerInfo[killerid][pMembro] == 16 || PlayerInfo[killerid][pLider] == 16)
    		    {
                    if(!IsPlayerInMorro(killerid) || IsPlayerInEvento(killerid) || IsPlayerInPedreira(killerid))
                    {
                        format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
        				GameTextForPlayer(killerid, string, 5000, 1);
        				ConsumingMoney[killerid] = 1;
        				GranaTheus(killerid, price / 2);
        				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
        				GranaTheus(playerid, - price);
        				PlayerInfo[playerid][pJailed] = 3;
                        if(PlayerInfo[playerid][pVIP] >= 2)
		                {
        			         PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(150);
                        }
                        else
                        {
                            PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(300);
                        }
        			    format(string, sizeof(string), "* Você está preso por %d Segundos na Policia Rodoviaria, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
        			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
               			WantedPoints[playerid] = 0;
               			SetPlayerWantedLevel(playerid, 0);
        				PlayerInfo[playerid][pDrogas] = 0;
                        PlayerInfo[playerid][pDrogas2] = 0;
                        PlayerInfo[playerid][pDrogas3] = 0;
                        PlayerInfo[playerid][pMats] = 0;
                        //ProcuradoPlayer(playerid);
                    }
    			}
    			else if(PlayerInfo[killerid][pMembro] == 28 || PlayerInfo[killerid][pLider] == 28)
    		    {
                    if(!IsPlayerInMorro(killerid) || IsPlayerInEvento(killerid) || IsPlayerInPedreira(killerid))
                    {
                        format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
        				GameTextForPlayer(killerid, string, 5000, 1);
        				ConsumingMoney[killerid] = 1;
        				GranaTheus(killerid, price / 2);
        				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
        				GranaTheus(playerid, - price);
        				PlayerInfo[playerid][pJailed] = 28;
                        if(PlayerInfo[playerid][pVIP] >= 2)
		                {
        			         PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(150);
                        }
                        else
                        {
                            PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(300);
                        }
        			    format(string, sizeof(string), "* Você está preso por %d Segundos na Policia Florestal, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
        			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
               			WantedPoints[playerid] = 0;
               			SetPlayerWantedLevel(playerid, 0);
        				PlayerInfo[playerid][pDrogas] = 0;
                        PlayerInfo[playerid][pDrogas2] = 0;
                        PlayerInfo[playerid][pDrogas3] = 0;
                        PlayerInfo[playerid][pMats] = 0;
                        SetPlayerVirtualWorld(playerid, OUTRO_MUNDO);
                    }
    			}
    			else if(PlayerInfo[killerid][pMembro] == 30 || PlayerInfo[killerid][pLider] == 30)
    		    {
                    if(!IsPlayerInMorro(killerid) || IsPlayerInEvento(killerid) || IsPlayerInPedreira(killerid))
                    {
                        format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
        				GameTextForPlayer(killerid, string, 5000, 1);
        				ConsumingMoney[killerid] = 1;
        				GranaTheus(killerid, price / 2);
        				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
        				GranaTheus(playerid, - price);
        				PlayerInfo[playerid][pJailed] = 30;
                        if(PlayerInfo[playerid][pVIP] >= 2)
		                {
        			         PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(150);
                        }
                        else
                        {
                            PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(300);
                        }
        			    format(string, sizeof(string), "* Você está preso por %d Segundos na B.O.P.E, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
        			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
               			WantedPoints[playerid] = 0;
               			SetPlayerWantedLevel(playerid, 0);
        				PlayerInfo[playerid][pDrogas] = 0;
                        PlayerInfo[playerid][pDrogas2] = 0;
                        PlayerInfo[playerid][pDrogas3] = 0;
                        PlayerInfo[playerid][pMats] = 0;
                    }
    			}
    			else if(PlayerInfo[killerid][pMembro] == 11 || PlayerInfo[killerid][pLider] == 11)
    		    {
                    if(!IsPlayerInMorro(killerid) || IsPlayerInEvento(killerid) || IsPlayerInPedreira(killerid))
                    {
                        format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
        				GameTextForPlayer(killerid, string, 5000, 1);
        				ConsumingMoney[killerid] = 1;
        				GranaTheus(killerid, price / 2);
        				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
        				GranaTheus(playerid, - price);
        				PlayerInfo[playerid][pJailed] = 5;
                        if(PlayerInfo[playerid][pVIP] >= 2)
		                {
        			         PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(150);
                        }
                        else
                        {
                            PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(300);
                        }
        			    format(string, sizeof(string), "* Você está preso por %d Segundos na Policia Federal, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
        			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
               			WantedPoints[playerid] = 0;
               			SetPlayerWantedLevel(playerid, 0);
        				PlayerInfo[playerid][pDrogas] = 0;
                        PlayerInfo[playerid][pDrogas2] = 0;
                        PlayerInfo[playerid][pDrogas3] = 0;
                        PlayerInfo[playerid][pMats] = 0;
                        //ProcuradoPlayer(playerid);
                    }
                }
                else if(PlayerInfo[killerid][pMembro] == 34 || PlayerInfo[killerid][pLider] == 34)
    		    {
                    if(!IsPlayerInMorro(killerid) || IsPlayerInEvento(killerid) || IsPlayerInPedreira(killerid))
                    {
                        format(string, sizeof(string), "~w~Suspeito ~r~Morto~n~Bonus~g~R$%d", price);
        				GameTextForPlayer(killerid, string, 5000, 1);
        				ConsumingMoney[killerid] = 1;
        				GranaTheus(killerid, price / 2);
        				PlayerPlaySound(killerid, 1058, 0.0, 0.0, 0.0);
        				GranaTheus(playerid, - price);
        				PlayerInfo[playerid][pJailed] = 34;
                        if(PlayerInfo[playerid][pVIP] >= 2)
		                {
        			         PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(150);
                        }
                        else
                        {
                            PlayerInfo[playerid][pJailTime] = (WantedPoints[playerid])*(300);
                        }
        			    format(string, sizeof(string), "* Você está preso por %d Segundos na Policia Cívil, e perdeu R$%d por trocar tiros e fugir dos policiais.", PlayerInfo[playerid][pJailTime], price);
        			    SendClientMessage(playerid, COLOR_LIGHTRED, string);
               			WantedPoints[playerid] = 0;
               			SetPlayerWantedLevel(playerid, 0);
        				PlayerInfo[playerid][pDrogas] = 0;
                        PlayerInfo[playerid][pDrogas2] = 0;
                        PlayerInfo[playerid][pDrogas3] = 0;
                        PlayerInfo[playerid][pMats] = 0;
                        SetPlayerVirtualWorld(playerid, OUTRO_MUNDO);
                    }
    			}
    	}
    //=================[NOVO ROUBAR]================
    	if(ProvocoBanco[playerid] == 1)
    	{
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
    		format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
           	SendClientMessageToAll(GetPlayerColor(playerid), string);
    		ProvocoBanco[playerid] = 0; roubando[playerid] = 0; roubobanco = 0; KillTimer(tempobanco); temporoubobanco = 0;
    	}
    	if(ProvocoLot[playerid] == 1)
    	{
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
    		format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre da Lotérica! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
           	SendClientMessageToAll(GetPlayerColor(playerid), string);
    		ProvocoLot[playerid] = 0; roubando[playerid] = 0; roubolot = 0; KillTimer(tempolot); temporoubolot = 0;
    	}
        if(ProvocoPostoGas[playerid] == 1)
    	{
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
    		format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre do Posto de Gasolina Abandonado! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
           	SendClientMessageToAll(GetPlayerColor(playerid), string);
    		ProvocoPostoGas[playerid] = 0; roubando[playerid] = 0; rouboposto = 0; KillTimer(tempoposto); temporouboposto = 0;
    	}
    	if(ProvocoLoja1[playerid] == 1)
    	{
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
    		format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre da Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
           	SendClientMessageToAll(GetPlayerColor(playerid), string);
    		ProvocoLoja1[playerid] = 0; roubando[playerid] = 0; rouboloja1 = 0; KillTimer(tempoloja1); temporouboloja1 = 0;
    	}
    	if(ProvocoLoja2[playerid] == 1)
    	{
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
    		format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre da Loja de Armas 2! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
           	SendClientMessageToAll(GetPlayerColor(playerid), string);
    		ProvocoLoja2[playerid] = 0; roubando[playerid] = 0; rouboloja2 = 0; KillTimer(tempoloja2); temporouboloja2 = 0;
    	}
    	if(ProvocoPrefe[playerid] == 1)
    	{
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
    		format(string, sizeof(string), "%s e os %s não conseguiram roubar o cofre da Prefeitura! ID:[%d]", PlayerName(playerid), NomeORG(playerid) , playerid);
           	SendClientMessageToAll(GetPlayerColor(playerid), string);
    		ProvocoPrefe[playerid] = 0; roubando[playerid] = 0; rouboprefe = 0; KillTimer(tempoprefe); temporouboprefe = 0;
    	}
    //=======================[FIM ROUBAR]========================
    	if(ProvocoCasarao[playerid] == 1)
    	{
    		GangZoneStopFlashForAll(GZCasarao);
    		GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
    		GuerranoCasarao = 0;
    		ProvocoCasarao[playerid] = 0;
    		donocasarao = 0;
    		Dominando[playerid] = 0;
    		KillTimer(TempoGuerraCasarao);
    	}
    	if(ProvocoEstacao[playerid] == 1)
    	{
    		GangZoneStopFlashForAll(GZEstacao);
    		GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
    		GuerranaEstacao = 0;
    		ProvocoEstacao[playerid] = 0;
    		donoestacao = 0;
    		Dominando[playerid] = 0;
    		KillTimer(TempoGuerraEstacao);
    	}
        if(ProvocoCemiterio[playerid] == 1)
    	{
    		GangZoneStopFlashForAll(GZCemiterio);
    		GangZoneShowForAll(GZCemiterio, 0xFFFFFF96);
    		GuerranoCemiterio = 0;
    		ProvocoCemiterio[playerid] = 0;
    		donoCemiterio = 0;
    		Dominando[playerid] = 0;
    		KillTimer(TempoGuerraCemiterio);
    	}
    	if(ProvocoShop[playerid] == 1)
    	{
    		GangZoneStopFlashForAll(GZShop);
    		GangZoneShowForAll(GZShop, 0xFFFFFF96);
    		GuerranoShop = 0;
    		ProvocoShop[playerid] = 0;
    		donoShop = 0;
    		Dominando[playerid] = 0;
    		KillTimer(TempoGuerraShop);
    	}
        if(ProvocoPark[playerid] == 1)
    	{
    		GangZoneStopFlashForAll(GZPark);
    		GangZoneShowForAll(GZPark, 0xFFFFFF96);
    		GuerranoPark = 0;
    		ProvocoPark[playerid] = 0;
    		donoPark = 0;
    		Dominando[playerid] = 0;
    		KillTimer(TempoGuerraPark);
    	}
    	if(ProvocoSkate[playerid] == 1)
    	{
    		GangZoneStopFlashForAll(GZSkate);
    		GangZoneShowForAll(GZSkate, 0xFFFFFF96);
    		GuerranoSkate = 0;
    		ProvocoSkate[playerid] = 0;
    		donoskate = 0;
    		Dominando[playerid] = 0;
    		KillTimer(TempoGuerraSkate);
    	}
    	if(ProvocoPantano[playerid] == 1)
    	{
    		GangZoneStopFlashForAll(GZPantano);
    		GangZoneShowForAll(GZPantano, 0xFFFFFF96);
    		GuerranoPantano = 0;
    		ProvocoPantano[playerid] = 0;
    		donopantano = 0;
    		Dominando[playerid] = 0;
    		KillTimer(TempoGuerraPantano);
    	}
        new IdCarroDB = GetVehicleModel(GetPlayerVehicleID(killerid));
    	if(PlayerInfo[killerid][pAdmin] == 0 && GetPlayerState(killerid) == 2 && GetPlayerState(playerid) != 2 && IdCarroDB != 447 && IdCarroDB != 425 && IdCarroDB != 520 && IdCarroDB != 564)
    	{
            GetPlayerName(killerid,kickname,sizeof(kickname));
            GetPlayerName(playerid,victmname,sizeof(victmname));
      		format(string,sizeof(string),"[BPF]{FFA4FF} %s {FFFFFF}ID:[{FFA4FF}%d{FFFFFF}] cometeu DB em{93FFFF} %s{FFFFFF}.",kickname,killerid,PlayerName(playerid));
    		SendClientMessageToAll(0xFF8080AA,string);
            GetPlayerDB[playerid] = killerid;
            format(string, sizeof(string), "AntiDB: Vítima %s, Suspeito %s.", PlayerName(playerid), PlayerName(killerid));
			SoEuVejoMsm(0x00F2F2FF, string);
            if(SysDBOn == 0)
            {
            	SetTimerEx("ShowMessageDB", 5000,false,"i",playerid);
            }
    	}
    	/*if(PlayerInfo[playerid][pJailed] != 0) //COCOZAO
		{
		    if(IsPlayerConnected(killerid))
    		{
		    	PlayerInfo[playerid][pJailed] = 2;
        		PlayerInfo[playerid][pJailTime] = 60;
	        }
		}*/
    	if(reason == 38)
    	{
    		if(IsPlayerConnected(killerid))
    		{
    			format(string,sizeof(string), "AdmAviso: [%d]%s usou minigun em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
    			ABroadCast(COLOR_YELLOW,string,1);
    			printf("%s", string);
    		}
    	}
    	if(reason == 35)
    	{
    		if(IsPlayerConnected(killerid))
    		{
    			format(string,sizeof(string), "AdmAviso: [%d]%s usou Bazuka em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
    			ABroadCast(COLOR_YELLOW,string,1);
    			printf("%s", string);
    		}
    	}
    	if(reason == 36)
    	{
    		if(IsPlayerConnected(killerid))
    		{
    			format(string,sizeof(string), "AdmAviso: [%d]%s usou Bazuka =2= em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
    			ABroadCast(COLOR_YELLOW,string,1);
    			printf("%s", string);
    		}
    	}
     	if(reason == 0)
    	{
    		if(IsPlayerConnected(killerid))
    		{
    			format(string,sizeof(string), "AdmAviso: [%d]%s usou 12 Cano cerrado em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
    			ABroadCast(COLOR_YELLOW,string,1);
    			printf("%s", string);
    		}
    	}
     	if(reason == 32)
    	{
    		if(IsPlayerConnected(killerid))
    		{
    			format(string,sizeof(string), "AdmAviso: [%d]%s usou TEC9 em %s.",killerid,PlayerName(killerid),PlayerName(playerid));
    			ABroadCast(COLOR_YELLOW,string,1);
    			printf("%s", string);
    		}
    	}
    	if (gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
    	{
    		DisablePlayerCheckpoint(playerid);
    		gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
    	}
    	new caller = Mobile[playerid];
    	if(caller != 255)
    	{
    		if(caller < 255)
    		{
    			SendClientMessage(caller,  COLOR_GRAD2, "Morreram do outro lado da linha....");
    			CellTime[caller] = 0;
    			CellTime[playerid] = 0;
                StopMusic(playerid);
 				StopMusic(caller);
    			Mobile[caller] = 255;
    		}
    		Mobile[playerid] = 255;
    		CellTime[playerid] = 0;
    		new pSpecialAction = GetPlayerSpecialAction(caller);
			if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
			{
				SetPlayerSpecialAction(caller,SPECIAL_ACTION_STOPUSECELLPHONE);
				//SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
    	}
    	ClearCrime(playerid);
    	if(PlayerPaintballing[playerid] != 0)
    	{
    	    PlayerPaintballKills[killerid] ++;
    	    if(PlayerPaintballKills[killerid] > PaintballWinnerKills)
    	    {
    	        PaintballWinner = killerid;
    	        PaintballWinnerKills = PlayerPaintballKills[killerid];
             for(new i = 0; i < MaiorID; i++)
    	        {
    	            if(IsPlayerConnected(i))
    	            {
    	                if(PlayerPaintballing[i] != 0)
    	                {
    	                    format(string, sizeof(string), "* %s está em 1º com %d Kills.",PlayerName(killerid),PaintballWinnerKills);
    						SendClientMessage(i, COLOR_WHITE, string);
    	                }
    	            }
    	        }
    	    }
    	}
    	if(PlayerInfo[killerid][pHeadValue] > 0)
    	{
    	    if(IsPlayerConnected(playerid))
    	    {
    		    if(PlayerInfo[playerid][pLider] == 8  || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 24  || PlayerInfo[playerid][pMembro] == 24)
    		    {
    		        if(GoChase[playerid] == killerid)
    		        {
    		            ConsumingMoney[playerid] = 1;
    					format(string, sizeof(string), "<< [%s] Assassino %s foi morto por %s e perdeu o contrato >>",NomeORG(playerid), PlayerName(playerid),PlayerName(killerid));
    					SendFamilyMessage(PlayerInfo[playerid][pMembro], COLOR_YELLOW, string);
    					PlayerInfo[killerid][pHeadValue] = 0;
    					GotHit[killerid] = 0;
    					GetChased[killerid] = 999;
    					GoChase[playerid] = 999;
    				}
    			}
    		}
    	}
    	killerid = INVALID_PLAYER_ID;
    	ShowGz(playerid);
   	}
}

public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid)
{
	PlayerShotPlayer[issuerid][playerid] = 1;
 	SetPVarInt(playerid, "ultimoShoot", issuerid);
    return 0;
}
public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid)
{
	if(AntiLagOn == true)
	{
			new
			    Float: vida,
                Float: armadura,
                Float: dmg;

            GetPlayerArmour(damagedid, armadura);
            GetPlayerHealth(damagedid, vida);

            if (armadura > 0)
            {
                if (amount > armadura)
                {
                    dmg = amount - armadura;
                    vida = vida - dmg;
                    SetPlayerArmour(damagedid, 0.0);
                    SetPlayerHealth(damagedid, vida);
                    return 1;
                }
                armadura = armadura - amount;
                SetPlayerArmour(damagedid, armadura);
            }
            if (armadura < 1)
            {
                vida = vida - amount;
                SetPlayerHealth(damagedid, vida);
            }
	}
	return 1;
}
public OnPlayerSpawn(playerid)
{
    StopAudioStreamForPlayer(playerid);
    TextDrawShowForPlayer(playerid, forum);
    if(gPlayerLogged[playerid] == 0)
        return SendClientMessage(playerid, COLOR_LIGHTRED, "** [BPF ERRO] Você precisa logar antes do Spawn**");
	if(Infoa[playerid][Arara]) { SetPlayerAttachedObject(playerid,0, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 ); }
    if(sincronizando[playerid] == 1)
	{
		return 1;
	}
	gTeam[playerid] = PlayerInfo[playerid][pTeam]; //Set the Team
	if (gTeam[playerid] == 4) //medic / criminal reset team
	{
		gTeam[playerid] = 3;
	}
	if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "AdmCmd: Você foi kickado Automaticamente, Motivo: Spawn sem login");
        Kick(playerid);
        return 1;
 	}
    StatusPlayer(2, playerid);
	if(gTeam[playerid] == 11 && PlayerInfo[playerid][pLider] < 1)
	{
	    Hospital[playerid] = 1;
		SendClientMessage(playerid, COLOR_LIGHTRED, "Você não foi aprovado pelo líder, agora é um Civil !");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
		SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
	}
	if(gTeam[playerid] == 5)
	{
	    if(PlayerInfo[playerid][pMembro] < 1)
	    {
	        Hospital[playerid] = 1;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Você não faz parte de uma familia, agora é um Civil !");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
			if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 10)
	{
	    if(PlayerInfo[playerid][pMembro] != 8 || PlayerInfo[playerid][pMembro] != 24)
	    {
	        Hospital[playerid] = 1;
			SendClientMessage(playerid, COLOR_LIGHTRED, "Você não faz parte de uma agencia, é um Civil !");
			PlayerInfo[playerid][pTeam] = 3;
			gTeam[playerid] = 3;
			if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
            SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
			SpawnPlayer(playerid);
		}
	}
	if(gTeam[playerid] == 2 && PlayerInfo[playerid][pMembro] > 3)
	{
	    Hospital[playerid] = 1;
		SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é mais um oficial, é um Civil !");
		PlayerInfo[playerid][pTeam] = 3;
		gTeam[playerid] = 3;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
  		SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		SpawnPlayer(playerid);
	}
	if(gTeam[playerid] == 3)
	{
	    if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
	    {
			Hospital[playerid] = 1;
            if(PlayerInfo[playerid][pMembro] == 1) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 2) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 3) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 4) { SetSpawnInfo(playerid, 1, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; }
			else if(PlayerInfo[playerid][pMembro] == 5) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMembro] == 6) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; }
			else if(PlayerInfo[playerid][pMembro] == 8) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
			else if(PlayerInfo[playerid][pMembro] == 9) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 10) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 11) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; }
			else if(PlayerInfo[playerid][pMembro] == 12) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 22; }
            else if(PlayerInfo[playerid][pMembro] == 13) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 20; }
			else if(PlayerInfo[playerid][pMembro] == 14) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 15; }
			else if(PlayerInfo[playerid][pMembro] == 15) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 16; }
			else if(PlayerInfo[playerid][pMembro] == 16) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pMembro] == 17) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 18; }
			else if(PlayerInfo[playerid][pMembro] == 18) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 19) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 20) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pMembro] == 21) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 22) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 23) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 24) { SetSpawnInfo(playerid, 10, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 10; gTeam[playerid] = 10; }
            else if(PlayerInfo[playerid][pMembro] == 25) { SetSpawnInfo(playerid, 5, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 26) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 27) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 28) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 29) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 30) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 31) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 33) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pMembro] == 34) { SetSpawnInfo(playerid, 12, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 19; }


            else if(PlayerInfo[playerid][pLider] == 1) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 2) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 3) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 4) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 5) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 6) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 7) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 8) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 9) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 10) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 11) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 11; }
			else if(PlayerInfo[playerid][pLider] == 12) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 22; }
			else if(PlayerInfo[playerid][pLider] == 13) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 20; }
			else if(PlayerInfo[playerid][pLider] == 14) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 15; }
			else if(PlayerInfo[playerid][pLider] == 15) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 16; }
			else if(PlayerInfo[playerid][pLider] == 16) { SetSpawnInfo(playerid, 2, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; }
			else if(PlayerInfo[playerid][pLider] == 17) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 18; }
			else if(PlayerInfo[playerid][pLider] == 18) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 19) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 20) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 21) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 22) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 23) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 24) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
			else if(PlayerInfo[playerid][pLider] == 25) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 26) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 27) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 28) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 29) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 30) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 31) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 33) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            else if(PlayerInfo[playerid][pLider] == 34) { SetSpawnInfo(playerid, 11, PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0); PlayerInfo[playerid][pTeam] = 11; gTeam[playerid] = 19; }
            SpawnPlayer(playerid);
		}
	}
	if(PlayerInfo[playerid][pSkin] > 0) { SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]); }
	else
	{
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]); }
		else { PlayerInfo[playerid][pSkin] = 216; SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]); }
	}
	SetPlayerSpawn(playerid);
	SetPlayerToTeamColor(playerid);
	PlayerFixRadio(playerid);
	return 1;
}
/*forward RegistroLog(string[]);
public RegistroLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/Players.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}*/
public KickLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/kick.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
forward NicksLog(string[]);
public NicksLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/Nicks.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
forward AtackLog(string[]);
public AtackLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/AtackLog.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
forward SBanLog(string[]);
public SBanLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/s_ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public BanLog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/ban.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
stock fdplog(string[])
{
	new entry[128];
	format(entry, sizeof(entry), "%s\n",string);
	new File:hFile;
	hFile = fopen("Logs/fdp.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}
public OnPlayerEnterCheckpoint(playerid)
{
	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
	    TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(BusCallTime[playerid] > 0 && BusAccepted[playerid] < 999)
	{
	    BusAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		BusCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MedicCallTime[playerid] > 0 && MedicAccepted[playerid] < 999)
	{
	    MedicAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		MedicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MechanicCallTime[playerid] > 0 && MechanicAccepted[playerid] < 999)
	{
	    MechanicAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		MechanicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CopsrondaCallTime[playerid] > 0 && CopsrondaAccepted[playerid] < 999)
	{
	    CopsrondaAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Chegou ao destino", 5000, 1);
		CopsrondaCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(CP[playerid] == 5)
	{
	    GameTextForPlayer(playerid, "~y~Complete a Missao indo nos Checkpoint", 2500, 1);
		CP[playerid] = 0;
	    DisablePlayerCheckpoint(playerid);
	}
	else if(TruckMission[playerid] == 1)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você obteve R$10000 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GranaTheus(playerid, 10000);
		var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	else if(TruckMission[playerid] == 2)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você obteve R$10000 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GranaTheus(playerid, 10000);
		var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	else if(TruckMission[playerid] == 3)
	{
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você obteve R$10000 por entregar a carga, espere sua recarga por 5 minutos.");
		DisablePlayerCheckpoint(playerid);
		TruckMission[playerid] = 0;
		GranaTheus(playerid, 10000);
		var1[playerid] = 1;
        TempoRecarga = SetTimerEx("ZerarRecarga", 180000, 0, "i", playerid);
	}
	if(PlayerToPoint(8.0,playerid,1481.1926,-1764.2736,18.7958))//Prefeitura
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Prefeitura", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2780.4939,-1812.2635,11.8438))//conce
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~~h~Concessionaria", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1462.395751,-1012.391174,26.843799))//Banco
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Banco", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1546.2761,-1675.5995,13.5620))//DP
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~Departamento de Policia", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1350.4865,-1753.2505,13.3582))//24-7
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~24-7", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1790.5725,-1167.3705,23.8281))//Loja de Armas
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~Loja de Armas", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1068.7330,-1875.4727,13.5469))//Loja de Armas 2
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou a ~b~Loja de Armas 2", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2244.7954,-1663.5021,15.4766))//Binco
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Binco", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,550.7012,-1278.5721,17.2482))//Aluguel de Carros
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Aluguel de Carros", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1411.5593,-1699.5270,13.5395))//Centro de Licencas
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Centro de Licencas", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1175.3164,-1323.7809,14.3906))//Hospital
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou no ~b~Hospital", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,1928.826904,-1776.405517,13.546895))//Posto Sul
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou ao ~b~Posto Sul", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,2232.5723,-1332.8412,23.9815))//Igreja
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Igreja", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,461.3484,-1500.9084,31.0592))//Zip
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~w~Voce chegou na ~b~Zip", 5000, 3);
   	}
   	if(PlayerToPoint(8.0,playerid,550.7012,-1278.5721,17.2482))//Aluguel de Carros 1
    {
        DisablePlayerCheckpoint(playerid);
        GameTextForPlayer(playerid, " ~p~|Voce chegou no ~b~Aluguel de Carros", 5000, 3);
   	}
   	if(PlayerToPoint(1.7,playerid,246.4971,74.3957,1003.6406))//Postao Presos DP
    {
        OnPlayerCommandText(playerid,"/pp");
        GameTextForPlayer(playerid, " ~w~Portao Celas ~b~Aberto", 5000, 3);
   	}
   	if(PlayerToPoint(2.0,playerid,367.3167,162.2013,1025.7891))//Postao Interno Prefeitura
    {
        OnPlayerCommandText(playerid,"/ppre");
        GameTextForPlayer(playerid, " ~w~Porta Prefeitura ~b~Aberto", 5000, 3);
   	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_HOME:
		    {
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
				GameTextForPlayer(playerid, "~w~Chegou em~n~~y~Casa", 5000, 1);
		    }
            case CHECKPOINT_CARRO:
            {
                PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_Nenhum;
				GameTextForPlayer(playerid, "~w~Chegou no~n~~y~ Local", 5000, 1);
            }
		}
	}
	if (gPlayerTerminal[playerid] != 0)
	{
		if (IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
		{
		    switch(gPlayerTerminal[playerid])
		    {
		        case 1:
		        {
   	        		SetPlayerCheckpoint(playerid,1533.1049,-1610.5599,13.4766, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 2:
				{
                    SetPlayerCheckpoint(playerid,1736.9674,-1601.5439,13.5225, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 3:
				{
				    SetPlayerCheckpoint(playerid,1818.3682,-1694.8099,13.4831, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 4:
				{
			    	SetPlayerCheckpoint(playerid,1819.0150,-1872.5851,13.5023, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 5:
				{
				    SetPlayerCheckpoint(playerid,1987.3519,-2169.5242,13.4809, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 6:
				{
				    SetPlayerCheckpoint(playerid,2274.7886,-2274.3623,13.4837, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 7:
				{
				    SetPlayerCheckpoint(playerid,1996.1328,-2163.6931,13.4833, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 8:
				{
				    SetPlayerCheckpoint(playerid,1964.8201,-2077.6494,13.4842, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 9:
				{
				    SetPlayerCheckpoint(playerid,1825.4634,-1906.8052,13.5044, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 10:
				{
				    SetPlayerCheckpoint(playerid,1824.8920,-1705.7137,13.4842, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 11:
			    {
			    	SetPlayerCheckpoint(playerid,1526.6500,-1612.1188,13.4907, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
	    		case 12:
			    {
	    			SetPlayerCheckpoint(playerid,1373.5723,-1729.5554,13.4952, 5.0);
					SetTimerEx("busstoptimer", 10000, false, "i", playerid);
					TogglePlayerControllable(playerid, 0);
					SendClientMessage(playerid, COLOR_LIGHTRED, "Aguarde 10 segundos nesse ponto para esperar passageiros.");
				}
				case 13:
				{
				    new conta = gPlayerTerminal[playerid]*300;
				    format(gstring,sizeof(gstring), "Você completou o R.O.T.A do ônibus e ganhou R$%d, use /terminais para iniciar novamente a R.O.T.A.", conta);
        		    SendClientMessage(playerid, COLOR_YELLOW, gstring);
					SendClientMessage(playerid, COLOR_YELLOW, "Use /sair para sair do ônibus.");
				    BusrouteEnd(playerid);
				}
			}
			gPlayerTerminal[playerid]++;
			PlayerPlaySound(playerid, 1056, 0.0, 0.0, 0.0);
			return 1;
		}
	}
	DisablePlayerCheckpoint(playerid);
	return 1;
}
public OnPlayerPickUpPickup(playerid, pickupid)
{
    if(pickupid == portaodpauto)
    {
    	playerpickup[playerid] = pickupid;
    }
    return 1;
}
public OnPlayerSelectedMenuRow(playerid, row)
{
    new Menu:TheusOwn = GetPlayerMenu(playerid);
	if(TheusOwn == Principal)
	{
		switch(row) {
			case 0:
			if(IsPlayerConnected(playerid))
			{
				ShowMenuForPlayer(CoresTheus, playerid);
			}
			case 1:
			if(IsPlayerConnected(playerid))
			{
				ShowMenuForPlayer(Rodas, playerid);
			}
			case 2:
			if(IsPlayerConnected(playerid))
			{
				ShowMenuForPlayer(VolumedoCarro, playerid);
			}
			case 3:
			if(IsPlayerConnected(playerid))
			{
				ShowMenuForPlayer(Componentes, playerid);
			}
			case 4:
			if(IsPlayerConnected(playerid))
			{
				ShowMenuForPlayer(PaintJobs, playerid);
			}
		}
	}
    if(TheusOwn == CoresTheus)
	{
		switch(row) {
			case 0:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 535
				||GetVehicleModel(GetPlayerVehicleID(playerid)) == 576
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
		            ChangeVehicleColorEx(car,0,0);
		            PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		            SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Preto.");
		            ShowMenuForPlayer(CoresTheus, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 1:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColorEx(car,1,1);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Branco.");
			        ShowMenuForPlayer(CoresTheus, playerid);
				}
                else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 2:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColorEx(car,3,3);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Vermelho.");
			        ShowMenuForPlayer(CoresTheus, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 3:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColorEx(car,79,79);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Azul.");
			        ShowMenuForPlayer(CoresTheus, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 4:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColorEx(car,86,86);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Verde.");
			        ShowMenuForPlayer(CoresTheus, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
                case 5:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColorEx(car,6,6);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Amarelo.");
			        ShowMenuForPlayer(CoresTheus, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
				case 6:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColorEx(car,126,126);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			        SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Rosa.");
			        ShowMenuForPlayer(CoresTheus, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
				case 7:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehicleColorEx(car,66,66);
			        PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	          		SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você Pintou seu carro de Marrom.");
	          		ShowMenuForPlayer(CoresTheus, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			   case 8:
				ShowMenuForPlayer(Principal, playerid);
		}
	}
    if(TheusOwn == Rodas)
	{
		switch(row) {
			case 0:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1025);
   	 				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
                 	SendClientMessage(playerid,0xFFFF00AA,"[INFO] Você adicionou Offroad Rodas.");
                 	ShowMenuForPlayer(Rodas, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 1:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1074);
   	  				PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Rodas Mega.");
					ShowMenuForPlayer(Rodas, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 2:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1076);
		         	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Wires Rodas.");
		         	ShowMenuForPlayer(Rodas, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 3:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
				 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1078);
			     	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Twist Rodas.");
			     	ShowMenuForPlayer(Rodas, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 4:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1081);
			     	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Groove Rodas.");
			     	ShowMenuForPlayer(Rodas, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
                case 5:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1082);
                 	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
   			     	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Import Rodas.");
   			     	ShowMenuForPlayer(Rodas, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
				case 6:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1085);
			     	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
			     	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Atomic Rodas.");
			     	ShowMenuForPlayer(Rodas, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
				case 7:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1097);
                 	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	           	 	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Virtual Rodas");
	           	 	ShowMenuForPlayer(Rodas, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
                case 8:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1098);
			     	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
	         	 	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Access Rodas.");
	         	 	ShowMenuForPlayer(Rodas, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			   case 9:
				ShowMenuForPlayer(Principal, playerid);
		}
	}
    if(TheusOwn == VolumedoCarro)
	{
		switch(row) {
			case 0:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1086);
		         	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Volume Alto sistema.");
		         	ShowMenuForPlayer(VolumedoCarro, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 1:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1086);
		         	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Volume Super Alto sistema.");
		         	ShowMenuForPlayer(VolumedoCarro, playerid);
				}
                else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 2:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1086);
                 	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Volume Ultra Alto sistema.");
		         	ShowMenuForPlayer(VolumedoCarro, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 3:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
				 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1086);
		         	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Volume King Alto sistema.");
		         	ShowMenuForPlayer(VolumedoCarro, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			   case 4:
				ShowMenuForPlayer(Principal, playerid);
		}
	}
    if(TheusOwn == Componentes)
	{
		switch(row) {
			case 0:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
		            AddVehicleComponentEx(car,1087);
		         	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         	SendClientMessage(playerid,0xFFFF00AA,"[INFO]:Você adicionou Suspenção para o carro.");
		         	ShowMenuForPlayer(Componentes, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 1:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        AddVehicleComponentEx(car,1010);
		         	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você adicionou Nitro 10x de carro.");
		         	ShowMenuForPlayer(Componentes, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 2:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        RepairVehicle(car);
		         	PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
		         	SendClientMessage(playerid,0xFFFF00AA,"[INFO]: Você tem reparado com êxito carro.");
		         	ShowMenuForPlayer(Componentes, playerid);
				}
                else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			   case 3:
				ShowMenuForPlayer(Principal, playerid);
		}
	}
    if(TheusOwn == PaintJobs)
	{
		switch(row) {
			case 0:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
		            ChangeVehiclePaintjobEx(car,0);
					SendClientMessage(playerid,0xFFFF00AA,"[INFO] Voce adicionou um paintjob com sucesso no carro");
		         	ShowMenuForPlayer(PaintJobs, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 1:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehiclePaintjobEx(car,1);
					SendClientMessage(playerid,0xFFFF00AA,"[INFO] Voce adicionou um paintjob com sucesso no carro");
		         	ShowMenuForPlayer(PaintJobs, playerid);
				}
				else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			case 2:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehiclePaintjobEx(car,2);
					SendClientMessage(playerid,0xFFFF00AA,"[INFO] Voce adicionou um paintjob com sucesso no carro");
		         	ShowMenuForPlayer(PaintJobs, playerid);
				}
                else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
                case 3:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehiclePaintjobEx(car,3);
					SendClientMessage(playerid,0xFFFF00AA,"[INFO] Voce adicionou um paintjob com sucesso no carro");
		         	ShowMenuForPlayer(PaintJobs, playerid);
				}
                else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
                case 4:
				if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 562 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 565
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 559 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 561
				|| GetVehicleModel(GetPlayerVehicleID(playerid)) == 560 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 575 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 534 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 567 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 536 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 535 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 576 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 558)
				{
					new car = GetPlayerVehicleID(playerid);
			        ChangeVehiclePaintjobEx(car,4);
					SendClientMessage(playerid,0xFFFF00AA,"[INFO] Voce adicionou um paintjob com sucesso no carro");
		         	ShowMenuForPlayer(PaintJobs, playerid);
				}
                else
				{
					ShowMenuForPlayer(Principal, playerid);
				}
			   case 5:
				ShowMenuForPlayer(Principal, playerid);
		}
	}
	return 1;
}
public SetAllPlayerCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi, num)
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetPlayerCheckpoint(i,allx,ally,allz, radi);
			if (num != 255)
			{
				gPlayerCheckpointStatus[i] = num;
			}
		}
	}

}
public SetAllCopCheckpoint(Float:allx, Float:ally, Float:allz, Float:radi)
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(gTeam[i] == 2)
			{
				SetPlayerCheckpoint(i,allx,ally,allz, radi);
			}
		}
	}
	return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
    NovaCamera[playerid] = 0;

    new string[128],ChaveCarro = PlayerInfo[playerid][pChave];
    if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "AdmCmd: Você foi kickado Automaticamente, Motivo: Se moveu Sem Logar!");
        Kick(playerid);
        return 1;
 	}
    if(ispassenger == 0)
    {
       for(new c = 0; c < sizeof(Carro); c++)
       {
            if(vehicleid == Carro[c][CarroID])
            {
                if(ChaveCarro == Carro[c][CarroID])
                {
                    format(string, sizeof(string), "[BPF Veículo] {FFFFFF}%s Seja Bem Vindo em Seu Veículo, %s.", PlayerName(playerid),vehName[GetVehicleModel(ChaveCarro)-400]);
                    SendClientMessage(playerid, 0x1E90FFFF, string);
                }
                else
                {
                    format(string, sizeof(string), "[BPF Veículo] {FFFFFF}Este Veículo: %s, Pertence à %s.", vehName[GetVehicleModel(vehicleid)-400], Carro[c][Dono]);
                    SendClientMessage(playerid, 0x77EEA1FF, string);
                    if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
					{
					    SendClientMessage(playerid, COLOR_YELLOW,"Info: Você pode Apreender este Veículo, levando na HQ PRF e Digitando '/pcarro'!");
					}
                }
                break;
            }
        }
    }
    return 1;
}
public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(IsPlayerNPC(playerid)) return 1;
    if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "AdmCmd: Você foi kickado Automaticamente, Motivo: Se moveu Sem Logar!");
        Kick(playerid);
        return 1;
 	}
 	if(newstate == PLAYER_STATE_ONFOOT)
    {
        SetCameraBehindPlayer(playerid);
    }
    if(newstate == PLAYER_STATE_DRIVER && VeiculoValido[GetPlayerVehicleID(playerid)] == 1)
    {
        SendClientMessage(playerid, 0xFF0000, "[FS] Você pode ativar a câmera em 1ª pessoa apertando a letra Y.");
    }
    new oldnew;
    /*if(AntCarSpam == 1)
    {
        PlayerCarSpam[playerid] ++;
        SetTimerEx("DesPlayerCarSpam", 1000,false,"i",playerid);
    }*/
	if(newstate == PLAYER_STATE_ONFOOT)
	{
	    if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
			else if(TransportDuty[playerid] == 2)
			{
			    BusDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(gstring, sizeof(gstring), "* Está fora de serviço, ganhou R$%d.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
			GranaTheus(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
		}
		if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999)
		{
		    if(IsPlayerConnected(TransportDriver[playerid]))
			{
			    TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			    TransportTime[TransportDriver[playerid]] = 0;
			    TransportCost[TransportDriver[playerid]] = 0;
			    format(gstring, sizeof(gstring), "~w~Custo da corrida~n~~r~R$%d",TransportCost[playerid]);
			    GameTextForPlayer(playerid, gstring, 5000, 1);
			    format(gstring, sizeof(gstring), "~w~Passageiro saiu do taxi~n~~g~ganhou R$%d",TransportCost[playerid]);
			    GameTextForPlayer(TransportDriver[playerid], gstring, 5000, 1);
				GranaTheus(playerid, -TransportCost[playerid]);
				TransportCost[playerid] = 0;
				TransportTime[playerid] = 0;
    			TransportDriver[playerid] = 999;
			}
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if (newstate == 2 || newstate == 3)
    {
        new name[MAX_PLAYER_NAME];
	   	new arma = GetPlayerWeapon(playerid);
	    GetPlayerName(playerid, name, sizeof(name));
	    if(arma == 24 || arma == 34 || arma == 25)
	    {
			SetPlayerArmedWeapon(playerid, 0);
			SendClientMessage(playerid, COLOR_GRAD1, "OBS: Você foi desarmado por tentar entrar de passageiro com uma arma proibida!");
		}
    if (oldnew == 0)
    	{
        format(gstring, sizeof(gstring), "~g~%s",vehName[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
        GameTextForPlayer(playerid, gstring, 6000, 1);
		}
	}
	if(newstate == PLAYER_STATE_PASSENGER) // TAXI, BUSSES, BOTS
	{
	    new name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    new vehicleid = GetPlayerVehicleID(playerid);
     for(new i = 0; i < MaiorID; i++)
	    {
	        if(IsPlayerConnected(i))
	        {
	            if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0)
	            {
	                if(GetGranaTheus(playerid) < TransportValue[i])
	                {
	                    format(gstring, sizeof(gstring), "* Você precisa de R$%d para entrar.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
						RemovePlayerFromVehicleEx(playerid);
	                }
	                else
	                {
	                    if(TransportDuty[i] == 1)
	                    {
	                        format(gstring, sizeof(gstring), "* Pagou R$%d para o taxista.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Passageiro %s entrou no Taxi.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
							TransportTime[i] = 1;
	                    	TransportTime[playerid] = 1;
	                    	TransportCost[playerid] = TransportValue[i];
	                    	TransportCost[i] = TransportValue[i];
	                    	TransportDriver[playerid] = i;
	                    }
	                    else if(TransportDuty[i] == 2)
	                    {
	                        format(gstring, sizeof(gstring), "* Pagou R$%d para o Motorista De Onibus.", TransportValue[i]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
							format(gstring, sizeof(gstring), "* Passageiro %s entrou no Onibus.", name);
							SendClientMessage(i, COLOR_LIGHTBLUE, gstring);
	                    }
						GranaTheus(playerid, - TransportValue[i]);
						TransportMoney[i] += TransportValue[i];
	                }
	            }
	        }
	    }
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{// 38 / 49 / 56 = SS
		new newcar = GetPlayerVehicleID(playerid);
		new oldcar = gLastCar[playerid];
		new HouseCar = PlayerInfo[playerid][pPHousekey];
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		new carid=GetVehicleModel(newcar);
		if(carid == 481 || carid == 509 || carid == 510) { }
		else
		{
			if(IsAAztecaCar(newcar))
			{
		    	if(!IsAAzteca(playerid))
		    	{
					SendClientMessage(playerid, COR_AZTECAS, "Você não é um Azteca, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			if(IsAAmericanoCar(newcar))
			{
		    	if(!IsAAmericano(playerid))
		    	{
					SendClientMessage(playerid, COR_AMERICANOS, "Você não é um Americano, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			if(IsARPPCar(newcar))
			{
		    	if(!IsARPP(playerid))
		    	{
					SendClientMessage(playerid, COR_RPP, "Você não é da Policia Cívil, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAOniCar(newcar))
			{
			    if(!IsAOni(playerid))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não é um Motorista De Onibus, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAMecCar(newcar))
			{
			    if(PlayerInfo[playerid][pEmprego] != 5)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não é um Mecânico, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAGMOBCar(newcar))
			{
		    	if(GetPlayerOrg(playerid) != 19)
				{
					SendClientMessage(playerid, 0xF6000000, "Você não é do Comando Vermelho, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAPCCCar(newcar))
			{
		    	if(GetPlayerOrg(playerid) != 20)
				{
					SendClientMessage(playerid, 0xCCFF99FF, "Você não é do PCC, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAyStiflerSCar(newcar))
			{
		    	if(GetPlayerOrg(playerid) != 31)
				{
					SendClientMessage(playerid, 0xCCFF99FF, "Você não é da yStiflerS, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
            else if(IsASkCar(newcar))
			{
		    	if(GetPlayerOrg(playerid) != 26)
				{
					SendClientMessage(playerid, 0xCCFF99FF, "Você não é da GE, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
            else if(IsAMotoqueirosCar(newcar))
			{
		    	if(GetPlayerOrg(playerid) != 27)
				{
					SendClientMessage(playerid, 0xCCFF99FF, "Você não é da Familia Motoqueiros por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
            else if(IsAStartCar(newcar))
			{
		    	if(PlayerInfo[playerid][pFamyMember] != 6 && PlayerInfo[playerid][pFamyLider] != 6)
				{
					SendClientMessage(playerid, 0xCCFF99FF, "Você não é da Família AnonymouS, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsACaminhoneiroCar(newcar))
			{
		    	if(!IsACaminhoneiro(playerid))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não é um Caminhoneiro, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAJornalCar(newcar))
			{
			    if(!IsAJornal(playerid))
				{
					SendClientMessage(playerid, COR_REP, "Você não é um Repórter, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAAmigodosAmigosCar(newcar))
			{
			    if(!IsAAmigodosAmigos(playerid))
				{
					SendClientMessage(playerid, COR_AmigodosAmigos, "Você não é um Amigo dos Amigos, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAHamCar(newcar))
			{
			    if(!IsAHam(playerid))
				{
					SendClientMessage(playerid, COR_TAL, "Você não é do Taliban, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAFARCCar(newcar))
			{
			    if(!IsAFARC(playerid))
				{
					SendClientMessage(playerid, COR_FARC, "Você não é da F.A.R.C, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsABallasCar(newcar))
			{
			    if(!IsABallas(playerid))
				{
					SendClientMessage(playerid, COR_BALLAS, "Você não é dos Ballas, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAVagosCar(newcar))
			{
			    if(!IsAVagos(playerid))
				{
					SendClientMessage(playerid, COR_VAGOS, "Você não é dos Vagos, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsATaxiCar(newcar))
			{
			    if(!IsATaxi(playerid))
				{
					SendClientMessage(playerid, COLOR_TAXISTA, "Você não é um Taxista, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAGrooveCar(newcar))
			{
			    if(!IsAGroove(playerid))
				{
					SendClientMessage(playerid, COR_GRO, "Você não é da Groove Street, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAAlCar(newcar))
			{
			    if(!IsAAl(playerid))
				{
					SendClientMessage(playerid, COR_AL, "Você não é da Al'Qaeda, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAHellCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 21)
				{
					SendClientMessage(playerid, 0xAA0000AA, "Você não é dos Hells Angels, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
            else if(IsACityCar(newcar))
			{
                if(GetPlayerOrg(playerid) == 21)
                {
					if(DonoCity != 21)
					{
    					SendClientMessage(playerid, 0xFF8000AA, "Os Hells Angels não Está no comando do Palominio Creeck!");
    					RemovePlayerFromVehicleEx(playerid);
                    }
				}
                if(GetPlayerOrg(playerid) == 22)
                {
					if(DonoCity != 22)
					{
    					SendClientMessage(playerid, 0xFF8000AA, "Os Mongols não Está no comando do Palominio Creeck!");
    					RemovePlayerFromVehicleEx(playerid);
                    }
				}
				if(GetPlayerOrg(playerid) == 23)
                {
					if(DonoCity != 23)
					{
    					SendClientMessage(playerid, 0xFF8000AA, "Os Sons Of Anarchy não Está no comando do Palominio Creeck!");
    					RemovePlayerFromVehicleEx(playerid);
                    }
				}
                if(GetPlayerOrg(playerid) == 25)
                {
					if(DonoCity != 25)
					{
    					SendClientMessage(playerid, 0xFF8000AA, "Os Sons Of Anarchy não Está no comando do Palominio Creeck!");
    					RemovePlayerFromVehicleEx(playerid);
                    }
				}
			}
			else if(IsAMonCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 22)
				{
					SendClientMessage(playerid, 0xAA0000AA, "Você não é dos Mongols, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsASonsCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 23)
				{
					SendClientMessage(playerid, COR_SONS, "Você não é dos Sons Of Anarchy, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
            else if(IsADriftCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 25)
				{
					SendClientMessage(playerid, COR_SONS, "Você não é dos Drifters, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsACopCar(newcar))
			{
			    if(!IsACop(playerid))
				{
					SendClientMessage(playerid, COR_PM, "Você não é um policial, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAHitCar(newcar))
			{
			    if(!IsAHit(playerid))
				{
					SendClientMessage(playerid, COR_HITMAN, "Você não é um Hitman, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
            else if(IsATriadCar(newcar))
			{
			    if(GetPlayerOrg(playerid) != 24)
				{
					SendClientMessage(playerid, COR_TRIAD, "Você não é um Triads, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAYaCar(newcar))
			{
			    if(!IsAYa(playerid))
				{
					SendClientMessage(playerid, COR_YAK, "Você não é da Máfia Yakuza, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
  			else if(IsAMLHCar(newcar))
			{
			    if(!IsAMLH(playerid))
				{
					SendClientMessage(playerid, COR_COSA, "Você não é da Máfia Cosa Nostra, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			else if(IsAGOVCar(newcar))
			{
			    if(!IsAGOV(playerid))
				{
					SendClientMessage(playerid, COR_ROTAE, "Você não é do governo, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
        	}
			else if(IsAnAmbulanceCar(newcar))
			{
			    if(!IsAAmbu(playerid))
				{
					SendClientMessage(playerid, COR_SAMU, "Você não é um Médico, por isso não tem a chave desse veículo!");
					RemovePlayerFromVehicleEx(playerid);
				}
			}
			if(IsABlindadoCar(newcar))
			{
			    if(IsACop(playerid))
				{
					SendClientMessage(playerid, COR_PM, "Este veículo Possui Sistema de Blindagem, Será mais difícil Explodir!");
                    SetVehicleHealth(newcar, 2000.0);
                }
			}
		}
		if(IsAPlane(newcar))
		{
	    	if(PlayerInfo[playerid][pFlyLic] < 1)
			{
		    	SendClientMessage(playerid, COLOR_GREY, "Você não tem licença para Voar!");
		    	SendClientMessage(playerid, COLOR_GREY, "Para Adquirir Licenças Digite /gps Centro de Licencas!");
		    	SetPlayerCriminal(playerid,255,"Voando Sem Licença");
			}
		}
       	else
		{
   	    	if(PlayerInfo[playerid][pCarLic] < 1)
			{
		    	if(PlayerDrunk[playerid] >= 1)
				{
					SetPlayerCriminal(playerid,255, "Dirigindo Bebado");
				}
				if(IsACivilCar(newcar)) { }
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Você não tem licença para dirigir carro!");
					SendClientMessage(playerid, COLOR_GREY, "Para Adquirir Licenças Digite /gps Centro de Licencas!");
					SetPlayerCriminal(playerid,255,"Dirigindo Sem Carteira");
               	}
			}
			else if(PlayerDrunk[playerid] >= 1)
			{
				SetPlayerCriminal(playerid,255, "Dirigindo Bêbado");
			}
		}
        new alugarstr[180];
		if(IsAAlugCar(newcar))
		{
			if (HireCar[playerid] != newcar)
			{
				format(gstring, sizeof(gstring), "~w~Voce pode alugar esse carro~n~Custo:~g~$%d~n~~w~para alugar o carro use ~g~/alugarcarro~w~~n~para sair use ~r~/sair",SBizzInfo[1][sbEntranceCost]);
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, gstring, 5000, 3);
				format(alugarstr,sizeof(alugarstr), "{FF8000}Você pode alugar este carro.\nPreço:{00FFFF} %d\n{FF8000}Caso queira alugar aperte em '{00FFFF}Alugar{FF8000}'!\nCaso contrário aperte em '{00FFFF}Sair{FF8000}'!",SBizzInfo[1][sbEntranceCost]);
		        ShowPlayerDialog(playerid,643,DIALOG_STYLE_MSGBOX,"Aluguel de Carros",alugarstr,"Alugar","Sair");
			}
		}
		if(IsAAlugHeli(newcar))
		{
		    if (HireCar[playerid] != newcar)
			{
				format(gstring, sizeof(gstring), "~w~Voce pode alugar esse heli~n~Custo:~g~$%d~n~~w~para alugar o heli use ~g~/alugarheli~w~~n~para sair use ~r~/sair",SBizzInfo[19][sbEntranceCost]);
				TogglePlayerControllable(playerid, 0);
				GameTextForPlayer(playerid, gstring, 5000, 3);
				format(alugarstr,sizeof(alugarstr), "{FF8000}Você pode alugar este veiculo.\nPreço:{00FFFF} %d\n{FF8000}Caso queira alugar aperte em '{00FFFF}Alugar{FF8000}'!\nCaso contrário aperte em '{00FFFF}Sair{FF8000}'!",SBizzInfo[1][sbEntranceCost]);
		        ShowPlayerDialog(playerid,643,DIALOG_STYLE_MSGBOX,"Aluguel de Carros",alugarstr,"Alugar","Sair");
			}
		}
		else if(IsACivilCar(newcar))
  		{
			if(GetPlayerOrg(playerid) != 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Este carro é Reservado apenas Para Civis!");
                RemovePlayerFromVehicleEx(playerid);
			}
			else
			{
				SendClientMessage(playerid, 0xFFD3A8AA, "Novato, você poderá chegar aos locais digitando /gps ou falando com um admin /relatorio");
	 			SendClientMessage(playerid, 0xFFD3A8AA, "Para selecionar alguma opção no /gps - aperte a tecla space ! Maior tecla de seu teclado !");
	 			SendClientMessage(playerid, 0x55FFAAAA, "Consiga Suas Licenças! /gps Centro de Licenças.");
			}
	  	}
		if(oldcar != 301)
		{
			if((HouseCar != oldcar && oldcar != 0) && (HireCar[playerid] != oldcar && newcar != HouseCar))
			{
				if(gLastDriver[oldcar] == playerid && oldcar != newcar)
				{
					gLastDriver[oldcar] = 300;
					VTrancado[oldcar] = 0;
					UnLockCar(oldcar);
				}
			}
		}
		gLastCar[playerid] = newcar;
		gLastDriver[newcar] = playerid;
	}
	if(newstate == PLAYER_STATE_SPAWNED && logouagora[playerid] ==0 )
	{
	    if(sincronizando[playerid] == 1)
		{
		return 1;
		}
		new Float: lwx, Float:lwy, Float:lwz;
		GetPlayerPos(playerid, lwx, lwy, lwz);
		if((lwz > 530.0 && PlayerInfo[playerid][pInt] == 0) || PlayerToPoint(1000.0, playerid, -1041.9,-1868.4,79.1)) //the highest land point in sa = 526.8
		{
		    if(sincronizando[playerid] == 1)
			{
			return 1;
			}
			SetPlayerSpawn(playerid);
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		gPlayerSpawned[playerid] = 1;
		SafeTime[playerid] = 60;
	}
	return 1;
}

forward OnPlayerChangeVehicle(playerid, vehicleid);
public OnPlayerChangeVehicle(playerid, vehicleid)
{
    #pragma unused vehicleid
    if(gPlayerLogged[playerid] == 0)
	{
    	SendClientMessage(playerid, COLOR_LIGHTRED, "AdmCmd: Você foi kickado Automaticamente, Motivo: Se moveu Sem Logar!");
        Kick(playerid);
 	}
    if(PlayerInfo[playerid][pAdmin] != 3000)
    {
        if((GetTickCount() - vehicleTime[playerid]) < 250)
        {
            GetPlayerPos(playerid, xpoz, ypoz, zpoz);
            SendClientMessage(playerid, COLOR_LIGHTRED, "Você foi banido do servidor acusado de Car Spam, Se isto for um erro, Reclame no fórum!");
            format(gstring,sizeof(gstring), "AntiAttack:{80E3FF}%s{E84F33}[ID: {80E3FF}%d{E84F33}] Poder Ser xiter Car Spam, e Foi Banido!",PlayerName(playerid),playerid);
    	    ABroadCast(COLOR_LIGHTRED, gstring,1);
        	format(gstring,sizeof(gstring),"Inf: Coordenadas, X:%f Y:%f Z:%f, Ant Xiter: 1, Digite /irxiter ir Até o Acusado",xpoz,ypoz,zpoz);
        	ABroadCast(0x00F2F2AA, gstring,1);
            getdate(year, month, day);
            format(gstring, sizeof(gstring), "AdmCmd: %s Acusação Car Spam (%d-%d-%d)", PlayerName(playerid),day,month,year);
           	AtackLog(gstring);
            Ban(playerid);
        }
    }
    vehicleTime[playerid] = GetTickCount();
}

public HireCost(carid)
{
	switch (carid)
	{
		case 69:
		{
			return 90000; //Ford-GT
		}
		case 70:
		{
			return 130000; //infernus
		}
		case 71:
		{
			return 100000; //Diablo
		}
		case 72:
		{
			return 80000;
		}
		case 73:
		{
			return 70000;
		}
		case 74:
		{
			return 60000;
		}
	}
	return 0;
}

public CarCheck()//ATUAL
{
	for(new j = 0; j<MaiorID; j++)
	{
	    if(IsPlayerConnected(j))
	    {
		    new Float:health;
		    GetPlayerHealth(j, health);
			if(PlayerInfo[j][pDoenca]==1)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 4.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 4 de Saúde por DST - Vá até um hospital ou procure um médico para se curar");
			}
			else if(PlayerInfo[j][pDoenca]==2)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 8.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 8 de Saúde por DST - Vá até um hospital ou procure um médico para se curar");
			}
			else if(PlayerInfo[j][pDoenca]==3)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 12.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 12 de Saúde por DST - Vá até um hospital ou procure um médico para se curar");
			}
            else if(PlayerInfo[j][pDoenca]==4)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 5 de Saúde por Cirrose - Vá até um hospital ou procure um médico para se curar.");
			}
			else if(PlayerInfo[j][pDoenca]==5)
			{
			    GetPlayerHealth(j, health);
			    SetPlayerHealth(j, health - 5.0);
			    SendClientMessage(j, COLOR_LIGHTBLUE, "* Perdeu 5 de Saúde por Câncer de Pulmão - Vá até um hospital ou procure um médico para se curar.");
			}
			if(GetGranaTheus(j) < 0)
			{
			    if(MoneyMessage[j]==0)
			    {
				    format(gstring, sizeof(gstring), "Você esta devendo: R$%d Se não tiver essa grana você vai preso automaticamente!", GetGranaTheus(j));
					SendClientMessage(j, COLOR_LIGHTRED, gstring);
					MoneyMessage[j] = 1;
				}
			}
			else
			{
			    MoneyMessage[j] = 0;
			}
		}
	}
	for(new c = 1; c < 254; c++)
	{
 		if (gLastDriver[c] >= 300)
		{
			gLastDriver[c]++;
		}
		//forndowner = -1;
	}
	return 1;
}

public CarInit()
{
	for(new c = 1; c < 254; c++)
	{
 		gLastDriver[c] = 299;
	}
	gLastDriver[301]=255;
	return 1;
}

public CarTow(carid)
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInVehicle(i, carid) || HireCar[i] == carid)
			{
				gLastDriver[carid] = 255;
				return 0;
			}
		}
	}
	SetVehiclePos(carid,HouseCarSpawns[carid-1][0], HouseCarSpawns[carid-1][1], HouseCarSpawns[carid-1][2]);
	SetVehicleZAngle(carid, HouseCarSpawns[carid-1][3]);
	LinkVehicleToInterior(carid, 0);
	return 1;
}
public OnPlayerExitVehicle(playerid, vehicleid)
{
 	if (GetPlayerState(playerid) == 1)
	{
		return 1;
	}
	if (gPlayerTerminal[playerid] != 0)
	{
		BusrouteEnd(playerid);
	}
	TogglePlayerControllable(playerid, 1);
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
    if(IsPlayerNPC(playerid))
	{
	    SpawnPlayer(playerid);
        return 1;
	}
 	if (RegistrationStep[playerid] == 0 && gPlayerLogged[playerid] != 1)
	{
        ClearChatbox(playerid, 20);
		SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
        new plname[MAX_PLAYER_NAME];
		GetPlayerName(playerid,loginname,sizeof(loginname));
	    //PlayerPlaySound(playerid, 1183, 0.0, 0.0, 0.0);
		//GameTextForPlayer(playerid," ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~p~b~g~r~y~a~r~s~b~i~y~l ~p~m~b~a~r~g~g~i~p~c ~y~g~p~a~r~m~b~e~g~s ~n~~r~r~p~p~b~g ~w~v4.6",10000,6);
		//GameTextForPlayer(playerid," ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~n~ ~g~ Brasil ~b~Play~r~~h~ City ~n~~p~RPG",10000,6);
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        SendClientMessage(playerid, 0xFFFFFFFF, "- {1E90FF}INFORMAÇÕES DO SERVIDOR");
        format(strtheus,sizeof(strtheus),"- Último GMX: {1E90FF}%d/%d/%d  {FFFFFF}Horário:{1E90FF} %d:%d:%d.",AnoGMX, MesGMX, DiaGMX, HoraGMX, MinutoGMX, SegundoGMX);
        SendClientMessage(playerid,0xFFFFFFFF,strtheus);
        SendClientMessage(playerid, 0xFFFFFFFF, "-  IP do Servidor: {1E90FF}208.115.201.248:7789.");
        SendClientMessage(playerid, 0xFFFFFFFF, "-  Site do Servidor: {1E90FF}www.brasilplayStart1.forumeiros.com");
  		format(strtheus,sizeof(strtheus),"- Jogadores Online: {1E90FF}%d.",ContarJogadores());
        SendClientMessage(playerid,0xFFFFFFFF,strtheus);
		if(EleicoesOn == 1)
        {
            SendClientMessage(playerid, 0xFFFFFFFF, "-  Eleições: {1E90FF}Ativada.");
        }
        else
        {
            SendClientMessage(playerid, 0xFFFFFFFF, "-  Eleições: {1E90FF}Desativadas.");
        }
        if(Morro[Guerra] == 1)
        {
            SendClientMessage(playerid, 0xFFFFFFFF, "-  Guerra do Morro: {1E90FF}Em Guerra.");
        }
        else
        {
            SendClientMessage(playerid, 0xFFFFFFFF, "-  Guerra do Morro: {1E90FF}Finalizada.");
        }
        if(Pedreira[Guerra] == 1)
        {
            SendClientMessage(playerid, 0xFFFFFFFF, "-  Guerra da Pedreira: {1E90FF}Em Guerra.");
        }
        else
        {
            SendClientMessage(playerid, 0xFFFFFFFF, "-  Guerra da Pedreira: {1E90FF}Finalizada.");
        }
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        new strtexton[64];
        format(strtexton,sizeof(strtexton),"Usuarios: ~w~%d",ContarJogadores());
        TextDrawSetString(TextPlayersOn, strtexton);
        TextDrawShowForPlayer(playerid, TextPlayersOn);
        TextDrawHideForPlayer(playerid, TextLogin8);
        TextDrawHideForPlayer(playerid, TextLogin9);
        TextDrawHideForPlayer(playerid, TextLogin10);
		GetPlayerName(playerid, plname, sizeof(plname));
		format(gstring,sizeof(gstring), OpenAccPlayer, plname);
        if(dini_Exists(gstring))
		{
            SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
            SetPlayerCameraPos(playerid,1841.2092,-1458.6342,105.9717);
            SetPlayerCameraLookAt(playerid,1841.2092,-1458.6342,105.9717);
   			//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
   			//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
			//InterpolateCameraLookAt(playerid, 1477.482666, -1070.184326, 217.019683, 1665.385986, -1308.891113, 206.348419, 25000, CAMERA_MOVE);
            format(loginstring,sizeof(loginstring),"\n\n{FFFFFF}********************************************\n\nConta: %s\nStatus: {00FF00}Registrada\n\n********************************************\n\n{FFFFFF}- Digite sua senha abaixo para logar\n* Caso erre sua senha 6 vezes será kikado!\n\n",loginname);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start",loginstring,"Logar","Cancelar");
			TogglePlayerControllable(playerid, 0);
        }
		else
		{
            SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
            SetPlayerCameraPos(playerid,1841.2092,-1458.6342,105.9717);
            SetPlayerCameraLookAt(playerid,1841.2092,-1458.6342,105.9717);
   			//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
   			//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
			//InterpolateCameraLookAt(playerid, 1477.482666, -1070.184326, 217.019683, 1665.385986, -1308.891113, 206.348419, 25000, CAMERA_MOVE);
            format(loginstring,sizeof(loginstring),"\n\n{FFFFFF}********************************************\n\nConta: %s\nStatus: {FF0000}Não Registrada\n\n********************************************\n\n{FFFFFF}- Digite uma senha abaixo para registrar\n* OBS: Não passe sua senha para ninguem por questão de segurança!\n\n",loginname);
			ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start",loginstring,"Registrar","Cancelar");
		    TogglePlayerControllable(playerid, 0);
        }
		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		TogglePlayerControllable(playerid, 0);
		SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
		SetPlayerCameraPos(playerid,1841.2092,-1458.6342,105.9717);
        SetPlayerCameraLookAt(playerid,1841.2092,-1458.6342,105.9717);
		//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
		//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
		//InterpolateCameraLookAt(playerid, 1477.482666, -1070.184326, 217.019683, 1665.385986, -1308.891113, 206.348419, 25000, CAMERA_MOVE);
  		SetTimerEx("MoverCamera", 2700,false,"i",playerid);
		PlayerInfo[playerid][pSkin] = Peds[classid][0];
		SetPlayerTeamFromClass(playerid,classid);
	}
	else
    {
        Hospital[playerid] = 1;
        SpawnPlayer(playerid);
    }
	return false;
}

public SetupPlayerForClassSelection(playerid)
{
}

//---------------------------------------------------------

public SetPlayerTeamFromClass(playerid,classid)
{
 	if (classid >= 1 && classid <= 11)
	{
		gTeam[playerid] = 11; //admin
		PlayerInfo[playerid][pTeam] = 11;
	}
	else
	{
	    gTeam[playerid] = 3;
	    PlayerInfo[playerid][pTeam] = 3;
	}
}

//---------------------------------------------------------

public SetPlayerCriminal(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid) && !IsACop(playerid))
	{
	    if(WantedPoints[playerid] < 6) WantedPoints[playerid] += 1;
	    PlayerInfo[playerid][pCrimes] += 1;
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new location[MAX_ZONE_NAME];
		GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
		strmid(PlayerCrime[playerid][pAccusedof], reason, 0, strlen(reason), 255);
		GetPlayerName(playerid, turned, sizeof(turned));
		if (declare == 255)
		{
		    format(turner, sizeof(turner), "Câmeras de Segurança");
			strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
				strmid(PlayerCrime[playerid][pVictim], turner, 0, strlen(turner), 255);
				strmid(PlayerCrime[declare][pBplayer], turned, 0, strlen(turned), 255);
				strmid(PlayerCrime[declare][pAccusing], reason, 0, strlen(reason), 255);
			}
		}
		format(gstring, sizeof(gstring), "Você cometeu um crime ({80F0FF} %s {FF4800}). Relato:{B3FFFF} %s",reason,turner);
		SendClientMessage(playerid, 0xFF4800FF, gstring);
		SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
		format(gstring, sizeof(gstring), "Nível de procurado:{00EAEA} %d", WantedPoints[playerid]);
		SendClientMessage(playerid, 0xFEBF01FF, gstring);
        //ProcuradoPlayer(playerid);
  for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(IsACop(i) && admtrampando[i] != 1)
			    {
					format(gstring, sizeof(gstring), "HQ - Todas as unidades: Relato:{01E8F3} %s",turner);
					SendClientMessage(i, 0x0476F4FF, gstring);
					format(gstring, sizeof(gstring), "HQ - Crime:{01E8F3} %s{0476F4}, Suspeito:{01E8F3} %s",reason,turned);
					SendClientMessage(i, 0x0476F4FF, gstring);
					if(GetPlayerInterior(playerid) == 0)
					{
						format(gstring, sizeof(gstring), "Local:{01E8F3} %s{0476F4}, Em Interior:{01E8F3} Não",location);
						SendClientMessage(i, 0x0476F4FF, gstring);
					}
					else
					{
						format(gstring, sizeof(gstring), "Local:{01E8F3} %s{0476F4}, Em Interior:{01E8F3} Sim",location);
						SendClientMessage(i, 0x0476F4FF, gstring);
					}
				}
			}
		}
	}//not connected
}
//---------------------------------------------------------

public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		if (declare == 255)
		{
			format(turner, sizeof(turner), "190");
		}
		else
		{
		    if(IsPlayerConnected(declare))
		    {
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		//format(gstring, sizeof(gstring), "SMS: %s, Porque Você %s, Você Não é Mais um Criminoso, Sender: MOLE (555)",turned,reason);
		RingTone[playerid] = 20;
        SetPlayerWantedLevel(playerid, 0);
		//SendClientMessage(playerid, COLOR_YELLOW, gstring);
        for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
			    if(IsACop(i))
			    {
					format(gstring, sizeof(gstring), "<< HQ: Todas As Unidades, Oficial %s Completou a sentença >>",turner);
					SendClientMessage(i, COLOR_DBLUE, gstring);
					format(gstring, sizeof(gstring), "HQ: %s Foi processado, %s",turned,reason);
					SendClientMessage(i, COLOR_DBLUE, gstring);
					SetPlayerWantedLevel(playerid, 0);
				}
			}
		}
	}
}

public RingToner()
{
 for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 6 && RingTone[i] != 0 && RingTone[i] < 11)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1138, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 6)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 20)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
			}
		}
	}
	SetTimer("RingTonerRev", 1000, 0);
	return 1;
}

public RingTonerRev()
{
 for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			if(RingTone[i] != 5 && RingTone[i] != 0 && RingTone[i] < 10)
			{
				RingTone[i] = RingTone[i] -1;
				PlayerPlaySound(i, 1137, 0.0, 0.0, 0.0);
			}
			if(RingTone[i] == 5)
			{
				RingTone[i] = RingTone[i] -1;
			}
			if(RingTone[i] == 19)
			{
				PlayerPlaySound(i, 1139, 0.0, 0.0, 0.0);
				RingTone[i] = 0;
			}
		}
	}
	SetTimer("RingToner", 1000, 0);
	return 1;
}

public OtherTimer()
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
    for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    {
	        //new vehicleid = GetPlayerVehicleID(i);
            if(SafeTime[i] > 0)
			{
				SafeTime[i]--;
			}
			if(SafeTime[i] == 1)
			{
				if(gPlayerConta[i] == 1 && gPlayerLogged[i] == 0)
				{

				}
			}
		    if(PlayerInfo[i][pLocal] != 255 && PlayerInfo[i][pInt] != 0)
			{
				new House = PlayerInfo[i][pLocal];
				GetPlayerPos(i, oldposx, oldposy, oldposz);
				if(oldposz != 0.0)
				{
					if(oldposz < 600.0)
					{
						if(House > 10000)
						{
							new tmpcar = GetPlayerVehicleID(i);
							if (!PlayerToPoint(6, i,1040.6,-1021.0,31.7) && House == 10001 ||!PlayerToPoint(6, i,-2720.5,217.5,4.1) && House == 10002 ||!PlayerToPoint(6, i,2644.6,-2044.9,13.3) && House == 10003)
							{
								if (GetPlayerState(i) == 2)
								{
									SetVehiclePos(tmpcar, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
									SetVehicleZAngle(tmpcar, HouseCarSpawns[tmpcar-1][3]);
									LinkVehicleToInterior(tmpcar, 0);
								}
								else
								{
									SetPlayerPos(i, HouseCarSpawns[tmpcar-1][0], HouseCarSpawns[tmpcar-1][1], HouseCarSpawns[tmpcar-1][2]);
								}
								new oldcash = gSpentCash[i];
								new Total = GetGranaTheus(i) - oldcash;
								printf("Total %d = GetGranaTheus(playerid) %d - oldcash %d",Total,GetGranaTheus(i),oldcash);
								gSpentCash[i] = 0;
								TelePos[i][0] = 0.0;
								TelePos[i][1] = 0.0;
								PlayerInfo[i][pLocal] = 255;
								SetPlayerInterior(i,0);
								PlayerInfo[i][pInt] = 0;
								Spectate[i] = 255;
							}
						}
						if(House >= 99 && House != 10000)
						{
							SetPlayerPos(i, BizzInfo[House-99][bEntranceX], BizzInfo[House-99][bEntranceY],BizzInfo[House-99][bEntranceZ]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
						else if(House < 99 && House != 10000)
						{
							SetPlayerPos(i, HouseInfo[House][hEntrancex], HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]); // Warp the player
							PlayerInfo[i][pLocal] = 255;
							SetPlayerInterior(i,0);
							PlayerInfo[i][pInt] = 0;
						}
					}
				}
			}
		    if(CellTime[i] > 0)
			{
				if (CellTime[i] == cchargetime)
				{
					CellTime[i] = 1;
					if(Mobile[Mobile[i]] == i)
					{
						CallCost[i] = CallCost[i]+callcost;
					}
				}
				CellTime[i] = CellTime[i] +1;
				if (Mobile[Mobile[i]] == 255 && CellTime[i] == 5)
				{
				    if(IsPlayerConnected(Mobile[i]))
				    {
						new called[MAX_PLAYER_NAME];
						GetPlayerName(Mobile[i], called, sizeof(called));
						format(gstring, sizeof(gstring), "* %s's Ligando.", called);
						RingTone[Mobile[i]] = 10;
						ProxDetector(30.0, Mobile[i], gstring, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
			if(CellTime[i] == 0 && CallCost[i] > 0)
			{
				format(gstring, sizeof(gstring), "~w~Custo da ligacao~n~~r~R$%d",CallCost[i]);
				GranaTheus(i, -CallCost[i]);
				SBizzInfo[2][sbTill] += CallCost[i];
				ExtortionSBiz(2, CallCost[i]);
				GameTextForPlayer(i, gstring, 5000, 1);
				CallCost[i] = 0;
			}
			if(TransportTime[i] > 0)
			{//Taxi driver and passenger only
			    if(TransportTime[i] >= 16)
				{
					TransportTime[i] = 1;
					if(TransportDriver[i] < 999)
					{
						if(IsPlayerConnected(TransportDriver[i]))
						{
	      					TransportCost[i] += TransportValue[TransportDriver[i]];
						    TransportCost[TransportDriver[i]] = TransportCost[i];
						}
					}
				}
			    TransportTime[i] += 1;
			    format(gstring, sizeof(gstring), "~r~%d ~w~: ~g~R$%d",TransportTime[i],TransportCost[i]);
			    GameTextForPlayer(i, gstring, 15000, 6);
			}
			if (gPlayerTerminal[i] != 0)
			{
			    new vehicleid = GetPlayerVehicleID(i);
				if (vehicleid != 0)
				{
					if (!IsABus(vehicleid))
					{
						if (gPlayerTerminal[i] != 0) BusrouteEnd(i);
					}
				}
				else
				{
				    if (gPlayerTerminal[i] != 0) BusrouteEnd(i);
				}
			}
		}
	}
	return 1;
}

public SetPlayerUnjail()
{
	if(PaintballPlayers >= 2 && PaintballRornd != 1 && StartingPaintballRornd != 1)
	{
		StartingPaintballRornd = 1;
	   	SetTimer("PreparePaintball", 30000, 0);
	}
    for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    {
			//new newcar = GetPlayerVehicleID(i);
			new level = PlayerInfo[i][pLevel];
			new vip = PlayerInfo[i][pVIP];
			if(level >= 0 && level <= 2) { PlayerInfo[i][pSalario] += 3; }
			else if(level >= 3 && level <= 4) { PlayerInfo[i][pSalario] += 4; }
			else if(level >= 5 && level <= 6) { PlayerInfo[i][pSalario] += 5; }
			else if(level >= 7 && level <= 8) { PlayerInfo[i][pSalario] += 6; }
			else if(level >= 9 && level <= 10) { PlayerInfo[i][pSalario] += 7; }
			else if(level >= 11 && level <= 12) { PlayerInfo[i][pSalario] += 8; }
			else if(level >= 13 && level <= 14) { PlayerInfo[i][pSalario] += 9; }
			else if(level >= 15 && level <= 16) { PlayerInfo[i][pSalario] += 10; }
			else if(level >= 17 && level <= 18) { PlayerInfo[i][pSalario] += 11; }
			else if(level >= 19 && level <= 20) { PlayerInfo[i][pSalario] += 12; }
			else if(level >= 21) { PlayerInfo[i][pSalario] += 15; }
            if(vip == 1) { PlayerInfo[i][pSalario] += 2; }
            if(vip == 2) { PlayerInfo[i][pSalario] += 3; }
            if(vip == 2) { PlayerInfo[i][pSalario] += 4; }
            if(PlayerInfo[i][pHosp] > 0)
		    {
				if(PlayerInfo[i][pHospTime] > 0)
				{
                    TextHospital(i);
					PlayerInfo[i][pHospTime]--;
				}
				if(PlayerInfo[i][pHospTime] <= 0)
				{
                    SairHospital(i);
                }
            }
		    if(PlayerInfo[i][pJailed] > 0)
		    {
				if(PlayerInfo[i][pJailTime] > 0)
				{
					PlayerInfo[i][pJailTime]--;
				}
				if(PlayerInfo[i][pJailTime] <= 0)
				{
				    PlayerInfo[i][pJailTime] = 0;
                    Hospital[i] = 1;
					if(PlayerInfo[i][pJailed] == 1)
					{
						SetPlayerInterior(i, 6);
						SetPlayerPos(i,268.0903,77.6489,1001.0391);
					}
					else if(PlayerInfo[i][pJailed] == 3)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,932.7802,-1223.6500,16.9051);
					}
					else if(PlayerInfo[i][pJailed] == 4)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,338.3080,-1523.9946,33.2635);
					}
					else if(PlayerInfo[i][pJailed] == 5)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,1024.3496,-373.1364,73.3885);
					}
					else if(PlayerInfo[i][pJailed] == 6)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,1541.1633,-1674.6908,13.5520);
                        SpawnPlayer(i);
					}
					else if(PlayerInfo[i][pJailed] == 7)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,-1529.3772,486.5050,7.1797);
					}
					else if(PlayerInfo[i][pJailed] == 8)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,932.7802,-1223.6500,16.9051);
					}
					else if(PlayerInfo[i][pJailed] == 8)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,932.7802,-1223.6500,16.9051);
					}
					else if(PlayerInfo[i][pJailed] == 28)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,-1203.7656,-975.7462,128.7328);
					}
					else if(PlayerInfo[i][pJailed] == 30)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,1282.0778,-1845.0315,13.5513);
					}
					else if(PlayerInfo[i][pJailed] == 32)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,356.9433,1793.8766,18.0242);
					}
					else if(PlayerInfo[i][pJailed] == 34)
					{
						SetPlayerInterior(i, 0);
						SetPlayerPos(i,1633.5294,-1718.6134,13.5120);
					}
					else if(PlayerInfo[i][pJailed] == 2)
					{
					    SetPlayerWorldBounds(i,20000.0000,-20000.0000,20000.0000,-20000.0000); //Reset world to player
					    SetPlayerInterior(i, 0);
                        SpawnPlayer(i);
					}
					PlayerInfo[i][pJailed] = 0;
					SendClientMessage(i, COLOR_GRAD1,"Você pagou sua divida com a sociedade.");
					GameTextForPlayer(i, "~g~Livre~n~~w~Nao cometa mais crimes", 5000, 1);
					if(gTeam[i] == 4) { gTeam[i] = 3; }
					ClearCrime(i);
					SetPlayerToTeamColor(i);
					//ProcuradoPlayer(i);
				}
			}
			if(GetGranaTheus(i) - CurrentMoney[i] >= 50000 && PlayerInfo[i][pAdmin] < 1)
		    {
		        if(ConsumingMoney[i])
		        {
                    CurrentMoney[i] = GetGranaTheus(i);
					ConsumingMoney[i] = 0;
		        }
		        else
		        {
			        CurrentMoney[i] = GetGranaTheus(i);
		        }
		    }
		    else
		    {
		        CurrentMoney[i] = GetGranaTheus(i);
		    }
		    if(UsedFind[i] >= 1)
		    {
		        UsedFind[i] += 1;
				if(UsedFind[i] >= 120)
				{
				    UsedFind[i] = 0;
				}
		    }
			if(PlayerTazeTime[i] >= 1)
			{
			    PlayerTazeTime[i] += 1;
			    if(PlayerTazeTime[i] == 15)
			    {
                    PlayerTazeTime[i] = 0;
			    }
			    else
			    {
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					SetPlayerFacingAngle(i, angle + 90);
			    }
			}
			if(PlayerDrunk[i] >= 5)
			{
			    PlayerDrunkTime[i] += 1;
			    if(PlayerDrunkTime[i] == 8)
			    {
			        PlayerDrunkTime[i] = 0;
			        PlayerDrunk[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    ApplyAnimation(i,"PED", "WALK_DRUNK",4.0,0,1,0,0,0);
					}
			    }
			}
			if(PlayerStoned[i] >= 2)
			{
		        PlayerStoned[i] += 1;
			    if(PlayerStoned[i] == 10)
			    {
			        PlayerStoned[i] = 0;
			        new Float:angle;
					GetPlayerFacingAngle(i, angle);
					if(IsPlayerInAnyVehicle(i))
					{
					    if(GetPlayerState(i) == 2)
					    {
					    	SetVehicleZAngle(GetPlayerVehicleID(i), angle + 25);
						}
					}
					else
					{
					    SetPlayerFacingAngle(i, angle + 90);
					}
			    }
			}
			if(BoxWaitTime[i] > 0)
			{
			    if(BoxWaitTime[i] >= BoxDelay)
				{
				    BoxDelay = 0;
					BoxWaitTime[i] = 0;
					PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
					GameTextForPlayer(i, "~g~A Luta Começou", 5000, 1);
					TogglePlayerControllable(i, 1);
					RorndStarted = 1;
				}
			    else
				{
				    format(gstring, sizeof(gstring), "%d", BoxDelay - BoxWaitTime[i]);
					GameTextForPlayer(i, gstring, 1500, 6);
					BoxWaitTime[i] += 1;
				}
			}
			if(RorndStarted > 0)
			{
			    if(PlayerBoxing[i] > 0)
			    {
			        new trigger = 0;
			        new Lost = 0;
		        	new Float:angle;
		            new Float:health;
					GetPlayerHealth(i, health);
		            if(health < 12)
					{
					    if(i == Boxer1) { Lost = 1; trigger = 1; }
			            else if(i == Boxer2) { Lost = 2; trigger = 1; }
					}
			        if(health < 28) { GetPlayerFacingAngle(i, angle); SetPlayerFacingAngle(i, angle + 85); }
			        if(trigger)
			        {
			            new winner[MAX_PLAYER_NAME];
			            new loser[MAX_PLAYER_NAME];
			            new titel[MAX_PLAYER_NAME];
			            if(Lost == 1)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, loser, sizeof(loser));
			                	GetPlayerName(Boxer2, winner, sizeof(winner));
		                		if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pLoses] += 1; }
								if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer2)
				                	    {
				                	        if(PlayerInfo[Boxer2][pEmprego] == 8)
				                	        {
				                	            TBoxer = Boxer2;
				                	            GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s e agora é campeão.",  titel, loser);
												OOCNews(COLOR_WHITE,gstring);
				                	        }
				                	        else
				                	        {
				                	            SendClientMessage(Boxer2, COLOR_GREY, " Você precisa ser um lutador de boxe para ganhar uma luta!");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s.",  titel, loser);
											OOCNews(COLOR_WHITE,gstring);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer2][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(gstring, sizeof(gstring), " Você perdeu a luta contra %s.", winner);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer1, "~r~Voce Perdeu", 3500, 1);
								format(gstring, sizeof(gstring), " Você ganhou a luta contra %s.", loser);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer2, "~r~Voce Venceu", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Fim da Luta", 5000, 1); GameTextForPlayer(Boxer2, "~g~Fim da Luta", 5000, 1);
								if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            else if(Lost == 2)
			            {
			                if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
			                {
					        	SetPlayerPos(Boxer1, 765.8433,3.2924,1000.7186); SetPlayerPos(Boxer2, 765.8433,3.2924,1000.7186);
					        	SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
			                	GetPlayerName(Boxer1, winner, sizeof(winner));
			                	GetPlayerName(Boxer2, loser, sizeof(loser));
		                		if(PlayerInfo[Boxer2][pEmprego] == 8) { PlayerInfo[Boxer2][pLoses] += 1; }
								if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pWins] += 1; }
			                	if(TBoxer < 255)
			                	{
			                	    if(IsPlayerConnected(TBoxer))
			                	    {
				                	    if(TBoxer != Boxer1)
				                	    {
				                	        if(PlayerInfo[Boxer1][pEmprego] == 8)
				                	        {
					                	        TBoxer = Boxer1;
					                	        GetPlayerName(TBoxer, titel, sizeof(titel));
					                	        new nstring[MAX_PLAYER_NAME];
												format(nstring, sizeof(nstring), "%s", titel);
												strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
					                	        Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
					                	        Titel[TitelLoses] = PlayerInfo[TBoxer][pLoses];
					                	        SaveBoxer();
							                	format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s e agora é o campeão.",  titel, loser);
												OOCNews(COLOR_WHITE,gstring);
											}
				                	        else
				                	        {
				                	            SendClientMessage(Boxer1, COLOR_GREY, " Você precisa ser um lutador de boxe para ganhar uma luta!");
				                	        }
										}
										else
										{
										    GetPlayerName(TBoxer, titel, sizeof(titel));
										    format(gstring, sizeof(gstring), "Noticias do Boxe: %s venceu a luta contra %s.",  titel, loser);
											OOCNews(COLOR_WHITE,gstring);
											Titel[TitelWins] = PlayerInfo[TBoxer][pWins];
				                	        Titel[TitelLoses] = PlayerInfo[Boxer1][pLoses];
				                	        SaveBoxer();
										}
									}
								}//TBoxer
								format(gstring, sizeof(gstring), " Você perdeu a luta contra %s.", winner);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer2, "~r~Voce Perdeu", 3500, 1);
								format(gstring, sizeof(gstring), " Você ganhou a luta contra %s.", loser);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, gstring);
								GameTextForPlayer(Boxer1, "~g~Voce Venceu", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
								    SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer1, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
								    SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você está exausto da luta, vá se recuperar.");
							    	SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
								    SendClientMessage(Boxer2, COLOR_LIGHTBLUE, " Você continua em bom estado após a luta.");
								    SetPlayerHealth(Boxer2, 50.0);
								}
                                GameTextForPlayer(Boxer1, "~g~Fim da luta", 5000, 1); GameTextForPlayer(Boxer2, "~g~Fim da luta", 5000, 1);
								if(PlayerInfo[Boxer1][pEmprego] == 8) { PlayerInfo[Boxer1][pBoxSkill] += 1; }
								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
			            }
			            InRing = 0;
			            RorndStarted = 0;
			            Boxer1 = 255;
			            Boxer2 = 255;
			            TBoxer = 255;
			            trigger = 0;
			        }
			    }
			}
			if(StartingPaintballRornd == 1 && AnnorncedPaintballRornd == 0)
			{
			    AnnorncedPaintballRornd = 1;
			    if(PlayerPaintballing[i] != 0)
			    {
			        SendClientMessage(i, COLOR_YELLOW, "Paintball será anunciado em 30 segundos (Para obter mais jogadores).");
			    }
			}
			if(FindTime[i] > 0)
			{
			    if(FindTime[i] == FindTimePoints[i]) { FindTime[i] = 0; FindTimePoints[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~Marca Vermelha Ativada", 2500, 1); }
			    else
				{
				    format(gstring, sizeof(gstring), "%d", FindTimePoints[i] - FindTime[i]);
					GameTextForPlayer(i, gstring, 1500, 6);
					FindTime[i] += 1;
				}
			}
			if(TaxiCallTime[i] > 0)
			{
			    if(TaxiAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(TaxiAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(TaxiAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(BusCallTime[i] > 0)
			{
			    if(BusAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(BusAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(BusAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MedicCallTime[i] > 0)
			{
			    if(MedicAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(MedicAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MedicAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
            if(CopsrondaCallTime[i] > 0)
			{
			    if(CopsrondaAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(CopsrondaAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(CopsrondaAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(MechanicCallTime[i] > 0)
			{
			    if(MechanicAccepted[i] < 999)
			    {
				    if(IsPlayerConnected(MechanicAccepted[i]))
				    {
				        new Float:X,Float:Y,Float:Z;
						GetPlayerPos(MechanicAccepted[i], X, Y, Z);
						SetPlayerCheckpoint(i, X, Y, Z, 5);
				    }
				}
			}
			if(Robbed[i] == 1)
			{
			    if(RobbedTime[i] <= 0)
			    {
			        RobbedTime[i] = 0;
					Robbed[i] = 0;
			    }
			    else
			    {
			        RobbedTime[i] -= 1;
			    }
			}
			if(PlayerCuffed[i] == 1)
			{
			    if(PlayerCuffedTime[i] <= 0)
			    {
			        TogglePlayerControllable(i, 1);
			        PlayerCuffed[i] = 0;
			        PlayerCuffedTime[i] = 0;
			        PlayerTazeTime[i] = 1;
			    }
			    else
			    {
			        PlayerCuffedTime[i] -= 1;
			    }
			}
		}
	}
}
public CheckGas()
{
	for(new i=0;i<MaiorID;i++)
	{
    	if(IsPlayerConnected(i))
       	{
       	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER && !IsPlayerNPC(i))
       	    {
	       		new vehicle = GetPlayerVehicleID(i);
	       		new VehicleModel = GetVehicleModel(vehicle);
                new GasEtempo[MAX_PLAYERS],ResultOwn[MAX_PLAYERS];
                GasEtempo[i] = Gas[vehicle]*18;
                ResultOwn[i] = GasEtempo[i]/60;
                if(VehicleModel == 509 || VehicleModel == 481 || VehicleModel == 510) { return 1; }
	       		if(Gas[vehicle] <= 0)
	           	{
	              	NoFuel[i] = 1;
	              	TogglePlayerControllable(i, 0);
                    PlayerPlaySound(i, 1159, 0.0, 0.0, 0.0);
		        	GameTextForPlayer(i,"~r~~h~~n~~n~~n~~n~~n~~n~~n~~n~Sem combustivel~n~~b~~h~~h~Use /sair Para sair do veiculo",1500,3);
		        	SendClientMessage(i, COLOR_YELLOW, "O motor do veículo apagou por falta de combustível, Chame um mecânico para ajudar.");
                    return true;
                }
	        	else if(Gas[vehicle] >= 5)
		   		{
		   		    if(Gas[vehicle] <= 10) { PlayerPlaySound(i, 1085, 0.0, 0.0, 0.0),SendClientMessage(i, 0xFFAEAEAA, "[ALERTA]{DADADA} O nível de Combustível do Seu Veículo Está Baixo, Vá ao Posto mais Proximo!"); }
		   		}
                else if(ResultOwn[i] <= 4)
                {
                    SendClientMessage(i, 0xFFAEAEAA, "[ALERTA]{DADADA} Seu carro tem Menos de 2 Minutos de Combustivel, Vá ao Posto mais Proximo!");
                }
                Gas[vehicle]--;
			}
    	}
	}
	return 1;
}
public Abastecendo(playerid)
{
	   	if(IsPlayerConnected(playerid))
	   	{
		    new VID = GetPlayerVehicleID(playerid);
			if(Refueling[playerid] != 0)
		    {
				if(GetGranaTheus(playerid) >= GranaGas[playerid]+60)
				{
                    if(Gas[VID] == GasETanto[playerid])
                    {
                        TextDrawHideForPlayer(playerid, TextPosto[playerid]);
						format(gstring, sizeof(gstring), "~n~~n~~n~~n~~n~~n~~r~~h~]]~b~~h~~h~Veiculo Reabastecido~r~~h~]]~n~~n~~g~~h~~h~Preco: ~w~R$ %d",GranaGas[playerid]);
                        GameTextForPlayer(playerid, gstring, 7000, 3);
                        format(gstring,sizeof(gstring)," Veiculo Reabastecido, Por: R$%d.",GranaGas[playerid]);
                        SendClientMessage(playerid,COLOR_LIGHTBLUE,gstring);
                        GranaTheus(playerid, - GranaGas[playerid]);
                        Refueling[playerid] = 0;
                        PlayerPlaySound(playerid, 1149, 0.0, 0.0, 0.0);
                        SBizzInfo[3][sbTill] += GranaGas[playerid];
						ExtortionSBiz(3, GranaGas[playerid]);
                        GranaGas[playerid] = 0;
                        GasETanto[playerid] = 0;
                        TogglePlayerControllable(playerid, 1);
                    }
                    else //if(Gas[VID] < Refueling[playerid])
		            {
                        TextDrawShowForPlayer(playerid, TextPosto[playerid]);
						Gas[VID] ++;
                        GranaGas[playerid] += 60;
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        format(strtheus,sizeof(strtheus),"~>~~>~ ~p~~h~Reabastecimento ~<~~<~~n~~n~~n~~b~~h~~h~~h~Veiculo: ~g~~h~~h~%s~n~~n~~b~~h~~h~~h~Litros:~g~~h~~h~ %d~n~~n~~b~~h~~h~~h~Valor: ~w~R$ ~r~~h~%d",vehName[GetVehicleModel(GetPlayerVehicleID(playerid))-400],Gas[VID],GranaGas[playerid]);
						TextDrawSetString(TextPosto[playerid], strtheus);
						//SetTimer("Abastecendo", 200, 0);
						SetTimerEx("Abastecendo", 200,false,"i",playerid);
                    }
				}
			   	else
			   	{
                    TextDrawHideForPlayer(playerid, TextPosto[playerid]);
				   	format(gstring,sizeof(gstring)," Você não tem mais grana para terminar de Abastecer!");
				    SendClientMessage(playerid,COLOR_LIGHTBLUE,gstring);
                    Refueling[playerid] = 0;
				    TogglePlayerControllable(playerid, 1);
			   	}
		 	}
		}
	return 1;
}
public GasGang(playerid)
{
 for(new i=0; i<MaiorID; i++)
   	{
	   	if(IsPlayerConnected(i))
	   	{
		    new VID;
		    new FillUp;
		    VID = GetPlayerVehicleID(i);
		    FillUp = GasMax - Gas[VID];
			if(Refuelinggang[i] == 1)
		    {
				if(PlayerInfo[i][pMembro] == 21 || PlayerInfo[i][pLider] == 21)
				{
					if(donoPosto == 21)
					{
						Gas[VID] += FillUp;
						FillUp = FillUp * 50;
						format(gstring,sizeof(gstring),"Veiculo Reabastecido Gratuitamente,Porque os Hells Angels está controlando do Posto.");
					    PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
					    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
						SBizzInfo[3][sbTill] += FillUp;
						ExtortionSBiz(3, FillUp);
						Refuelinggang[i] = 0;
					}
				   	else
				   	{
				   	    format(gstring,sizeof(gstring),"Os Hells Angels não está no Controle do Posto.");
					    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
				   	}
			 	}
                if(PlayerInfo[i][pMembro] == 22 || PlayerInfo[i][pLider] == 22)
				{
					if(donoPosto == 22)
					{
						Gas[VID] += FillUp;
						FillUp = FillUp * 50;
						format(gstring,sizeof(gstring),"Veiculo Reabastecido Gratuitamente,Porque os Mongols está no controle do Posto.");
					    PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
					    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
						SBizzInfo[3][sbTill] += FillUp;
						ExtortionSBiz(3, FillUp);
						Refuelinggang[i] = 0;
					}
				   	else
				   	{
				   	    format(gstring,sizeof(gstring),"Os Mongols não está no Controle do Posto.");
					    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
				   	}
			 	}
			 	if(PlayerInfo[i][pMembro] == 23 || PlayerInfo[i][pLider] == 23)
				{
					if(donoPosto == 23)
					{
						Gas[VID] += FillUp;
						FillUp = FillUp * 50;
						format(gstring,sizeof(gstring),"Veiculo Reabastecido Gratuitamente,Porque os Sons Of Anarchy está no controle do Posto.");
					    PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
					    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
						SBizzInfo[3][sbTill] += FillUp;
						ExtortionSBiz(3, FillUp);
						Refuelinggang[i] = 0;
					}
				   	else
				   	{
				   	    format(gstring,sizeof(gstring),"Os Sons Of Anarchy não está no Controle do Posto.");
					    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
				   	}
			 	}
                if(PlayerInfo[i][pMembro] == 25 || PlayerInfo[i][pLider] == 25)
				{
					if(donoPosto == 25)
					{
						Gas[VID] += FillUp;
						FillUp = FillUp * 50;
						format(gstring,sizeof(gstring),"Veiculo Reabastecido Gratuitamente,Porque os Drifters está no controle do Posto.");
					    PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
					    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
						SBizzInfo[3][sbTill] += FillUp;
						ExtortionSBiz(3, FillUp);
						Refuelinggang[i] = 0;
					}
				   	else
				   	{
				   	    format(gstring,sizeof(gstring),"Os Drifters não está no Controle do Posto.");
					    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
				   	}
			 	}
                if(IsACop(playerid))
				{
					if(donoPosto == 2 || donoPosto == 1)
					{
						Gas[VID] += FillUp;
						FillUp = FillUp * 50;
						format(gstring,sizeof(gstring),"Veiculo Reabastecido Gratuitamente,Porque o Governo está no controle do Posto.");
					    PlayerPlaySound(i, 1149, 0.0, 0.0, 0.0);
					    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
						SBizzInfo[3][sbTill] += FillUp;
						ExtortionSBiz(3, FillUp);
						Refuelinggang[i] = 0;
					}
				   	else
				   	{
				   	    format(gstring,sizeof(gstring),"O Governo não está no Controle do Posto.");
					    SendClientMessage(i,COLOR_LIGHTBLUE,gstring);
				   	}
			 	}
			}
		}
	}
	return 1;
}
public PrintSBizInfo(playerid,targetid)
{
	if(IsPlayerConnected(playerid))
	{
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring),"|__________________ %s __________________|",SBizzInfo[targetid][sbMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Trancada: %d Entrada: R$%d Cofre: R$%d", SBizzInfo[targetid][sbLocked], SBizzInfo[targetid][sbEntranceCost], SBizzInfo[targetid][sbTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Extorção: %s",SBizzInfo[targetid][sbExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
	}
}

public PrintBizInfo(playerid,targetid)
{
    if(IsPlayerConnected(playerid))
	{
		new coordsstring[128];
		format(coordsstring, sizeof(coordsstring),"|__________________ %s __________________|",BizzInfo[targetid][bMessage]);
		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Trancada: %d Entrada: R$%d Cofre: R$%d", BizzInfo[targetid][bLocked], BizzInfo[targetid][bEntranceCost], BizzInfo[targetid][bTill]);
		SendClientMessage(playerid, COLOR_GRAD1,coordsstring);
		format(coordsstring, sizeof(coordsstring), "Extorção: %s",BizzInfo[targetid][bExtortion]);
		SendClientMessage(playerid, COLOR_GRAD2,coordsstring);
	}
}

public ShowStats(playerid,targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new cash =  GetGranaTheus(targetid);
		new atext[20];
		if(PlayerInfo[targetid][pSex] == 1) { atext = "Masculino"; }
		else if(PlayerInfo[targetid][pSex] == 2) { atext = "Feminino"; }
		new dtext[20];
		if(PlayerInfo[targetid][pDoenca] == 1) { dtext = "Mongolismo"; }
		else if(PlayerInfo[targetid][pDoenca] == 2) { dtext = "AIDS"; }
		else if(PlayerInfo[targetid][pDoenca] == 3) { dtext = "Herpes Genital"; }
		else if(PlayerInfo[targetid][pDoenca] == 4) { dtext = "Cirrose"; }
		else if(PlayerInfo[targetid][pDoenca] == 5) { dtext = "Câncer de Pulmão"; }
		else { dtext = "Nenhuma"; }
        new jtext[20];
        if(PlayerInfo[targetid][pEmprego] == 1) { jtext = "Detetive"; }
        else if(PlayerInfo[targetid][pEmprego] == 2) { jtext = "Advogado"; }
        else if(PlayerInfo[targetid][pEmprego] == 3) { jtext = "Prof.Sexo"; }
        else if(PlayerInfo[targetid][pEmprego] == 4) { jtext = "Vendedor De Drogas"; }
        else if(PlayerInfo[targetid][pEmprego] == 5) { jtext = "Mecanico"; }
        else if(PlayerInfo[targetid][pEmprego] == 6) { jtext = "Segurança"; }
        else if(PlayerInfo[targetid][pEmprego] == 7) { jtext = "Vendedor De Armas"; }
		else if(PlayerInfo[targetid][pEmprego] == 8) { jtext = "Boxeador"; }
        else if(PlayerInfo[targetid][pEmprego] == 9) { jtext = "Motorista de Onibus"; }
        else if(PlayerInfo[targetid][pEmprego] == 10) { jtext = "Mendigo"; }
        else if(PlayerInfo[targetid][pEmprego] == 11) { jtext = "Caminhoneiro"; }
        else { jtext = "Nenhum"; }
        new CarroDono[64], IdcarroD = PlayerInfo[targetid][pChave];
        if(IdcarroD == 0)
		{
			CarroDono = "Nenhum";
		}
		else
		{
		    strmid(CarroDono, vehName[GetVehicleModel(IdcarroD)-400], 0, strlen(vehName[GetVehicleModel(IdcarroD)-400]), 255);
		}
		new RankVip[34];
		if(PlayerInfo[targetid][pVIP] == 0) { RankVip = "Gratis"; }
		else if(PlayerInfo[targetid][pVIP] == 1) { RankVip = "VIP"; }
		else if(PlayerInfo[targetid][pVIP] == 2) { RankVip = "VIP Premium"; }
        else if(PlayerInfo[targetid][pVIP] == 3) { RankVip = "Sócio"; }
		/*new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
        if(strcmp(married," ", true ) == 0 || strcmp(married,"", true ) == 0)
        {
            married = "Ninguem";
        }*/
        //new age = PlayerInfo[targetid][pAge];
		new ptime = PlayerInfo[targetid][pConnectTime];
		//new lotto = PlayerInfo[targetid][pLottoNr];
		new deaths = PlayerInfo[targetid][pDeaths];
		new fishes = PlayerInfo[targetid][pFishes];
		new bigfish = PlayerInfo[targetid][pBiggestFish];
		new crimes = PlayerInfo[targetid][pCrimes];
		new Drogas = PlayerInfo[targetid][pDrogas]; // maconha
		new Drogas2 = PlayerInfo[targetid][pDrogas2]; // cocaina
		new Drogas3 = PlayerInfo[targetid][pDrogas3]; // crack
		new SafeDrogas = PlayerInfo[targetid][pSafeDrogas]; // maconha
		new SafeDrogas2 = PlayerInfo[targetid][pSafeDrogas2]; // cocaina
		new SafeDrogas3 = PlayerInfo[targetid][pSafeDrogas3]; // crack
		new mats = PlayerInfo[targetid][pMats];
		new smats = PlayerInfo[targetid][psMats];
		//new wanted = WantedLevel[targetid];
		new level = PlayerInfo[targetid][pLevel];
		new exp = PlayerInfo[targetid][pExp];
		new kills = PlayerInfo[targetid][pKills];
		new pnumber = PlayerInfo[targetid][pPnumber];
		new Conta = PlayerInfo[targetid][pConta];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
        new expquantidade = nxtlevel*levelexp;
		new costlevel = nxtlevel*levelcost;//10k for testing purposes
		new Housekey = PlayerInfo[targetid][pPHousekey];
		new bizkey = PlayerInfo[targetid][pPbiskey];
		new intir = PlayerInfo[targetid][pInt];
		new local = PlayerInfo[targetid][pLocal];
		new Float:shealth = PlayerInfo[targetid][pSHealth];
		new Float:health;
		//new creditos = PlayerInfo[targetid][pCreditos];
		new name[MAX_PLAYER_NAME];
		GetPlayerName(targetid, name, sizeof(name));
		GetPlayerHealth(targetid,health);
		new Float:px,Float:py,Float:pz;
		GetPlayerPos(targetid, px, py, pz);
		if(targetid == playerid)
		{
   			format(gstring, sizeof(gstring),"~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~ Seus documentos {FFFFFF}%s {1E90FF}~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~",name);
			SendClientMessage(playerid, 0x1E90FFAA,gstring);
		}
		else
		{
			format(gstring, sizeof(gstring),"~.~.~.~.~.~.~.~.~.~.~.~.~.~ Documentos de {FFFFFF}%s {1E90FF}~.~.~.~.~.~.~.~.~.~.~.~.~.~",name);
			SendClientMessage(playerid, 0x1E90FFAA,gstring);
		}
		format(gstring, sizeof(gstring), "Nivel:[%d] Sexo:[%s] Vida:[%.1f] Dinheiro:[R$%d] Banco:[R$%d] Celular:[%d]", level,atext,shealth+50, cash, Conta, pnumber);
		SendClientMessage(playerid, 0xFFFFFFFF,gstring);
		format(gstring, sizeof(gstring), "Conta:[%s] Casado Com:[%s] Horas Jogadas:[%d] Profissão Secundaria:[%s]", RankVip,PlayerInfo[targetid][pMarriedTo],ptime,jtext);
		SendClientMessage(playerid, 0xFFFFFFFF,gstring);
		format(gstring, sizeof(gstring), "Peixes:[%d] Maior Peixe:[%d] Crimes Cometidos:[%d] Matou:[%d] Morreu:[%d]", fishes,bigfish,crimes,kills,deaths );
		SendClientMessage(playerid, 0xFFFFFFFF,gstring);
		format(gstring, sizeof(gstring), "Próximo Nivel:[R$%d] Respeito:[%d/%d] Doenças:[%s] ",costlevel,exp,expquantidade,dtext);
		SendClientMessage(playerid, 0xFFFFFFFF,gstring);
		format(gstring, sizeof(gstring), "Materiais:[%d] Safe Materiais:[%d] Organização:[%s] Cargo:[%s]",mats,smats,NomeORG(targetid),OrgCargo(targetid));
		SendClientMessage(playerid, 0xFFFFFFFF,gstring);
		format(gstring, sizeof(gstring), "Maconha:[%d] Cocaina:[%d] Crack:[%d] Safe Maconha:[%d] Safe Cocaina:[%d] Safe Crack:[%d]",Drogas,Drogas2,Drogas3,SafeDrogas,SafeDrogas2,SafeDrogas3);
		SendClientMessage(playerid, 0xFFFFFFFF,gstring);
		format(gstring, sizeof(gstring), "Chave De Casa:[%d] Chave Da Empresa:[%d] Chave Do Carro(Aluguel):[%d] Interior:[%d] Local:[%d]", Housekey,bizkey,HireCar[targetid],intir,local);
		SendClientMessage(playerid, 0xFFFFFFFF,gstring);
        format(gstring, sizeof(gstring), "Veículo:[%s, Placa(%d)] Nivel de Procurado:[%d] ", CarroDono,IdcarroD,WantedPoints[targetid]);
		SendClientMessage(playerid, 0xFFFFFFFF,gstring);
	}
}

public SetPlayerToTeamColor(playerid)
{
    if(admtrampando[playerid] == 1)
	{
		SetPlayerColor(playerid, COR_ADMIN);
	}
    else if(helptrampando[playerid] == 1)
	{
		SetPlayerColor(playerid, COR_HELPER);
	}
	else if (PlayerInfo[playerid][pTeam] == 3)//Civis
	{
       SetPlayerColor(playerid, COLOR_WHITE);
 	}
	else if (PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)//PM
	{
       SetPlayerColor(playerid, COR_PM);
	}
	else if (PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//R.O.T.A
	{
       SetPlayerColor(playerid, COR_ROTA);
	}
	else if (PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Exército
	{
       SetPlayerColor(playerid, COR_EXE);
	}
	else if (PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//Medicos
	{
       SetPlayerColor(playerid, COR_SAMU);
	}
	else if (PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)//Aztecas
	{
       SetPlayerColor(playerid, COR_AZTECAS);
	}
	else if (PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//Taliban
	{
       SetPlayerColor(playerid, COR_TAL);
	}
    else if (PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Governo
	{
       SetPlayerColor(playerid, COR_ROTAE);
	}
	else if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)//Hitmans
	{
       SetPlayerColor(playerid, COR_HITMAN);
	}
	else if (PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)//Reporter
	{
       SetPlayerColor(playerid, COR_REP);
    }
    else if (PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)//Taxistas
	{
       SetPlayerColor(playerid, COR_TAXI);
    }
	else if (PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//PF
	{
       SetPlayerColor(playerid, COR_PF);
	}
	else if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)//Máfia Cosa Nostra
	{
       SetPlayerColor(playerid, COR_COSA);
	}
	else if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)//Máfia Yakuza
	{
       SetPlayerColor(playerid, COR_YAK);
	}
	else if (PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)//Grove
	{
       SetPlayerColor(playerid, COR_GRO);
	}
	else if (PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)//AL'QAEDA
	{
       SetPlayerColor(playerid, COR_AL);
	}
	else if (PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)//Policia Rodoviaria
	{
       SetPlayerColor(playerid, COR_PRF);
	}
	else if (PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)//BALLAS
	{
       SetPlayerColor(playerid, COR_BALLAS);
	}
	else if (PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)//vagos
	{
       SetPlayerColor(playerid, COR_VAGOS);
	}
	else if (PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)//CV
	{
       SetPlayerColor(playerid, COR_CVM);
	}
	else if (PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)//PCC
	{
       SetPlayerColor(playerid, COR_PCC);
	}
	else if (PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)//Hells Angels
	{
       SetPlayerColor(playerid, COR_HELLS);
	}
	else if (PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)//Hells Angels
	{
       SetPlayerColor(playerid, COR_MONGOLS);
	}
	else if (PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)//Hells Angels
	{
       SetPlayerColor(playerid, COR_SONS);
	}
    else if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)//TRIADS
	{
       SetPlayerColor(playerid, COR_TRIAD);
	}
    else if (PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)//Hells Angels
	{
       SetPlayerColor(playerid, COR_DRIFT);
	}
    else if (PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)//CV
	{
       SetPlayerColor(playerid, COLOR_SK);
	}
    else if (PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)//CV
	{
       SetPlayerColor(playerid, COR_MOTOQUEIROS);
	}
	else if (PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)//Policia Florestal
	{
       SetPlayerColor(playerid, COR_ROOXY);
	}
	else if (PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)//AmigodosAmigos
	{
       SetPlayerColor(playerid, COR_AmigodosAmigos);
	}
	else if (PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)//B.O.P.E
	{
       SetPlayerColor(playerid, COR_BOPE);
	}
	else if (PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)//yStiflerS
	{
       SetPlayerColor(playerid, COR_YSTIFLERS);
	}
	else if (PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)//Americano
	{
       SetPlayerColor(playerid, COR_AMERICANOS);
	}
    else if (PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)//AL'QAEDA
	{
       SetPlayerColor(playerid, COR_FARC);
	}
	else if (PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)//Policia Cívil
	{
       SetPlayerColor(playerid, COR_RPP);
	}
	else //caso dê algum bug
	{
       SetPlayerColor(playerid, COLOR_WHITE);
	}
}
//---------------------------------------------------------

public GameModeInitExitFunc()
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			DisablePlayerCheckpoint(i);
			gPlayerCheckpointStatus[i] = CHECKPOINT_Nenhum;
			GameTextForPlayer(i, "GMX...", 4000, 5);
			SetPlayerCameraPos(i,1460.0, -1324.0, 287.2);
			SetPlayerCameraLookAt(i,1374.5, -1291.1, 239.0);
			gPlayerLogged[i] = 0;
		}
	}
//	KillTimer(synctimer);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(Contastimer);
	KillTimer(checkgastimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(turftimer);
	KillTimer(tempoGranaTR);
	KillTimer(TempoAdministrador);
    KillTimer(TempoHelper);
    OnPropUpdate();
	SaveBoxer();
	SetTimer("GameModeExitFunc", 4000, 0);
	return 1;
}
public GameModeExitFunc()
{
//	KillTimer(synctimer);
	KillTimer(TempoAnGang);
	KillTimer(TempoAnMafia);
	KillTimer(TempoAnAlqaeda);
	KillTimer(TempoRecarga);
	KillTimer(TempoAnTaliban);
	KillTimer(TempoAnPrefeito);
	KillTimer(TempoAnTaxi);
	KillTimer(TempoAnGov);
	KillTimer(TempoAnHitmans);
	KillTimer(TempoAnmerce);
	KillTimer(newmistimer);
	KillTimer(unjailtimer);
	KillTimer(othtimer);
	KillTimer(cartimer);
	KillTimer(Contastimer);
	KillTimer(checkgastimer);
	KillTimer(pickuptimer);
	KillTimer(productiontimer);
	KillTimer(spectatetimer);
	KillTimer(turftimer);
	KillTimer(tempoGranaTR);
	KillTimer(TempoAdministrador);
    KillTimer(TempoHelper);
    KillTimer(TempoAn);
	KillTimer(TempoServicoTaxi);
	KillTimer(TempoServicoOnibus);
	KillTimer(TempoServicoPolicia);
	KillTimer(TempoServicoMedico);
	KillTimer(TempoServicoMecanico);
	KillTimer(TempoMecanico);
	KillTimer(TempoMedico);
	KillTimer(TempoAnGov);
	KillTimer(TempoAnReporter);
	KillTimer(TempoSincronizar);
	KillTimer(Tempohbomba);
	KillTimer(Tempocbomba);
	OnPropUpdate();
	SaveBoxer();
	GameModeExit();
}

public LoadBoxer()
{
	new arrCoords[3][64];
	new strFromFile2[128];
	new File: file = fopen("PlayStart/boxer.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Titel[TitelWins] = strval(arrCoords[0]);
		strmid(Titel[TitelName], arrCoords[1], 0, strlen(arrCoords[1]), 255);
		Titel[TitelLoses] = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}

public SaveBoxer()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%s,%d", Titel[TitelWins],Titel[TitelName],Titel[TitelLoses]);
	new File: file2 = fopen("PlayStart/boxer.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}

public LoadStuff()
{
	new arrCoords[4][64];
	new strFromFile2[128];
	new File: file = fopen("PlayStart/stuff.ini", io_read);
	if (file)
	{
		fread(file, strFromFile2);
		split(strFromFile2, arrCoords, ',');
		Jackpot = strval(arrCoords[0]);
		Tax = strval(arrCoords[1]);
		TaxValue = strval(arrCoords[2]);
		fclose(file);
	}
	return 1;
}

public SaveStuff()
{
	new coordsstring[128];
	format(coordsstring, sizeof(coordsstring), "%d,%d,%d", Jackpot,Tax,TaxValue);
	new File: file2 = fopen("PlayStart/stuff.ini", io_write);
	fwrite(file2, coordsstring);
	fclose(file2);
	return 1;
}
public LoadProperty()
{
	new arrCoords[30][64];
	new strFromFile2[256];
	new File: file = fopen("PlayStart/property.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(HouseInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, ',');
			HouseInfo[idx][hEntrancex] = floatstr(arrCoords[0]);
			HouseInfo[idx][hEntrancey] = floatstr(arrCoords[1]);
			HouseInfo[idx][hEntrancez] = floatstr(arrCoords[2]);
			HouseInfo[idx][hExitx] = floatstr(arrCoords[3]);
			HouseInfo[idx][hExity] = floatstr(arrCoords[4]);
			HouseInfo[idx][hExitz] = floatstr(arrCoords[5]);
			HouseInfo[idx][hHealthx] = strval(arrCoords[6]);
			HouseInfo[idx][hHealthy] = strval(arrCoords[7]);
			HouseInfo[idx][hHealthz] = strval(arrCoords[8]);
			HouseInfo[idx][hArmorrx] = strval(arrCoords[9]);
			HouseInfo[idx][hArmorry] = strval(arrCoords[10]);
			HouseInfo[idx][hArmorrz] = strval(arrCoords[11]);
			//printf("HouseInfo hEntrancez %f",HouseInfo[idx][hEntrancez]);
			strmid(HouseInfo[idx][hOwner], arrCoords[12], 0, strlen(arrCoords[12]), 255);
			strmid(HouseInfo[idx][hDiscription], arrCoords[13], 0, strlen(arrCoords[13]), 255);
			HouseInfo[idx][hValue] = strval(arrCoords[14]);
			HouseInfo[idx][hHel] = strval(arrCoords[15]);
			HouseInfo[idx][hArm] = strval(arrCoords[16]);
			HouseInfo[idx][hInt] = strval(arrCoords[17]);
			HouseInfo[idx][hLock] = strval(arrCoords[18]);
			HouseInfo[idx][hOwned] = strval(arrCoords[19]);
			HouseInfo[idx][hRooms] = strval(arrCoords[20]);
			HouseInfo[idx][hRent] = strval(arrCoords[21]);
			HouseInfo[idx][hRentabil] = strval(arrCoords[22]);
			HouseInfo[idx][hTakings] = strval(arrCoords[23]);
			HouseInfo[idx][hVec] = strval(arrCoords[24]);
  	        if(HouseInfo[idx][hVec] == 457)
			{
				HouseInfo[idx][hVec] = 411;
			}
			HouseInfo[idx][hVcol1] = strval(arrCoords[25]);
			HouseInfo[idx][hVcol2] = strval(arrCoords[26]);
			HouseInfo[idx][hDate] = strval(arrCoords[27]);
			HouseInfo[idx][hLevel] = strval(arrCoords[28]);
			HouseInfo[idx][hWorld] = strval(arrCoords[29]);
			idx++;
		}
		printf("[BPF]: %d Casas Carregadas Com sucesso!", idx);
		fclose(file);
	}
	return true;
}

public LoadBizz()
{
	new arrCoords[16][64];
	new strFromFile2[256];
	new File: file = fopen("PlayStart/bizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(BizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			BizzInfo[idx][bOwned] = strval(arrCoords[0]);
			strmid(BizzInfo[idx][bOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(BizzInfo[idx][bMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(BizzInfo[idx][bExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			BizzInfo[idx][bEntranceX] = floatstr(arrCoords[4]);
			BizzInfo[idx][bEntranceY] = floatstr(arrCoords[5]);
			BizzInfo[idx][bEntranceZ] = floatstr(arrCoords[6]);
			BizzInfo[idx][bExitX] = floatstr(arrCoords[7]);
			BizzInfo[idx][bExitY] = floatstr(arrCoords[8]);
			BizzInfo[idx][bExitZ] = floatstr(arrCoords[9]);
			BizzInfo[idx][bLevelNeeded] = strval(arrCoords[10]);
			BizzInfo[idx][bBuyPrice] = strval(arrCoords[11]);
			BizzInfo[idx][bEntranceCost] = strval(arrCoords[12]);
			BizzInfo[idx][bTill] = strval(arrCoords[13]);
			BizzInfo[idx][bLocked] = strval(arrCoords[14]);
			BizzInfo[idx][bInterior] = strval(arrCoords[15]);
			idx++;
		}
		printf("[BPF]: %d Empresas Carregadas", idx);
		fclose(file);
	}
	return 1;
}


public LoadSBizz()
{
	new arrCoords[12][64];
	new strFromFile2[256];
	new File: file = fopen("PlayStart/sbizz.cfg", io_read);
	if (file)
	{
		new idx;
		while (idx < sizeof(SBizzInfo))
		{
			fread(file, strFromFile2);
			split(strFromFile2, arrCoords, '|');
			SBizzInfo[idx][sbOwned] = strval(arrCoords[0]);
			strmid(SBizzInfo[idx][sbOwner], arrCoords[1], 0, strlen(arrCoords[1]), 255);
			strmid(SBizzInfo[idx][sbMessage], arrCoords[2], 0, strlen(arrCoords[2]), 255);
			strmid(SBizzInfo[idx][sbExtortion], arrCoords[3], 0, strlen(arrCoords[3]), 255);
			SBizzInfo[idx][sbEntranceX] = floatstr(arrCoords[4]);
			SBizzInfo[idx][sbEntranceY] = floatstr(arrCoords[5]);
			SBizzInfo[idx][sbEntranceZ] = floatstr(arrCoords[6]);
			SBizzInfo[idx][sbLevelNeeded] = strval(arrCoords[7]);
			SBizzInfo[idx][sbBuyPrice] = strval(arrCoords[8]);
			SBizzInfo[idx][sbEntranceCost] = strval(arrCoords[9]);
			SBizzInfo[idx][sbTill] = strval(arrCoords[10]);
			SBizzInfo[idx][sbLocked] = strval(arrCoords[11]);
			idx++;
		}
		printf("[BPF]: %d Empresas Especiais Carregadas", idx);
		fclose(file);
	}
	return 1;
}
public SaveHelp()
{
	new idx = 0;
	new File: file2;
	while(idx < sizeof(HelpInfo))
	{
	    new coordsstring[128];
		format(coordsstring, sizeof(coordsstring), "%s,%d\n",HelpInfo[idx][gMembro],HelpInfo[idx][HelperAtivo]);
		if(idx == 0)
		{
			file2 = fopen("PlayStart/Helpers.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayStart/Helpers.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
public LoadHelp()
{
	new arrCoords[2][64];
	new strFromFile2[128];
	new File: file = fopen("PlayStart/Helpers.cfg", io_read);
	if (file)
	{
     	new idx = 0;
	    while(idx < sizeof(HelpInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    strmid(HelpInfo[idx][gMembro], arrCoords[0], 0, strlen(arrCoords[0]), 255);
		    HelpInfo[idx][HelperAtivo] = strval(arrCoords[1]);
			idx++;
		}
		printf("Sistema de Helper Carregado! Vagas: %d ", idx);
	}
	fclose(file);
	return 1;
}
public SaveAdm()
{
	new idx;
	new File: file2;
    print("===========[Salvando Admins]============");
	while (idx < sizeof(AdmInfo))
	{
	    new coordsstring[128];
		format(coordsstring, sizeof(coordsstring), "%s,%d\n",AdmInfo[idx][gMembro],AdmInfo[idx][AdminAtivo]);
		if(idx == 0)
		{
			file2 = fopen("PlayStart/Admins.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayStart/Admins.cfg", io_append);
		}
        printf("Admin %s, Salvo!", AdmInfo[idx][gMembro]);
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
    print("=======================================");
	return 1;
}
public LoadAdm()
{
	new arrCoords[2][64];
	new strFromFile2[128];
	new File: file = fopen("PlayStart/Admins.cfg", io_read);
	if (file)
	{
	    new idx = 0;
        print("===========[Abrindo Admins]============");
	    while(idx < sizeof(AdmInfo))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, ',');
		    strmid(AdmInfo[idx][gMembro], arrCoords[0], 0, strlen(arrCoords[0]), 255);
		    AdmInfo[idx][AdminAtivo] = strval(arrCoords[1]);
			idx++;
		}
		printf("Sistema de Admin Carregado! Vagas: %d ", idx);
	}
	fclose(file);
	return 1;
}
//------------------------------------------------------------------------------------------------------
public OnGameModeInit()
{
    SetTimer("AttachObject", 5000, 0);
	getdate(v[0], v[1], v[2]);
	gettime(v[3], v[4], v[5]);
	print("\n---------------------------------------------------------");
	printf("Server Ligado: [%02d/%02d/%d %02d:%02d:%02d]", v[2], v[1], v[0], v[3], v[4], v[5]);
	print("---------------------------------------------------------\n");
	SetHora();
    print("-----------------------------");
	print("*** GM - BPF RPG Iniciado ***");
	print("-----------------------------");
    MaiorID = MAX_PLAYERS;
    SetTimer("HeadAdminTexto", 3000, true);
    SetTimer("HeadVIPTexto", 3000, true);
    SetTimer("HeadHelperTexto", 3000, true);
//=====================================[INFOORG]================================//
    LoadOrgs();
//==============================================================================//
    for(new i;i<MaiorID;i++)
	{
		strmid(StrPasswrd[i], "Vazio", 0, strlen("Vazio"), 255);
	}
	CarregarMorro();
	CarregarPedreira();
    //guerra de pontos by Theus
    GZMorro[1] = GangZoneCreate(2202.403320, -1131.981933, 2322.403320, -1107.981933);//indo pra ponta
	GZMorro[2] = GangZoneCreate(2041.285644, -1075.884277, 2320.285644, -940.884277);//meio
	GZMorro[3] = GangZoneCreate(2106.894042, -1108.459472, 2319.894042, -1075.459472);//int
    GZMorro[4] = GangZoneCreate(2320.003906, -1108.388183, 2494.003906, -942.388183); //grande
    //Guerra de Pontos Pedreira by Theus
    GZPedreira = GangZoneCreate(452.9537,652.5002,828.2853,1143.3212); //
   	for(new c=0;c<MaiorID;c++)
	{
	    if(IsPlayerConnected(c) && !IsPlayerNPC(c))
		{
			pObject[c][slotreserved] = false;
		}
	}
 	{
	 	dini_Create("Araras.ini");
 	}
 	LoadCarros();
//================================= Tunar ==================================
    Principal = CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
	AddMenuItem(Principal, 0, "Cores");
	AddMenuItem(Principal, 0, "Rodas");
	AddMenuItem(Principal, 0, "Volume do radio");
	AddMenuItem(Principal, 0, "Componentes");
	AddMenuItem(Principal, 0, "PaintJobs");
	CoresTheus = CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
	AddMenuItem(CoresTheus, 0, "Preto");
	AddMenuItem(CoresTheus, 0, "Branco");
	AddMenuItem(CoresTheus, 0, "Vermelho");
	AddMenuItem(CoresTheus, 0, "Azul");
	AddMenuItem(CoresTheus, 0, "Verde");
	AddMenuItem(CoresTheus, 0, "Amarelo");
	AddMenuItem(CoresTheus, 0, "Rosa");
	AddMenuItem(CoresTheus, 0, "Marrom");
	AddMenuItem(CoresTheus, 0, "Voltar");
	Rodas = CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
	AddMenuItem(Rodas, 0, "Offroad");
	AddMenuItem(Rodas, 0, "Mega");
	AddMenuItem(Rodas, 0, "Wires");
	AddMenuItem(Rodas, 0, "Twist");
	AddMenuItem(Rodas, 0, "Grove");
	AddMenuItem(Rodas, 0, "Import");
	AddMenuItem(Rodas, 0, "Atomic");
	AddMenuItem(Rodas, 0, "Ahab");
	AddMenuItem(Rodas, 0, "Virtual");
	AddMenuItem(Rodas, 0, "Voltar");
	VolumedoCarro = CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
	AddMenuItem(VolumedoCarro, 0, "Alto");
	AddMenuItem(VolumedoCarro, 0, "Super Alto");
	AddMenuItem(VolumedoCarro, 0, "Ultra Alto");
	AddMenuItem(VolumedoCarro, 0, "King Alto");
	AddMenuItem(VolumedoCarro, 0, "Voltar");
	Componentes= CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
	AddMenuItem(Componentes, 0, "Suspensao");
	AddMenuItem(Componentes, 0, "Nitro x10");
	AddMenuItem(Componentes, 0, "Reparar Carro");
	AddMenuItem(Componentes, 0, "Voltar");
	PaintJobs= CreateMenu("Tunar", 1, 20.0, 120.0, 150.0, 40.0);
	AddMenuItem(PaintJobs,0,"Paintjob 1");
	AddMenuItem(PaintJobs,0,"Paintjob 2");
	AddMenuItem(PaintJobs,0,"Paintjob 3");
	AddMenuItem(PaintJobs,0,"Paintjob 4");
	AddMenuItem(PaintJobs,0,"Paintjob 5");
	AddMenuItem(PaintJobs, 0, "Voltar");
//=========================================================================
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Autorização para Advogados\n{FFFFFF}Digite /Autorizacao para Pegar",COR_3DLABEL,256.0320,84.5082,1002.4453,5.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Autorização para Advogados\n{FFFFFF}Digite /Autorizacao para Pegar",COR_3DLABEL,202.5491,179.1493,1003.0323,20.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Autorização para Advogados\n{FFFFFF}Digite /Autorizacao para Pegar",COR_3DLABEL,214.9535,118.0954,999.0156,20.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Autorização para Advogados\n{FFFFFF}Digite /Autorizacao para Pegar",COR_3DLABEL,323.7303,308.9208,999.1484,20.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Ginásio de Lutas de LS\n{FFFFFF}Aperte Enter Para Mudar Luta",COR_3DLABEL,768.2192,-3.9873,1000.7203,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Sala de Votações\n{FFFFFF}Digite /votar para Votar",COR_3DLABEL,359.4827,207.1152,1008.3828,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Área de Eleições\n{FFFFFF}Entre aqui Para Votar",COR_3DLABEL,366.5278,189.0388,1008.3828,30.0,0);
    Create3DTextLabel("Seja Bem Vindo ao\n{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{FFFFFF}Servidor por: Rafael_Joao\nVinewood_xD & Theus_Crazzy",0xFFFFFFFF,2405.0625,-1376.5313,24.3273,16.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Ajuda Para Novatos\n{FFFFFF}Aperte Enter Para Ver",COR_3DLABEL,1568.6063,-1878.4338,13.5469,16.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Orelhão Público\n{FFFFFF}Digite ''/Orelhao'' Para Usar",COR_3DLABEL,2477.8000000,-1939.7000000,13.4000000,16.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Lotérica de Los Santos\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1631.9160,-1172.1013,24.0781,30.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Agência de Empregos BPF\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,361.8300,173.5202,1008.3828,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Mudança de Sexo\n{FFFFFF}Digite /Mudarsexo para Trocar",COR_3DLABEL,360.5766, 164.2014, 1008.3828,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Bônus por players online\n{FFFFFF}Aperte Enter Para pegar o Presente",COR_3DLABEL,1447.0576,-1781.6187,13.6468,40.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2224.1819,-1141.8778,1025.7969,15.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2232.2729,-1162.5684,25.8906,15.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,957.4735,-48.6141,1001.1172,15.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1550.4686,-1669.6666,13.5624,15.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,229.6725,153.8311,1003.0234,15.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,241.0845,115.2740,1003.2188,15.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,321.4753,305.5962,999.1484,15.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-1347.6376,499.9476,11.1953,15.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Caixa Eletrônico\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1467.5273, -1782.6521, 13.1987,15.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Banco PlayStart\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2308.9492,-14.1523,26.7422,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Mercado BPF 24/7\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1833.6124,-1842.4968,13.5781,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Mercado BPF 24/7\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1000.5861,-919.8832,42.3281,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Mercado BPF 24/7\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1928.6006,-1776.4480,13.5469,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Mercado BPF 24/7\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1315.5110,-898.9860,39.5781,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Mercado BPF 24/7\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1352.3269,-1759.2491,13.5078,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Los Santos Prefeitura\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1481.3755,-1818.0884,15.5447,40.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Sub-HQ Hells Angels\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1974.7767, -2068.1162, 13.5756,40.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Alhambra\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1837.0278,-1682.3890,13.3233,30.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Bater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,255.1110,76.0224,1003.6406,3.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Bater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,-1616.1294,681.1594,7.1875,3.0,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Bater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,230.1107,165.2237,1003.0234,3.0,0,-1);
  	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Bater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,240.7396,112.9709,1003.2188,3.0,0,-1);
 	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Bater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,1530.3945,-1664.0377,6.2187,3.0,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Bater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,302.7606,-1529.7537,24.9219,3.0,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Bater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,1712.3607,1177.3903,34.8259,5.0,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Bater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,1218.5258,-1818.0236,13.5996,5.0,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Bater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,289.0175,2001.1622,17.6406,3.0,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\nBater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,-1345.8823,492.5301,11.2027,3.0,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\nBater Cartão\n{FFFFFF}Aperte Enter Para Bater",COR_3DLABEL,326.4911,307.0710,999.1484,3.0,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Drogas\nDigite /pegar",COR_3DLABEL,2152.4727,-1014.0005,62.8375,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Drogas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1450.4479,-2287.0803,13.5469,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Drogas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1919.1384,-1415.4775,13.5703,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Drogas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1123.7664,-1506.4692,15.7869,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu da Mafia\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-2648.0940,1396.4666,906.4609,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu da Mafia\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,811.9582,-1100.8458,25.7857,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu da Mafia\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,675.0947,-1275.7603,13.6334,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu da Mafia\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1738.6844,-1944.9553,13.5647,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Loja de Roupas Binco\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2244.3423,-1665.5542,15.4766,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Loja de Roupas ZIP\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,461.3484,-1500.9084,31.0592,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}The Pig Pen\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2421.4998,-1219.2438,25.5617,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Ginásio de Lutas de LS\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2229.9011,-1721.2582,13.5613,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Burguer Shot\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,1200.4497,-918.7695,43.1105,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cluckin Bell\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,927.6217,-1353.0105,13.3438,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Well Stacked Pizza\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2105.4858,-1806.4725,13.5547,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}BPF's Bar\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,975.4691,-1335.9618,13.5319,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Hotel BPF\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2233.2659,-1159.8256,25.8906,20.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Hotel BPF\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,2212.6235,-1150.4385,1025.7969,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Posto Abandonado\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,-78.9350,-1169.6569,2.1504,20.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.:: Hitmans ::.\nPegue seu Pacote Aqui\nOu aperte F para Acessar o Cofre",COR_3DLABEL,1073.1507,-345.1020,73.9921,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.:: Triads ::.\nPegue seu Pacote Aqui\nOu aperte F para Acessar o Cofre",COR_3DLABEL,-371.8547,-1428.7283,25.7266,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Equipar Al'Qaeda\nDigite /equipar Para Equipar",COR_3DLABEL,414.5280,2531.5229,19.1648,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Equipar F.A.R.C\nDigite /equipar Para Equipar",COR_3DLABEL,-308.9262,1762.3976,43.6406,15.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Equipar Taliban\nDigite /equipar Para Equipar",COR_3DLABEL,2743.6855,-2453.9363,13.8623,15.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Compras\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-26.8819,-89.6936,1003.5469,15.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Compras\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-22.2540,-55.6456,1003.5469,15.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Compras\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-22.3265,-138.4765,1003.5469,15.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Compras\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-30.3140,-28.3121,1003.5573,15.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Elevador da DP\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1524.4977,-1677.9469,6.2188,8.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Elevador da DP\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1565.1235,-1666.9944,28.3956,8.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Elevador da DP\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,246.2975,87.4735,1003.6406,8.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Comprar Licencas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1490.2411,1307.2179,1093.2891,10.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Comprar Armas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2176.6519,1619.0439,999.9766,8.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Comprar Armas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,437.1187,-82.9036,999.5547,8.0,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Pegar Materiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2026.2104,-1896.1097,13.5469,10,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Menu de Pegar Materiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1240.5569,-2036.9919,59.9709,10,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Trocar Materiais\nAperte Enter Para Trocar",COR_3DLABEL,1990.8590,-1996.3722,13.5469,10,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Trocar Materiais\nAperte Enter Para Trocar",COR_3DLABEL,1240.3546,-2067.5168,59.9752,10,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cura do Hospital\n{FFFFFF}Digite /curarme Para Se Curar",COR_3DLABEL,1715.7677,1181.4694,34.8259,8,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cura do Hospital\nDigite /curarme Para Se Curar",COR_3DLABEL,2029.5945,-1404.6426,17.2512,8,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,253.9280,69.6094,1003.6406,7,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,259.2474,120.3977,1003.2188,7,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,198.9671,168.1982,1003.0234,7,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,234.8419,111.2194,1003.2257,7,0,-1);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Limpar Ficha\n{FFFFFF}Digite /limpar Para Limpar",COR_3DLABEL,326.8282,304.4166,999.1484,7,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,1679.9660,-2119.3588,13.5468,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,2510.6958,-1672.439,13.4323,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,1138.1064,-1196.2368,32.0275,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,2815.6347,-1178.5112,25.2702,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,2155.1694,-1810.1579,13.5494,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,1315.9802,-875.2487,39.5781,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,506.5681,-80.5381,998.9609,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,23.5511,-2654.6933,40.5070,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,-220.6183,1405.9781,27.1656,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,1961.1135, -2046.2855, -1.1177,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,2126.1000,-1773.6999,13.6000,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,2410.8999,-1223.9000,24.7000,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,1262.1738,-773.3738,1091.9063,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,2491.3125,-1545.9629,24.0258,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,199.8940,-34.6994,1002.3040,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,2344.1047,-1353.3613,27.1266,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,1676.7057,-1358.2712,17.5037,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}GE\n{FFFFFF}Aperte Enter Para Equipar",COR_3DLABEL,788.7240,-2209.8838,14.9078,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Família StrondaH\n{FFFFFF}Aperte Enter Para Equipar",COR_3DLABEL,761.412963,1440.191650,1102.703125,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Família DestroyeR\n{FFFFFF}Aperte Enter Para Equipar",COR_3DLABEL,1345.5323,-2881.0178,14.2059,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Família Insane\n{FFFFFF}Aperte Enter Para Equipar",COR_3DLABEL,-71.6999,-1751.8000,10.5000,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Família Los Dorgados\n{FFFFFF}Aperte Enter Para Equipar",COR_3DLABEL,945.7804,2.2144,1000.9297,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Família AnonymouS\n{FFFFFF}Aperte Enter Para Equipar",COR_3DLABEL,273.8237,-2164.9209,2.7978,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Equipar::.\n{00DDDD}Drifters\n{FFFFFF}Aperte Enter Para Equipar",COR_3DLABEL,846.0684,-2037.2328,12.8672,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Palominio Creek\n{00DDDD}Aperte Enter Para Equipar",COR_3DLABEL,2332.0429,11.0080,26.4765,7,0);
	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Disfarce::.\n{FFFFFF}Digite /dhitman para disfarsar",COR_3DLABEL,1097.1110,-298.1786,73.9921,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Disfarce::.\n{FFFFFF}Digite /dtriads para disfarsar",COR_3DLABEL,-367.6012,-1439.7576,25.7266,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}.::Tunning Drifters::.\n{FFFFFF}Digite /Tunar para Personalizar",COR_3DLABEL,828.9000,-2056.1999,12.6000,28,0);

	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1568.6442,-1689.9729,6.2188,7,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,238.2739,108.0566,1003.2257,7,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-1341.1760,500.5289,11.1953,7,0,-1);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Médicos\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1703.7823,1174.0271,34.8259,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Aztecas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2811.7102,-1166.1824,1025.5703,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre F.A.R.C\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-310.6753,1771.4019,43.6406,7,0);
   	Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Taliban\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2749.9517,-2453.6799,13.8623,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Prefeitura\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,356.3957,152.4393,1025.7891,7,0);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Hitmans\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1073.1507,-345.1020,73.9921,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Repórteres\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,752.1580,-1358.9927,13.5000,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Taxistas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,992.5768,-1460.1726,13.5469,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,320.8083,307.5377,999.1484,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Cosa Nostra\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-2634.2791,1409.7692,906.4647,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Yakuza\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-2167.5757,644.8060,1057.7687,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Groove Street\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2514.1301,-1691.2979,14.0460,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Al'qaeda\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,400.0611,2539.5366,16.5448,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,208.8036,145.8378,1003.0234,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Policiais\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,289.0527,2012.4290,17.6406,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Ballas\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1151.1399,-1197.9670,32.0275,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Vagos\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2341.6677,-1186.3137,1027.9766,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Comando Vermelho\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2151.3218,-1789.1669,13.5097,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre PCC\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1327.2062,-877.5867,39.5781,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Hells Angels\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,509.7744,-73.3584,998.7578,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Mongols\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,684.7512,-461.8790,-25.6098,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Sons Of Anarchy\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,-223.7290,1410.9444,27.7734,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Drifters\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,827.9384,-2035.7565,12.8672,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ StrondaH\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,3046.1663,-1956.1207,11.1547,30.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Los Dorgados\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,3034.8000,-318.1000,8.6000,30.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre GE\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1286.5752,-772.8031,1091.9063,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Amigo dos Amigos\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,1663.0668,-1356.7678,17.5369,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ AnonymouS\n{FFFFFF}Aperte Enter Para Entrar",COR_3DLABEL,280.7871,-2167.1914,2.7978,30.0,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre Familia Motoqueiros\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,203.8630,-40.8281,1001.8047,7,0);
    Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre yStiflerS\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,2481.1177,-1540.4536,24.2282,7,0);

	SetTimer("SendMensagens",90000,1);
	tempoGranaTR = SetTimer("GranaTerritorios", TEMPOGRANATHEUS, 1);
    SetTimer("Velocimetro", 700, 1);
    AhOff = 0;
    new string[MAX_PLAYER_NAME];
    new string1[MAX_PLAYER_NAME];
	for(new c=0;c<MAX_VEHICLES;c++)
	{
		Gas[c] = GasMax;
        VeiculoNeon[c] = 0;
	}
	donoestacao = 0;
	donocasarao = 0;
    donoPark = 0;
    donoCemiterio = 0;
    donoPosto = 0;
    donoShop = 0;
    donoskate = 0;
    donopantano = 0;
    donopedreira = 0;

    LoadProperty();
	LoadBizz();
	LoadSBizz();

	News[hTaken1] = 0; News[hTaken2] = 0; News[hTaken3] = 0; News[hTaken4] = 0; News[hTaken5] = 0;
	format(string, sizeof(string), "Nenhum");
	strmid(News[hAdd1], string, 0, strlen(string), 255);
	strmid(News[hAdd2], string, 0, strlen(string), 255);
	strmid(News[hAdd3], string, 0, strlen(string), 255);
	strmid(News[hAdd4], string, 0, strlen(string), 255);
	strmid(News[hAdd5], string, 0, strlen(string), 255);
	format(string1, sizeof(string1), "Nenhum");
	strmid(News[hContact1], string1, 0, strlen(string1), 255);
	strmid(News[hContact2], string1, 0, strlen(string1), 255);
	strmid(News[hContact3], string1, 0, strlen(string1), 255);
	strmid(News[hContact4], string1, 0, strlen(string1), 255);
	strmid(News[hContact5], string1, 0, strlen(string1), 255);

	SetGameModeText("BPF RPG: Brasil");
	SendRconCommand("hostname HostName: [BPF RPG] Brasil PlayStart ® v5.1 #ImperioHost");
	SetTimer("RandomServerNames",2000,1);
	SendRconCommand("mapname Brasil RPG");
	ShowPlayerMarkers(0);
	AllowInteriorWeapons(1);
	AllowAdminTeleport(1);
	DisableInteriorEnterExits();
	UsePlayerPedAnims();
	// Player Class's
	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	}
    AddStaticPickup(1318, 23, 414.5280,2531.5229,19.1648); //equipar alqaeda
    AddStaticPickup(1318, 23, -308.9262,1762.3976,43.6406); //equipar farc
    AddStaticPickup(1254, 23, 1679.9660,-2119.3588,13.5468);
    AddStaticPickup(1254, 23, 2510.6958,-1672.439,13.4323);
	AddStaticPickup(1254, 23, 1138.1064,-1196.2368,32.0275);
    AddStaticPickup(1254, 23, 2815.6347,-1178.5112,25.2702);
    AddStaticPickup(1254, 23, 2155.1694,-1810.1579,13.5494);
    AddStaticPickup(1254, 23, 1315.9802,-875.2487,39.5781);
    AddStaticPickup(1254, 23, 506.5681,-80.5381,998.9609);
    AddStaticPickup(1254, 23, 23.5511,-2654.6933,40.5070);
    AddStaticPickup(1254, 23, -220.6183,1405.9781,27.1656);
    AddStaticPickup(1254, 23, 1961.1135, -2046.2855, -1.1177);
    AddStaticPickup(1254, 23, 2126.1000,-1773.6999,13.6000);
    AddStaticPickup(1254, 23, 2410.8999,-1223.9000,24.7000);
    AddStaticPickup(1254, 23, 1262.1738,-773.3738,1091.9063);
    AddStaticPickup(1254, 23, 2491.3125,-1545.9629,24.0258);
    AddStaticPickup(1254, 23, 2344.1047,-1353.3613,27.1266);
    AddStaticPickup(1254, 23, 1676.7057,-1358.2712,17.5037);
    AddStaticPickup(1254, 23, 199.8940,-34.6994,1002.3040);
    AddStaticPickup(1254, 23, 788.7240,-2209.8838,14.9078); //famy GE
    AddStaticPickup(1254, 23, 761.412963,1440.191650,1102.703125); //famy Sys
    AddStaticPickup(1254, 23, 1345.5323,-2881.0178,14.2059); //famy Cor
    AddStaticPickup(1254, 23, -71.6999,-1751.8000,10.5000,-1) ; //famy Insane
    AddStaticPickup(1254, 23, 945.7804,2.2144,1000.9297,-1) ; //famy Insane
    AddStaticPickup(1254, 23, 273.8237,-2164.9209,2.7978,-1) ; //famy lgn
    AddStaticPickup(1254, 23, 846.0684,-2037.2328,12.8672,-1) ; //famy drifters
    AddStaticPickup(1254, 23, 2332.0429,11.0080,26.4765);
	AddStaticPickup(1318, 23, 2140.9382,-1801.9813,16.1475,-1) ; // Entrada HQ Comando Vermelho
	AddStaticPickup(1318, 23, 967.2544,2175.1235,10.8203,-1) ; // Entrada HQ PCC
	AddStaticPickup(1318, 23, 246.2975,87.4735,1003.6406,-1) ; //elevador cop
    portaodpauto = CreatePickup(1210, 0, 246.4286,73.8840,1003.6406,-1) ; //Dp Auto
    AddStaticPickup(351,23,2176.6519,1619.0439,999.9766,-1) ; // loja de armas 1
    AddStaticPickup(351,23,437.1187,-82.9036,999.5547,-1) ; // loja de armas 2
    AddStaticPickup(1241,23,-22.2540,-55.6456,1003.5469,-1) ; // loja 24/7
    AddStaticPickup(1241,23,-26.8819,-89.6936,1003.5469,-1) ; // loja 24/7
    AddStaticPickup(1241,23,-22.3265,-138.4765,1003.5469,-1) ; // loja 24/7
    AddStaticPickup(1241,23,-30.3140,-28.3121,1003.5573,-1) ; // loja 24/7

//==================================[COFRE HQ]======================================//
    AddStaticPickup(1239, 23, 1568.6442,-1689.9729,6.2188,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 238.2739,108.0566,1003.2257,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, -1341.1760,500.5289,11.1953,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 1703.7823,1174.0271,34.8259,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 2811.7102,-1166.1824,1025.5703,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, -310.6753,1771.4019,43.6406,-1) ; //Cofre ORG
   	AddStaticPickup(1239, 23, 2749.9517,-2453.6799,13.8623,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 356.3957,152.4393,1025.7891,-1) ; //Cofre ORG
    //AddStaticPickup(1239, 23, 1073.1507,-345.1020,73.9921,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 752.1580,-1358.9927,13.5000,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 992.5768,-1460.1726,13.5469,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 320.8083,307.5377,999.1484,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, -2634.2791,1409.7692,906.4647,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, -2167.5757,644.8060,1057.7687,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 2514.1301,-1691.2979,14.0460,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 400.0611,2539.5366,16.5448,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 208.8036,145.8378,1003.0234,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 289.0527,2012.4290,17.6406,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 1151.1399,-1197.9670,32.0275,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 2341.6677,-1186.3137,1027.9766,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 2151.3218,-1789.1669,13.5097,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 1327.2062,-877.5867,39.5781,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 509.7744,-73.3584,998.7578,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 684.7512,-461.8790,-25.6098,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, -223.7290,1410.9444,27.7734,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 827.9384,-2035.7565,12.8672,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 1286.5752,-772.8031,1091.9063,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 1663.0668,-1356.7678,17.5369,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 203.8630,-40.8281,1001.8047,-1) ; //Cofre ORG
    AddStaticPickup(1239, 23, 2481.1177,-1540.4536,24.2282,-1) ; //Cofre ORG
//======================================================================//
	AddStaticPickup(1277, 23, 1490.2411,1307.2179,1093.2891,-1) ; //licencas
    AddStaticPickup(1277, 23, 355.4539,159.9982,1008.4802,-1) ; //Fundos pref
	AddStaticPickup(1318, 23, 1467.5273, -1782.6521, 13.1987,-1) ; //caixa prefeitura
	AddStaticPickup(1210, 23, 361.8300,173.5202,1008.3828,-1) ; //Empregos
	AddStaticPickup(19132, 23, 360.5766, 164.2014, 1008.3828,-1) ; //sexos
    AddStaticPickup(18749, 23, 2405.0625,-1376.5313,24.3273,-1) ; //Boas Vindas '-'
	AddStaticPickup(19132, 23, 1447.0576,-1781.6187,13.6468,-1) ; //presentes
	AddStaticPickup(19132, 23, 1568.6063,-1878.4338,13.5469,-1) ; //Ajuda Novatos
    AddStaticPickup(19132, 23, 359.4827,207.1152,1008.3828,-1) ; //votos eu acho
    AddStaticPickup(19132, 23, 239.0100,-2241.8064,1.9766,-1) ; //votos eu acho
    //AddStaticPickup(19132, 23, 2780.4939,-1812.2635,11.8438,-1) ; //conce
	AddStaticPickup(1240, 23, 1715.7677,1181.4694,34.8259,-1) ; //Hospital 1 near Ammu
	AddStaticPickup(1240, 23, 2029.5945,-1404.6426,17.2512,-1) ; //Hospital 2 near speedway
	AddStaticPickup(1318, 23, 1481.3755,-1818.0884,15.5447,-1) ; //City Hall
    AddStaticPickup(1318, 23, 1097.1110,-298.1786,73.9921,-1) ; // dhitman
    AddStaticPickup(1318, 23, -367.6012,-1439.7576,25.7266,-1) ; // dhitman
	AddStaticPickup(2060, 23, 2026.2104,-1896.1097,13.5469,-1) ; //Pacotes de Material
	AddStaticPickup(2060, 23, 1990.8590,-1996.3722,13.5469,-1) ; //Fabrica de Material
	AddStaticPickup(371, 23, 1544.2,-1353.4,329.4,-1) ; //LS towertop
	AddStaticPickup(371, 23, 1536.0, -1360.0, 1150.0,-1) ; //LS towertop
	AddStaticPickup(1242, 23, 1527.5,-12.1,1002.0,-1) ; //binco armor
	AddStaticPickup(1240, 23, 279.3000,1853.5619,8.7649,-1) ; //area51 health
	AddStaticPickup(1318, 23,259.2474,120.3977,1003.2188);// /limpar
	AddStaticPickup(1318, 23,234.8461,111.1823,1003.2257);// /limpar
    AddStaticPickup(1318, 23,1073.1507,-345.1020,73.9921);
    AddStaticPickup(1318, 23,-371.8547,-1428.7283,25.7266);
    AddStaticPickup(1242,23,346.1226,161.8205,1025.7964,-1) ; //EquiparGov
	AddStaticPickup(1318,23,1524.4977,-1677.9469,6.2188,-1) ; //epm
	AddStaticPickup(1318,23,1565.1235,-1666.9944,28.3956,-1) ; //epm
	AddStaticPickup(1318,23,374.3401,-2055.2114,8.0156,-1) ; //emc
	AddStaticPickup(1318,23,368.7828,-2054.5476,15.4066,-1) ; //emc
	AddStaticPickup(1318,23,964.0209,-1465.8312,13.4589,-1) ; //etaxi
	AddStaticPickup(1318,23,965.7349,-1465.6044,21.3783,-1) ; //etaxi
	AddStaticPickup(1318,23,2268.0308,2449.0750,3.5313,-1) ; //Subirlv
	AddStaticPickup(1318,23,2267.2820,2458.2598,38.6837,-1) ; //Descerlv
	AddStaticPickup(1314,23,2808.0322,-1176.3846,25.3794,-1) ; // Elevador Vagos
	AddStaticPickup(1314,23,2807.4321,-1174.6454,32.6688,-1) ; // Elevador Vagos
	AddStaticPickup(1314,23,1263.2212,-1675.5933,13.5469,-1) ; // Elevador sk
	AddStaticPickup(1314,23,1273.8400,-1640.5203,27.3750,-1) ; // Elevador sk
	AddStaticPickup(2060,23,811.9582,-1100.8458,25.7857,-1) ; //Mafia - Pegar
	AddStaticPickup(1314,23,1327.1804,-884.2955,39.5781,-1) ; //elevador pcc
	AddStaticPickup(1314,23,1324.3936,-890.1075,45.2266,-1) ; //elevador pcc
	AddStaticPickup(1314,23,-54.6216,-237.0123,31.5678,-1) ; //Elevador PC Descer
	AddStaticPickup(1314,23,346.8519,-1494.9565,36.0391);//Elevador R.O.T.A Subir
	AddStaticPickup(1314,23,345.1602,-1482.8597,76.5391);//Elevador R.O.T.A Descer
	AddStaticPickup(1314,23,1661.3975,-1342.8632,160.0281);//Elevador slayers Subir
	AddStaticPickup(1314,23,1650.1752,-1351.0350,17.4305);//Elevador slayers Descer
	AddStaticPickup(1314,23,1227.5879,-1774.2657,33.6573);//Elevador BOPE Subir
	AddStaticPickup(1314,23,1213.4347,-1818.5790,13.5987);//Elevador BOPE Descer
	AddStaticPickup(2060,23,1240.3546,-2067.5168,59.9752);// Trocar Materias Máfias
	AddStaticPickup(2060,23,-2648.0940,1396.4666,906.4609);// Equipar Máfia Cosa Nostra
// Entrances and exits start
	AddStaticPickup(1318, 23, 2808.1106,-1189.6528,25.3436,-1) ; //HQ VAGOS
	AddStaticPickup(1318, 23, 1554.9537,-1675.6584,16.1953);//DP PM
	AddStaticPickup(1318, 23, 1219.4229,-1812.4161,16.5938);//DP PM
	AddStaticPickup(1318, 23, -1052.2855,-948.4227,129.2188);//DP PM
	AddStaticPickup(1318, 23, 918.8992,-1252.3286,16.2109);//Entrada Interior HQ PC
	AddStaticPickup(1247, 23, 1545.4073,-1607.9791,13.3828);//DP Prender
//	AddStaticPickup(1247, 23, 920.5212,-1184.8267,16.9766,-1) ; // PC GARAGEM PRENDER
	AddStaticPickup(1247, 23, 341.4560,-1499.6265,36.0390,-1) ; // pr garagem
	AddStaticPickup(1318, 23, 1836.4064,-1682.4403,13.3493);//Alhabra
	AddStaticPickup(1318, 23, 327.8898,-1511.8446,36.0325);//DP GT3
	AddStaticPickup(1318, 23, 975.4691,-1335.9618,13.5319);//Bar Pawno
	AddStaticPickup(1275, 23, 2244.3423,-1665.5542,15.4766);//Entrada Binco
	AddStaticPickup(1318, 23, 2229.9011,-1721.2582,13.5613);//Ganton gym
	AddStaticPickup(1318, 23, 2421.4998,-1219.2438,25.5617);//Pig Pen
	AddStaticPickup(1318, 23, 2419.9941,-1509.5865,24.0000);//Cluckin bell under it
	AddStaticPickup(1318, 23, 2398.6240,-1899.2014,13.5469);//Cluckin bell next to 10 green
	AddStaticPickup(1318, 23, 810.5328,-1616.1392,13.5469);//Marina burger
	AddStaticPickup(1318, 23, 927.6217,-1353.0105,13.3438);//Cluckin Bell
	AddStaticPickup(1318, 23, 1200.4232,-918.5194,43.1125);//Vinewood burger
	AddStaticPickup(1318, 23, 1833.6124,-1842.4968,13.5781);//24/7 estação entrada
	AddStaticPickup(1318, 23, 1315.5110,-898.9860,39.5781);//24/7 perto madd dogg
	AddStaticPickup(1318, 23, 1000.5861,-919.8832,42.3281);//24/7 gas station vinewood
	AddStaticPickup(1318, 23, 1928.6006,-1776.4480,13.5469);//24/7 posto sul
	AddStaticPickup(1318, 23, -25.1326,-141.0670,1003.5469,-1) ; // 24-7 Exit
	AddStaticPickup(1318, 23, 1352.3269,-1759.2491,13.5078);//24/7 Near DMV
	AddStaticPickup(1318, 23, 1833.6124,-1842.4968,13.5781);//24/7 Near 8-Ball
	AddStaticPickup(1318, 23, 203.5140,-202.2578,1.5781,-1) ; //Pizza stack at BlueBerry
	AddStaticPickup(1318, 23, 242.7591,66.4315,1003.6406,-1) ; // Inside PD elevator
	AddStaticPickup(1318, 23, 1570.3828,-1333.8882,16.4844,-1) ; // Building next ABC
	AddStaticPickup(1318, 2, 2495.3481,-1691.1355,14.7656,-1) ; // Grove HQ
    AddStaticPickup(1274, 1, 1929.5409,-1785.1664,13.5469,-1) ; // Caixa Eletronico 1
    AddStaticPickup(1274, 1, 2232.2886,-1162.6107,25.8906,-1) ; // Caixa Eletronico 2
    AddStaticPickup(1274, 1, 1550.4796,-1669.7039,13.5624,-1) ; // Caixa Eletronico 3
    AddStaticPickup(1279, 23, 2152.4727,-1014.0005,62.8375,-1) ; //Drogas Morro
    AddStaticPickup(1279, 23, 1919.1384,-1415.4775,13.5703,-1) ; // Drogas Skate
    AddStaticPickup(1242, 23, 229.8216,165.0319,1003.0234,-1) ; // Equipar PC
    AddStaticPickup(1242, 23, 255.1110,76.0224,1003.6406,-1) ; // Equipar DP
    AddStaticPickup(1242, 23, 289.0175,2001.1622,17.6406,-1) ; // Equipar Americano
    AddStaticPickup(1242, 23, 1218.5258,-1818.0236,13.5996,-1) ; // Equipar BOPE
    AddStaticPickup(1318, 23, 252.5820,69.7423,1003.6406,-1) ; // Limpar DP
    AddStaticPickup(1318, 23, 1712.3607,1177.3903,34.8259,-1) ; // Limpar DP
    AddStaticPickup(1318, 23, 681.4846,-474.1617,16.5362,-1) ; // entrada hq hells angels
    AddStaticPickup(1318, 23, 1974.7767, -2068.1162, 13.5756,-1) ; // entrada hq hells angels
    AddStaticPickup(1318, 23, 23.8872,-2646.5869,40.4640,-1) ; // entrada hq Mongols
    AddStaticPickup(1318, 23, -1566.5295,-2730.2783,48.7435,-1) ; // entrada hq sons
    AddStaticPickup(1318, 23, 647.3710,-1357.2606,13.5777,-1) ; // entrada hq rep
    AddStaticPickup(1318, 23, 1173.2563,-1323.3102,15.3943,-1) ; // entrada hospital
    AddStaticPickup(1318, 23,1228.2998,511.7998,19.6000,-1) ; // entrada Motoqueiros
	AddStaticPickup(1318, 23, -78.9350,-1169.6569,2.1504,-1) ; // entrada hq Posto Abandonado
    AddStaticPickup(1242, 23, 240.8127,112.7893,1003.2188,-1) ; // Equipar R.O.T.A
    AddStaticPickup(1242, 23, 1530.3945,-1664.0377,6.2187,-1) ; // Equipar DP Garagem
    AddStaticPickup(1247, 23, 225.8874,114.2892,999.0156,-1) ; // PrenderCadeia R.O.T.A
    AddStaticPickup(1247, 23, 197.2681,179.3594,1003.0234,-1) ; // PrenderCadeia PC
    AddStaticPickup(1247, 23, 268.2967,77.5858,1001.0391,-1) ; // PrenderCadeia PM
    AddStaticPickup(1242, 23, 302.7606,-1529.7537,24.9219,-1) ; // Equipar R.O.T.A Garagem
//  AddStaticPickup(1242, 23, 914.2933,-1235.1436,17.2109,-1) ; // Equipar PC Garagem
    AddStaticPickup(1242, 23, -1345.8823,492.5301,11.2027,-1) ; // Equipar Exército
    AddStaticPickup(1318, 23, 607.7161,-1459.0728,14.3895,-1) ; // Hq Taxista Interior
    AddStaticPickup(1314, 23, 599.3150,-1520.4652,15.0129,-1) ; // Evelador Taxi 1
    AddStaticPickup(1314, 23, 594.9153,-1528.5319,30.8906,-1) ; // Elevador Taxi 2
   	AddStaticPickup(1242, 23, 326.4911,307.0710,999.1484,-1) ; // EQUIPAR PF
   	AddStaticPickup(1318, 23, 675.0947,-1275.7603,13.6334,-1) ; // Esconder Materiais Yakuza
   	AddStaticPickup(1318, 23, 256.0320,84.5082,1002.4453,-1) ; // Autorização
    AddStaticPickup(1318, 23, 202.5491,179.1493,1003.0323,-1) ; // Autorização
    AddStaticPickup(1318, 23, 214.9535,118.0954,999.0156,-1) ; // Autorização
    AddStaticPickup(1318, 23, 323.7303,308.9208,999.1484,-1) ; // Autorização
   	AddStaticPickup(1247, 23, 321.8284,315.6733,999.1484,-1) ; // PRENDER PF
   	AddStaticPickup(1210, 23, 355.2333,169.3552,1025.7891,-1) ; // DarTaxa
   	AddStaticPickup(1210, 23, 367.3167,162.2013,1025.7891,-1) ; // Portao Prefeitura
   	AddStaticPickup(1314, 23, 1173.4185,-1361.2090,13.9694,-1) ; // HQ MEDICOS EMBAIXO
   	AddStaticPickup(1314, 23, 1169.0085,-1329.3441,31.4640,-1) ; // HQ MEDICOS EM CIMA
   	AddStaticPickup(1314, 23, 2522.9346,-1679.4137,15.4970,-1) ; // HQ MEDICOS EMBAIXO
   	AddStaticPickup(1314, 23, 2524.4297,-1681.8153,19.9302,-1) ; // HQ MEDICOS EM CIMA
   	AddStaticPickup(1318, 23, 2232.9934,-1333.1924,23.9815,-1) ; // IGREJA
   	AddStaticPickup(1247, 23, -1298.8188,490.5014,11.1953,-1) ; // PRENDER EXERCITO
   	AddStaticPickup(1274, 23, 2306.5127,-6.1166,26.7422,-1) ; // Acesso Restrito Banco
   	AddStaticPickup(1318, 23, 1631.9160,-1172.1013,24.0781,-1) ; // Acesso Restrito Lotérica
   	AddStaticPickup(1318, 23, 3046.1663,-1956.1207,11.1547,-1) ; // Acesso Restrito Lotérica
    AddStaticPickup(1318, 23, 3034.8000,-318.1000,8.6000,-1) ; // Acesso Restrito Lotérica
    AddStaticPickup(1318, 23, 280.7871,-2167.1914,2.7978,-1) ; // Acesso Restrito Lotérica
    AddStaticPickup(1318, 23, 366.5278,189.0388,1008.3828,-1) ; // etnrada votacao
   	AddStaticPickup(1274, 23, 820.6042,8.3990,1004.1962,-1) ; // Roubo Lotérica
    AddStaticPickup(1274, 23, 381.5648,-188.1646,1000.6328,-1) ; // Roubo Lotérica
    AddStaticPickup(1274, 23, 354.6608,172.0170,1008.3802,-1) ; // Roubo prefeitura
   	AddStaticPickup(1318, 23, 1991.7828,-1183.4724,20.5116,-1) ; // Pescar Parque Gleen 1
   	AddStaticPickup(1318, 23, 1948.1309,-1215.2512,20.5019,-1) ; // Pescar Parque Gleen 2
   	AddStaticPickup(1318, 23, 839.8817,-1339.4336,7.1719,-1) ; // Orelhao Estação Civil
   	AddStaticPickup(1318, 23, 914.2606,-1003.7186,37.9976,-1) ; // Interior Policia Federal
   	AddStaticPickup(1318, 23, 198.9671,168.1982,1003.0234,-1) ; // Limpar PC
   	AddStaticPickup(1318, 23, 326.8282,304.4166,999.1484,-1) ; // Limpar PF
   	AddStaticPickup(1314, 23, 768.2192,-3.9873,1000.7203,-1) ; // mudarluta
   	AddStaticPickup(1275, 23, 461.3484,-1500.9084,31.0592,-1) ; // Entrada ZIP
   	AddStaticPickup(1318, 23, 2233.2659,-1159.8256,25.8906,-1) ; // Entrada Hotel
   	AddStaticPickup(1318, 23, 1497.0920,-687.8906,95.5633,-1) ; // Entrada Máfia Cosa Nostra
   	AddStaticPickup(1274, 23, 2224.1484,-1141.8772,1025.7969,-1) ; // Caixa Eletronico em lol
   	AddStaticPickup(1318, 23, 2232.8149,-1165.7214,25.8906,-1) ; // Orelhao hotel
    AddStaticPickup(1318, 23, 2219.9551,-1154.7574,1025.7969,-1) ; // Orelhao hotel
	AddStaticPickup(1318, 23, 1673.9886,-2122.1403,14.6014,-1) ; // Entrada HQ Los Aztecas
	AddStaticPickup(1318, 23, 1154.9366,-1180.8309,32.8187,-1) ; // Entrada HQ Ballas
	AddStaticPickup(1318, 23, 1548.7111,-1717.2552,13.5546,-1) ; // Pickup BAR
	AddStaticPickup(1274, 23, 2308.9492,-14.1523,26.7422,-1) ; // Banco Los Santos($)
	AddStaticPickup(1274, 23, 2169.1516,1589.9265,999.9713,-1) ; // Roubo Loja de Armas 1($)
	AddStaticPickup(1274, 23, 451.3090,-79.8603,999.5547,-1) ; // Roubo Loja de Armas 2($)
	AddStaticPickup(1318, 23, 2104.8252,-1806.5239,13.5547,-1) ; // Pickup Entrada Pizza
	AddStaticPickup(1242, 23, 2743.6855,-2453.9363,13.8623,-1) ; // equipar taliban
	AddStaticPickup(1247, 23, 195.5733,158.4008,1003.0234,-1) ; //prender novo
	AddStaticPickup(1247, 23, 1280.4871,-1833.3243,13.3828,-1) ; //prender novo
	AddStaticPickup(1274, 23, 229.6725,153.8311,1003.0234,-1) ; //CAIXA PC
	AddStaticPickup(1274, 23, 241.0845,115.2740,1003.2188,-1) ; //CAIXA R.O.T.A
	AddStaticPickup(1274, 23, 321.4753,305.5962,999.1484,-1) ; //CAIXA PF
	AddStaticPickup(1274, 23, -1347.6376,499.9476,11.1953,-1) ; //CAIXA EXE
    AddStaticPickup(1239, 23, 822.0201,4.2154,1004.1797,-1) ; // coisa lot 3
    AddStaticPickup(1239, 23, 822.0099,6.3927,1004.1797,-1) ; // coisa lot 4
    AddStaticPickup(1239, 23, 822.0237,1.7826,1004.1797,-1) ; // coisa lot 2
    AddStaticPickup(1239, 23, 822.0087,-0.1116,1004.1797,-1) ; // coisa lot 1
    AddStaticPickup(1318, 23, 2334.8550,-1044.9471,52.3582,-1) ; //equipar hitman
    // dp2
    CreateDynamicObject(983,1546.30004883,-1617.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (1)
    CreateDynamicObject(983,1543.00000000,-1617.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (2)
    CreateDynamicObject(983,1539.69995117,-1614.50000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (3)
    CreateDynamicObject(983,1539.69995117,-1608.00000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (4)
    CreateDynamicObject(983,1542.90002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (5)
    CreateDynamicObject(983,1539.80004883,-1605.69995117,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (6)
    CreateDynamicObject(983,1549.40002441,-1602.30004883,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (7)
    CreateDynamicObject(983,1555.90002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (8)
    CreateDynamicObject(983,1562.40002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (9)
    CreateDynamicObject(983,1568.90002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (10)
    CreateDynamicObject(983,1575.40002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (11)
    CreateDynamicObject(983,1581.59997559,-1602.50000000,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (12)
    CreateDynamicObject(983,1588.09997559,-1602.50000000,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (13)
    CreateDynamicObject(983,1594.59997559,-1602.50000000,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (14)
    CreateDynamicObject(983,1601.09997559,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (15)
    CreateDynamicObject(983,1604.80004883,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (16)
    CreateDynamicObject(983,1608.00000000,-1605.69995117,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (17)
    CreateDynamicObject(983,1608.00000000,-1612.09997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (18)
    CreateDynamicObject(983,1608.00000000,-1618.59997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (19)
    CreateDynamicObject(983,1608.00000000,-1625.09997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (20)
    CreateDynamicObject(983,1608.00000000,-1631.59997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (21)
    CreateDynamicObject(983,1608.00000000,-1634.90002441,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (22)
    CreateDynamicObject(983,1604.69995117,-1638.09997559,16.60000038,0.00000000,0.00000000,268.00000000); //object(fenceshit3) (23)
    CreateDynamicObject(3934,1568.69995117,-1646.40002441,27.39999962,0.00000000,0.00000000,270.00000000); //object(helipad01) (2)
    CreateDynamicObject(3934,1555.80004883,-1641.90002441,27.39999962,0.00000000,0.00000000,270.00000000); //object(helipad01) (3)
    CreateDynamicObject(978,1537.86474609,-1668.43005371,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (1)
    CreateDynamicObject(978,1537.86425781,-1668.42968750,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (2)
    CreateDynamicObject(978,1537.84692383,-1677.07800293,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (3)
    CreateDynamicObject(978,1534.87292480,-1658.77319336,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (5)
    CreateDynamicObject(978,1534.84985352,-1649.39184570,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (6)
    CreateDynamicObject(978,1534.93457031,-1686.44079590,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (7)
    CreateDynamicObject(978,1535.04614258,-1695.81567383,13.38709545,0.00000000,0.00000000,90.00000000); //object(sub_roadright) (8)
    CreateDynamicObject(16362,1519.45837402,-1657.60937500,15.65931129,0.00000000,0.00000000,0.00000000); //object(desn2_tscanopy) (1)
    CreateDynamicObject(11547,1520.54345703,-1685.71643066,15.49153137,0.00000000,0.00000000,0.00000000); //object(desn_tscanopy) (1)
    CreateDynamicObject(1251,1520.70776367,-1700.12597656,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (1)
    CreateDynamicObject(1251,1520.79150391,-1705.72192383,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (2)
    CreateDynamicObject(1251,1520.85705566,-1711.12634277,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (3)
    CreateDynamicObject(1251,1520.78137207,-1716.14538574,12.65155983,0.00000000,0.00000000,270.00000000); //object(smashbar) (4)
    CreateDynamicObject(974,1544.61022949,-1620.42492676,15.33230209,0.00000000,0.00000000,270.00000000); //object(tall_fence) (1)
    CreateDynamicObject(974,1544.37927246,-1635.85388184,15.16055298,0.00000000,0.00000000,270.00000000); //object(tall_fence) (2)
    CreateDynamicObject(8650,1544.61584473,-1632.42687988,17.64937592,0.00000000,0.00000000,180.00000000); //object(shbbyhswall06_lvs) (1)
    //HQ da Policia Florestal
	CreateDynamicObject(3749,-1197.6000000,-985.3000000,134.1000000,0.0000000,0.0000000,89.0000000); //object(clubgate01_lax) (2)
	CreateDynamicObject(3749,-1198.7000000,-968.1000000,128.4000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (3)
	CreateDynamicObject(3749,-1198.4000000,-967.8000000,131.6000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (4)
	CreateDynamicObject(3749,-1198.4000000,-967.8000000,135.9000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (5)
	CreateDynamicObject(3749,-1198.1000000,-948.2000000,135.9000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (6)
	CreateDynamicObject(3749,-1198.1000000,-948.3000000,131.6000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (8)
	CreateDynamicObject(3749,-1198.4000000,-948.2000000,128.4000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (9)
	CreateDynamicObject(3749,-1198.1000000,-928.2000000,128.4000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (10)
	CreateDynamicObject(3749,-1197.8000000,-928.3000000,131.6000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (11)
	CreateDynamicObject(3749,-1197.8000000,-928.2000000,135.9000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (12)
	CreateDynamicObject(3749,-1197.7000000,-918.8000000,135.9000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (13)
	CreateDynamicObject(3749,-1197.7000000,-918.8000000,131.6000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (14)
	CreateDynamicObject(3749,-1198.0000000,-918.8000000,128.4000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (15)
	CreateDynamicObject(3749,-1186.9000000,-908.4000000,128.4000000,0.0000000,0.0000000,3.4950000); //object(clubgate01_lax) (16)
	CreateDynamicObject(3749,-1186.9000000,-908.4000000,131.6000000,0.0000000,0.0000000,3.4940000); //object(clubgate01_lax) (18)
	CreateDynamicObject(3749,-1186.9000000,-908.4000000,135.9000000,0.0000000,0.0000000,3.4940000); //object(clubgate01_lax) (19)
	CreateDynamicObject(3749,-1171.6000000,-907.5000000,135.9000000,0.0000000,0.0000000,3.4940000); //object(clubgate01_lax) (20)
	CreateDynamicObject(3749,-1171.6000000,-907.5000000,131.6000000,0.0000000,0.0000000,3.4940000); //object(clubgate01_lax) (21)
	CreateDynamicObject(3749,-1171.7000000,-907.5000000,128.4000000,0.0000000,0.0000000,3.4940000); //object(clubgate01_lax) (22)
	CreateDynamicObject(3749,-1156.3000000,-906.8000000,135.9000000,0.0000000,0.0000000,1.4940000); //object(clubgate01_lax) (23)
	CreateDynamicObject(3749,-1156.4000000,-906.8000000,131.6000000,0.0000000,0.0000000,1.4940000); //object(clubgate01_lax) (24)
	CreateDynamicObject(3749,-1156.4000000,-906.9000000,128.4000000,0.0000000,0.0000000,1.4940000); //object(clubgate01_lax) (25)
	CreateDynamicObject(3749,-1141.1000000,-906.6000000,128.4000000,0.0000000,0.0000000,0.7390000); //object(clubgate01_lax) (26)
	CreateDynamicObject(3749,-1141.1000000,-906.6000000,131.6000000,0.0000000,0.0000000,0.9890000); //object(clubgate01_lax) (27)
	CreateDynamicObject(3749,-1141.1000000,-906.4000000,135.9000000,0.0000000,0.0000000,0.9890000); //object(clubgate01_lax) (28)
	CreateDynamicObject(3749,-1125.9000000,-906.5000000,128.4000000,0.0000000,0.0000000,359.7360000); //object(clubgate01_lax) (29)
	CreateDynamicObject(3749,-1125.9000000,-906.5000000,131.6000000,0.0000000,0.0000000,359.9830000); //object(clubgate01_lax) (30)
	CreateDynamicObject(3749,-1125.8000000,-906.3000000,135.9000000,0.0000000,0.0000000,0.2330000); //object(clubgate01_lax) (31)
	CreateDynamicObject(3749,-1110.7000000,-906.6000000,128.4000000,0.0000000,0.0000000,359.7310000); //object(clubgate01_lax) (32)
	CreateDynamicObject(3749,-1110.7000000,-906.6000000,131.6000000,0.0000000,0.0000000,359.9780000); //object(clubgate01_lax) (33)
	CreateDynamicObject(3749,-1110.6000000,-906.3000000,135.9000000,0.0000000,0.0000000,0.2310000); //object(clubgate01_lax) (34)
	CreateDynamicObject(3749,-1095.4000000,-906.7000000,128.4000000,0.0000000,0.0000000,359.7310000); //object(clubgate01_lax) (35)
	CreateDynamicObject(3749,-1095.5000000,-906.7000000,131.6000000,0.0000000,0.0000000,359.9780000); //object(clubgate01_lax) (36)
	CreateDynamicObject(3749,-1095.4000000,-906.3000000,135.9000000,0.0000000,0.0000000,0.2310000); //object(clubgate01_lax) (37)
	CreateDynamicObject(3749,-1080.2000000,-906.9000000,128.4000000,0.0000000,0.0000000,359.7310000); //object(clubgate01_lax) (38)
	CreateDynamicObject(3749,-1080.2000000,-906.8000000,131.6000000,0.0000000,0.0000000,359.9780000); //object(clubgate01_lax) (39)
	CreateDynamicObject(3749,-1080.1000000,-906.3000000,135.9000000,0.0000000,0.0000000,0.2310000); //object(clubgate01_lax) (40)
	CreateDynamicObject(3749,-1065.0000000,-907.0000000,128.4000000,0.0000000,0.0000000,359.7310000); //object(clubgate01_lax) (41)
	CreateDynamicObject(3749,-1065.0000000,-906.9000000,131.6000000,0.0000000,0.0000000,359.9780000); //object(clubgate01_lax) (42)
	CreateDynamicObject(3749,-1064.9000000,-906.3000000,135.9000000,0.0000000,0.0000000,0.2310000); //object(clubgate01_lax) (43)
	CreateDynamicObject(3749,-1049.7000000,-907.1000000,128.4000000,0.0000000,0.0000000,359.7310000); //object(clubgate01_lax) (44)
	CreateDynamicObject(3749,-1049.7000000,-907.0000000,131.6000000,0.0000000,0.0000000,359.9780000); //object(clubgate01_lax) (45)
	CreateDynamicObject(3749,-1049.6000000,-906.3000000,135.9000000,0.0000000,0.0000000,0.2310000); //object(clubgate01_lax) (46)
	CreateDynamicObject(3749,-1034.5000000,-907.2000000,128.4000000,0.0000000,0.0000000,359.7310000); //object(clubgate01_lax) (47)
	CreateDynamicObject(3749,-1034.5000000,-907.0000000,131.6000000,0.0000000,0.0000000,359.9780000); //object(clubgate01_lax) (48)
	CreateDynamicObject(3749,-1034.5000000,-906.2000000,135.9000000,0.0000000,0.0000000,0.2310000); //object(clubgate01_lax) (49)
	CreateDynamicObject(3749,-1019.1000000,-907.3000000,128.4000000,0.0000000,0.0000000,359.7310000); //object(clubgate01_lax) (50)
	CreateDynamicObject(3749,-1019.2000000,-907.1000000,131.6000000,0.0000000,0.0000000,359.9780000); //object(clubgate01_lax) (51)
	CreateDynamicObject(3749,-1019.2000000,-906.2000000,135.9000000,0.0000000,0.0000000,0.2310000); //object(clubgate01_lax) (52)
	CreateDynamicObject(3749,-1009.3000000,-907.4000000,128.4000000,0.0000000,0.0000000,359.7310000); //object(clubgate01_lax) (53)
	CreateDynamicObject(3749,-1009.3000000,-907.1000000,131.6000000,0.0000000,0.0000000,359.9780000); //object(clubgate01_lax) (54)
	CreateDynamicObject(3749,-1009.3000000,-906.2000000,135.9000000,0.0000000,0.0000000,0.2310000); //object(clubgate01_lax) (55)
	CreateDynamicObject(3749,-1001.3000000,-915.4000000,128.4000000,0.0000000,0.0000000,273.4810000); //object(clubgate01_lax) (56)
	CreateDynamicObject(3749,-1001.3000000,-915.4000000,131.6000000,0.0000000,0.0000000,273.4770000); //object(clubgate01_lax) (57)
	CreateDynamicObject(3749,-1001.3000000,-915.4000000,135.9000000,0.0000000,0.0000000,273.4770000); //object(clubgate01_lax) (58)
	CreateDynamicObject(3749,-1000.4000000,-930.6000000,128.4000000,0.0000000,0.0000000,273.4770000); //object(clubgate01_lax) (59)
	CreateDynamicObject(3749,-1000.4000000,-930.6000000,131.6000000,0.0000000,0.0000000,273.4770000); //object(clubgate01_lax) (60)
	CreateDynamicObject(3749,-1000.4000000,-930.6000000,135.9000000,0.0000000,0.0000000,273.4770000); //object(clubgate01_lax) (61)
	CreateDynamicObject(3749,-999.9000000,-950.1000000,128.4000000,0.0000000,0.0000000,269.4770000); //object(clubgate01_lax) (62)
	CreateDynamicObject(3749,-999.9000000,-950.1000000,131.6000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (65)
	CreateDynamicObject(3749,-999.9000000,-950.1000000,135.9000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (66)
	CreateDynamicObject(3749,-1000.1000000,-970.1000000,128.4000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (67)
	CreateDynamicObject(3749,-1000.1000000,-970.1000000,131.6000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (68)
	CreateDynamicObject(3749,-1000.1000000,-970.1000000,135.9000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (69)
	CreateDynamicObject(3749,-1000.3000000,-990.1000000,128.4000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (70)
	CreateDynamicObject(3749,-1000.3000000,-990.1000000,131.6000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (71)
	CreateDynamicObject(3749,-1000.3000000,-990.1000000,135.9000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (72)
	CreateDynamicObject(3749,-1000.5000000,-1010.1000000,128.4000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (73)
	CreateDynamicObject(3749,-1000.5000000,-1010.1000000,131.6000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (74)
	CreateDynamicObject(3749,-1000.5000000,-1010.1000000,135.9000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (76)
	CreateDynamicObject(3749,-1000.7000000,-1030.0000000,128.4000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (77)
	CreateDynamicObject(3749,-1000.7000000,-1030.0000000,131.6000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (78)
	CreateDynamicObject(3749,-1000.7000000,-1030.0000000,135.9000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (79)
	CreateDynamicObject(3749,-1000.9000000,-1050.0000000,128.4000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (80)
	CreateDynamicObject(3749,-1000.9000000,-1050.0000000,131.6000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (81)
	CreateDynamicObject(3749,-1000.9000000,-1050.0000000,135.9000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (82)
	CreateDynamicObject(3749,-1000.9000000,-1059.8000000,128.4000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (83)
	CreateDynamicObject(3749,-1000.9000000,-1059.8000000,131.6000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (84)
	CreateDynamicObject(3749,-1000.9000000,-1059.8000000,135.9000000,0.0000000,0.0000000,269.4730000); //object(clubgate01_lax) (85)
	CreateDynamicObject(3749,-1008.8000000,-1068.0000000,128.4000000,0.0000000,0.0000000,180.2230000); //object(clubgate01_lax) (86)
	CreateDynamicObject(3749,-1008.8000000,-1068.0000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (87)
	CreateDynamicObject(3749,-1008.8000000,-1068.0000000,135.9000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (88)
	CreateDynamicObject(3749,-1024.0000000,-1068.0000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (89)
	CreateDynamicObject(3749,-1024.0000000,-1068.0000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (90)
	CreateDynamicObject(3749,-1024.0000000,-1068.0000000,135.9000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (91)
	CreateDynamicObject(3749,-1044.0000000,-1068.0000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (92)
	CreateDynamicObject(3749,-1044.0000000,-1068.0000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (93)
	CreateDynamicObject(3749,-1044.0000000,-1068.0000000,135.9000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (94)
	CreateDynamicObject(3749,-1064.0000000,-1068.0000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (95)
	CreateDynamicObject(3749,-1064.0000000,-1068.0000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (96)
	CreateDynamicObject(3749,-1064.0000000,-1068.0000000,135.9000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (98)
	CreateDynamicObject(3749,-1084.2000000,-1068.0000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (99)
	CreateDynamicObject(3749,-1084.2000000,-1068.0000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (100)
	CreateDynamicObject(3749,-1084.2000000,-1068.0000000,135.9000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (101)
	CreateDynamicObject(3749,-1104.3000000,-1068.0000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (102)
	CreateDynamicObject(3749,-1104.3000000,-1068.0000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (103)
	CreateDynamicObject(3749,-1104.3000000,-1068.0000000,135.9000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (104)
	CreateDynamicObject(3749,-1124.3000000,-1067.9000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (105)
	CreateDynamicObject(3749,-1124.3000000,-1067.9000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (106)
	CreateDynamicObject(3749,-1124.3000000,-1067.9000000,135.8000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (107)
	CreateDynamicObject(3749,-1144.2000000,-1067.9000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (108)
	CreateDynamicObject(3749,-1144.2000000,-1067.9000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (109)
	CreateDynamicObject(3749,-1144.2000000,-1067.9000000,135.8000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (111)
	CreateDynamicObject(3749,-1164.2000000,-1067.8000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (112)
	CreateDynamicObject(3749,-1164.2000000,-1067.8000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (113)
	CreateDynamicObject(3749,-1164.2000000,-1067.8000000,135.7000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (114)
	CreateDynamicObject(3749,-1184.2000000,-1067.7000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (115)
	CreateDynamicObject(3749,-1184.2000000,-1067.7000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (116)
	CreateDynamicObject(3749,-1184.2000000,-1067.7000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (117)
	CreateDynamicObject(3749,-1184.2000000,-1067.7000000,135.7000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (118)
	CreateDynamicObject(3749,-1188.6000000,-1067.6000000,128.4000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (119)
	CreateDynamicObject(3749,-1188.6000000,-1067.6000000,131.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (120)
	CreateDynamicObject(3749,-1188.6000000,-1067.6000000,135.6000000,0.0000000,0.0000000,180.2200000); //object(clubgate01_lax) (121)
	CreateDynamicObject(3749,-1198.4000000,-1004.9000000,128.4000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (122)
	CreateDynamicObject(3749,-1198.4000000,-1004.9000000,132.2000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (123)
	CreateDynamicObject(3749,-1198.4000000,-1004.9000000,135.8000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (124)
	CreateDynamicObject(3749,-1198.7000000,-1024.7000000,128.4000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (125)
	CreateDynamicObject(3749,-1198.7000000,-1024.7000000,132.2000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (126)
	CreateDynamicObject(3749,-1198.7000000,-1024.7000000,135.8000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (127)
	CreateDynamicObject(3749,-1199.0000000,-1044.7000000,128.4000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (128)
	CreateDynamicObject(3749,-1199.0000000,-1044.7000000,132.2000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (129)
	CreateDynamicObject(3749,-1199.0000000,-1044.7000000,135.8000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (130)
	CreateDynamicObject(3749,-1199.2000000,-1059.0000000,128.4000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (131)
	CreateDynamicObject(3749,-1199.2000000,-1059.0000000,132.2000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (132)
	CreateDynamicObject(3749,-1199.2000000,-1059.0000000,135.8000000,0.0000000,0.0000000,88.9950000); //object(clubgate01_lax) (133)
	CreateDynamicObject(3976,-1034.6000000,-948.6000000,148.8000000,0.0000000,0.0000000,0.0000000); //object(policest02_lan) (1)
	CreateDynamicObject(1238,-1095.1000000,-931.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (1)
	CreateDynamicObject(1238,-1103.0000000,-931.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (3)
	CreateDynamicObject(1238,-1113.0000000,-931.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (4)
	CreateDynamicObject(1238,-1122.0000000,-931.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (5)
	CreateDynamicObject(1238,-1132.7000000,-931.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (7)
	CreateDynamicObject(1238,-1142.5000000,-931.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (8)
	CreateDynamicObject(1238,-1156.4000000,-931.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (9)
	CreateDynamicObject(1238,-1153.3000000,-946.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (11)
	CreateDynamicObject(1238,-1153.3000000,-947.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (12)
	CreateDynamicObject(1238,-1153.3000000,-948.6000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (13)
	CreateDynamicObject(1238,-1153.3000000,-949.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (14)
	CreateDynamicObject(1238,-1153.3000000,-950.9000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (15)
	CreateDynamicObject(1238,-1153.4000000,-952.1000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (16)
	CreateDynamicObject(1238,-1153.4000000,-953.4000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (17)
	CreateDynamicObject(1238,-1153.4000000,-954.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (18)
	CreateDynamicObject(1238,-1153.4000000,-956.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (19)
	CreateDynamicObject(1238,-1153.4000000,-958.1000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (20)
	CreateDynamicObject(1238,-1076.9000000,-987.4000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (21)
	CreateDynamicObject(1238,-1080.3000000,-988.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (22)
	CreateDynamicObject(1238,-1084.2000000,-991.4000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (23)
	CreateDynamicObject(1238,-1089.2000000,-994.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (24)
	CreateDynamicObject(1238,-1092.9000000,-994.4000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (25)
	CreateDynamicObject(1238,-1096.5000000,-994.4000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (26)
	CreateDynamicObject(1238,-1102.0000000,-994.4000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (27)
	CreateDynamicObject(1238,-1106.5000000,-994.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (28)
	CreateDynamicObject(1238,-1111.3000000,-994.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (29)
	CreateDynamicObject(1238,-1116.3000000,-993.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (30)
	CreateDynamicObject(1238,-1118.7000000,-993.1000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (31)
	CreateDynamicObject(1238,-1121.1000000,-991.4000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (32)
	CreateDynamicObject(1238,-1122.1000000,-988.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (33)
	CreateDynamicObject(1238,-1121.8000000,-985.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (34)
	CreateDynamicObject(1238,-1124.0000000,-982.0000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (35)
	CreateDynamicObject(1238,-1128.3000000,-979.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (36)
	CreateDynamicObject(1238,-1133.2000000,-978.1000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (37)
	CreateDynamicObject(1238,-1137.6000000,-975.9000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (38)
	CreateDynamicObject(1238,-1139.6000000,-973.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (39)
	CreateDynamicObject(1238,-1139.2000000,-969.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (40)
	CreateDynamicObject(1238,-1138.9000000,-965.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (41)
	CreateDynamicObject(1238,-1138.6000000,-962.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (42)
	CreateDynamicObject(1238,-1134.9000000,-960.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (43)
	CreateDynamicObject(1238,-1132.4000000,-958.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (44)
	CreateDynamicObject(1238,-1126.7000000,-955.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (45)
	CreateDynamicObject(1238,-1121.9000000,-955.1000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (46)
	CreateDynamicObject(1238,-1111.4000000,-956.1000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (47)
	CreateDynamicObject(1238,-1104.4000000,-953.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (48)
	CreateDynamicObject(1238,-1096.1000000,-953.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (49)
	CreateDynamicObject(1238,-1092.0000000,-957.9000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (50)
	CreateDynamicObject(1238,-1088.2000000,-961.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (51)
	CreateDynamicObject(1238,-1081.4000000,-963.1000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (52)
	CreateDynamicObject(1238,-1077.2000000,-965.0000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (53)
	CreateDynamicObject(1238,-1074.6000000,-969.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (54)
	CreateDynamicObject(1238,-1072.5000000,-973.9000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (55)
	CreateDynamicObject(1238,-1073.7000000,-981.1000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (56)
	CreateDynamicObject(1238,-1073.7000000,-981.0996000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (57)
	CreateDynamicObject(1238,-1148.2000000,-969.0000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (58)
	CreateDynamicObject(1238,-1148.4000000,-965.0000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (59)
	CreateDynamicObject(1238,-1146.5000000,-959.9000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (60)
	CreateDynamicObject(1238,-1142.5000000,-956.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (61)
	CreateDynamicObject(1238,-1135.6000000,-951.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (62)
	CreateDynamicObject(1238,-1127.0000000,-947.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (63)
	CreateDynamicObject(1238,-1116.4000000,-946.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (64)
	CreateDynamicObject(1238,-1110.0000000,-944.9000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (65)
	CreateDynamicObject(1238,-1103.7000000,-943.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (66)
	CreateDynamicObject(1238,-1097.8000000,-943.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (67)
	CreateDynamicObject(1238,-1092.3000000,-946.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (68)
	CreateDynamicObject(1238,-1084.6000000,-950.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (69)
	CreateDynamicObject(1238,-1076.0000000,-955.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (70)
	CreateDynamicObject(1238,-1070.0000000,-957.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (71)
	CreateDynamicObject(1238,-1066.1000000,-962.6000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (72)
	CreateDynamicObject(1238,-1063.9000000,-968.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (73)
	CreateDynamicObject(1238,-1062.7000000,-972.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (74)
	CreateDynamicObject(1238,-1063.6000000,-987.6000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (75)
	CreateDynamicObject(1238,-1066.6000000,-992.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (76)
	CreateDynamicObject(1238,-1070.9000000,-995.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (77)
	CreateDynamicObject(1238,-1074.4000000,-999.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (78)
	CreateDynamicObject(1238,-1080.3000000,-1003.6000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (79)
	CreateDynamicObject(1238,-1085.9000000,-1005.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (80)
	CreateDynamicObject(1238,-1091.2000000,-1005.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (81)
	CreateDynamicObject(1238,-1096.9000000,-1005.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (82)
	CreateDynamicObject(1238,-1104.9000000,-1005.0000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (83)
	CreateDynamicObject(1238,-1110.6000000,-1004.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (84)
	CreateDynamicObject(1238,-1115.8000000,-1004.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (85)
	CreateDynamicObject(1238,-1101.6000000,-1005.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (86)
	CreateDynamicObject(1238,-1120.8000000,-1003.9000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (87)
	CreateDynamicObject(1238,-1124.0000000,-1002.1000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (88)
	CreateDynamicObject(1238,-1127.0000000,-998.3000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (89)
	CreateDynamicObject(1238,-1130.2000000,-993.8000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (90)
	CreateDynamicObject(1238,-1132.2000000,-989.0000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (91)
	CreateDynamicObject(1238,-1137.4000000,-985.5000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (92)
	CreateDynamicObject(1238,-1143.4000000,-983.0000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (93)
	CreateDynamicObject(1238,-1146.6000000,-979.0000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (94)
	CreateDynamicObject(1238,-1148.8000000,-974.7000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (95)
	CreateDynamicObject(1238,-1148.8000000,-971.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (96)
	CreateDynamicObject(1238,-1139.8000000,-971.2000000,128.5000000,0.0000000,0.0000000,0.0000000); //object(trafficcone) (97)
	CreateDynamicObject(4639,-1201.3000000,-1072.3000000,129.5000000,0.0000000,0.0000000,270.0000000); //object(paypark_lan02) (1)
    PortaoRooxy = CreateDynamicObject(980,-1198.2000000,-985.3000000,131.0000000,0.0000000,0.0000000,88.0000000); //object(subwaygate) (2)
	//LOGOS
	new BPFLogo = CreateObject(3055,1567.8000000,-1898.4000000,15.9000000,0.0000000,0.0000000,0.0000000);
	SetObjectMaterialText(BPFLogo, "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start", 0, 140, "Colleged", 60, 1, -32256, 0, 1);
	new BPMLogo = CreateObject(13028,1219.0000000,-1811.2998000,21.9000000,0.0000000,0.0000000,270.0000000);
	SetObjectMaterialText(BPMLogo, "{363636}B.O.P.E", 0, 140, "Colleged", 60, 1, -32256, 0, 1);
	new yStiflerSLogo = CreateObject(13187,2451.3999000,-1541.3000000,25.9000000,0.0000000,0.0000000,89.9950000);
	SetObjectMaterialText(yStiflerSLogo, "{CD3333}Família yStiflerS", 0, 140, "Colleged", 60, 1, -32256, 0, 1);
//===============================================================================================
	PortaoAmericano1 = CreateDynamicObject(971,96.7000000,1920.2000000,20.7000000,0.0000000,0.0000000,272.0000000); //object(subwaygate) (1)
	PortaoAmericano3 = CreateDynamicObject(980,345.2000100,1797.5000000,20.2000000,0.0000000,0.0000000,28.0000000); //object(airportgate) (2)
	CreateDynamicObject(3749,345.2000100,1797.2000000,23.1000000,0.0000000,0.0000000,28.0000000); //object(clubgate01_lax) (1)
	CreateDynamicObject(971,286.7000100,2042.1000000,20.2000000,0.0000000,0.0000000,268.0000000); //object(subwaygate) (1)
	CreateDynamicObject(971,287.0000000,2050.8999000,20.2000000,0.0000000,0.0000000,267.9950000); //object(subwaygate) (2)
	CreateDynamicObject(971,282.7999900,2055.8000000,20.2000000,0.0000000,0.0000000,355.9950000); //object(subwaygate) (3)
	CreateDynamicObject(971,274.2000100,2056.3000000,20.2000000,0.0000000,0.0000000,355.9900000); //object(subwaygate) (4)
	CreateDynamicObject(971,269.5000000,2052.3000000,20.2000000,0.0000000,0.0000000,85.9900000); //object(subwaygate) (5)
	CreateDynamicObject(971,269.0000000,2043.5000000,20.2000000,0.0000000,0.0000000,87.9850000); //object(subwaygate) (6)
	CreateDynamicObject(971,283.3999900,2042.5000000,24.2000000,90.0000000,0.0000000,87.9790000); //object(subwaygate) (8)
	CreateDynamicObject(971,283.7000100,2051.0000000,24.2000000,90.0000000,0.0000000,87.9790000); //object(subwaygate) (10)
	CreateDynamicObject(971,276.7000100,2051.3999000,24.2000000,90.0000000,0.0000000,87.9790000); //object(subwaygate) (11)
	CreateDynamicObject(971,276.3999900,2042.6000000,24.2000000,90.0000000,0.0000000,87.9790000); //object(subwaygate) (12)
	CreateDynamicObject(971,272.2000100,2043.4000000,24.2000000,90.0000000,0.0000000,87.9790000); //object(subwaygate) (13)
	CreateDynamicObject(971,272.5000000,2051.8000000,24.2000000,90.0000000,0.0000000,87.9790000); //object(subwaygate) (14)
	CreateDynamicObject(971,281.8999900,2038.6000000,20.2000000,0.0000000,0.0000000,359.9900000); //object(subwaygate) (15)
	CreateDynamicObject(971,273.1000100,2038.6000000,20.2000000,0.0000000,0.0000000,359.9890000); //object(subwaygate) (16)
//==============================[prefeitura nova]================================================
	CreateDynamicObject(970, 1453.10, -1742.30, 13.10,   0.00, 0.00, 0.00);
    CreateDynamicObject(970, 1457.40, -1742.30, 13.10,   0.00, 0.00, 0.00);
    CreateDynamicObject(970, 1461.60, -1742.30, 13.10,   0.00, 0.00, 0.00);
    CreateDynamicObject(970, 1465.70, -1742.30, 13.10,   0.00, 0.00, 0.00);
    CreateDynamicObject(970, 1500.50, -1742.30, 13.10,   0.00, 0.00, 0.00);
    CreateDynamicObject(970, 1504.70, -1742.30, 13.10,   0.00, 0.00, 0.00);
    CreateDynamicObject(970, 1508.80, -1742.30, 13.10,   0.00, 0.00, 0.00);
    CreateDynamicObject(640, 1454.40, -1742.70, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(640, 1459.70, -1742.70, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(640, 1465.00, -1742.70, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(640, 1501.20, -1742.70, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(640, 1506.50, -1742.70, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(640, 1508.10, -1742.70, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(970, 1451.10, -1744.30, 13.10,   0.00, 0.00, 90.00);
    CreateDynamicObject(970, 1510.80, -1744.40, 13.10,   0.00, 0.00, 90.00);
    CreateDynamicObject(1256, 1451.50, -1744.50, 13.20,   0.00, 0.00, 180.00);
    CreateDynamicObject(1256, 1510.40, -1744.50, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(640, 1453.81, -1742.70, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(1216, 1412.50, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1411.00, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1410.04, -1753.50, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(1216, 1410.04, -1755.00, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(1216, 1547.90, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1546.20, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1548.80, -1753.30, 13.20,   0.00, 0.00, 270.00);
    CreateDynamicObject(1216, 1548.80, -1755.00, 13.20,   0.00, 0.00, 270.00);
    CreateDynamicObject(1223, 1409.70, -1752.30, 12.00,   0.00, 0.00, 315.00);
    CreateDynamicObject(1223, 1549.20, -1752.40, 12.00,   0.00, 0.00, 215.00);
    CreateDynamicObject(10377, 1481.30, -1837.79, 30.78,   0.00, 0.00, 90.00);
    CreateDynamicObject(10378, 1480.66, -1783.71, 12.60,   0.00, 0.00, 0.00);
    CreateDynamicObject(10381, 1527.01, -1784.56, 23.19,   0.00, 0.00, 0.00);
    CreateDynamicObject(10381, 1434.12, -1784.56, 23.19,   0.00, 0.00, 180.00);
    CreateDynamicObject(3511, 1469.06, -1754.55, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1449.16, -1754.53, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1449.44, -1765.93, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1468.93, -1766.27, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1468.94, -1800.66, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1449.31, -1800.47, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1469.08, -1811.83, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1448.84, -1812.41, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1492.43, -1800.93, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1512.06, -1800.38, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1512.73, -1812.37, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1492.17, -1812.02, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1492.30, -1766.59, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1492.26, -1754.36, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1512.23, -1754.59, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1511.82, -1766.17, 12.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1485.06, -1758.70, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1475.55, -1758.70, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1485.06, -1768.12, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1475.55, -1768.12, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1451.24, -1777.09, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1467.36, -1777.09, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1467.36, -1791.74, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1451.24, -1791.74, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1495.48, -1777.09, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1510.09, -1777.09, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1495.48, -1791.74, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1510.09, -1791.74, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1475.55, -1802.61, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(1232, 1485.06, -1802.61, 15.03,   0.00, 0.00, 0.00);
    CreateDynamicObject(7091, 1481.27, -1819.44, 35.48,   0.00, 0.00, 90.00);
//=== rampa de acesso shuashahsu
	//CreateDynamicObject(974, 1484.4260, -1778.6449, 14.2690,   90.00, 0.00, 0.00);
 //==================================Botões
    CreateDynamicObject(2922,324.60000610,-1491.09997559,25.19999962,0.00000000,0.00000000,148.00000000); //object(kmb_keypad) (1)
    CreateDynamicObject(2922,318.60000610,-1485.50000000,25.10000000,0.00000000,0.00000000,240.00000000); //object(kmb_keypad) (2)
    CreateDynamicObject(2922,279.89999390,-1540.09997559,25.10000076,0.00000000,0.00000000,324.00000000); //object(kmb_keypad) (3)
    CreateDynamicObject(2922,285.79998779,-1545.69995117,25.10000038,0.00000000,0.00000000,62.00000000); //object(kmb_keypad) (4)
    CreateDynamicObject(2922,244.89999390,72.09999847,1004.00000000,0.00000000,0.00000000,180.00000000); //object(kmb_keypad) (5)
    CreateDynamicObject(2922,247.80000305,77.50000000,1004.20001221,0.00000000,0.00000000,90.00000000); //object(kmb_keypad) (6)
    CreateDynamicObject(2922,248.39999390,74.19999695,1003.79998779,0.00000000,0.00000000,268.00000000); //object(kmb_keypad) (7)
    CreateDynamicObject(2922,250.39999390,64.90000153,1004.29998779,0.00000000,0.00000000,90.00000000); //object(kmb_keypad) (8)
    CreateDynamicObject(2922,250.89999390,64.80000305,1004.09997559,0.00000000,0.00000000,270.00000000); //object(kmb_keypad) (9)
	CreateDynamicObject(2922,942.29272461,-1013.35662842,32.84934464,0.00000000,0.00000000,88.00000000); //object(kmb_keypad) (1)
	CreateDynamicObject(2922,924.93914795,-1211.26379395,17.23597092,0.00000000,0.00000000,276.00000000); //object(kmb_keypad) (2)
// dp2
    CreateDynamicObject(983,1546.30004883,-1617.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (1)
    CreateDynamicObject(983,1543.00000000,-1617.69995117,16.60000038,0.00000000,0.00000000,90.00000000); //object(fenceshit3) (2)
    CreateDynamicObject(983,1539.69995117,-1614.50000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (3)
    CreateDynamicObject(983,1539.69995117,-1608.00000000,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (4)
    CreateDynamicObject(983,1542.90002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (5)
    CreateDynamicObject(983,1539.80004883,-1605.69995117,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (6)
    CreateDynamicObject(983,1549.40002441,-1602.30004883,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (7)
    CreateDynamicObject(983,1555.90002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (8)
    CreateDynamicObject(983,1562.40002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (9)
    CreateDynamicObject(983,1568.90002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (10)
    CreateDynamicObject(983,1575.40002441,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (11)
    CreateDynamicObject(983,1581.59997559,-1602.50000000,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (12)
    CreateDynamicObject(983,1588.09997559,-1602.50000000,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (13)
    CreateDynamicObject(983,1594.59997559,-1602.50000000,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (14)
    CreateDynamicObject(983,1601.09997559,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (15)
    CreateDynamicObject(983,1604.80004883,-1602.40002441,16.60000038,0.00000000,0.00000000,270.00000000); //object(fenceshit3) (16)
    CreateDynamicObject(983,1608.00000000,-1605.69995117,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (17)
    CreateDynamicObject(983,1608.00000000,-1612.09997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (18)
    CreateDynamicObject(983,1608.00000000,-1618.59997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (19)
    CreateDynamicObject(983,1608.00000000,-1625.09997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (20)
    CreateDynamicObject(983,1608.00000000,-1631.59997559,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (21)
    CreateDynamicObject(983,1608.00000000,-1634.90002441,16.60000038,0.00000000,0.00000000,0.00000000); //object(fenceshit3) (22)
    CreateDynamicObject(983,1604.69995117,-1638.09997559,16.60000038,0.00000000,0.00000000,268.00000000); //object(fenceshit3) (23)
    CreateDynamicObject(3934,1568.69995117,-1646.40002441,27.39999962,0.00000000,0.00000000,270.00000000); //object(helipad01) (2)
    CreateDynamicObject(3934,1555.80004883,-1641.90002441,27.39999962,0.00000000,0.00000000,270.00000000); //object(helipad01) (3)
    CreateDynamicObject(3055, 1665.00000, -1320.40002, 18.40000,   0.00000, 0.00000, 270.00000);

    //AmigodosAmigos
    CreateDynamicObject(3055, 1620.30005, -1367.80005, 19.00000,   0.00000, 0.00000, 268.69601);
    CreateDynamicObject(3055, 1661.00000, -1316.50000, 18.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3055, 1620.50000, -1360.00000, 19.00000,   0.00000, 0.00000, 268.69299);
    CreateDynamicObject(3055, 1620.69995, -1352.19995, 19.00000,   0.00000, 0.00000, 268.69299);
    CreateDynamicObject(3055, 1621.00000, -1344.50000, 19.00000,   0.00000, 0.00000, 267.65701);
    CreateDynamicObject(3749, 1625.59998, -1326.19995, 22.30000,   0.00000, 0.00000, 244.29601);
    CreateDynamicObject(3055, 1621.40002, -1337.59998, 19.00000,   0.00000, 0.00000, 267.65399);
    CreateDynamicObject(3055, 1664.80005, -1327.90002, 18.40000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(3055, 1645.69995, -1316.59998, 18.40000,   0.00000, 0.00000, 180.02299);
    CreateDynamicObject(3055, 1653.40002, -1316.59998, 18.40000,   0.00000, 0.00000, 179.72301);
    CreateDynamicObject(3055, 1641.69922, -1316.59961, 18.40000,   0.00000, 0.00000, 180.02200);
    CreateDynamicObject(3055, 1639.40002, -1316.59998, 18.40000,   0.00000, 0.00000, 180.02200);
    CreateDynamicObject(3055, 1631.80005, -1317.50000, 18.40000,   0.00000, 0.00000, 194.02200);
    CreateDynamicObject(3055, 1683.59998, -1359.19995, 18.60000,   0.00000, 0.00000, 91.82800);
    CreateDynamicObject(3055, 1683.89941, -1367.00000, 18.60000,   0.00000, 0.00000, 92.70800);
    CreateDynamicObject(3055, 1682.90002, -1367.59998, 23.20000,   330.40500, 359.75699, 91.99700);
    CreateDynamicObject(3115, 1673.19995, -1364.30005, 16.20000,   0.00000, 0.00000, 1.42600);
    CreateDynamicObject(3095, 1670.09961, -1355.39941, 17.40000,   89.83200, 180.00000, 180.00000);
    CreateDynamicObject(3095, 1679.09998, -1355.40002, 20.90000,   89.83000, 179.99500, 179.99500);
    CreateDynamicObject(3095, 1666.80005, -1355.50000, 18.40000,   89.83000, 179.99500, 179.99500);
    CreateDynamicObject(9241, 1671.19995, -1343.30005, 158.20000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1709, 1670.50000, -1359.59961, 16.50000,   0.00000, 0.00000, 179.99500);
    CreateDynamicObject(3055, 1678.69995, -1367.80005, 25.70000,   90.00000, 180.40300, 272.30499);
    CreateDynamicObject(3055, 1682.50000, -1359.90002, 23.20000,   330.40302, 359.75299, 91.99400);
    CreateDynamicObject(3055, 1678.30005, -1360.00000, 25.70000,   90.00000, 179.60500, 273.09299);
    CreateDynamicObject(3055, 1674.09961, -1368.00000, 25.70000,   90.00000, 180.39000, 272.30200);
    CreateDynamicObject(3003, 1679.09998, -1366.30005, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3003, 1679.09998, -1366.19995, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3003, 1679.09998, -1366.50000, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3003, 1679.09998, -1366.59998, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3003, 1679.09998, -1366.40002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3003, 1678.90002, -1366.40002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3003, 1678.69995, -1366.40002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3003, 1678.80005, -1366.40002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3003, 1679.00000, -1366.40002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3003, 1678.59998, -1366.40002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1679.09998, -1365.59998, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1679.00000, -1365.59998, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1678.90002, -1365.59998, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1678.80005, -1365.59998, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1678.69995, -1365.59998, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1678.59998, -1365.59998, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1679.09998, -1365.69995, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1679.09998, -1365.80005, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1679.09998, -1365.90002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1678.90002, -1365.69995, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3001, 1678.90002, -1365.80005, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1678.59998, -1366.90002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1678.69995, -1366.90002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1678.80005, -1366.90002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1678.90002, -1366.90002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1679.00000, -1366.90002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1679.09998, -1366.90002, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1678.59998, -1367.00000, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1678.59998, -1367.09998, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1678.69995, -1367.19995, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1678.80005, -1367.19995, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1678.90002, -1367.19995, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1679.00000, -1367.19995, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1679.09998, -1367.09998, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3101, 1679.09998, -1367.00000, 17.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(18032, 1676.30005, -1356.09998, 17.90000,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(338, 1678.40002, -1367.00000, 17.40000,   0.00000, 270.05600, 267.69199);
    CreateDynamicObject(338, 1679.30005, -1366.80005, 17.40000,   0.00000, 270.79599, 267.39099);
    CreateDynamicObject(1586, 1683.50000, -1356.80005, 16.60000,   0.00000, 0.00000, 271.75000);
    CreateDynamicObject(1585, 1683.59998, -1358.50000, 16.60000,   0.00000, 0.00000, 274.00000);
    CreateDynamicObject(1584, 1683.59998, -1360.50000, 16.60000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(14651, 1679.50000, -1366.90002, 18.60000,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(18092, 1678.09998, -1358.40002, 17.10000,   0.00000, 0.00000, 270.00000);
    CreateDynamicObject(348, 1678.30005, -1357.90002, 17.70000,   272.00500, 179.99500, 131.99800);
    CreateDynamicObject(349, 1678.09998, -1357.09998, 17.70000,   281.29501, 45.28000, 354.72000);
    CreateDynamicObject(349, 1678.00000, -1358.40002, 17.70000,   281.29401, 45.27500, 354.71600);
    CreateDynamicObject(348, 1678.19995, -1356.50000, 17.70000,   272.00500, 179.99500, 131.99500);
    CreateDynamicObject(349, 1677.69995, -1360.09998, 17.70000,   281.29401, 45.27500, 354.71600);
    CreateDynamicObject(348, 1678.30005, -1359.59998, 17.70000,   272.00500, 179.99500, 131.99500);
    CreateDynamicObject(3055, 1669.50000, -1371.00000, 25.70000,   90.00000, 179.60500, 273.08200);
    CreateDynamicObject(3055, 1669.09998, -1363.19995, 25.70000,   90.00000, 180.38499, 272.29099);
    CreateDynamicObject(3055, 1673.90002, -1363.80005, 25.80000,   90.00000, 180.39600, 272.30200);
    CreateDynamicObject(3055, 1662.69922, -1371.50000, 23.50000,   0.08600, 180.09900, 92.77300);
    CreateDynamicObject(2332, 1662.80005, -1355.80005, 16.90000,   0.00000, 0.00000, 0.43900);
    CreateDynamicObject(2296, 1666.59998, -1356.30005, 16.60000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2231, 1666.69995, -1356.00000, 17.10000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2231, 1666.69995, -1356.00000, 18.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2231, 1669.00000, -1356.09998, 17.10000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(2231, 1669.00000, -1356.09998, 18.00000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1557, 1623.30005, -1370.90002, 16.40000,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1557, 1620.30005, -1370.90002, 16.40000,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(3055, 1664.90002, -1371.40002, 25.50000,   90.00000, 179.61000, 273.07101);
    CreateDynamicObject(3055, 1664.69995, -1363.59998, 25.50000,   90.00000, 180.39000, 272.29099);
    CreateDynamicObject(3055, 1662.40002, -1365.30005, 23.50000,   359.34601, 180.09900, 92.77400);
    CreateDynamicObject(3055, 1662.30005, -1357.50000, 23.50000,   359.34601, 180.09900, 88.77400);
    CreateDynamicObject(3055, 1662.30005, -1357.50000, 18.50000,   359.34601, 180.09900, 88.77000);
    CreateDynamicObject(3055, 1662.40002, -1365.30005, 18.50000,   359.35101, 180.10400, 92.77600);
    CreateDynamicObject(1523, 1662.59998, -1369.19995, 16.40000,   0.00000, 0.00000, 272.36801);
    CreateDynamicObject(3055, 1662.80005, -1374.59998, 18.50000,   359.34601, 180.09900, 92.77400);
    CreateDynamicObject(3095, 1678.50000, -1371.40002, 19.40000,   89.83000, 179.99500, 359.99500);
    CreateDynamicObject(3095, 1669.50000, -1371.40002, 19.40000,   89.83000, 179.99500, 0.13700);
    CreateDynamicObject(3095, 1667.40002, -1371.40002, 19.50000,   89.98000, 179.95799, 0.16800);
    CreateDynamicObject(3859, 1662.69995, -1371.69995, 21.70000,   0.00000, 0.00000, 197.77499);
    CreateDynamicObject(9131, 1625.30005, -1321.80005, 23.20000,   1.12200, 1.62800, 341.37100);
    CreateDynamicObject(9131, 1625.00000, -1322.50000, 24.30000,   271.22400, 74.89600, 57.06100);
    CreateDynamicObject(9131, 1625.50000, -1321.59998, 23.30000,   273.54099, 285.57599, 252.73801);
    CreateDynamicObject(9131, 1623.90002, -1324.69995, 23.20000,   1.12100, 1.62600, 340.47900);
    CreateDynamicObject(9131, 1623.80005, -1324.80005, 24.40000,   360.00000, 269.99200, 64.42300);
    CreateDynamicObject(9131, 1622.59998, -1327.19995, 23.50000,   1.12100, 1.62000, 340.47699);
    CreateDynamicObject(9131, 1622.30005, -1328.00000, 24.50000,   0.70500, 51.05900, 55.28500);
    CreateDynamicObject(9131, 1622.30005, -1328.00000, 22.80000,   0.09200, 114.43800, 55.02400);
    CreateDynamicObject(19353, 1672.73474, -1370.66455, 18.29240,   0.00000, 1.00000, 270.00000);
//==============================[igreja]==============================================//
    CreateDynamicObject(9931,-1077.09960938,730.19921875,644.50000000,0.00000000,0.00000000,0.00000000); //object(church_sfe) (1)
    CreateDynamicObject(9931,-1077.09960938,697.09960938,644.50000000,0.00000000,0.00000000,0.00000000); //object(church_sfe) (2)
    CreateDynamicObject(10865,-1064.79980469,716.89941406,629.00000000,0.00000000,0.00000000,1.03820801); //object(bigjunct_09_sfse) (1)
    CreateDynamicObject(9931,-1037.19921875,713.59960938,644.70001221,0.00000000,0.00000000,179.99450684); //object(church_sfe) (3)
    CreateDynamicObject(6101,-1028.89941406,713.19921875,628.59997559,0.00000000,0.00000000,179.99450684); //object(gaz2_law) (1)
    CreateDynamicObject(4817,-1087.79980469,710.69921875,629.20001221,0.00000000,0.00000000,270.00000000); //object(trntrk7_las) (3)
    CreateDynamicObject(7488,-1062.19921875,703.89941406,602.20001221,270.00000000,179.30236816,179.30236816); //object(vgncarpark1) (1)
    CreateDynamicObject(1696,-1064.89941406,706.50000000,639.50000000,53.99780273,179.99450684,0.00000000); //object(roofstuff15) (2)
    CreateDynamicObject(1696,-1064.89941406,711.19921875,642.79998779,53.99780273,179.99450684,0.00000000); //object(roofstuff15) (3)
    CreateDynamicObject(1696,-1065.59960938,720.89941406,639.70001221,53.99780273,179.99450684,179.99450684); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1065.59997559,716.09997559,643.09997559,53.99780273,179.99450684,179.99450684); //object(roofstuff15) (5)
    CreateDynamicObject(1696,-1070.29980469,706.29980469,639.40002441,53.99780273,179.99450684,1.99951172); //object(roofstuff15) (6)
    CreateDynamicObject(1696,-1070.30004883,711.09997559,642.79998779,53.99780273,179.99450684,1.99951172); //object(roofstuff15) (7)
    CreateDynamicObject(1696,-1075.69995117,706.20001221,639.40002441,53.99780273,179.99450684,1.99951172); //object(roofstuff15) (8)
    CreateDynamicObject(1696,-1075.59960938,710.89941406,642.79998779,53.99780273,179.99450684,1.99951172); //object(roofstuff15) (9)
    CreateDynamicObject(1696,-1080.89941406,706.00000000,639.40002441,53.99780273,179.99450684,1.99951172); //object(roofstuff15) (10)
    CreateDynamicObject(1696,-1081.00000000,710.70001221,642.79998779,53.99780273,179.99450684,1.99951172); //object(roofstuff15) (11)
    CreateDynamicObject(1696,-1071.00000000,720.90002441,639.70001221,53.99780273,179.99450684,179.99450684); //object(roofstuff15) (12)
    CreateDynamicObject(1696,-1071.00000000,716.09997559,643.09997559,53.99780273,179.99450684,179.99450684); //object(roofstuff15) (13)
    CreateDynamicObject(1696,-1076.30004883,720.90002441,639.70001221,53.99780273,179.99450684,179.99450684); //object(roofstuff15) (14)
    CreateDynamicObject(1696,-1076.29980469,716.09960938,643.09997559,53.99780273,179.99450684,179.99450684); //object(roofstuff15) (15)
    CreateDynamicObject(1696,-1081.09960938,720.89941406,639.70001221,53.99780273,179.99450684,179.99450684); //object(roofstuff15) (16)
    CreateDynamicObject(1696,-1081.09997559,716.09997559,643.09997559,53.99780273,179.99450684,179.99450684); //object(roofstuff15) (17)
    CreateDynamicObject(7488,-1122.30004883,707.90002441,630.00000000,0.28817749,1.99993896,0.70159912); //object(vgncarpark1) (1)
    CreateDynamicObject(1696,-1082.19995117,720.90002441,639.70001221,53.99780273,179.99450684,179.99450684); //object(roofstuff15) (16)
    CreateDynamicObject(1696,-1084.30004883,716.09997559,643.09997559,53.99780273,179.99450684,179.99450684); //object(roofstuff15) (16)
    CreateDynamicObject(1696,-1083.50000000,705.90002441,639.40002441,53.99780273,179.99450684,1.99951172); //object(roofstuff15) (10)
    CreateDynamicObject(1696,-1083.80004883,710.59997559,642.79998779,53.99780273,179.99450684,1.99951172); //object(roofstuff15) (10)
    CreateDynamicObject(4817,-1129.79980469,718.29980469,645.09997559,357.99499512,179.99450684,179.99450684); //object(trntrk7_las) (3)
    CreateDynamicObject(1696,-1062.59997559,721.20001221,641.20001221,72.00000000,0.00000000,269.99023438); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1062.69995117,716.20001221,642.00000000,71.99890137,0.00000000,269.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1062.69995117,716.09997559,641.20001221,71.99890137,0.00000000,269.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1062.69995117,712.20001221,641.20001221,71.99890137,0.00000000,269.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1062.69995117,707.29998779,641.20001221,71.99890137,0.00000000,269.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1060.40002441,720.09997559,636.70001221,20.00000000,180.00000000,89.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1062.80004883,721.00000000,640.09997559,71.99890137,0.00000000,269.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1060.40002441,714.59997559,636.70001221,19.99511719,179.99450684,89.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1060.40002441,709.40002441,636.70001221,19.99511719,179.99450684,89.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1060.40002441,706.79998779,636.70001221,19.99511719,179.99450684,89.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1062.80004883,715.59997559,640.09997559,71.99890137,0.00000000,269.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1062.80004883,710.40002441,640.09997559,71.99890137,0.00000000,269.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(1696,-1062.80004883,707.50000000,640.20001221,71.99890137,0.00000000,269.98901367); //object(roofstuff15) (4)
    CreateDynamicObject(16410,-1081.90002441,717.00000000,629.20001221,0.00000000,0.00000000,0.00000000); //object(desn2_graves) (1)
    CreateDynamicObject(2896,-1080.30004883,720.20001221,630.09997559,0.00000000,0.00000000,0.00000000); //object(casket_law) (1)
    CreateDynamicObject(1337,-1082.30004883,720.09997559,630.20001221,0.00000000,0.00000000,0.00000000); //object(3)
    CreateDynamicObject(1337,-1080.00000000,722.09997559,630.20001221,0.00000000,182.00000000,278.00000000); //object(5)
    CreateDynamicObject(2208,-1079.40002441,714.79998779,629.40002441,0.00000000,0.00000000,270.00000000); //object(med_office7_unit_1) (1)
    CreateDynamicObject(14629,-1067.19995117,721.20001221,638.50000000,0.00000000,0.00000000,0.00000000); //object(mafcas_chande) (1)
    CreateDynamicObject(2894,-1079.50000000,713.59997559,630.29998779,0.00000000,0.00000000,270.00000000); //object(kmb_rhymesbook) (1)
    CreateDynamicObject(16780,-1069.40002441,713.50000000,644.20001221,0.00000000,0.00000000,0.00000000); //object(ufo_light03) (1)
    CreateDynamicObject(16780,-1076.30004883,713.50000000,644.29998779,0.00000000,0.00000000,0.00000000); //object(ufo_light03) (2)
    CreateDynamicObject(2868,-1079.30004883,714.50000000,630.29998779,0.00000000,0.00000000,0.00000000); //object(gb_ornament03) (1)
    CreateDynamicObject(2869,-1079.30004883,712.40002441,629.50000000,0.00000000,0.00000000,8.00000000); //object(gb_ornament04) (1)
    CreateDynamicObject(14705,-1079.59997559,712.79998779,630.50000000,0.00000000,0.00000000,0.00000000); //object(int2vase) (1)
    CreateDynamicObject(1714,-1081.50000000,713.59997559,629.40002441,0.00000000,0.00000000,88.00000000); //object(kb_swivelchair1) (1)
    CreateDynamicObject(3657,-1065.00000000,708.00000000,628.50000000,0.00000000,0.00000000,269.99450684); //object(airseata_las) (1)
    CreateDynamicObject(3657,-1067.30004883,708.00000000,628.50000000,0.00000000,0.00000000,269.98901367); //object(airseata_las) (2)
    CreateDynamicObject(3657,-1069.59997559,708.00000000,628.50000000,0.00000000,0.00000000,269.98901367); //object(airseata_las) (3)
    CreateDynamicObject(3657,-1071.59997559,708.00000000,628.50000000,0.00000000,0.00000000,269.98901367); //object(airseata_las) (4)
    CreateDynamicObject(3657,-1073.90002441,708.00000000,628.50000000,0.00000000,0.00000000,269.98901367); //object(airseata_las) (5)
    CreateDynamicObject(3657,-1073.90002441,718.90002441,628.50000000,0.00000000,0.00000000,269.98901367); //object(airseata_las) (6)
    CreateDynamicObject(3657,-1064.90002441,718.90002441,628.50000000,0.00000000,0.00000000,269.98901367); //object(airseata_las) (10)
    CreateDynamicObject(3657,-1067.30004883,718.90002441,628.50000000,0.00000000,0.00000000,269.98901367); //object(airseata_las) (11)
    CreateDynamicObject(3657,-1069.59997559,718.90002441,628.50000000,0.00000000,0.00000000,269.98901367); //object(airseata_las) (12)
    CreateDynamicObject(3657,-1071.59997559,718.90002441,628.50000000,0.00000000,0.00000000,269.98901367); //object(airseata_las) (13)
    CreateDynamicObject(2773,-1064.09997559,716.09997559,628.59997559,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (1)
    CreateDynamicObject(2773,-1066.59997559,716.09997559,628.59997559,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (1)
    CreateDynamicObject(2773,-1071.40002441,716.20001221,628.59997559,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (1)
    CreateDynamicObject(2773,-1073.90002441,716.20001221,628.59997559,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (1)
    CreateDynamicObject(2773,-1064.09997559,710.79998779,628.59997559,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (1)
    CreateDynamicObject(2773,-1066.50000000,710.79998779,628.59997559,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (1)
    CreateDynamicObject(2773,-1071.19995117,710.79998779,628.59997559,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (1)
    CreateDynamicObject(2773,-1073.59997559,710.79998779,628.59997559,0.00000000,0.00000000,270.00000000); //object(cj_airprt_bar) (1)
    //• HQ da yStiflerS
    CreateDynamicObject(3749,2438.1999512,-1549.8000488,28.7999992,0.0000000,0.0000000,90.0000000); //object(clubgate01_lax) (2)
    CreateDynamicObject(3475,2441.3999023,-1561.5999756,27.6000004,0.0000000,0.0000000,32.5000305); //object(vgsn_fncelec_pst) (1)
    CreateDynamicObject(3475,2445.8000488,-1564.0999756,27.6000004,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (2)
    CreateDynamicObject(3475,2451.8000488,-1564.0999756,27.6000004,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (3)
    CreateDynamicObject(3475,2457.8000488,-1564.0999756,27.6000004,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (4)
    CreateDynamicObject(3475,2463.8000488,-1564.0999756,27.6000004,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (5)
    CreateDynamicObject(3475,2469.8000488,-1564.0999756,27.6000004,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (6)
    CreateDynamicObject(3475,2475.8000488,-1564.0999756,27.6000004,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (7)
    CreateDynamicObject(3475,2481.8000488,-1564.0999756,27.6000004,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (8)
    CreateDynamicObject(3475,2487.8000488,-1564.0999756,27.6000004,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (9)
    CreateDynamicObject(3475,2493.6999512,-1564.0000000,27.6000004,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (10)
    CreateDynamicObject(3475,2496.6000977,-1561.1999512,27.5000000,0.0000000,0.0000000,180.0000000); //object(vgsn_fncelec_pst) (11)
    CreateDynamicObject(3475,2496.6999512,-1555.1999512,27.5000000,0.0000000,0.0000000,179.9945068); //object(vgsn_fncelec_pst) (12)
    CreateDynamicObject(3475,2496.8000488,-1549.1999512,27.5000000,0.0000000,0.0000000,179.9945068); //object(vgsn_fncelec_pst) (13)
    CreateDynamicObject(3475,2496.8999023,-1543.1999512,27.5000000,0.0000000,0.0000000,179.9945068); //object(vgsn_fncelec_pst) (14)
    CreateDynamicObject(3475,2496.8999023,-1537.3000488,27.5000000,0.0000000,0.0000000,179.9945068); //object(vgsn_fncelec_pst) (15)
    CreateDynamicObject(3475,2496.8999023,-1531.3000488,27.5000000,0.0000000,0.0000000,179.9945068); //object(vgsn_fncelec_pst) (16)
    CreateDynamicObject(3475,2496.8999023,-1525.4000244,27.5000000,0.0000000,0.0000000,179.9945068); //object(vgsn_fncelec_pst) (17)
    CreateDynamicObject(3475,2496.8999023,-1519.4000244,27.5000000,0.0000000,0.0000000,179.9945068); //object(vgsn_fncelec_pst) (18)
    CreateDynamicObject(3475,2496.8999023,-1517.1999512,27.5000000,0.0000000,0.0000000,179.9945068); //object(vgsn_fncelec_pst) (19)
    CreateDynamicObject(3475,2494.1000977,-1514.6999512,27.2000008,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (20)
    CreateDynamicObject(3475,2488.1000977,-1514.6999512,27.2000008,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (21)
    CreateDynamicObject(3475,2482.1000977,-1514.6999512,25.3999996,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (22)
    CreateDynamicObject(3475,2476.1000977,-1514.6999512,25.3999996,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (23)
    CreateDynamicObject(3475,2473.1000977,-1514.6999512,25.3999996,0.0000000,0.0000000,270.0000000); //object(vgsn_fncelec_pst) (24)
    CreateDynamicObject(8613,2470.3999023,-1526.5999756,27.3999996,0.0000000,0.0000000,178.5000000); //object(vgssstairs03_lvs) (1)
    CreateDynamicObject(3475,2442.0000000,-1540.6999512,24.2000008,0.0000000,0.0000000,90.0000000); //object(vgsn_fncelec_pst) (25)
    CreateDynamicObject(3475,2441.3999023,-1561.5999756,25.3999996,0.0000000,0.0000000,32.5000305); //object(vgsn_fncelec_pst) (26)
    PortaoyStiflerS = CreateDynamicObject(980,2436.8000488,-1549.8000488,25.7000008,0.0000000,0.0000000,90.0000000); //object(airportgate) (1)
//•.•.•.••.•.•.• [Spawn Civil] •.•.•.•=====
	CreateObject(3851,1576.9000000,-1883.2002000,15.8000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (2)
    CreateDynamicObject(3851,1559.1000000,-1883.2002000,15.8000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (3)
    CreateDynamicObject(3851,1559.1000000,-1883.2002000,23.8000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (4)
    CreateDynamicObject(3851,1559.0996000,-1883.2002000,19.8000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (5)
    CreateDynamicObject(3851,1576.9000000,-1883.2002000,19.8000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (6)
    CreateDynamicObject(3851,1576.9000000,-1883.2002000,23.8000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (8)
    CreateDynamicObject(1491,1568.1000000,-1883.3000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(gen_doorint01) (1)
    CreateDynamicObject(1491,1568.1000000,-1883.3000000,12.6000000,0.0000000,0.0000000,180.0000000); //object(gen_doorint01) (2)
    CreateDynamicObject(3851,1560.9000000,-1883.4000000,14.6000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (9)
    CreateDynamicObject(3851,1575.2000000,-1883.4000000,18.3000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (10)
    CreateDynamicObject(3851,1575.2002000,-1883.4004000,14.6000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (11)
    CreateDynamicObject(3851,1575.2000000,-1883.4000000,22.2000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (12)
    CreateDynamicObject(3851,1570.9000000,-1883.2000000,21.9834200,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (13)
    CreateDynamicObject(3851,1573.9000000,-1883.4000000,23.9000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (14)
    CreateDynamicObject(3851,1568.4000000,-1883.2002000,21.0000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (15)
    CreateDynamicObject(3851,1568.4000000,-1883.2002000,17.1000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (16)
    CreateDynamicObject(3851,1568.4000200,-1883.2002000,23.7000000,0.0000000,0.0000000,270.0000000); //object(carshowwin_sfsx) (17)
    CreateDynamicObject(618,1556.4000000,-1878.5000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(veg_treea3) (3)
    CreateDynamicObject(618,1579.8000000,-1878.1000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(veg_treea3) (5)
    CreateDynamicObject(2811,1559.3000000,-1897.0000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (1)
    CreateDynamicObject(2811,1559.3000000,-1893.2000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (2)
    CreateDynamicObject(2811,1559.2998000,-1894.9004000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (3)
    CreateDynamicObject(2811,1559.5000000,-1891.3000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (4)
    CreateDynamicObject(2811,1559.5000000,-1889.4000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (5)
    CreateDynamicObject(2811,1559.4000000,-1887.4000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (6)
    CreateDynamicObject(2811,1559.5000000,-1885.5000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (7)
    CreateDynamicObject(2811,1576.5000000,-1896.1000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (8)
    CreateDynamicObject(2811,1576.4004000,-1897.7002000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (9)
    CreateDynamicObject(2811,1576.6000000,-1891.4000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (10)
    CreateDynamicObject(2811,1576.5000000,-1894.4004000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (11)
    CreateDynamicObject(2811,1576.5996000,-1892.9004000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (12)
    CreateDynamicObject(2811,1576.6000000,-1889.8000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (13)
    CreateDynamicObject(2811,1576.6000000,-1888.3000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (14)
    CreateDynamicObject(2811,1576.8000000,-1886.7000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (15)
    CreateDynamicObject(2811,1576.8000000,-1884.9000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(gb_romanpot01) (16)
    CreateDynamicObject(3439,1570.5000000,-1884.7000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(aprtree01_lvs) (1)
    CreateDynamicObject(3439,1565.7000000,-1884.7000000,16.7000000,0.0000000,0.0000000,0.0000000); //object(aprtree01_lvs) (2)
    CreateDynamicObject(3055,1573.9000000,-1885.2000000,26.0000000,90.0000000,0.0000000,0.0000000); //object(kmb_shutter) (3)
    CreateDynamicObject(3055,1573.8000000,-1890.2000000,26.0000000,90.0000000,0.0000000,0.0000000); //object(kmb_shutter) (4)
    CreateDynamicObject(3055,1573.7000000,-1895.2000000,26.0000000,90.0000000,0.0000000,0.0000000); //object(kmb_shutter) (5)
    CreateDynamicObject(3055,1566.2000000,-1895.2000000,26.0000000,90.0000000,0.0000000,0.0000000); //object(kmb_shutter) (6)
    CreateDynamicObject(3055,1558.4000000,-1895.2000000,26.0000000,90.0000000,0.0000000,0.0000000); //object(kmb_shutter) (7)
    CreateDynamicObject(3055,1559.2000000,-1890.2000000,26.0000000,90.0000000,0.0000000,0.0000000); //object(kmb_shutter) (8)
    CreateDynamicObject(3055,1566.7000000,-1890.2000000,26.0000000,90.0000000,0.0000000,0.0000000); //object(kmb_shutter) (9)
    CreateDynamicObject(3055,1566.5000000,-1885.2000000,26.0000000,90.0000000,0.0000000,0.0000000); //object(kmb_shutter) (10)
    CreateDynamicObject(3055,1558.7000000,-1885.2000000,26.0000000,90.0000000,0.0000000,0.0000000); //object(kmb_shutter) (11)
    CreateDynamicObject(1215,1565.7000000,-1882.6000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (1)
    CreateDynamicObject(1215,1570.4004000,-1882.7002000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
    CreateDynamicObject(1215,1573.1000000,-1877.7000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (3)
    CreateDynamicObject(1215,1563.4000000,-1877.8000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (4)
    CreateDynamicObject(1215,1576.8000000,-1864.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (5)
    CreateDynamicObject(1215,1562.0996000,-1865.0000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (6)
    CreateDynamicObject(1223,1585.8000000,-1877.6000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(lampost_coast) (1)
    CreateDynamicObject(1223,1546.9004000,-1877.7998000,12.5000000,0.0000000,0.0000000,90.0000000); //object(lampost_coast) (4)
    CreateDynamicObject(979,1575.6000000,-1882.3000000,13.4000000,0.0000000,0.0000000,0.0000000); //object(sub_roadleft) (1)
    CreateDynamicObject(978,1568.1000000,-1877.2000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(sub_roadright) (1)
    CreateDynamicObject(978,1560.7002000,-1882.2002000,13.4000000,0.0000000,0.0000000,0.0000000); //object(sub_roadright) (2)
//=================================[HQ Mongols by Theus]========================================
    CreateDynamicObject(3524,945.70001221,-1099.59997559,26.20000076,0.00000000,0.00000000,96.00000000); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(3524,945.90002441,-1107.30004883,26.10000038,0.00000000,0.00000000,96.00000000); //object(skullpillar01_lvs) (2)
    CreateDynamicObject(3524,936.20001221,-1107.09997559,26.10000038,0.00000000,0.00000000,96.00000000); //object(skullpillar01_lvs) (3)
    CreateDynamicObject(3524,936.09997559,-1099.90002441,26.20000076,0.00000000,0.00000000,92.00000000); //object(skullpillar01_lvs) (4)
    CreateDynamicObject(3525,822.50000000,-1102.90002441,29.70000076,0.00000000,0.00000000,0.00000000); //object(exbrtorch01) (1)
    CreateDynamicObject(6865,932.09997559,-1071.40002441,30.00000000,0.00000000,0.00000000,316.00000000); //object(steerskull) (1)
    CreateDynamicObject(3594,8.60000038,-2663.50000000,39.90000153,0.00000000,0.00000000,268.00000000); //object(la_fuckcar1) (1)
    CreateDynamicObject(3594,6.50000000,-2632.39990234,39.70000076,0.00000000,0.00000000,274.00000000); //object(la_fuckcar1) (2)
    CreateDynamicObject(3524,17.20000076,-2648.50000000,42.40000153,0.00000000,0.00000000,272.00000000); //object(skullpillar01_lvs) (5)
//HQ PRF by Theus
    CreateDynamicObject(3934,849.29998779,-1216.80004883,16.00000000,0.00000000,0.00000000,270.00000000); //object(helipad01) (1)
    CreateDynamicObject(3934,832.79998779,-1216.69995117,16.00000000,0.00000000,0.00000000,270.00000000); //object(helipad01) (2)
	CreateDynamicObject(974,923.79998779,-1212.09997559,18.79999924,0.00000000,0.00000000,270.00000000); //object(tall_fence) (1)
	CreateDynamicObject(974,923.89941406,-1230.59960938,18.79999924,0.00000000,0.00000000,270.00000000); //object(tall_fence) (2)
// >> Apreenção de carros
    CreateDynamicObject(8313,807.9000200,-1172.0999800,26.8000000,0.0000000,0.0000000,198.0000000); //object(vgsselecfence16) (3)
    CreateDynamicObject(8210,836.0000000,-1158.5999800,28.4000000,0.0000000,0.0000000,180.0000000); //object(vgsselecfence12) (1)
    CreateDynamicObject(8210,891.2999900,-1160.3000500,28.4000000,0.0000000,0.0000000,177.9950000); //object(vgsselecfence12) (2)
    CreateDynamicObject(987,925.0000000,-1160.7998000,26.8000000,0.0000000,0.0000000,177.9950000); //object(elecfence_bar) (1)
    CreateDynamicObject(987,931.2999900,-1170.0000000,26.8000000,0.0000000,0.0000000,125.9950000); //object(elecfence_bar) (2)
    CreateDynamicObject(987,931.0999800,-1177.5999800,26.8000000,0.0000000,0.0000000,95.9910000); //object(elecfence_bar) (3)
    CreateDynamicObject(987,930.9000200,-1189.5999800,22.5000000,0.0000000,0.0000000,89.9880000); //object(elecfence_bar) (4)
    CreateDynamicObject(987,930.5996100,-1198.6992200,20.3000000,0.0000000,0.0000000,87.9790000); //object(elecfence_bar) (5)
    CreateDynamicObject(974,926.9000200,-1198.8000500,23.2000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (1)
    CreateDynamicObject(974,925.0999800,-1198.8000500,23.2000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (2)
    CreateDynamicObject(974,918.4000200,-1198.8000500,23.2000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (3)
    CreateDynamicObject(974,811.7999900,-1184.6999500,24.0000000,0.0000000,0.0000000,357.7500000); //object(tall_fence) (4)
    CreateDynamicObject(3475,816.2000100,-1185.0999800,18.4000000,0.0000000,0.0000000,268.0000000); //object(vgsn_fncelec_pst) (1)
    CreateDynamicObject(3475,812.0999800,-1184.5000000,18.4000000,0.0000000,0.0000000,87.9950000); //object(vgsn_fncelec_pst) (2)
    CreateDynamicObject(974,911.7000100,-1198.8000500,23.2000000,0.0000000,0.0000000,0.0000000); //object(tall_fence) (5)
    CreateDynamicObject(974,818.4000200,-1185.0000000,24.0000000,0.0000000,0.0000000,356.9980000); //object(tall_fence) (6)
    CreateDynamicObject(3475,846.0999800,-1192.9000200,18.4000000,0.0000000,0.0000000,87.9950000); //object(vgsn_fncelec_pst) (3)
    CreateDynamicObject(3475,851.7999900,-1193.5999800,18.4000000,0.0000000,0.0000000,267.9900000); //object(vgsn_fncelec_pst) (4)
    CreateDynamicObject(3475,887.0996100,-1192.5996100,18.4000000,0.0000000,0.0000000,267.9840000); //object(vgsn_fncelec_pst) (5)
    CreateDynamicObject(3475,881.4000200,-1191.8000500,18.4000000,0.0000000,0.0000000,85.9840000); //object(vgsn_fncelec_pst) (6)
    PortaoPRFCarros = CreateDynamicObject(971,917.4000200,-1198.8000500,19.6000000,0.0000000,0.0000000,0.0000000); //fechadooo
//Polícia Mílitar
	PDDOORa = CreateDynamicObject( 985 , 247.005905 , 72.448440 , 1003.640625 , 0.000000 , 0.000000 , 1260.000000 );
	PDDOORb = CreateDynamicObject( 985 , 250.774871 , 60.822799 , 1003.640625 , 0.000000 , 0.000000 , 5130.000000 );
	PDDOORc = CreateDynamicObject( 986 , 248.142105 , 78.125961 , 1003.640625 , 0.000000 , 0.000000 , 12690.000000 );
	PDGATE = CreateDynamicObject(971,1544.469,-1628.097,13.353,0.0,0.0,-91.100);
	gt3gate = CreateDynamicObject(971, 283.095062, -1542.899170, 25.510294, 0.0000, 0.0000, 326.2500);
	gt3gate3 = CreateDynamicObject(971, 321.832672, -1488.615112, 25.527353, 0.0000, 0.0000, 323.6717);
	//PDGARAGE = CreateDynamicObject(971, 1588.555786, -1637.811157, 15.911808, 0.0000, 0.0000, 0.0000);
	PDGARAGE = CreateDynamicObject(980,1588.195,-1637.969,15.193,0.0,0.0,0.0);
//G.T.3
	gatepf2 = CreateDynamicObject(971, 2334.757568, 2443.675537, 8.250650, 0.0000, 0.0000, 236.2500);
	gatepf3 = CreateDynamicObject(971, 2293.928467, 2499.322021, 5.825822, 0.0000, 0.0000, 90.0000);
//R.O.T.A
	portaohitman = CreateDynamicObject(980, 1025.799316, -368.267792, 75.509537, 0.0000, 0.0000, 0.0000);
    portaotriads = CreateDynamicObject(980,-379.4000, -1409.4000, 27.5000,0.0000,0.0000,0.0000);
//Policia Rodoviaria
	portaocivil = CreateDynamicObject(987,923.567382,-1227.334716,15.976562,0.000000,0.000000,90.000000);
//Policia federal
	portaopf = CreateDynamicObject(980,938.720336,-1016.002380,33.671829,0.000000,0.000000,356.000000);
//Exercito
	PDEx = CreateDynamicObject(980, -1531.3978271484, 482.25979614258, 8.9530792236328, 0, 0, 359.99975585938);
// PORTAO GOVERNO
	PortaoGov = CreateDynamicObject(980, 1539.2235107422, -1838.2176513672, 15.320266723633, 0, 0, 91.309509277344);
	PortaoPre = CreateDynamicObject(2990, 369.15893554688, 162.35037231445, 1028.6030273438, 0, 0, 270.67565917969);
// PORTOES REPÓRTER
    PortaoReporter = CreateDynamicObject(971, 777.80017089844, -1330.2664794922, 14.200000762939, 0, 0, 0);
    PortaoReporterr = CreateDynamicObject(971, 777.97308349609, -1384.7303466797, 14.299999237061, 0, 0, 0);
// Portao Rally
	PortaoRally = CreateDynamicObject(971, -2368.4670410156, -2192.6381835938, 36.037666320801, 0, 0, 292.51049804688);
// Porta X1 Monte Chiliad
	PortaoX1 = CreateDynamicObject(7891, -2321.5114746094, -1619.4454345703, 484.98388671875, 90, 0, 274.64562988281);
// Portao Taxistas
    PortaoTaxi = CreateDynamicObject(980,958.840,-1415.794,15.151,0.0,0.0,0.0);//22 objetos de portão
// Portao CL
    PortaoAmigodosAmigos = CreateDynamicObject(980,1624.6999500,-1325.6999500,19.2000000,0.0000000,0.0000000,65.2510000); //object(airportgate) (1)
//HQ YAKUZA
	pyakuza1 = CreateDynamicObject(980,664.862,-1309.311,15.234,0.0,0.0,0.0);
	pyakuza3 = CreateDynamicObject(980,785.128,-1152.442,25.430,0.0,0.0,88.522);
	CreateDynamicObject(980,659.657,-1227.171,17.185,0.0,0.0,-118.602);
	CreateDynamicObject(971,665.185,-1215.183,19.240,0.0,-0.859,54.144);
	CreateDynamicObject(987,674.915,-1309.409,13.373,0.0,0.0,0.0);
	CreateDynamicObject(987,686.904,-1309.404,13.393,0.0,0.0,0.0);
	CreateDynamicObject(987,698.796,-1309.306,13.313,0.0,0.0,0.0);
	CreateDynamicObject(987,710.760,-1309.391,13.352,0.0,0.0,0.0);
	CreateDynamicObject(987,722.756,-1309.391,13.331,0.0,0.0,0.0);
	CreateDynamicObject(987,734.752,-1309.396,13.255,0.0,0.0,0.0);
	CreateDynamicObject(987,746.734,-1309.413,13.257,0.0,0.0,0.0);
	CreateDynamicObject(987,758.750,-1309.462,13.311,0.0,0.0,-0.859);
	CreateDynamicObject(987,770.761,-1309.641,13.258,0.0,0.0,-1.719);
	CreateDynamicObject(987,775.558,-1309.831,13.255,0.0,0.0,-0.859);
	CreateDynamicObject(987,787.236,-1310.090,13.246,0.0,0.0,90.241);
	CreateDynamicObject(987,787.203,-1298.085,13.257,0.0,0.0,90.241);
	CreateDynamicObject(987,787.245,-1286.027,13.274,0.0,0.0,90.241);
	CreateDynamicObject(987,787.320,-1274.071,13.338,0.0,0.0,90.241);
	CreateDynamicObject(987,787.320,-1262.105,13.402,0.0,0.0,90.241);
	CreateDynamicObject(987,787.314,-1250.093,13.456,0.0,0.0,91.100);
	CreateDynamicObject(987,787.264,-1238.047,14.006,0.0,0.0,90.241);
	CreateDynamicObject(987,787.320,-1226.222,14.665,0.0,-6.875,90.241);
	CreateDynamicObject(987,787.345,-1214.314,16.108,0.0,-8.594,91.100);
	CreateDynamicObject(987,787.245,-1202.435,17.965,0.0,-8.594,91.100);
	CreateDynamicObject(987,787.270,-1190.620,20.105,0.0,-6.875,90.241);
	CreateDynamicObject(987,787.239,-1178.684,21.563,0.0,-6.016,90.318);
	CreateDynamicObject(987,787.403,-1172.777,22.678,0.0,-3.438,91.100);
	CreateDynamicObject(987,787.260,-1142.088,22.836,0.0,-0.859,89.381);
	CreateDynamicObject(996,740.164,-1089.698,25.585,0.0,0.0,-36.096);
	CreateDynamicObject(996,735.935,-1095.939,25.625,0.0,0.0,60.161);
	CreateDynamicObject(996,731.709,-1103.247,25.604,0.0,0.0,60.161);
	CreateDynamicObject(996,727.577,-1110.477,25.607,0.0,0.0,60.161);
	CreateDynamicObject(996,727.723,-1111.254,25.655,0.0,0.0,-28.361);
	CreateDynamicObject(996,728.035,-1119.358,23.311,0.0,0.0,64.458);
	CreateDynamicObject(996,724.276,-1127.288,23.300,0.0,0.0,64.458);
	CreateDynamicObject(996,720.464,-1135.281,23.311,0.0,0.0,64.458);
	CreateDynamicObject(996,717.206,-1135.067,24.131,0.0,0.0,-32.659);
	CreateDynamicObject(996,713.397,-1141.607,24.124,0.0,0.0,64.458);
	CreateDynamicObject(980,693.242,-1177.234,17.176,0.0,0.0,-120.321);
	CreateDynamicObject(980,687.438,-1187.124,17.193,0.0,0.0,-120.321);
	CreateDynamicObject(973,690.601,-1181.144,21.138,0.0,0.0,59.301);
	CreateDynamicObject(973,686.419,-1188.226,21.145,0.0,0.0,59.301);
	CreateDynamicObject(987,654.622,-1235.148,16.722,0.0,-4.297,168.450);
	CreateDynamicObject(987,643.632,-1232.738,17.974,0.0,3.438,-83.365);
	CreateDynamicObject(987,645.039,-1244.596,17.215,0.0,3.438,-83.365);
	CreateDynamicObject(987,646.454,-1256.561,16.810,0.0,1.719,-84.225);
	CreateDynamicObject(987,647.753,-1268.431,16.519,0.0,1.719,-85.084);
	CreateDynamicObject(987,648.727,-1280.450,16.180,0.0,5.157,-91.960);
	CreateDynamicObject(987,648.459,-1292.185,14.982,0.0,5.157,-91.960);
	CreateDynamicObject(987,648.434,-1297.687,14.218,0.0,5.157,-91.960);
	CreateDynamicObject(986,651.989,-1309.452,14.299,0.0,0.0,-11.250);//51 objetos
//HQ COSA NOSTRA
	CreateDynamicObject(3578, 1506.5350341797, -685.29895019531, 103.90502166748, 0, 0, 0);
    CreateDynamicObject(3578, 1488.5340576172, -684.99731445313, 103.90502166748, 0, 0, 0);
    CreateDynamicObject(3578, 1481.9154052734, -678.74987792969, 103.90502166748, 0, 0, 271.08032226563);
    CreateDynamicObject(3578, 1512.9066162109, -678.70770263672, 103.78001403809, 0, 0, 270.07141113281);
    CreateDynamicObject(5822, 1511.8214111328, -666.77313232422, 97.435821533203, 0, 0, 275.6103515625);
	CreateDynamicObject(3749, 1496.1419677734, -699.82165527344, 99.608413696289, 0, 0, 0);
    CreateDynamicObject(987, 1456.7333984375, -657.06579589844, 93.75, 0, 0, 270.02026367188);
    CreateDynamicObject(987, 1456.7827148438, -669.10290527344, 93.75, 0, 0, 270.01647949219);
    CreateDynamicObject(987, 1456.822265625, -681.12384033203, 93.75, 0, 0, 270.01647949219);
    CreateDynamicObject(987, 1468.6832275391, -657.26861572266, 93.75, 0, 0, 179.7265625);
    CreateDynamicObject(987, 1480.7132568359, -657.20452880859, 93.75, 0, 0, 179.97534179688);
    CreateDynamicObject(987, 1492.7427978516, -657.16522216797, 93.75, 0, 0, 179.97253417969);
    CreateDynamicObject(987, 1504.6442871094, -657.22448730469, 93.75, 0, 0, 179.97253417969);
    CreateDynamicObject(987, 1516.59765625, -657.2333984375, 93.75, 0, 0, 179.97253417969);
    CreateDynamicObject(987, 1528.5245361328, -657.34295654297, 93.75, 0, 0, 179.97253417969);
    CreateDynamicObject(987, 1531.0043945313, -657.33306884766, 93.75, 0, 0, 179.97253417969);
    CreateDynamicObject(987, 1530.8057861328, -669.26306152344, 93.75, 0, 0, 89.412719726563);
    CreateDynamicObject(987, 1530.7158203125, -681.26739501953, 93.75, 0, 0, 89.412231445313);
    CreateDynamicObject(987, 1530.8011474609, -693.25598144531, 93.75, 0, 0, 90.162231445313);
    CreateDynamicObject(987, 1530.7866210938, -699.60687255859, 93.75, 0, 0, 90.159301757813);
    CreateDynamicObject(987, 1518.7559814453, -699.52844238281, 93.75, 0, 0, 0.2093505859375);
    CreateDynamicObject(987, 1506.8061523438, -699.56646728516, 93.75, 0, 0, 0.208740234375);
    CreateDynamicObject(987, 1505.0556640625, -699.57196044922, 93.75, 0, 0, 0.208740234375);
    CreateDynamicObject(3095, 1496.794921875, -692.64691162109, 102.25841522217, 0, 0, 0);
    CreateDynamicObject(3934, 1496.83203125, -692.44268798828, 102.81378173828, 0, 0, 0);
    acn = CreateDynamicObject(980, 1496.1875, -699.90942382813, 96.523391723633, 0, 0, 180.54052734375);
    CreateDynamicObject(971, 1485.5874023438, -701.50988769531, 96.005561828613, 0, 0, 194.42028808594);
    CreateDynamicObject(971, 1481.2894287109, -698.20007324219, 96.005561828613, 0, 0, 90.947570800781);
    CreateDynamicObject(987, 1469.3878173828, -693.7822265625, 93.75, 0, 0, 1.0908203125);
    CreateDynamicObject(987, 1457.4541015625, -693.63488769531, 93.75, 0, 0, 1.087646484375);
    CreateDynamicObject(987, 1456.8669433594, -682.24108886719, 93.75, 0, 0, 270.01647949219);//31 objetos
//HQ POLICIA FEDERAL
	CreateDynamicObject(972, 1053.150635, -364.751801, 72.989067, 0.0000, 0.0000, 270.0000);//PF
	CreateDynamicObject(972, 1077.798340, -364.761169, 73.007172, 0.0000, 0.0000, 270.0000);//PF
	CreateDynamicObject(972, 1102.515869, -364.742371, 73.007668, 0.0000, 0.0000, 270.0000);//PF
	CreateDynamicObject(972, 1115.845093, -357.260559, 72.989067, 0.0000, 0.0000, 348.7500);//PF
	CreateDynamicObject(972, 1118.664429, -333.338318, 73.188026, 0.0000, 0.0000, 0.0000);//PF
	CreateDynamicObject(972, 1118.645996, -308.523041, 73.063805, 0.0000, 0.0000, 0.0000);//PF
	CreateDynamicObject(972, 1011.444641, -353.724670, 72.964851, 0.0000, 0.0000, 180.0000);//PF
	CreateDynamicObject(972, 1011.419922, -328.909668, 72.989067, 0.0000, 0.0000, 180.0000);//PF
	CreateDynamicObject(972, 1011.446655, -304.261566, 72.989067, 0.0000, 0.0000, 180.0000);//PF
	CreateDynamicObject(972, 1011.416931, -289.040314, 73.104477, 0.0000, 0.0000, 180.0000);//PF
	CreateDynamicObject(972, 1022.643921, -282.154694, 72.309181, 0.0000, 0.0000, 90.0000);//PF
	CreateDynamicObject(972, 1047.532227, -282.128693, 72.329407, 0.0000, 0.0000, 90.0000);//PF
	CreateDynamicObject(972, 1072.383057, -282.127045, 72.338379, 0.0000, 0.0000, 90.0000);//PF
	CreateDynamicObject(972, 1097.220825, -282.118805, 72.327057, 0.0000, 0.0000, 90.0000);//PF
	CreateDynamicObject(972, 1113.790527, -290.517548, 72.486343, 0.0000, 0.0000, 43.2811);//PF
	CreateDynamicObject(1437, 1017.094604, -318.952972, 73.204353, 321.3253, 0.0000, 349.6868);//PF
	CreateDynamicObject(1437, 1047.878662, -319.296265, 73.179352, 321.3253, 0.0000, 9.4538);//PF
	CreateDynamicObject(971, 1045.807861, -285.811310, 72.785492, 359.1406, 0.0000, 0.0000);//PF
	CreateDynamicObject(971, 1019.767822, -285.511688, 72.586891, 359.1406, 0.0000, 0.0000);//PF
	CreateDynamicObject(971, 1038.222412, -290.416077, 72.062996, 359.1406, 0.0000, 90.0000);//PF
	CreateDynamicObject(971, 1052.792114, -308.392609, 72.012993, 359.1406, 0.0000, 90.0000);//PF
	CreateDynamicObject(971, 1026.699341, -307.976349, 72.008743, 359.1406, 0.0000, 90.0000);//PF
	CreateDynamicObject(971, 1012.012756, -290.716187, 72.162895, 359.1406, 0.0000, 90.0000);//PF
	CreateDynamicObject(987, 1008.240723, -368.009552, 72.812233, 0.0000, 0.0000, 0.0000);//PF
	CreateDynamicObject(987, 1030.928223, -368.019928, 72.926926, 0.0000, 0.0000, 0.0000);//PF

	CreateDynamicObject(17324, 1909.405396, -1086.097656, 23.266682, 0.0000, 0.0000, 90.0000);//Ballas
	CreateDynamicObject(974, 1921.312988, -1083.677612, 26.157940, 0.0000, 0.0000, 90.0000);//Ballas
	CreateDynamicObject(993, 1921.616089, -1086.758789, 27.863852, 0.0000, 0.0000, 90.0000);//Ballas

 	CreateDynamicObject(976, -1318.929932, 485.502075, 2.495463, 0.0000, 0.0000, 0.0000);//Exercito
	CreateDynamicObject(975, -1310.243286, 483.695221, 1.255584, 0.0000, 90.2408, 90.0000);//Exercito
	CreateDynamicObject(976, -1456.115601, 485.440247, 2.572548, 0.0000, 0.0000, 0.0000);//Exercito
	CreateDynamicObject(975, -1456.180420, 483.701660, 1.334991, 0.0000, 90.2408, 90.0000);//Exercito
	CreateDynamicObject(975, -1635.722046, 258.053223, 1.358051, 0.0000, 90.2408, 90.0000);//Exercito
	CreateDynamicObject(975, -1631.299805, 256.540588, 4.100387, 0.0000, 0.0000, 0.0000);//Exercito
	CreateDynamicObject(975, -1437.401978, 288.470612, 3.908910, 0.0000, 1.7189, 180.0000);//Exercito
	CreateDynamicObject(969, -1433.067993, 291.634735, -2.983646, 0.0000, 269.7592, 91.7962);//Exercito
	CreateDynamicObject(971, -1421.895752, 493.653046, 5.583976, 0.0000, 0.0000, 90.0000);//Exercito
	CreateDynamicObject(971, -1421.889771, 502.442719, 5.583976, 0.0000, 0.0000, 90.0000);//Exercito
	CreateDynamicObject(987, -1494.882935, 481.541107, 6.155916, 0.0000, 0.0000, 180.0000);//Exercito
	CreateDynamicObject(987, -1482.924683, 481.518555, 6.187500, 0.0000, 0.0000, 180.0000);//Exercito
	CreateDynamicObject(987, -1470.973511, 481.511017, 6.187500, 0.0000, 0.0000, 180.0000);//Exercito
	CreateDynamicObject(987, -1459.033325, 481.521851, 6.187500, 0.0000, 0.0000, 180.0000);//Exercito
	CreateDynamicObject(987, -1447.090210, 481.533997, 6.171634, 0.0000, 0.0000, 180.0000);//Exercito
	CreateDynamicObject(8209, -1657.5897216797, 309.62448120117, 6.6885266304016, 0, 0, 9.9249267578125);//Exercito
    CreateDynamicObject(7657, -1516.1883544922, 481.56393432617, 12.896530151367, 0, 0, 178.6494140625);//Exercito
    CreateDynamicObject(5822, -1311.8383789063, 484.17300415039, 12.087057113647, 0, 0, 92.85986328125);//Exercito Escada//151 objetos

	CreateDynamicObject(1215, 1546.012329, -1678.610352, 13.106312, 0.0000, 0.0000, 0.0000);//Luzes DP
	CreateDynamicObject(1215, 1546.057739, -1672.688843, 13.100897, 0.0000, 0.0000, 0.0000);//Luzes DP
	CreateDynamicObject(1216, 1535.088379, -1637.508545, 13.238877, 0.0000, 0.0000, 78.7500);//Orelhao DP//3 objetos
// Caixas Eletronicos
    CreateDynamicObject(2942, 1928.771484, -1785.187012, 13.139766, 0.0000, 0.0000, 90.0000);
	CreateDynamicObject(2942, 2233.052490, -1162.624023, 25.483516, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(2942, 1551.242798, -1669.691528, 13.154342, 0.0000, 0.0000, 270.0000);
	CreateDynamicObject(2942, 1467.3470, -1783.4492, 13.1987, 0.0000, 0.0000, 179.0000);// caixa ^^
//Caixas Máfias
 	CreateDynamicObject(1271, 1324.886841, -635.915161, 108.484901, 0.0000, 0.0000, 17.1887);
	CreateDynamicObject(1271, 1325.540649, -635.743835, 108.484901, 0.0000, 0.0000, 17.1887);
	CreateDynamicObject(1271, 1325.286255, -635.804565, 109.175873, 0.0000, 0.0000, 17.1887);
//OBJETOS ESPALHADOS NA CIDADE
  	CreateDynamicObject(4100, 1942.1629638672, -1772.4167480469, 14.342294692993, 0, 0, 49.624786376953);//grades posto sul
   	CreateDynamicObject(4100, 1941.0621337891, -1772.3591308594, 14.342294692993, 0, 0, 49.624694824219);//grades posto sul
// Bate-Bate
	CreateDynamicObject(7921, 2737.6628417969, -1759.4056396484, 44.521724700928, 0, 0, 0);
 	CreateDynamicObject(7921, 2737.7473144531, -1760.2904052734, 44.549240112305, 0, 0, 179.36633300781);
	CreateDynamicObject(7921, 2735.8483886719, -1759.4578857422, 44.495727539063, 0, 0, 0);
 	CreateDynamicObject(7921, 2735.9426269531, -1760.1951904297, 44.500312805176, 0, 0, 178.6494140625);//4 objetos
// TANQUES POSTO NORTE
    CreateDynamicObject(1676, 1000.5368041992, -937.51239013672, 42.908992767334, 0, 0, 9.9249267578125);
    CreateDynamicObject(1676, 1007.5074462891, -936.49285888672, 42.908992767334, 0, 0, 7.939208984375);//2 objetos
// ORELHOES
    CreateDynamicObject(1216, 1124.8205566406, -1472.7642822266, 15.472403526306, 0, 0, 178.6494140625);
    CreateDynamicObject(1216, 1804.5754394531, -1167.1788330078, 23.520128250122, 0, 0, 344.1201171875);
    CreateDynamicObject(1216, 1363.7294921875, -1749.3428955078, 13.222763061523, 0, 0, 264.720703125);
    CreateDynamicObject(1216, 1363.7303466797, -1752.9660644531, 13.214802742004, 0, 0, 264.71557617188);
// Passarela e Bar
    CreateDynamicObject(16151, 1551.0268554688, -1715.4868164063, 12.546875, 0, 0, 89.324493408203);
// Cela Exército
    CreateDynamicObject(2930, -1297.6999511719, 491.39999389648, 12.89999961853, 0, 0, 0);
//Pista de Rally
    CreateDynamicObject(8251, -2393.5866699219, -2206.2165527344, 36.216876983643, 0, 0, 30.6298828125);
    CreateDynamicObject(987, -2376.7141113281, -2210.048828125, 32.44575881958, 0, 0, 80.404846191406);
    CreateDynamicObject(987, -2377.7255859375, -2192.9619140625, 32.2890625, 0, 0, 162.41345214844);
    CreateDynamicObject(987, -2376.8635253906, -2193.6000976563, 32.563995361328, 0, 0, 25.095886230469);
    CreateDynamicObject(987, -2363.47265625, -2193.3618164063, 32.327827453613, 0, 0, 204.55285644531);
//Pista de Skate
    CreateDynamicObject(11292, 1920.9520263672, -1414.4202880859, 14.034344673157, 0, 0, 178.6494140625);//Telhadinho Drogas
    CreateDynamicObject(13641, 1823.1400146484, -1414.4495849609, 24.1171875, 0, 0, 0);//Rosquinha no Alto
//PARQUE GLEEN
	CreateDynamicObject(1637, 1991.6693115234, -1184.0124511719, 19.441257476807, 0, 0, 342.13513183594);
	CreateDynamicObject(1637, 1948.6083984375, -1214.7890625, 19.431552886963, 0, 0, 162.75695800781);
//HQ REPORTER
	CreateDynamicObject(7657, 787.4609375, -1340.359375, 18.264627456665, 0, 0, 89.324493408203);
	CreateDynamicObject(7657, 787.25671386719, -1360.3143310547, 18.263717651367, 0, 0, 89.324340820313);
	CreateDynamicObject(7657, 787.26574707031, -1375.0749511719, 18.329557418823, 0, 0, 89.324340820313);
	CreateDynamicObject(7657, 777.21832275391, -1385.0466308594, 18.436908721924, 0, 0, 359.99975585938);
	CreateDynamicObject(7657, 760.88116455078, -1384.9207763672, 18.439277648926, 0, 0, 359.99450683594);
	CreateDynamicObject(7657, 777.40789794922, -1330.0454101563, 18.26703453064, 0, 0, 178.64379882813);
	CreateDynamicObject(7657, 757.46813964844, -1329.6379394531, 18.265003204346, 0, 0, 178.64318847656);
	CreateDynamicObject(7657, 740.240234375, -1329.53125, 18.268165588379, 0, 0, 180.62817382813);
//HQ TAXISTAS
	CreateDynamicObject(980,1041.181,-1460.063,15.419,0.0,0.0,-92.742);
	CreateDynamicObject(987,953.222,-1473.284,12.536,0.0,0.0,-0.859);
	CreateDynamicObject(983,949.976,-1473.470,16.832,0.0,0.0,-90.241);
	CreateDynamicObject(983,950.004,-1473.339,18.154,0.0,0.0,-90.241);
	CreateDynamicObject(987,952.874,-1415.724,12.635,0.0,0.0,-89.381);
	CreateDynamicObject(983,952.715,-1430.705,16.519,0.0,0.0,-2.578);
	CreateDynamicObject(983,952.724,-1430.727,17.820,0.0,0.0,-1.719);
	CreateDynamicObject(978,948.092,-1427.209,16.919,0.0,0.0,0.0);
//Cofre(ROUBO) Prefeitura
	CreateDynamicObject(1829,354.28314208984,171.98362731934,1007.8456420898,0.0,0.0,91.0);
	CreateDynamicObject(1550,353.82382202148,172.66203308105,1007.7756347656,0.0,0.0,315.0);
//Cofre(ROUBO) Lotérica e Banco
	CreateDynamicObject(1829, 820.33020019531, 8.3643178939819, 1003.6611938477, 0, 0, 91.309509277344);
	CreateDynamicObject(1829, 2305.9875488281, -6.1657295227051, 26.206716537476, 0, 0, 91.309387207031);
    CreateDynamicObject(1829,382.17828369,-188.69221497,1000.10467529,0.00000000,0.00000000,196.00000000); //cofre posto
//Roubo Loja de Armas 1 e 2(Cofre e Armas)
	CreateDynamicObject(2035, 2169.0065917969, 1589.9106445313, 998.99560546875, 0, 0, 320.30029296875);
	CreateDynamicObject(2036, 2169.0502929688, 1589.8255615234, 999.00512695313, 0, 0, 0);
	CreateDynamicObject(1829, 2168.7346191406, 1589.8250732422, 999.43542480469, 0, 0, 93.294494628906);
	CreateDynamicObject(1550, 2168.5485839844, 1590.4002685547, 999.36407470703, 0, 0, 7.9400024414063);
	CreateDynamicObject(1829, 451.28546142578, -79.360252380371, 999.11920166016, 0, 0, 0.000244140625);
	CreateDynamicObject(1550, 451.82040405273, -79.421600341797, 998.94805908203, 0, 0, 71.459594726563);
	CreateDynamicObject(2035, 451.41320800781, -79.704383850098, 998.5791015625, 0, 0, 0);
	CreateDynamicObject(2036, 451.53814697266, -79.866546630859, 998.58862304688, 0, 0, 318.31530761719);
	CreateDynamicObject(2057, 451.29110717773, -79.280700683594, 999.31091308594, 0, 0, 0);
//HQ Policia Federal
	CreateDynamicObject(3109, 321.46438598633, 302.0078125, 999.40002441406, 0, 0, 268.69067382813);
// Arena de X1 Monte Chiliad
	CreateDynamicObject(972, -2317.9733886719, -1607.8778076172, 481.92987060547, 0, 0, 5.95263671875);
	CreateDynamicObject(972, -2333.5573730469, -1582.4885253906, 481.92987060547, 0, 0, 97.262329101563);
	CreateDynamicObject(972, -2342.1125488281, -1607.5842285156, 481.92987060547, 0, 0, 186.58666992188);
	CreateDynamicObject(972, -2322.4345703125, -1589.484375, 481.92987060547, 0, 0, 29.772521972656);//300 objetos
	CreateDynamicObject(972, -2315.3129882813, -1634.2191162109, 481.92987060547, 0, 0, 5.95263671875);
	CreateDynamicObject(972, -2339.2004394531, -1632.3326416016, 481.92987060547, 0, 0, 186.58703613281);
	CreateDynamicObject(8650, -2316.6611328125, -1618.7884521484, 474.04272460938, 90, 90, 7.93994140625);
	CreateDynamicObject(8650, -2328.5708007813, -1620.1850585938, 488.14788818359, 180, 180, 97.262329101563);
	CreateDynamicObject(8650, -2328.5256347656, -1620.2603759766, 486.49984741211, 179.99450683594, 179.99450683594, 97.261962890625);
	CreateDynamicObject(972, -2315.8947753906, -1624.5148925781, 481.92987060547, 0, 0, 5.9490966796875);
	CreateDynamicObject(8650, -2314.5227050781, -1618.5999755859, 474.04272460938, 90, 90, 7.9376220703125);
	CreateDynamicObject(8650, -2318.1958007813, -1618.8737792969, 474.04272460938, 90, 90, 5.9549560546875);
	CreateDynamicObject(972, -2344.6188964844, -1584.1512451172, 481.92987060547, 0, 0, 186.58630371094);
	CreateDynamicObject(972, -2330.990234375, -1642.7630615234, 481.92987060547, 0, 0, 275.91064453125);
	CreateDynamicObject(972, -2325.4072265625, -1642.2864990234, 481.92987060547, 0, 0, 275.90515136719);
    CreateDynamicObject(7657, -2333.6726074219, -1620.9918212891, 484.42767333984, 0, 0, 7.93994140625);
//GRADES CELAS PM,PF
    CreateDynamicObject(988, 266.3486328125, 82.4482421875, 1000.0884399414, 0, 0, 89.324340820313);
	CreateDynamicObject(988, 266.34918212891, 86.14559173584, 1000.0390625, 0, 0, 89.324340820313);
	CreateDynamicObject(988, 320.89068603516, 315.35446166992, 998.1484375, 0, 0, 89.324493408203);
	CreateDynamicObject(988, 320.89068603516, 312.80841064453, 998.29431152344, 0, 0, 89.324340820313);
//CAIXAS ELETRONICOS PC,R.O.T.A,PF,EXE
	CreateDynamicObject(2942, 228.90814208984, 153.8551940918, 1002.6234375, 0, 0, 87.339508056641);
 	CreateDynamicObject(2942, 240.31645202637, 115.30052947998, 1002.81875, 0, 0, 89.324493408203);
  	CreateDynamicObject(2942, 320.70361328125, 305.59274291992, 998.7484375, 0, 0, 91.309509277344);
   	CreateDynamicObject(2942, -1347.6359863281, 500.72186279297, 10.7953125, 0, 0, 0);
//PEDÁGIO LS-LV
	CreateDynamicObject(3881,1739.924,527.420,28.480,0.0,0.0,-18.908);
	CreateDynamicObject(3882,1740.357,527.862,27.626,0.0,0.0,-289.630);
	CreateDynamicObject(2773,1740.419,522.839,27.246,0.0,0.0,-18.908);
	CreateDynamicObject(2773,1738.940,523.362,27.246,0.0,0.0,-18.908);
	CreateDynamicObject(18452,1746.215,526.301,29.572,0.0,3.438,71.333);
	CreateDynamicObject(18452,1752.158,524.255,29.561,0.0,3.438,71.333);
	CreateDynamicObject(18452,1734.855,530.123,29.613,0.0,3.438,71.333);
	CreateDynamicObject(18452,1729.014,532.098,29.570,0.0,3.438,71.333);
	CreateDynamicObject(3435,1757.489,522.137,31.690,0.0,0.0,69.614);
	CreateDynamicObject(3435,1724.051,533.613,31.698,0.0,0.0,69.614);
	CreateDynamicObject(7415,1742.732,527.605,39.987,0.0,0.0,101.413);
	CreateDynamicObject(10281,1757.189,520.752,35.255,0.0,0.0,-20.626);
	CreateDynamicObject(10281,1723.568,532.355,35.238,0.0,0.0,-20.626);
	CreateDynamicObject(10281,1724.401,534.968,35.638,0.0,0.0,-200.249);
	CreateDynamicObject(10281,1757.807,523.511,35.068,0.0,0.0,-200.249);
	CreateDynamicObject(1215,1739.051,533.896,26.883,0.0,0.0,0.0);
	CreateDynamicObject(1215,1733.671,535.819,26.879,0.0,0.0,0.0);
	CreateDynamicObject(1215,1728.011,537.848,26.872,0.0,0.0,0.0);
	CreateDynamicObject(1215,1756.271,527.649,26.911,0.0,0.0,0.0);
	CreateDynamicObject(1215,1745.289,531.691,26.895,0.0,0.0,0.0);
	CreateDynamicObject(1215,1750.899,529.705,26.894,0.0,0.0,0.0);
	CreateDynamicObject(1215,1735.826,524.259,27.466,0.0,0.0,0.0);
	CreateDynamicObject(1215,1724.622,528.056,27.480,0.0,0.0,0.0);
	CreateDynamicObject(1215,1730.117,526.227,27.475,0.0,0.0,0.0);
	CreateDynamicObject(1215,1742.051,522.216,27.475,0.0,0.0,0.0);
	CreateDynamicObject(1215,1747.381,520.313,27.480,0.0,0.0,0.0);
	CreateDynamicObject(1215,1753.147,518.425,27.472,0.0,0.0,0.0);
	CreateDynamicObject(1251,1741.435,531.184,26.631,0.0,0.0,71.333);
//=========================[HQ Sons]===============================================
    CreateDynamicObject(987,-1524.38159180,-2766.61328125,47.53347397,0.00000000,0.00000000,237.00964355); //object(elecfence_bar) (1)
    CreateDynamicObject(987,-1517.87121582,-2756.57812500,47.53906250,0.00000000,0.00000000,237.00805664); //object(elecfence_bar) (2)
    CreateDynamicObject(987,-1520.94018555,-2744.95727539,47.53906250,0.00000000,0.00000000,284.82788086); //object(elecfence_bar) (3)
    CreateDynamicObject(987,-1530.32104492,-2737.44628906,47.53906250,0.00000000,0.00000000,321.39587402); //object(elecfence_bar) (4)
    CreateDynamicObject(987,-1539.65539551,-2729.98535156,47.53906250,0.00000000,0.00000000,321.39404297); //object(elecfence_bar) (5)
    CreateDynamicObject(987,-1549.01086426,-2722.52685547,47.53633881,0.00000000,0.00000000,321.39404297); //object(elecfence_bar) (6)
    CreateDynamicObject(987,-1558.62292480,-2715.39819336,47.53906250,0.00000000,0.00000000,323.39404297); //object(elecfence_bar) (7)
    CreateDynamicObject(987,-1570.12756348,-2712.10131836,47.53906250,0.00000000,0.00000000,344.00842285); //object(elecfence_bar) (8)
    CreateDynamicObject(987,-1582.09912109,-2712.10546875,47.53906250,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (9)
    CreateDynamicObject(987,-1588.74157715,-2722.09912109,47.53906250,0.00000000,0.00000000,56.57971191); //object(elecfence_bar) (10)
    CreateDynamicObject(987,-1595.33972168,-2732.07910156,47.53906250,0.00000000,0.00000000,56.57958984); //object(elecfence_bar) (11)
    CreateDynamicObject(987,-1590.04895020,-2742.87695312,47.53906250,0.00000000,0.00000000,116.29992676); //object(elecfence_bar) (12)
    CreateDynamicObject(987,-1580.36059570,-2749.95361328,47.53378677,0.00000000,0.00000000,143.96002197); //object(elecfence_bar) (13)
    CreateDynamicObject(14608,-1580.61108398,-2715.02539062,49.13503647,0.00000000,0.00000000,153.47497559); //object(triad_buddha01) (1)
    CreateDynamicObject(3524,-1550.35498047,-2776.93676758,49.49789047,0.00000000,0.00000000,327.22521973); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(3524,-1537.77551270,-2785.63574219,49.17059708,0.00000000,0.00000000,327.22229004); //object(skullpillar01_lvs) (2)
    CreateDynamicObject(987,-1570.56823730,-2756.82226562,47.53802490,0.00000000,0.00000000,144.95935059); //object(elecfence_bar) (17)
    CreateDynamicObject(987,-1560.62402344,-2763.48828125,47.52734375,0.00000000,0.00000000,146.20910645); //object(elecfence_bar) (18)
    CreateDynamicObject(987,-1550.67810059,-2770.15112305,47.52088928,0.00000000,0.00000000,146.20605469); //object(elecfence_bar) (19)
//PEDÁGIO LV-CIDADE DO INTERIOR
	CreateDynamicObject(18452,524.300,472.465,20.878,0.0,0.0,-55.004);
	CreateDynamicObject(18452,519.234,468.912,20.878,0.0,0.0,-55.004);
	CreateDynamicObject(4642,521.784,470.702,19.825,0.0,0.0,-54.145);
	CreateDynamicObject(3435,526.964,474.330,23.150,0.0,0.0,-55.863);
	CreateDynamicObject(3435,516.241,466.876,23.145,0.0,0.0,-55.863);
	CreateDynamicObject(10281,517.373,465.926,26.449,0.0,0.0,34.377);
	CreateDynamicObject(10281,528.029,473.199,26.449,0.0,0.0,34.377);
	CreateDynamicObject(10281,515.013,467.761,26.449,0.0,0.0,-146.104);
	CreateDynamicObject(10281,526.063,475.421,26.449,0.0,0.0,-146.104);
	CreateDynamicObject(1215,519.719,463.528,18.494,0.0,0.0,0.0);
	CreateDynamicObject(1215,524.481,466.911,18.494,0.0,0.0,0.0);
	CreateDynamicObject(1215,529.263,470.168,18.494,0.0,0.0,0.0);
	CreateDynamicObject(1215,523.872,478.010,18.494,0.0,0.0,0.0);
	CreateDynamicObject(1215,519.079,474.725,18.494,0.0,0.0,0.0);
	CreateDynamicObject(1215,514.301,471.311,18.494,0.0,0.0,0.0);
//PEDÁGIO CIDADES DO INTERIOR
	CreateDynamicObject(18452,-175.363,327.293,14.027,0.0,0.0,-104.851);
	CreateDynamicObject(18452,-181.335,328.895,14.027,0.0,0.0,-104.851);
	CreateDynamicObject(4641,-178.376,328.045,12.973,0.0,0.0,-104.851);
	CreateDynamicObject(3435,-184.823,329.812,16.298,0.0,0.0,74.771);
	CreateDynamicObject(3435,-171.759,326.381,16.298,0.0,0.0,74.771);
	CreateDynamicObject(10281,-172.135,325.065,19.597,0.0,0.0,-15.470);
	CreateDynamicObject(10281,-185.107,328.473,19.597,0.0,0.0,-15.470);
	CreateDynamicObject(10281,-184.505,331.188,19.597,0.0,0.0,-195.092);
	CreateDynamicObject(10281,-171.439,327.923,19.597,0.0,0.0,-195.092);
	CreateDynamicObject(1215,-177.189,332.447,11.642,0.0,0.0,0.0);
	CreateDynamicObject(1215,-171.511,331.106,11.642,0.0,0.0,0.0);
	CreateDynamicObject(1215,-168.707,332.113,14.532,0.0,0.0,0.0);
	CreateDynamicObject(1215,-182.646,333.804,11.642,0.0,0.0,0.0);
	CreateDynamicObject(1215,-185.245,324.987,11.642,0.0,0.0,0.0);
	CreateDynamicObject(1215,-179.571,323.388,11.642,0.0,0.0,0.0);
	CreateDynamicObject(1215,-173.940,321.813,11.642,0.0,0.0,0.0);
//PEDAGIO
	CreateDynamicObject(18452,-81.473,-911.504,19.637,0.0,3.438,64.458);
	CreateDynamicObject(18452,-86.795,-909.016,19.657,0.0,3.438,64.458);
	CreateDynamicObject(4639,-84.176,-910.267,18.590,0.0,3.438,64.458);
	CreateDynamicObject(1215,-86.564,-914.933,17.577,0.0,0.0,0.0);
	CreateDynamicObject(1215,-91.347,-912.313,17.664,0.0,0.0,0.0);
	CreateDynamicObject(1215,-81.359,-917.616,17.690,0.0,0.0,0.0);
	CreateDynamicObject(1215,-86.973,-903.254,16.768,0.0,0.0,0.0);
	CreateDynamicObject(1215,-76.825,-908.465,16.782,0.0,0.0,0.0);
	CreateDynamicObject(1215,-81.946,-905.872,16.711,0.0,0.0,0.0);
	CreateDynamicObject(10281,-89.741,-908.728,25.320,0.0,0.0,-24.924);
	CreateDynamicObject(3435,-79.336,-913.316,21.928,0.0,0.0,65.317);
	CreateDynamicObject(3435,-89.129,-907.520,21.904,0.0,0.0,65.317);
	CreateDynamicObject(10281,-79.505,-914.833,25.343,0.0,0.0,-24.924);
	CreateDynamicObject(10281,-88.794,-906.180,25.131,0.0,0.0,-204.546);
	CreateDynamicObject(10281,-78.944,-911.967,25.173,0.0,0.0,-204.546);
	CreateDynamicObject(3435,-973.189,-343.464,40.641,0.0,0.0,-102.273);
	CreateDynamicObject(18452,-964.780,-345.105,38.414,0.0,0.0,78.209);
	CreateDynamicObject(18452,-970.554,-343.918,38.375,0.0,0.0,78.209);
	CreateDynamicObject(3435,-962.014,-346.031,40.681,0.0,0.0,-102.273);
	CreateDynamicObject(4641,-967.585,-344.193,37.361,0.0,0.0,79.068);
	CreateDynamicObject(10281,-962.404,-347.406,43.984,0.0,0.0,-12.892);
	CreateDynamicObject(10281,-973.883,-344.792,43.945,0.0,0.0,-12.892);
	CreateDynamicObject(10281,-972.806,-342.067,43.945,0.0,0.0,-191.654);
	CreateDynamicObject(10281,-961.830,-344.614,43.984,0.0,0.0,-191.654);
	CreateDynamicObject(983,-976.888,-342.692,36.449,0.0,0.0,78.209);
	CreateDynamicObject(983,-959.000,-346.646,36.143,0.0,0.0,78.209);
	CreateDynamicObject(1215,-974.420,-347.943,36.069,0.0,0.0,0.0);
	CreateDynamicObject(1215,-968.680,-349.104,35.844,0.0,0.0,0.0);
	CreateDynamicObject(1215,-963.013,-350.329,35.617,0.0,0.0,0.0);
	CreateDynamicObject(1215,-966.861,-339.749,35.842,0.0,0.0,0.0);
	CreateDynamicObject(1215,-972.551,-338.784,36.027,0.0,0.0,0.0);
	CreateDynamicObject(1215,-961.036,-340.733,35.646,0.0,0.0,0.0);
//PEDAGIO LOS SANTOS
	CreateDynamicObject(4641, 35.632293701172, -1529.076171875, 6.1357402801514, 0, 0, 266.70568847656);
	CreateDynamicObject(4641, 67.10196685791, -1533.9455566406, 5.8311233520508, 0, 0, 87.337829589844);
	CreateDynamicObject(10281, 68.36555480957, -1534.0847167969, 8.1223773956299, 0, 344.99816894531, 83.3662109375);
	CreateDynamicObject(10281, 34.36937713623, -1528.9321289063, 8.4724159240723, 0, 344.99816894531, 264.00048828125);
	CreateDynamicObject(10281, 36.68558883667, -1529.1614990234, 8.4724159240723, 0, 344.99816894531, 81.381225585938);
	CreateDynamicObject(10281, 66.0478515625, -1533.8525390625, 8.1223773956299, 0, 344.98718261719, 263.99047851563);
	CreateDynamicObject(978, 60.978630065918, -1534.8353271484, 5.0441765785217, 0, 0, 171.42504882813);
	CreateDynamicObject(978, 50.605979919434, -1533.9216308594, 5.1404309272766, 0, 0, 173.40466308594);
	CreateDynamicObject(978, 40.753074645996, -1532.0096435547, 5.2318620681763, 0, 0, 169.43469238281);
	CreateDynamicObject(978, 61.552124023438, -1531.3885498047, 5.0221199989319, 0, 0, 352.06005859375);
	CreateDynamicObject(978, 51.23265838623, -1529.9393310547, 5.1295471191406, 0, 0, 352.05688476563);
	CreateDynamicObject(978, 41.44654083252, -1528.3891601563, 5.2254266738892, 0, 0, 352.05688476563);
	CreateDynamicObject(1374, 34.944358825684, -1526.9171142578, 4.4455451965332, 0, 0, 0);
	CreateDynamicObject(1374, 34.724945068359, -1531.2094726563, 4.4395666122437, 0, 0, 176.66442871094);
	CreateDynamicObject(1374, 67.949798583984, -1532.0815429688, 4.1140956878662, 0, 0, 0);
	CreateDynamicObject(1374, 67.731735229492, -1536.064453125, 4.1398868560791, 0, 0, 178.6494140625);
//PEDAGIO ESTRADA
    CreateDynamicObject(4642, 2539.505859375, 304.08911132813, 29.58589553833, 0, 0, 358.01501464844);
    CreateDynamicObject(4642, 2539.3637695313, 296.65670776367, 29.878120422363, 0, 0, 179.36279296875);
    CreateDynamicObject(4642, 2516.4106445313, 299.26815795898, 30.043827056885, 0, 0, 173.40783691406);
    CreateDynamicObject(4642, 2517.1833496094, 306.50720214844, 30.054021835327, 0, 0, 173.40270996094);
    CreateDynamicObject(3435, 2542.1904296875, 284.4162902832, 33.259044647217, 0, 0, 356.03002929688);
    CreateDynamicObject(3435, 2540.4499511719, 316.42352294922, 32.883548736572, 0, 0, 358.01342773438);
    CreateDynamicObject(10281, 2514.6286621094, 299.31967163086, 31.99974822998, 0, 345, 262.73571777344);
    CreateDynamicObject(10281, 2515.4172363281, 306.69549560547, 31.99974822998, 0, 344.99816894531, 262.73254394531);
    CreateDynamicObject(10281, 2541.2858886719, 304.17156982422, 31.799747467041, 0, 344.99816894531, 87.336486816406);
    CreateDynamicObject(10281, 2541.1345214844, 296.68963623047, 31.799747467041, 0, 344.99267578125, 87.335815429688);
    CreateDynamicObject(1374, 2515.8540039063, 308.88681030273, 28.409870147705, 0, 0, 352.06005859375);
    CreateDynamicObject(1374, 2514.7370605469, 297.09048461914, 28.372844696045, 0, 0, 176.6611328125);
    CreateDynamicObject(1374, 2540.87890625, 294.59899902344, 28.200183868408, 0, 0, 176.66015625);
    CreateDynamicObject(1374, 2541.1525878906, 305.9892578125, 27.81209564209, 0, 0, 355.30920410156);
//PEDAGIO NOVO(ESTRADA PERTO HQ DOS SONS)
	CreateDynamicObject(4642, 92.7236328125, -1275.1638183594, 14.942341804504, 0, 0, 306.40576171875);
 	CreateDynamicObject(4642, 84.917510986328, -1266.1041259766, 15.224144935608, 0, 0, 123.78649902344);
  	CreateDynamicObject(1374, 83.284629821777, -1265.0596923828, 13.53085899353, 0, 0, 29.774780273438);
   	CreateDynamicObject(4642, 76.391235351563, -1254.0012207031, 15.168005943298, 0, 0, 127.7529296875);
   	CreateDynamicObject(1374, 76.749130249023, -1255.9631347656, 13.67283821106, 0, 0, 215.09399414063);
    CreateDynamicObject(4642, 101.51268005371, -1286.8515625, 14.994458198547, 0, 0, 306.40319824219);
    CreateDynamicObject(1374, 99.806381225586, -1285.7977294922, 13.25719833374, 0, 0, 33.742919921875);
    CreateDynamicObject(1374, 93.132995605469, -1277.1209716797, 13.212397575378, 0, 0, 215.09033203125);
    CreateDynamicObject(10281, 79.237091064453, -1260.0068359375, 21.52029800415, 0, 339.99938964844, 300.26733398438);
    CreateDynamicObject(10281, 80.713813781738, -1259.1701660156, 21.466123580933, 0, 339.99938964844, 120.90167236328);
    CreateDynamicObject(10281, 95.587707519531, -1281.2474365234, 21.230987548828, 0, 339.99938964844, 300.26733398438);
	CreateDynamicObject(10281, 96.950485229492, -1280.2509765625, 21.179170608521, 0, 339.99938964844, 121.61853027344);
//PORTA BURGER SHOT 2
    CreateDynamicObject(2957, 681.56121826172, -446.03887939453, -24.989976882935, 0, 90, 0);
    CreateDynamicObject(2957, 680.94635009766, -449.14892578125, -26.681901931763, 90, 0, 0);
    CreateDynamicObject(2957, 680.94635009766, -447.4892578125, -26.681901931763, 90, 0, 0);
    CreateDynamicObject(987,647.14453125,-476.23309326,15.33593750,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (1)
    CreateDynamicObject(987,648.08032227,-464.37973022,15.18750000,0.00000000,0.00000000,266.00000000); //object(elecfence_bar) (2)
    CreateDynamicObject(987,648.94219971,-452.44314575,15.33868408,0.00000000,0.00000000,265.99548340); //object(elecfence_bar) (3)
    CreateDynamicObject(987,649.25543213,-441.11883545,15.33593750,0.00000000,0.00000000,267.99548340); //object(elecfence_bar) (4)
    CreateDynamicObject(987,649.36743164,-438.12048340,15.33593750,0.00000000,0.00000000,268.00000000); //object(elecfence_bar) (5)
    CreateDynamicObject(987,661.13348389,-438.11563110,15.33593655,0.00000000,0.00000000,180.00000000); //object(elecfence_bar) (6)
    CreateDynamicObject(987,672.86029053,-438.05474854,15.33593750,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (7)
    CreateDynamicObject(987,684.47039795,-438.26669312,15.33593750,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (8)
    CreateDynamicObject(987,695.93316650,-438.16339111,15.34370422,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (9)
    CreateDynamicObject(987,707.67553711,-438.22988892,15.33593750,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (10)
    CreateDynamicObject(987,710.72045898,-438.22494507,15.33593750,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (11)
    CreateDynamicObject(987,710.47344971,-450.08477783,15.33593750,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (12)
    CreateDynamicObject(987,710.41876221,-462.21542358,15.33593750,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (13)
    CreateDynamicObject(987,710.54754639,-473.91302490,15.33593750,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (14)
    CreateDynamicObject(3524,690.82714844,-478.36477661,18.22127724,0.00000000,0.00000000,0.00000000); //object(skullpillar01_lvs) (1)
    CreateDynamicObject(6865,681.51855469,-473.25054932,21.63970757,0.00000000,0.00000000,44.00000000); //object(steerskull) (1)
//======================================[HQ Reporteres]=========================================================
    CreateDynamicObject(3089,367.79998779,161.89999390,1020.29998779,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (2)
	CreateDynamicObject(3089,367.79998779,163.30000305,1020.29998779,0.00000000,0.00000000,270.00000000); //object(ab_casdorlok) (3)
	CreateDynamicObject(2904,367.79998779,162.50000000,1023.00000000,0.00000000,0.00000000,90.00000000); //object(warehouse_door1) (1)
//=====================================[HQ Triads]=======================================================================
    CreateDynamicObject(987,-361.60000610,-1408.40002441,24.70000076,358.00000000,0.00000000,184.00000000); //object(elecfence_bar) (2)
    CreateDynamicObject(987,-388.50000000,-1450.90002441,24.70000076,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (7)
    CreateDynamicObject(987,-376.50000000,-1450.90002441,24.70000076,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (8)
    CreateDynamicObject(987,-364.60000610,-1451.19995117,25.10000038,0.00000000,0.00000000,84.00000000); //object(elecfence_bar) (9)
    CreateDynamicObject(987,-363.39999390,-1439.19995117,24.70000076,0.00000000,0.00000000,83.99694824); //object(elecfence_bar) (10)
    CreateDynamicObject(987,-362.10000610,-1420.19995117,24.70000076,0.00000000,0.00000000,87.99597168); //object(elecfence_bar) (11)
    CreateDynamicObject(3749,-379.39999390,-1409.40002441,30.60000038,0.00000000,0.00000000,0.00000000); //object(clubgate01_lax) (1)
    CreateDynamicObject(987,-388.79998779,-1410.90002441,24.60000038,0.00000000,0.00000000,248.00000000); //object(elecfence_bar) (13)
    CreateDynamicObject(9241,-411.10000610,-1377.50000000,23.89999962,0.00000000,0.00000000,81.99993896); //object(copbits_sfn) (1)
    CreateDynamicObject(1434,-383.70001221,-1438.90002441,25.39999962,0.00000000,0.00000000,92.00000000); //object(dyn_roadbarrier_5a) (1)
//===================================[Objetos HQ Drifters]===========================================================
    CreateDynamicObject(987,840.29998779,-2067.89990234,12.00000000,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (1)
	CreateDynamicObject(987,829.09960938,-2067.89941406,12.00000000,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (2)
	CreateDynamicObject(987,820.09997559,-2067.89990234,12.00000000,0.00000000,0.00000000,0.00000000); //object(elecfence_bar) (3)
	CreateDynamicObject(987,820.09997559,-2055.80004883,11.89999962,0.00000000,0.00000000,270.00000000); //object(elecfence_bar) (4)
	CreateDynamicObject(987,820.09997559,-2043.80004883,11.89999962,0.00000000,0.00000000,270.00000000); //object(elecfence_bar) (5)
	CreateDynamicObject(987,820.09960938,-2031.79980469,11.89999962,0.00000000,0.00000000,270.00000000); //object(elecfence_bar) (6)
	CreateDynamicObject(3749,836.00000000,-2031.19921875,17.70000076,0.00000000,0.00000000,0.00000000); //object(clubgate01_lax) (1)
	CreateDynamicObject(987,829.70001221,-2030.59997559,11.89999962,0.00000000,0.00000000,217.99768066); //object(elecfence_bar) (7)
	CreateDynamicObject(987,852.70001221,-2067.89990234,11.89999962,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (8)
	CreateDynamicObject(987,852.50000000,-2056.00000000,11.89999962,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (9)
	CreateDynamicObject(987,852.29998779,-2044.09997559,11.89999962,0.00000000,0.00000000,90.00000000); //object(elecfence_bar) (10)
	CreateDynamicObject(987,843.89941406,-2030.09960938,11.89999962,0.00000000,0.00000000,313.99475098); //object(elecfence_bar) (12)
	CreateDynamicObject(3293,828.79998779,-2056.50000000,15.10000038,0.00000000,0.00000000,0.00000000); //object(des_payspint) (1)
	CreateDynamicObject(3292,824.09997559,-2059.19995117,11.89999962,0.00000000,0.00000000,0.00000000); //object(cxf_payspray_) (1)
    //HQ NOVA DA Policia Cívil
    PortaoRPP = CreateDynamicObject(971,1643.4000000,-1715.2000000,15.1000000,0.0000000,0.0000000,90.0000000); //object(subwaygate) (1)
    CreateDynamicObject(987,1639.8000000,-1691.8000000,19.3000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (14)
    CreateDynamicObject(987,1651.8000000,-1691.8000000,19.3000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (32)
    CreateDynamicObject(987,1663.8000000,-1691.8000000,19.3000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (33)
    CreateDynamicObject(987,1665.5000000,-1691.8000000,19.3000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (34)
    CreateDynamicObject(976,1639.8000000,-1693.6000000,18.9000000,0.0000000,90.0000000,12.2500000); //object(phils_compnd_gate) (1)
//====================================[HQ BOPE]============================
    CreateDynamicObject(3749,1274.0000000,-1839.4004000,18.2000000,0.0000000,0.0000000,0.0000000); //object(clubgate01_lax) (1)
    CreateDynamicObject(3934,1200.6777300,-1796.6816400,32.4987600,0.0000000,0.0000000,0.0000000); //object(helipad01) (1)
    CreateDynamicObject(3928,1205.1000000,-1788.4000000,32.7000000,0.0000000,0.0000000,0.0000000); //object(helipad) (1)
    CreateDynamicObject(3928,1188.7000000,-1799.9000000,32.6000000,0.0000000,0.0000000,0.0000000); //object(helipad) (2)
    CreateDynamicObject(3928,1195.7000000,-1802.3000000,32.7000000,0.0000000,0.0000000,0.0000000); //object(helipad) (3)
    CreateDynamicObject(3079,1244.6679700,-1836.1699200,12.2506600,0.0000000,0.0000000,0.0000000); //object(ad_roadmark2) (1)
    CreateDynamicObject(987,1248.4004000,-1837.9004000,12.6000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (1)
    CreateDynamicObject(987,1236.5000000,-1837.9000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (2)
    CreateDynamicObject(987,1224.6000000,-1837.9000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (3)
    CreateDynamicObject(987,1212.7000000,-1837.8000000,12.4000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (4)
    CreateDynamicObject(987,1200.8000000,-1837.7000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (5)
    CreateDynamicObject(987,1194.8000000,-1837.7000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (6)
    CreateDynamicObject(987,1194.8000000,-1825.8000000,12.6000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (7)
    CreateDynamicObject(987,1194.7998000,-1819.9004000,12.6000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (8)
    CreateDynamicObject(987,1283.4004000,-1837.5000000,12.7000000,0.0000000,0.0000000,90.0000000); //object(elecfence_bar) (9)
    CreateDynamicObject(987,1283.2998000,-1825.5000000,12.6000000,0.0000000,0.0000000,90.0000000); //object(elecfence_bar) (10)
    CreateDynamicObject(987,1283.3000000,-1813.6000000,12.6000000,0.0000000,0.0000000,90.0000000); //object(elecfence_bar) (10)
    CreateDynamicObject(987,1283.3000000,-1804.4000000,12.6000000,0.0000000,0.0000000,90.0000000); //object(elecfence_bar) (10)
    CreateDynamicObject(987,1283.3000000,-1798.2000000,12.6000000,0.0000000,0.0000000,90.0000000); //object(elecfence_bar) (10)
    CreateDynamicObject(987,1283.4000000,-1786.3000000,12.6000000,0.0000000,0.0000000,180.0000000); //object(elecfence_bar) (10)
    CreateDynamicObject(987,1274.2000000,-1786.3000000,12.6000000,0.0000000,0.0000000,179.9950000); //object(elecfence_bar) (10)
    CreateDynamicObject(987,1254.5000000,-1837.9000000,12.6000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (1)
    PortaoBOPE = CreateDynamicObject(980,1274.0000000,-1839.5000000,15.2000000,0.0000000,0.0000000,180.0000000); //object(airportgate) (1)
    CreateDynamicObject(987,1194.8000000,-1811.6000000,12.6000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (8)
    CreateDynamicObject(1242,1218.7000000,-1818.0000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(bodyarmour) (1)
    CreateDynamicObject(8132,1258.9000000,-1840.6000000,15.3000000,0.0000000,0.0000000,282.0000000); //object(vgschurch03_lvs) (1)
    //////////////
    CreateDynamicObject(19379, 1716.53, 1183.26, 33.74,   0.00, -90.00, 0.51);
    CreateDynamicObject(19379, 1717.44, 1173.73, 37.23,   0.00, -90.00, 359.97);
    CreateDynamicObject(19379, 1706.17, 1183.19, 33.74,   0.00, -90.00, 0.27);
    CreateDynamicObject(19450, 1721.77, 1173.72, 35.55,   0.00, 0.00, 0.51);
    CreateDynamicObject(19388, 1710.28, 1173.83, 35.55,   0.00, 0.00, 359.79);
    CreateDynamicObject(19450, 1721.68, 1183.05, 35.55,   0.00, 0.00, 0.51);
    CreateDynamicObject(19450, 1717.06, 1168.98, 35.55,   0.00, 0.00, 89.39);
    CreateDynamicObject(19450, 1707.44, 1169.08, 35.55,   0.00, 0.00, 89.49);
    CreateDynamicObject(19358, 1710.29, 1170.68, 35.55,   0.00, 0.00, 359.79);
    CreateDynamicObject(19450, 1710.27, 1180.19, 35.55,   0.00, 0.00, 0.21);
    CreateDynamicObject(19450, 1713.76, 1178.76, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19388, 1720.07, 1178.73, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19450, 1705.48, 1178.81, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19450, 1702.75, 1173.98, 35.55,   0.00, 0.00, 0.21);
    CreateDynamicObject(1536, 1714.74, 1169.06, 33.83,   0.00, 0.00, 359.29);
    CreateDynamicObject(1536, 1717.74, 1169.06, 33.83,   0.00, 0.00, 179.55);
    CreateDynamicObject(1502, 1719.28, 1178.70, 33.83,   0.00, 0.00, 359.80);
    CreateDynamicObject(1502, 1710.28, 1174.64, 33.83,   0.00, 0.00, 269.97);
    CreateDynamicObject(1722, 1721.57, 1170.17, 33.73,   0.00, 0.00, 91.00);
    CreateDynamicObject(1722, 1721.54, 1171.25, 33.73,   0.00, 0.00, 90.19);
    CreateDynamicObject(1722, 1721.53, 1172.41, 33.73,   0.00, 0.00, 90.19);
    CreateDynamicObject(1722, 1721.50, 1173.65, 33.73,   0.00, 0.00, 90.19);
    CreateDynamicObject(1722, 1721.49, 1174.89, 33.73,   0.00, 0.00, 90.19);
    CreateDynamicObject(2029, 1710.93, 1175.13, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2029, 1712.89, 1175.13, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2029, 1714.85, 1175.12, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2029, 1716.83, 1175.11, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2204, 1710.89, 1178.53, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2204, 1713.83, 1178.56, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(1715, 1711.48, 1176.51, 33.83,   0.00, 0.00, 359.59);
    CreateDynamicObject(1715, 1713.49, 1176.47, 33.83,   0.00, 0.00, 359.59);
    CreateDynamicObject(1715, 1715.37, 1176.49, 33.83,   0.00, 0.00, 359.59);
    CreateDynamicObject(1715, 1717.40, 1176.40, 33.83,   0.00, 0.00, 359.59);
    CreateDynamicObject(2184, 1709.57, 1170.04, 33.83,   0.00, 0.00, 94.00);
    CreateDynamicObject(2184, 1706.12, 1169.97, 33.83,   0.00, 0.00, 94.00);
    CreateDynamicObject(1715, 1707.43, 1170.92, 33.83,   0.00, 0.00, 89.01);
    CreateDynamicObject(1715, 1704.06, 1170.92, 33.83,   0.00, 0.00, 89.01);
    CreateDynamicObject(2184, 1709.19, 1175.82, 33.83,   0.00, 0.00, 94.00);
    CreateDynamicObject(1715, 1707.28, 1176.81, 33.83,   0.00, 0.00, 89.01);
    CreateDynamicObject(2184, 1706.00, 1175.86, 33.83,   0.00, 0.00, 94.00);
    CreateDynamicObject(1715, 1703.94, 1176.95, 33.83,   0.00, 0.00, 89.01);
    CreateDynamicObject(19450, 1710.24, 1189.75, 35.55,   0.00, 0.00, 0.21);
    CreateDynamicObject(19379, 1716.39, 1192.82, 37.23,   0.00, -90.00, 0.10);
    CreateDynamicObject(19379, 1706.31, 1192.70, 33.74,   0.00, -90.00, 0.51);
    CreateDynamicObject(19450, 1713.72, 1194.54, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19388, 1720.12, 1194.52, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19450, 1721.60, 1192.60, 35.55,   0.00, 0.00, 0.51);
    CreateDynamicObject(19404, 1719.22, 1180.39, 35.55,   0.00, 0.00, 359.80);
    CreateDynamicObject(19404, 1719.23, 1183.54, 35.55,   0.00, 0.00, 359.80);
    CreateDynamicObject(19404, 1719.24, 1186.74, 35.55,   0.00, 0.00, 359.80);
    CreateDynamicObject(19404, 1719.25, 1189.92, 35.55,   0.00, 0.00, 359.80);
    CreateDynamicObject(19388, 1719.26, 1192.97, 35.55,   0.00, 0.00, 359.79);
    CreateDynamicObject(19325, 1719.31, 1182.46, 35.15,   0.00, 0.00, 359.80);
    CreateDynamicObject(19325, 1719.32, 1188.42, 35.15,   0.00, 0.00, 359.70);
    CreateDynamicObject(1502, 1719.25, 1193.75, 33.83,   0.00, 0.00, 269.97);
    CreateDynamicObject(1723, 1718.68, 1191.00, 33.83,   0.00, 0.00, 269.30);
    CreateDynamicObject(1723, 1718.66, 1187.02, 33.83,   0.00, 0.00, 269.30);
    CreateDynamicObject(1723, 1718.59, 1182.72, 33.83,   0.00, 0.00, 269.30);
    CreateDynamicObject(19379, 1716.41, 1202.51, 33.74,   0.00, -90.00, 0.51);
    CreateDynamicObject(19450, 1721.52, 1202.21, 35.55,   0.00, 0.00, 0.51);
    CreateDynamicObject(19450, 1713.60, 1197.36, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19388, 1719.99, 1197.34, 35.55,   0.00, 0.00, 90.01);
    CreateDynamicObject(19379, 1705.92, 1202.16, 33.74,   0.00, -90.00, 0.51);
    CreateDynamicObject(19450, 1708.85, 1202.14, 35.55,   0.00, 0.00, 0.31);
    CreateDynamicObject(19450, 1713.59, 1206.90, 35.55,   0.00, 0.00, 90.71);
    CreateDynamicObject(19450, 1716.69, 1206.94, 35.55,   0.00, 0.00, 90.71);
    CreateDynamicObject(19388, 1707.30, 1194.57, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(1723, 1720.90, 1201.10, 33.83,   0.00, 0.00, 270.12);
    CreateDynamicObject(1723, 1720.89, 1204.90, 33.83,   0.00, 0.00, 270.12);
    CreateDynamicObject(1723, 1709.56, 1199.29, 33.83,   0.00, 0.00, 90.51);
    CreateDynamicObject(1723, 1709.53, 1203.28, 33.83,   0.00, 0.00, 90.51);
    CreateDynamicObject(1723, 1713.17, 1198.10, 33.83,   0.00, 0.00, 180.00);
    CreateDynamicObject(1723, 1717.62, 1198.10, 33.83,   0.00, 0.00, 180.00);
    CreateDynamicObject(1723, 1710.98, 1206.23, 33.83,   0.00, 0.00, 1.03);
    CreateDynamicObject(1723, 1714.86, 1206.25, 33.83,   0.00, 0.00, 1.03);
    CreateDynamicObject(1723, 1718.72, 1206.34, 33.83,   0.00, 0.00, 1.03);
    CreateDynamicObject(19450, 1701.41, 1194.61, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19450, 1700.90, 1189.78, 35.55,   0.00, 0.00, 0.21);
    CreateDynamicObject(19450, 1700.92, 1183.64, 35.55,   0.00, 0.00, 0.21);
    CreateDynamicObject(1502, 1719.34, 1194.53, 33.83,   0.00, 0.00, 359.80);
    CreateDynamicObject(1502, 1719.19, 1197.31, 33.83,   0.00, 0.00, 359.80);
    CreateDynamicObject(1502, 1706.53, 1194.52, 33.83,   0.00, 0.00, 359.80);
    CreateDynamicObject(19388, 1707.22, 1197.39, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19450, 1701.46, 1197.43, 35.55,   0.00, 0.00, 89.63);
    CreateDynamicObject(19450, 1700.78, 1202.22, 35.55,   0.00, 0.00, 0.31);
    CreateDynamicObject(19450, 1704.28, 1206.84, 35.55,   0.00, 0.00, 90.13);
    CreateDynamicObject(1502, 1706.42, 1197.38, 33.83,   0.00, 0.00, 359.80);
    CreateDynamicObject(2206, 1702.00, 1205.20, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2206, 1705.81, 1205.22, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2206, 1705.78, 1202.56, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2206, 1705.74, 1200.18, 33.83,   0.00, 0.00, -0.12);
    CreateDynamicObject(2206, 1701.99, 1202.56, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2206, 1701.91, 1200.18, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(1714, 1702.90, 1203.93, 33.83,   0.00, 0.00, 181.11);
    CreateDynamicObject(1714, 1702.94, 1201.55, 33.83,   0.00, 0.00, 181.11);
    CreateDynamicObject(1714, 1702.79, 1199.13, 33.83,   0.00, 0.00, 181.11);
    CreateDynamicObject(1714, 1706.56, 1199.06, 33.83,   0.00, 0.00, 181.11);
    CreateDynamicObject(1714, 1706.66, 1201.44, 33.83,   0.00, 0.00, 181.11);
    CreateDynamicObject(1714, 1706.79, 1204.06, 33.83,   0.00, 0.00, 181.11);
    CreateDynamicObject(2204, 1706.07, 1197.68, 33.83,   0.00, 0.00, 178.94);
    CreateDynamicObject(2204, 1703.31, 1197.70, 33.83,   0.00, 0.00, 178.94);
    CreateDynamicObject(2241, 1709.66, 1198.09, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2241, 1714.37, 1198.09, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2241, 1709.51, 1202.30, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2241, 1709.53, 1206.28, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2241, 1713.87, 1206.25, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2241, 1717.84, 1206.30, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2241, 1720.97, 1198.10, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2241, 1720.91, 1202.02, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2256, 1718.36, 1206.78, 36.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2256, 1712.36, 1206.67, 36.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2258, 1706.77, 1206.74, 36.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2258, 1703.41, 1206.68, 36.09,   0.00, 0.00, 0.00);
    CreateDynamicObject(2146, 1702.38, 1193.23, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1702.34, 1190.99, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1702.32, 1188.58, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1702.33, 1186.27, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1702.35, 1184.07, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1702.33, 1182.02, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1702.39, 1179.98, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2204, 1716.82, 1178.55, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(19388, 1696.67, 1196.17, 35.55,   0.00, 0.00, 359.79);
    CreateDynamicObject(19379, 1696.03, 1193.01, 33.74,   0.00, -90.00, 0.51);
    CreateDynamicObject(19450, 1692.13, 1194.66, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19388, 1685.78, 1194.69, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19379, 1685.84, 1192.79, 33.74,   0.00, -90.00, 0.51);
    CreateDynamicObject(19450, 1684.29, 1189.86, 35.55,   0.00, 0.00, 0.21);
    CreateDynamicObject(19379, 1685.38, 1183.21, 33.74,   0.00, -90.00, 0.51);
    CreateDynamicObject(19379, 1695.94, 1183.54, 33.74,   0.00, -90.00, 0.51);
    CreateDynamicObject(19450, 1695.95, 1178.87, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19450, 1686.77, 1178.91, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19450, 1684.30, 1182.27, 35.55,   0.00, 0.00, 0.21);
    CreateDynamicObject(2455, 1687.22, 1194.15, 33.83,   0.00, 0.00, 271.10);
    CreateDynamicObject(2454, 1687.28, 1190.50, 33.83,   0.00, 0.00, 270.26);
    CreateDynamicObject(2455, 1687.23, 1193.24, 33.83,   0.00, 0.00, 271.10);
    CreateDynamicObject(2455, 1687.24, 1192.32, 33.83,   0.00, 0.00, 271.10);
    CreateDynamicObject(2455, 1688.37, 1190.35, 33.83,   0.00, 0.00, 359.50);
    CreateDynamicObject(2455, 1689.30, 1190.35, 33.83,   0.00, 0.00, 359.90);
    CreateDynamicObject(2455, 1690.21, 1190.35, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2455, 1691.13, 1190.35, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2455, 1692.04, 1190.35, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2455, 1692.94, 1190.35, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2416, 1688.96, 1192.00, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2416, 1691.81, 1191.95, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2455, 1687.26, 1191.42, 33.83,   0.00, 0.00, 271.10);
    CreateDynamicObject(2455, 1693.86, 1190.35, 33.83,   0.00, 0.00, -0.24);
    CreateDynamicObject(2416, 1694.64, 1191.94, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2416, 1697.47, 1191.93, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2455, 1694.78, 1190.35, 33.83,   0.00, 0.00, -0.24);
    CreateDynamicObject(2455, 1695.70, 1190.35, 33.83,   0.00, 0.00, -0.24);
    CreateDynamicObject(2455, 1696.62, 1190.35, 33.83,   0.00, 0.00, -0.24);
    CreateDynamicObject(2455, 1697.54, 1190.35, 33.83,   0.00, 0.00, -0.24);
    CreateDynamicObject(2455, 1698.46, 1190.35, 33.83,   0.00, 0.00, -0.24);
    CreateDynamicObject(2455, 1699.28, 1190.34, 33.83,   0.00, 0.00, -0.24);
    CreateDynamicObject(1502, 1699.39, 1190.16, 32.29,   0.00, 0.00, 0.31);
    CreateDynamicObject(2764, 1698.86, 1187.57, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1700.07, 1187.60, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2448, 1689.99, 1194.33, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(1775, 1700.21, 1194.04, 34.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(1776, 1692.64, 1194.26, 34.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(1775, 1688.73, 1194.13, 34.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(2738, 1680.89, 1198.87, 34.43,   0.00, 0.00, 89.70);
    CreateDynamicObject(2419, 1693.81, 1193.87, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2451, 1695.79, 1193.91, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2415, 1697.87, 1193.62, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2415, 1698.99, 1193.65, 33.83,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1698.78, 1184.35, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1698.93, 1180.99, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1694.24, 1187.44, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1694.24, 1184.34, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1694.26, 1181.05, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1690.43, 1187.55, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1686.60, 1181.00, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1690.35, 1184.35, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1690.27, 1181.14, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1686.52, 1184.34, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2764, 1686.71, 1187.68, 34.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1700.16, 1184.24, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1700.16, 1180.84, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1695.34, 1181.01, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1695.22, 1184.37, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1695.16, 1187.57, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1691.50, 1187.67, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1691.42, 1184.33, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1691.51, 1180.99, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1687.80, 1181.01, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1687.73, 1184.39, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1687.87, 1187.81, 34.23,   0.00, 0.00, 0.00);
    CreateDynamicObject(2788, 1697.92, 1187.65, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1697.79, 1184.30, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1697.82, 1180.88, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1693.33, 1180.97, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1693.12, 1184.41, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1693.08, 1187.57, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1689.50, 1187.58, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1689.36, 1184.38, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1689.27, 1180.93, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1685.70, 1180.99, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1685.72, 1184.44, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(2788, 1685.79, 1187.61, 34.23,   0.00, 0.00, 180.43);
    CreateDynamicObject(19450, 1695.98, 1197.71, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19450, 1683.25, 1197.79, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19388, 1689.64, 1197.75, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19379, 1695.62, 1202.45, 37.23,   0.00, -90.00, 0.51);
    CreateDynamicObject(19379, 1685.17, 1202.46, 33.74,   0.00, -90.00, 0.21);
    CreateDynamicObject(19450, 1684.28, 1193.03, 35.55,   0.00, 0.00, 0.21);
    CreateDynamicObject(19450, 1691.54, 1205.65, 35.55,   0.00, 0.00, 359.60);
    CreateDynamicObject(19388, 1691.50, 1199.39, 35.55,   0.00, 0.00, 359.79);
    CreateDynamicObject(19388, 1688.31, 1199.44, 35.55,   0.00, 0.00, 359.79);
    CreateDynamicObject(19450, 1688.33, 1205.59, 35.55,   0.00, 0.00, 359.91);
    CreateDynamicObject(19450, 1694.65, 1206.86, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19450, 1685.13, 1206.92, 35.55,   0.00, 0.00, 89.69);
    CreateDynamicObject(19450, 1680.36, 1202.19, 35.55,   0.00, 0.00, 0.11);
    CreateDynamicObject(19435, 1681.34, 1199.53, 34.53,   0.00, 0.00, 89.69);
    CreateDynamicObject(1523, 1682.12, 1198.01, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(19435, 1681.33, 1198.07, 34.54,   0.00, 0.00, 89.69);
    CreateDynamicObject(2738, 1680.87, 1200.39, 34.43,   0.00, 0.00, 89.70);
    CreateDynamicObject(19435, 1681.31, 1201.15, 34.51,   0.00, 0.00, 89.69);
    CreateDynamicObject(1523, 1682.14, 1199.61, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(2738, 1680.78, 1202.00, 34.43,   0.00, 0.00, 89.70);
    CreateDynamicObject(19435, 1681.31, 1202.71, 34.53,   0.00, 0.00, 89.69);
    CreateDynamicObject(1523, 1682.13, 1201.17, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(2738, 1680.78, 1203.62, 34.43,   0.00, 0.00, 89.70);
    CreateDynamicObject(19435, 1681.27, 1204.27, 34.54,   0.00, 0.00, 89.63);
    CreateDynamicObject(1523, 1682.12, 1202.69, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(19435, 1681.29, 1205.79, 34.54,   0.00, 0.00, 89.63);
    CreateDynamicObject(1523, 1682.13, 1204.23, 33.73,   0.00, 0.00, 89.35);
    CreateDynamicObject(2738, 1680.75, 1205.04, 34.43,   0.00, 0.00, 89.70);
    CreateDynamicObject(19435, 1687.49, 1200.29, 33.09,   0.00, 0.00, 89.80);
    CreateDynamicObject(19435, 1686.76, 1205.49, 34.08,   90.00, 0.00, 180.00);
    CreateDynamicObject(19435, 1686.75, 1202.00, 34.08,   90.00, 0.00, 180.00);
    CreateDynamicObject(19435, 1687.50, 1202.03, 34.85,   0.00, -91.00, 89.87);
    CreateDynamicObject(19435, 1687.48, 1205.51, 34.85,   0.00, -89.00, 90.30);
    CreateDynamicObject(2515, 1687.97, 1205.54, 35.15,   0.00, 0.00, -91.00);
    CreateDynamicObject(2515, 1687.93, 1203.35, 35.15,   0.00, 0.00, -91.00);
    CreateDynamicObject(2515, 1687.92, 1201.04, 35.15,   0.00, 0.00, -91.00);
    CreateDynamicObject(2741, 1688.17, 1205.47, 36.39,   0.00, 0.00, -91.00);
    CreateDynamicObject(2741, 1688.13, 1203.21, 36.39,   0.00, 0.00, -91.00);
    CreateDynamicObject(2741, 1688.15, 1200.97, 36.39,   0.00, 0.00, -91.00);
    CreateDynamicObject(19435, 1700.02, 1197.89, 34.53,   0.00, 0.00, 89.69);
    CreateDynamicObject(1523, 1699.25, 1197.87, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(19435, 1700.06, 1199.46, 34.53,   0.00, 0.00, 89.69);
    CreateDynamicObject(1523, 1699.28, 1199.40, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(19435, 1700.01, 1200.90, 34.53,   0.00, 0.00, 89.69);
    CreateDynamicObject(1523, 1699.27, 1200.92, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(19435, 1700.02, 1202.45, 34.53,   0.00, 0.00, 89.69);
    CreateDynamicObject(1523, 1699.25, 1202.42, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(19435, 1700.01, 1203.89, 34.53,   0.00, 0.00, 89.69);
    CreateDynamicObject(19435, 1699.98, 1205.39, 34.53,   0.00, 0.00, 89.69);
    CreateDynamicObject(1523, 1699.23, 1203.89, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(2738, 1700.26, 1198.68, 34.43,   0.00, 0.00, 269.00);
    CreateDynamicObject(2738, 1700.28, 1200.35, 34.43,   0.00, 0.00, 271.54);
    CreateDynamicObject(2738, 1700.29, 1201.74, 34.43,   0.00, 0.00, 271.54);
    CreateDynamicObject(2738, 1700.31, 1203.21, 34.43,   0.00, 0.00, 271.54);
    CreateDynamicObject(2738, 1700.23, 1204.73, 34.43,   0.00, 0.00, 271.54);
    CreateDynamicObject(19435, 1692.37, 1200.28, 33.09,   0.00, 0.00, 89.80);
    CreateDynamicObject(19435, 1693.13, 1201.97, 34.08,   90.00, 0.00, 180.00);
    CreateDynamicObject(19435, 1693.13, 1205.36, 34.08,   90.00, 0.00, 179.89);
    CreateDynamicObject(19435, 1692.37, 1205.42, 34.85,   0.00, -90.00, 90.00);
    CreateDynamicObject(19435, 1692.37, 1201.94, 34.85,   0.00, -90.00, 90.00);
    CreateDynamicObject(2515, 1691.82, 1201.47, 35.15,   0.00, 0.00, 89.00);
    CreateDynamicObject(2515, 1691.81, 1203.50, 35.15,   0.00, 0.00, 89.00);
    CreateDynamicObject(2515, 1691.90, 1205.86, 35.15,   0.00, 0.00, 89.00);
    CreateDynamicObject(2741, 1691.67, 1201.56, 36.39,   0.00, 0.00, 89.00);
    CreateDynamicObject(2741, 1691.71, 1203.52, 36.39,   0.00, 0.00, 89.00);
    CreateDynamicObject(2741, 1691.69, 1205.86, 36.39,   0.00, 0.00, 89.00);
    CreateDynamicObject(1523, 1691.50, 1198.59, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(1523, 1688.40, 1198.65, 33.73,   0.00, 0.00, 89.59);
    CreateDynamicObject(1502, 1696.66, 1196.96, 33.83,   0.00, 0.00, 269.97);
    CreateDynamicObject(1502, 1685.00, 1194.67, 33.83,   0.00, 0.00, 359.80);
    CreateDynamicObject(1502, 1688.86, 1197.72, 33.83,   0.00, 0.00, 360.04);
    CreateDynamicObject(19379, 1706.18, 1173.66, 33.74,   0.00, -90.00, 0.27);
    CreateDynamicObject(19379, 1716.65, 1173.68, 33.74,   0.00, -90.00, 0.27);
    CreateDynamicObject(19379, 1706.97, 1173.75, 37.23,   0.00, -90.00, 359.77);
    CreateDynamicObject(19379, 1716.33, 1202.38, 37.23,   0.00, -90.00, -0.05);
    CreateDynamicObject(19379, 1705.91, 1202.34, 37.23,   0.00, -90.00, -0.05);
    CreateDynamicObject(19379, 1685.64, 1183.53, 37.23,   0.00, -90.00, 0.02);
    CreateDynamicObject(19379, 1685.31, 1202.38, 37.23,   0.00, -90.00, 0.02);
    CreateDynamicObject(2146, 1708.78, 1179.80, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1708.78, 1181.66, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1708.77, 1183.59, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1708.90, 1185.47, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1708.83, 1187.36, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1708.76, 1189.27, 34.23,   0.00, 0.00, 90.23);
    CreateDynamicObject(2146, 1708.77, 1190.93, 34.23,   0.00, 0.00, 90.23);
    CreateDynamicObject(2146, 1708.78, 1193.08, 34.23,   0.00, 0.00, 90.35);
    CreateDynamicObject(19379, 1716.49, 1192.89, 33.74,   0.00, -90.00, 0.51);
    CreateDynamicObject(19379, 1716.45, 1183.20, 37.23,   0.00, -90.00, 0.21);
    CreateDynamicObject(19379, 1695.64, 1202.59, 33.74,   0.00, -90.00, 0.51);
    CreateDynamicObject(19379, 1706.02, 1192.87, 37.23,   0.00, -90.00, 0.51);
    CreateDynamicObject(19379, 1706.11, 1183.38, 37.23,   0.00, -90.00, 0.51);
    CreateDynamicObject(19379, 1695.97, 1183.29, 37.23,   0.00, -90.00, 0.51);
    CreateDynamicObject(19379, 1695.78, 1192.84, 37.23,   0.00, -90.00, 0.51);
    CreateDynamicObject(19379, 1685.45, 1192.89, 37.23,   0.00, -90.00, 0.51);
                     /*macas*/
    CreateDynamicObject(2146, 1711.80, 1181.77, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1711.77, 1183.67, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1711.83, 1185.44, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1711.74, 1187.38, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1711.73, 1189.18, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1711.73, 1191.04, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1711.66, 1193.00, 34.23,   0.00, 0.00, 90.29);
    CreateDynamicObject(2146, 1711.79, 1179.88, 34.23,   0.00, 0.00, 90.29);
//====================[Objetos Família Dorgados]==================================/
//==================================[HQ SK GANG]=========================================================
    CreateDynamicObject(987,1286.0996100,-1618.1992200,15.9000000,0.0000000,0.0000000,90.0000000); //object(elecfence_bar) (1)
    CreateDynamicObject(986,1286.6999500,-1605.3000500,14.4000000,0.0000000,0.0000000,90.0000000); //object(gate_autol) (1)
    CreateDynamicObject(4550,1582.9000200,-1241.5999800,347.1000100,0.0000000,0.0000000,0.0000000); //object(librtow1_lan) (1)
    CreateDynamicObject(4550,1584.4000200,-1243.5000000,558.0000000,0.0000000,0.0000000,0.0000000); //object(librtow1_lan) (2)
    CreateDynamicObject(4726,1581.9000200,-1244.0000000,750.5000000,0.0000000,348.0000000,322.0000000); //object(libtwrhelipd_lan2) (1)
    CreateDynamicObject(1319,1292.3000500,-1659.4000200,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard) (1)
    CreateDynamicObject(1319,1292.3000500,-1644.4000200,13.1000000,0.0000000,0.0000000,0.0000000); //object(ws_ref_bollard) (2)
    CreateDynamicObject(18250,1252.0000000,-1656.0999800,7.1000000,0.0000000,352.0000000,0.0000000); //object(cuntwjunk06) (1)
    CreateDynamicObject(2893,1248.0000000,-1660.9000200,12.6000000,0.0000000,0.0000000,268.0000000); //object(kmb_ramp) (31)
    CreateDynamicObject(2893,1248.0000000,-1653.8000500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (32)
    CreateDynamicObject(2893,1248.0000000,-1657.9000200,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (33)
    CreateDynamicObject(2893,1248.0000000,-1658.5000000,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (34)
    CreateDynamicObject(2893,1248.0000000,-1659.0999800,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (35)
    CreateDynamicObject(2893,1248.0000000,-1659.6999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (36)
    CreateDynamicObject(2893,1248.0000000,-1660.3000500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (37)
    CreateDynamicObject(2893,1248.0000000,-1656.6999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (38)
    CreateDynamicObject(2893,1248.0000000,-1657.3000500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (39)
    CreateDynamicObject(2893,1248.0000000,-1654.4000200,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (40)
    CreateDynamicObject(2893,1248.0000000,-1654.9000200,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (41)
    CreateDynamicObject(2893,1248.0000000,-1656.0999800,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (42)
    CreateDynamicObject(2893,1248.0000000,-1655.5000000,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (43)
    CreateDynamicObject(2893,1248.0000000,-1651.4000200,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (44)
    CreateDynamicObject(2893,1248.0000000,-1652.5999800,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (45)
    CreateDynamicObject(2893,1248.0000000,-1652.0000000,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (46)
    CreateDynamicObject(2893,1248.0000000,-1653.1999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (47)
    CreateDynamicObject(2893,1248.0000000,-1647.8000500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (48)
    CreateDynamicObject(2893,1248.0000000,-1650.1999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (49)
    CreateDynamicObject(2893,1248.0000000,-1650.8000500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (50)
    CreateDynamicObject(2893,1248.0000000,-1649.5999800,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (51)
    CreateDynamicObject(2893,1248.0000000,-1649.0000000,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (52)
    CreateDynamicObject(2893,1248.0000000,-1648.4000200,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (53)
    CreateDynamicObject(2893,1248.0000000,-1647.1999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (54)
    CreateDynamicObject(2893,1248.0000000,-1646.5000000,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (55)
    CreateDynamicObject(2893,1248.0000000,-1645.3000500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (57)
    CreateDynamicObject(2893,1248.0000000,-1645.9000200,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (58)
    CreateDynamicObject(2893,1248.0000000,-1661.5000000,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (59)
    CreateDynamicObject(2893,1247.9000200,-1662.6999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (60)
    CreateDynamicObject(2893,1247.9000200,-1662.0999800,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (61)
    CreateDynamicObject(2893,1247.9000200,-1663.4000200,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (62)
    CreateDynamicObject(2893,1247.9000200,-1664.0000000,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (64)
    CreateDynamicObject(2893,1247.9000200,-1665.4000200,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (65)
    CreateDynamicObject(2893,1247.9000200,-1666.0000000,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (66)
    CreateDynamicObject(2893,1247.9000200,-1664.6999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (67)
    CreateDynamicObject(2893,1247.9000200,-1667.1999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (68)
    CreateDynamicObject(2893,1247.9000200,-1666.6999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (69)
    CreateDynamicObject(2893,1247.9000200,-1668.1999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (70)
    CreateDynamicObject(2893,1247.9000200,-1667.6999500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (71)
    CreateDynamicObject(2893,1247.8000500,-1669.5999800,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (72)
    CreateDynamicObject(2893,1247.8000500,-1670.3000500,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (74)
    CreateDynamicObject(2893,1247.8000500,-1668.9000200,12.6000000,0.0000000,0.0000000,267.9950000); //object(kmb_ramp) (75)
    CreateDynamicObject(1215,1213.4000200,-1674.0999800,11.4000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (21)
    CreateDynamicObject(1215,1213.4000200,-1677.3000500,11.4000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (22)
    CreateDynamicObject(1215,1213.4000200,-1670.5999800,11.4000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (23)
    CreateDynamicObject(1498,1264.0000000,-1637.9000200,12.6000000,0.0000000,0.0000000,0.0000000); //object(gen_doorext03) (1)
    CreateDynamicObject(3064,1261.9000200,-1638.0999800,14.8000000,0.0000000,0.0000000,270.0000000); //object(break_wall_1a) (1)
    CreateDynamicObject(3064,1267.6999500,-1638.0999800,14.8000000,0.0000000,0.0000000,270.0000000); //object(break_wall_1a) (2)
    CreateDynamicObject(974,1283.3000500,-1659.5999800,15.3000000,0.0000000,0.0000000,90.0000000); //object(tall_fence) (8)
    CreateDynamicObject(974,1283.4000200,-1659.5999800,18.1000000,0.0000000,0.0000000,90.0000000); //object(tall_fence) (8)
    CreateDynamicObject(974,1283.4000200,-1644.4000200,15.3000000,0.0000000,0.0000000,90.0000000); //object(tall_fence) (8)
    CreateDynamicObject(974,1283.4000200,-1644.4000200,18.6000000,0.0000000,0.0000000,90.0000000); //object(tall_fence) (8)
    PortaoSkOrg = CreateDynamicObject(971,1283.4000200,-1652.0000000,16.2000000,0.0000000,0.0000000,90.0000000); //object(subwaygate) (1)
    PortaoSkOrg1 = CreateDynamicObject(975,1286.5000000,-1613.5996100,14.2000000,0.0000000,0.0000000,90.0000000); //object(columbiangate) (1)
//==============================================[Família AnonymouS]=============================================================
    PortaoStart1 = CreateDynamicObject(980,247.0000000,-1965.3000500,3.8000000,0.0000000,0.0000000,2.0000000); //object(airportgate) (1)
    PortaoStart2 = CreateDynamicObject(980,245.8000000,-2142.3000500,3.8000000,0.0000000,0.0000000,2.0000000); //object(airportgate) (2)
//==================[Objetos HQ Familia Motoqueiros]=====================================================//
	CreateDynamicObject(4563,1193.2998047,497.8994141,-155.1000061,359.9780273,0.0000000,61.9903564); //object(laskyscrap1_lan) (1)// base n coloca streamer
	CreateDynamicObject(4563,1222.6992188,482.2998047,-155.1000061,359.9780273,0.0000000,61.9903564); //object(laskyscrap1_lan) (2)//base n coloca streamer
	CreateDynamicObject(5154,1232.3000488,463.3999939,22.1000004,0.0000000,0.0000000,151.9999695); //object(dk_cargoshp03d) (1)//base do heli, sem streamer
	CreateDynamicObject(12976,1221.3994141,498.6992188,19.2999992,0.0000000,0.0000000,151.9903564); //object(sw_diner1) (1)
	CreateDynamicObject(8613,1224.0996094,470.7998047,23.5000000,0.0000000,0.0000000,241.9958496); //object(vgssstairs03_lvs) (1)
	CreateDynamicObject(6865,1228.1999512,511.2000122,25.6000004,13.4465637,343.5256348,197.9295654); //object(steerskull) (1)
	CreateDynamicObject(11547,1242.5000000,483.5996094,22.2000008,0.0000000,0.0000000,331.9958496); //object(desn_tscanopy) (2)
	CreateDynamicObject(5170,1258.0000000,513.8994141,23.1000004,0.0000000,0.0000000,331.9903564); //object(imnrmpy2_las2) (1)
	CreateDynamicObject(5170,1195.8994141,545.6992188,23.1000004,0.0000000,0.0000000,333.9953613); //object(imnrmpy2_las2) (2)
	CreateDynamicObject(17950,1215.0996094,471.6992188,21.5000000,0.0000000,0.0000000,61.9958496); //object(cjsaveg) (1)
	CreateDynamicObject(17000,1169.0999756,536.2999878,18.8999996,0.0000000,0.0000000,346.0000000); //object(wt6suppsxc) (1)
	CreateDynamicObject(11500,1225.8000488,529.9000244,19.1000004,0.0000000,0.0000000,330.0000000); //object(des_skelsignbush_) (2)
	CreateDynamicObject(984,1194.8000488,530.9000244,19.8999996,0.0000000,0.0000000,62.0000000); //object(fenceshit2) (1)
	CreateDynamicObject(984,1206.0999756,524.9000244,19.8999996,0.0000000,0.0000000,62.0000000); //object(fenceshit2) (2)
	CreateDynamicObject(984,1217.4000244,518.9000244,19.8999996,0.0000000,0.0000000,62.0000000); //object(fenceshit2) (3)
	CreateDynamicObject(983,1221.6999512,513.0999756,19.8999996,0.0000000,0.0000000,334.0000000); //object(fenceshit3) (1)
	CreateDynamicObject(1290,1186.8000488,494.6000061,25.2999992,0.0000000,0.0000000,332.0000000); //object(lamppost2) (1)
	CreateDynamicObject(1290,1209.1999512,482.3999939,25.2999992,0.0000000,0.0000000,334.0000000); //object(lamppost2) (2)
	CreateDynamicObject(1290,1255.8000488,498.7999878,25.2999992,0.0000000,0.0000000,330.0000000); //object(lamppost2) (3)
	CreateDynamicObject(1290,1203.0000000,525.7000122,25.2999992,0.0000000,0.0000000,334.0000000); //object(lamppost2) (4)
	CreateDynamicObject(1290,1180.8000488,538.2999878,25.0000000,0.0000000,0.0000000,66.0000000); //object(lamppost2) (5)
	CreateDynamicObject(1290,1157.9000244,495.0000000,25.2999992,0.0000000,0.0000000,264.0000000); //object(lamppost2) (6)
	CreateDynamicObject(1290,1216.9000244,465.6000061,25.2999992,0.0000000,0.0000000,192.0000000); //object(lamppost2) (7)
	CreateDynamicObject(996,1158.5999756,494.2999878,20.0000000,0.0000000,0.0000000,332.0000000); //object(lhouse_barrier1) (1)
	CreateDynamicObject(996,1165.9000244,490.5000000,20.0000000,0.0000000,0.0000000,332.0000000); //object(lhouse_barrier1) (2)
	CreateDynamicObject(996,1173.1999512,486.6000061,20.0000000,0.0000000,0.0000000,332.0000000); //object(lhouse_barrier1) (3)
	CreateDynamicObject(996,1180.5000000,482.7000122,20.0000000,0.0000000,0.0000000,332.0000000); //object(lhouse_barrier1) (4)
	CreateDynamicObject(996,1187.8000488,478.7999878,20.0000000,0.0000000,0.0000000,332.0000000); //object(lhouse_barrier1) (5)
	CreateDynamicObject(996,1195.0996094,474.8994141,20.0000000,0.0000000,0.0000000,331.9958496); //object(lhouse_barrier1) (6)
	CreateDynamicObject(996,1202.3994141,471.0000000,20.0000000,0.0000000,0.0000000,331.9958496); //object(lhouse_barrier1) (7)
	CreateDynamicObject(997,1209.0999756,467.5000000,19.2999992,0.0000000,0.0000000,61.9958496); //object(lhouse_barrier3) (1)
	CreateDynamicObject(996,1158.3000488,495.7999878,20.0000000,0.0000000,0.0000000,62.0000000); //object(lhouse_barrier1) (
	CreateDynamicObject(996,1162.1999512,503.1000061,20.0000000,0.0000000,0.0000000,62.0000000); //object(lhouse_barrier1) (9)
	CreateDynamicObject(996,1166.0996094,510.3994141,20.0000000,0.0000000,0.0000000,61.9958496); //object(lhouse_barrier1) (10)
	CreateDynamicObject(996,1170.0000000,517.7000122,20.0000000,0.0000000,0.0000000,62.0000000); //object(lhouse_barrier1) (11)
	CreateDynamicObject(996,1173.9000244,525.0000000,20.0000000,0.0000000,0.0000000,62.0000000); //object(lhouse_barrier1) (12)
	CreateDynamicObject(994,1177.5000000,531.7000122,19.3999996,0.0000000,0.0000000,62.0000000); //object(lhouse_barrier2) (1)
	CreateDynamicObject(984,1242.5999756,475.2000122,19.8999996,0.0000000,0.0000000,332.0000000); //object(fenceshit2) (4)
	CreateDynamicObject(984,1248.5999756,486.5000000,19.8999996,0.0000000,0.0000000,332.0000000); //object(fenceshit2) (5)
	CreateDynamicObject(983,1185.5999756,536.4000244,18.8999996,0.0000000,298.0000000,62.0000000); //object(fenceshit3) (2)
	CreateDynamicObject(1496,1227.1999512,511.3999939,19.2999992,0.0000000,0.0000000,332.0000000); //object(gen_doorshop02) (1)
	CreateDynamicObject(3524,1269.0000000,500.5000000,21.7999992,0.0000000,0.0000000,62.0000000); //object(skullpillar01_lvs) (1)
	CreateDynamicObject(3524,1172.1999512,549.0999756,21.7999992,0.0000000,0.0000000,245.9958496); //object(skullpillar01_lvs) (2)
	CreateDynamicObject(3524,2335.3999023,-1373.9000244,25.8999996,0.0000000,0.0000000,0.0000000); //object(skullpillar01_lvs) (5)
	CreateDynamicObject(3524,1249.0999756,502.0000000,22.1000004,0.0000000,0.0000000,149.9958496); //object(skullpillar01_lvs) (6)
	CreateDynamicObject(3524,1239.0999756,507.3999939,22.1000004,0.0000000,0.0000000,149.9908447); //object(skullpillar01_lvs) (7)
	CreateDynamicObject(3524,1197.1999512,537.0999756,21.7999992,0.0000000,0.0000000,245.9948730); //object(skullpillar01_lvs) (2)
	CreateDynamicObject(3524,1216.0000000,527.7999878,21.7999992,0.0000000,0.0000000,335.9948730); //object(skullpillar01_lvs) (2)
	CreateDynamicObject(3524,1236.3000488,517.2999878,21.7999992,0.0000000,0.0000000,67.9948425); //object(skullpillar01_lvs) (2)
	CreateDynamicObject(8615,2346.8000488,-1353.3000488,24.3999996,0.0000000,0.0000000,180.0000000); //object(vgssstairs04_lvs) (1)

//FIM OBJETOS - Brasil PlayStart OWNAAAA

//====================================[CARROS CASAS '-']================================================
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        AddStaticVehicleEx(HouseInfo[h][hVec], HouseCarSpawns[h][0], HouseCarSpawns[h][1], HouseCarSpawns[h][2], HouseCarSpawns[h][3], HouseInfo[h][hVcol1], HouseInfo[h][hVcol2], 6000000);
		VTrancado[h+1] = 1;
		LockCar(h+1);
		SetVehicleToRespawn(h+1);
	}//100
 	getdate(AnoGMX, MesGMX, DiaGMX);
    gettime(HoraGMX, MinutoGMX, SegundoGMX);
//|========================================[carro dos policiais]==================================|
    CopCarros[0] = AddStaticVehicleEx(599,-1328.0099,442.6858,7.3714,359.9912,84,86,-1); // Carro PM 2	[ 10 ]
    CopCarros[1] = AddStaticVehicleEx(599,-1333.0212,442.3375,7.3758,2.1526,84,86,-1); // Carro PM 3	[ 11 ]
    CopCarros[2] = AddStaticVehicleEx(427,890.64086914,-1050.24877930,31.84956169,0.00000000,0,0,-1); //Enforcer [709]
	CopCarros[3] = AddStaticVehicleEx(427,886.56518555,-1050.48242188,31.84956169,0.00000000,0,0,-1); //Enforcer [710]
	CopCarros[4] = AddStaticVehicleEx(490,918.08789062,-1050.51257324,31.92168808,0.00000000,0,0,-1); //FBI Rancher
	CopCarros[5] = AddStaticVehicleEx(490,921.95410156,-1050.40393066,31.92168808,0.00000000,0,0,-1); //FBI Rancher
	CopCarros[6] = AddStaticVehicleEx(528,882.90643311,-1050.87268066,31.78656197,0.00000000,0,0,-1); //FBI Truck [713]
	CopCarros[7] = AddStaticVehicleEx(596,936.11962891,-1051.21643066,31.42156219,0.00000000,0,0,-1); //Police Car (LSPD) [ 253 ]
	CopCarros[8] = AddStaticVehicleEx(596,939.39343262,-1051.32568359,31.42156219,0.00000000,0,0,-1); //Police Car (LSPD)
	CopCarros[9] = AddStaticVehicleEx(560,893.91052246,-1051.32763672,31.40653801,0.00000000,0,0,-1); //Sultan
	CopCarros[10] = AddStaticVehicleEx(560,897.14569092,-1051.31799316,31.40653801,0.00000000,0,0,-1); //Sultan
	CopCarros[11] = AddStaticVehicleEx(497,909.24542236,-1048.47021484,30.36656189,268.00000000,0,0,-1); //Police Maverick
	CopCarros[12] = AddStaticVehicleEx(596,932.90863037,-1051.01904297,31.42156219,0.00000000,0,0,-1); //Police Car (LSPD)       [ 260 ]
	CopCarros[13] = AddStaticVehicleEx(599,929.27374268,-1051.01000977,31.98668861,0.00000000,0,0,-1); // Buzao PC  1         [ 261 ]
	CopCarros[14] = AddStaticVehicleEx(565,568.45487987,-745.4578895,893.78784545,178.8757456456,24,24,-1); //Flash        [ 262 ]
	CopCarros[15] = AddStaticVehicleEx(490,-1318.1759,442.7737,6.9092,0.1953,84,86,-1); // PF Blazer Exercito 1     [ 263 ]
	CopCarros[16] = AddStaticVehicleEx(490,-1321.9979,442.7289,6.9051,0.5913,84,86,-1); // PF Blazer Exercito 2      [ 264 ]
	CopCarros[17] = AddStaticVehicleEx(522,-1260.6849,441.6769,6.7520,358.8597,84,86,-1); // Moto Exercito 1        [ 265 ]
	CopCarros[18] = AddStaticVehicleEx(522,-1259.3337,441.9116,6.7533,0.8075,84,86,-1); // Moto Exercito 2       [ 266 ]
	CopCarros[19] = AddStaticVehicleEx(599,925.89892578,-1050.69299316,31.98668861,0.00000000,0,0,-1); // moto POLICIA FEDERAL 1 [ 164 ]
	CopCarros[20] = AddStaticVehicleEx(601,879.07922363,-1050.56762695,31.53177071,0.00000000,0,0,-1); // moto POLICIA FEDERAL 10[ 165 ]
    CopCarros[21] = AddStaticVehicleEx(430,854.8184,-1894.2112,0.1390,178.1219,1,1,-1); // Barco Polícia 1 [403]
    CopCarros[22] = AddStaticVehicleEx(430,863.1559,-1894.9730,0.2773,168.4085,1,1,-1); // Barco Polícia 2 [404]
    CopCarros[23] = AddStaticVehicleEx(430,-1281.3181,484.5999,-0.0936,272.9496,84,86,-1); // Barco Polícia Exercito 1 [405]
    CopCarros[24] = AddStaticVehicleEx(430,-1246.3315,485.5948,-0.1980,269.0950,84,86,-1); // Barco Polícia Exercito 2 [406]
    CopCarros[25] = AddStaticVehicleEx(522,926.27014160,-1038.32019043,31.55881500,180.00000000,0,0,-1); //NRG-500 [456]
	CopCarros[26] = AddStaticVehicleEx(522,927.45361328,-1038.34875488,31.55881500,180.00000000,0,0,-1); //NRG-500
	CopCarros[27] = AddStaticVehicleEx(522,928.74822998,-1038.38793945,31.55881500,180.00000000,0,0,-1); //NRG-500
	CopCarros[28] = AddStaticVehicleEx(523,908.53784180,-1039.29785156,31.55881500,178.00000000,0,0,-1); //HPV1000
	CopCarros[29] = AddStaticVehicleEx(523,910.04083252,-1039.30261230,31.55881500,177.99499512,0,0,-1); //HPV1000
	CopCarros[30] = AddStaticVehicleEx(523,911.69934082,-1039.20678711,31.55881500,177.99499512,0,0,-1); //HPV1000
	CopCarros[31] = AddStaticVehicleEx(523,913.16876221,-1039.26989746,31.55881500,177.99499512,0,0,-1); //HPV1000
	CopCarros[32] = AddStaticVehicleEx(431,883.81347656,-1029.58166504,32.15541840,180.00000000,0,0,-1); //Bus
	CopCarros[33] = AddStaticVehicleEx(523,914.39221191,-1039.28161621,31.55881500,177.99499512,0,0,-1); //HPV1000
	CopCarros[34] = AddStaticVehicleEx(523,915.89965820,-1039.13244629,31.55881500,177.99499512,0,0,-1); //HPV1000
	CopCarros[35] = AddStaticVehicleEx(523,917.55010986,-1039.21154785,31.55881500,177.99499512,0,0,-1); //HPV1000
	CopCarros[36] = AddStaticVehicleEx(523,919.25335693,-1039.24523926,31.55881500,177.99499512,0,0,-1); //HPV1000
	CopCarros[37] = AddStaticVehicleEx(522,923.37500000,-1038.22680664,31.55881500,180.00000000,0,0,-1); //NRG-500
	CopCarros[38] = AddStaticVehicleEx(522,924.76763916,-1038.30371094,31.55881500,180.00000000,0,0,-1); //NRG-500
    CopCarros[39] = AddStaticVehicleEx(520,-1439.5743,496.0575,18.9576,268.8588,84,86,-1); // hydra exercito 1 	[ 267 ]
	CopCarros[40] = AddStaticVehicleEx(520,-1439.6023,507.2350,18.9611,270.9881,84,86,-1); // hydra exercito 2 	[ 268 ]
	CopCarros[41] = AddStaticVehicleEx(497,-1424.2408,501.4596,18.9443,269.9571,84,86,-1); // Heli exercito 3     [ 269 ]
	CopCarros[42] = AddStaticVehicleEx(596,-1310.8818,442.9997,6.9083,0.0227,84,86,-1); // carro exercito 1        [ 270 ]
	CopCarros[43] = AddStaticVehicleEx(596,-1314.8569,442.9108,6.9084,0.0141,84,86,-1); // carro exercito 2        [ 271 ]
	CopCarros[44] = AddStaticVehicleEx(596,-1305.2025,443.2693,7.1818,0.2254,84,86,-1); // carro exercito 3       [ 272 ]
	CopCarros[45] = AddStaticVehicleEx(596,-1301.4465,443.3131,7.1805,359.7649,84,86,-1); // carro exercito 4     [ 273 ]
	CopCarros[46] = AddStaticVehicleEx(470,-1297.4910,443.2412,7.1766,359.0308,84,86,-1); // carro exercito 5     [ 274 ]
	CopCarros[47] = AddStaticVehicleEx(470,-1293.7415,443.2815,7.1750,1.7500,84,86,-1); // carro exercito 6       [ 275 ]
	CopCarros[48] = AddStaticVehicleEx(427,-1288.4304,443.4527,7.6149,1.4529,84,86,-1); // carro exercito 7       [ 276 ]
	CopCarros[49] = AddStaticVehicleEx(427,-1283.3462,443.5902,7.6176,3.1533,84,86,-1); // carro exercito 8       [ 277 ]
	CopCarros[50] = AddStaticVehicleEx(432,-1274.5656,442.1898,7.1933,0.0703,84,86,-1); // tanque exercito 1      [ 278 ]
	CopCarros[51] = AddStaticVehicleEx(432,-1268.6372,442.3636,7.1937,1.8517,84,86,-1); // tanque exercito 2      [ 279 ]
	CopCarros[52] = AddStaticVehicleEx(522,-1263.3849,441.7906,6.7517,359.7232,84,86,-1); // moto exercito 1      [ 280 ]
	CopCarros[53] = AddStaticVehicleEx(522,-1262.0275,441.7494,6.7517,1.2986,84,86,-1); // moto exercito 2        [ 281 ]
    CopCarros[54] = AddStaticVehicleEx(425,-1409.2609,495.0441,18.7895,268.4792,84,86,-1); // Hunter Exe    [517]
    CopCarros[55] = AddStaticVehicleEx(425,-1410.9385,507.8558,18.8056,272.2986,84,86,-1); // Hunter Exe2    [518]
    CopCarros[56] = AddStaticVehicleEx(427,864.79998779,-1249.69995117,15.10000038,274.00000000,0,6,-1); //Enforcer
    CopCarros[57] = AddStaticVehicleEx(427,864.79998779,-1244.30004883,15.10000038,270.00000000,0,6,-1); //Enforcer
    CopCarros[58] = AddStaticVehicleEx(490,864.20001221,-1238.19995117,15.19999981,272.00000000,0,6,-1); //FBI Rancher
    CopCarros[59] = AddStaticVehicleEx(528,881.00000000,-1199.09997559,17.20000076,176.00000000,0,6,-1); //FBI Truck
    CopCarros[60] = AddStaticVehicleEx(596,860.79998779,-1206.30004883,16.79999924,180.00000000,0,6,-1); //Police Car (LSPD)
    CopCarros[61] = AddStaticVehicleEx(596,866.20001221,-1206.19995117,16.79999924,180.00000000,0,6,-1); //Police Car (LSPD)
    CopCarros[62] = AddStaticVehicleEx(596,871.29998779,-1206.40002441,16.79999924,176.00000000,0,6,-1); //Police Car (LSPD)
    CopCarros[63] = AddStaticVehicleEx(599,864.50000000,-1259.09997559,15.10000038,274.00000000,0,6,-1); //Police Ranger
    CopCarros[64] = AddStaticVehicleEx(599,864.59997559,-1254.19995117,15.30000019,274.00000000,0,6,-1); //Police Ranger
    CopCarros[65] = AddStaticVehicleEx(497,833.09997559,-1217.19995117,17.20000076,0.00000000,0,6,-1); //Police Maverick
    CopCarros[66] = AddStaticVehicleEx(497,849.09997559,-1217.30004883,17.20000076,0.00000000,0,6,-1); //Police Maverick
    CopCarros[67] = AddStaticVehicleEx(470,886.90002441,-1199.50000000,17.10000038,178.00000000,0,6,-1); //Patriot
    CopCarros[68] = AddStaticVehicleEx(437,868.79998779,-1279.19995117,14.89999962,0.00000000,0,6,-1); //Coach
    CopCarros[69] = AddStaticVehicleEx(523,899.09997559,-1271.09997559,14.39999962,0.00000000,0,6,-1); //HPV1000
    CopCarros[70] = AddStaticVehicleEx(523,897.00000000,-1270.90002441,14.39999962,0.00000000,0,6,-1); //HPV1000
    CopCarros[71] = AddStaticVehicleEx(523,894.59997559,-1270.80004883,14.39999962,0.00000000,0,6,-1); //HPV1000
    CopCarros[72] = AddStaticVehicleEx(522,901.20001221,-1271.80004883,14.30000019,0.00000000,0,6,-1); //NRG-500
    CopCarros[73] = AddStaticVehicleEx(525,874.20001221,-1269.00000000,14.80000019,0.00000000,0,6,-1); //Tow Truck
    CopCarros[74] = AddStaticVehicleEx(525,883.90002441,-1268.69995117,14.69999981,0.00000000,0,6,-1); //Tow Truck
    CopCarros[75] = AddStaticVehicleEx(525,889.29998779,-1269.19995117,14.69999981,0.00000000,0,6,-1); //Tow Truck
    CopCarros[76] = AddStaticVehicleEx(525,879.09997559,-1268.00000000,14.69999981,0.00000000,0,6,-1); //Tow Truck
    CopCarros[77] = AddStaticVehicleEx(411,893.79998779,-1207.80004883,16.79999924,176.00000000,0,6,-1); //Infernus
    CopCarros[78] = AddStaticVehicleEx(560,898.70001221,-1207.90002441,16.79999924,172.00000000,0,6,-1); //Sultan
//============================================[Carros HQ PM]==========================================================//
    CopCarros[79] = AddStaticVehicleEx(427,1538.50000000,-1648.00000000,6.09999990,180.00000000,1,79,-1); //Enforcer
    CopCarros[80] = AddStaticVehicleEx(596,1544.69921875,-1667.69921875,5.69999981,90.00000000,1,79,-1); //Police Car (LSPD)
    CopCarros[81] = AddStaticVehicleEx(596,1544.89941406,-1659.29980469,5.69999981,90.00000000,1,79,-1); //Police Car (LSPD)
    CopCarros[82] = AddStaticVehicleEx(596,1544.89941406,-1676.29980469,5.69999981,90.00000000,1,79,-1); //Police Car (LSPD)
    CopCarros[83] = AddStaticVehicleEx(523,1545.09960938,-1684.69921875,5.59999990,85.99548340,1,79,-1); //HPV1000
    CopCarros[84] = AddStaticVehicleEx(528,1558.69921875,-1710.79980469,6.09999990,0.00000000,1,79,-1); //FBI Truck
    CopCarros[85] = AddStaticVehicleEx(599,1574.39941406,-1710.09960938,6.30000019,0.00000000,1,79,-1); //Police Ranger
    CopCarros[86] = AddStaticVehicleEx(599,1578.69921875,-1709.79980469,6.30000019,0.00000000,1,79,-1); //Police Ranger
    CopCarros[87] = AddStaticVehicleEx(490,1587.30004883,-1710.30004883,6.19999981,0.00000000,1,79,-1); //FBI Rancher
    CopCarros[88] = AddStaticVehicleEx(490,1601.59960938,-1699.69921875,6.19999981,90.00000000,1,79,-1); //FBI Rancher
    CopCarros[89] = AddStaticVehicleEx(596,1601.40002441,-1692.09997559,5.69999981,90.00000000,1,79,-1); //Police Car (LSPD)
    CopCarros[90] = AddStaticVehicleEx(596,1601.50000000,-1687.80004883,5.69999981,90.00000000,1,79,-1); //Police Car (LSPD)
    CopCarros[91] = AddStaticVehicleEx(596,1601.59997559,-1683.90002441,5.69999981,90.00000000,1,79,-1); //Police Car (LSPD)
    CopCarros[92] = AddStaticVehicleEx(523,1604.69995117,-1624.09997559,13.19999981,88.00000000,1,79,-1); //HPV1000
    CopCarros[93] = AddStaticVehicleEx(523,1604.59960938,-1620.89941406,13.19999981,87.99499512,1,79,-1); //HPV1000
    CopCarros[94] = AddStaticVehicleEx(523,1604.80004883,-1617.40002441,13.19999981,87.99499512,1,79,-1); //HPV1000
    CopCarros[95] = AddStaticVehicleEx(523,1604.59997559,-1614.19995117,13.19999981,87.99499512,1,79,-1); //HPV1000
    CopCarros[96] = AddStaticVehicleEx(523,1604.69995117,-1610.80004883,13.19999981,87.99499512,1,79,-1); //HPV1000
    CopCarros[97] = AddStaticVehicleEx(522,1604.59960938,-1627.29980469,13.19999981,85.99548340,1,79,-1); //NRG-500
    CopCarros[98] = AddStaticVehicleEx(522,1604.19995117,-1630.30004883,13.19999981,85.99645996,1,79,-1); //NRG-500
    CopCarros[99] = AddStaticVehicleEx(431,1600.29980469,-1605.69921875,13.69999981,90.00000000,1,79,-1); //Bus
    CopCarros[100] = AddStaticVehicleEx(596,1569.09997559,-1607.09997559,13.19999981,180.00000000,1,79,-1); //Police Car (LSPD)
    CopCarros[101] = AddStaticVehicleEx(596,1580.89941406,-1606.59960938,13.19999981,180.00000000,1,79,-1); //Police Car (LSPD)
    CopCarros[102] = AddStaticVehicleEx(596,1575.19995117,-1606.69995117,13.19999981,180.00000000,1,79,-1); //Police Car (LSPD)
    CopCarros[103] = AddStaticVehicleEx(599,1563.19995117,-1607.30004883,13.80000019,180.00000000,1,79,-1); //Police Ranger
    CopCarros[104] = AddStaticVehicleEx(599,1557.69995117,-1606.80004883,13.80000019,180.00000000,1,79,-1); //Police Ranger
    CopCarros[105] = AddStaticVehicleEx(596,1565.19995117,-1710.09997559,5.69999981,358.00000000,1,79,-1); //Police Car (LSPD)
    CopCarros[106] = AddStaticVehicleEx(497,1568.69995117,-1647.00000000,28.70000076,0.00000000,1,79,-1); //Police Maverick
    CopCarros[107] = AddStaticVehicleEx(497,1555.69995117,-1643.09997559,28.70000076,0.00000000,1,79,-1); //Police Maverick
    CopCarros[108] = AddStaticVehicle(427,1530.2258,-1647.0956,6.0299,181.7247,1,79);
	//================================[Carros HQ R.O.T.A]==============================================//
    CopCarros[109] = AddStaticVehicleEx(427,304.00000000,-1487.40002441,24.79999924,235.99731445,0,0,-1); //Enforcer
    CopCarros[110] = AddStaticVehicleEx(528,299.79998779,-1490.50000000,24.79999924,234.00000000,0,0,-1); //FBI Truck
    CopCarros[111] = AddStaticVehicleEx(490,300.70001221,-1504.30004883,24.89999962,236.00000000,0,0,-1); //FBI Rancher
    CopCarros[112] = AddStaticVehicleEx(490,297.70001221,-1509.00000000,24.89999962,235.99731445,0,0,-1); //FBI Rancher
    CopCarros[113] = AddStaticVehicleEx(599,295.00000000,-1513.59997559,25.00000000,236.00000000,0,0,-1); //Police Ranger
    CopCarros[114] = AddStaticVehicleEx(599,292.00000000,-1518.69995117,25.00000000,235.99731445,0,0,-1); //Police Ranger
    CopCarros[115] = AddStaticVehicleEx(596,286.20001221,-1527.69995117,24.39999962,236.00000000,0,0,-1); //Police Car (LSPD)
    CopCarros[116] = AddStaticVehicleEx(596,289.10000610,-1523.30004883,24.39999962,235.99731445,0,0,-1); //Police Car (LSPD)
    CopCarros[117] = AddStaticVehicleEx(596,283.00000000,-1532.30004883,24.39999962,235.99731445,0,0,-1); //Police Car (LSPD)
    CopCarros[118] = AddStaticVehicleEx(596,279.70001221,-1536.90002441,24.39999962,235.99731445,0,0,-1); //Police Car (LSPD)
    CopCarros[119] = AddStaticVehicleEx(411,291.60000610,-1544.09997559,24.39999962,56.00000000,0,0,-1); //Infernus
    CopCarros[120] = AddStaticVehicleEx(596,297.10000610,-1535.50000000,24.39999962,56.00000000,0,0,-1); //Police Car (LSPD)
    CopCarros[121] = AddStaticVehicleEx(596,294.10000610,-1539.69995117,24.39999962,55.99731445,0,0,-1); //Police Car (LSPD)
    CopCarros[122] = AddStaticVehicleEx(522,324.89999390,-1495.00000000,24.60000038,52.00000000,0,0,-1); //NRG-500
    CopCarros[123] = AddStaticVehicleEx(522,323.60000610,-1496.59997559,24.60000038,52.00000000,0,0,-1); //NRG-500
    CopCarros[124] = AddStaticVehicleEx(522,322.39999390,-1499.19995117,24.60000038,51.99829102,0,0,-1); //NRG-500
    CopCarros[125] = AddStaticVehicleEx(523,316.89999390,-1506.19995117,24.60000038,58.00000000,0,0,-1); //HPV1000
    CopCarros[126] = AddStaticVehicleEx(523,315.50000000,-1508.19995117,24.60000038,57.99682617,0,0,-1); //HPV1000
    CopCarros[127] = AddStaticVehicleEx(523,314.00000000,-1510.50000000,24.60000038,57.99682617,0,0,-1); //HPV1000
    CopCarros[128] = AddStaticVehicleEx(523,312.39999390,-1512.69995117,24.60000038,57.99682617,0,0,-1); //HPV1000
    CopCarros[129] = AddStaticVehicleEx(523,310.50000000,-1515.09997559,24.60000038,57.99682617,0,0,-1); //HPV1000
    CopCarros[130] = AddStaticVehicleEx(523,308.50000000,-1517.90002441,24.60000038,57.99682617,0,0,-1); //HPV1000
    CopCarros[131] = AddStaticVehicleEx(497,349.10000610,-1478.80004883,76.80000305,30.00000000,0,0,-1); //Police Maverick
    CopCarros[132] = AddStaticVehicleEx(497,335.60000610,-1487.09997559,76.80000305,33.99816895,0,0,-1); //Police Maverick
	CopCarros[133] = AddStaticVehicleEx(427,307.39999390,-1482.80004883,24.79999924,236.00000000,0,0,-1); //Enforcer

	CopCarros[134] = AddStaticVehicleEx(597,1249.3000000,-1809.0000000,13.3000000,180.0000000,0,0,-1); //Police Car (SFPD)
	CopCarros[135] = AddStaticVehicleEx(597,1245.8000000,-1811.2000000,13.3000000,180.0000000,0,0,-1); //Police Car (SFPD)
	CopCarros[136] = AddStaticVehicleEx(597,1242.0000000,-1812.8000000,13.3000000,180.0000000,0,0,-1); //Police Car (SFPD)
	CopCarros[137] = AddStaticVehicleEx(597,1238.2998000,-1814.2998000,13.3300000,180.0000000,0,0,-1); //Police Car (SFPD)
	CopCarros[138] = AddStaticVehicleEx(497,1205.5000000,-1788.4000000,33.9000000,90.0000000,0,0,-1); //Police Maverick
	CopCarros[139] = AddStaticVehicleEx(497,1196.9000000,-1802.2000000,33.9000000,90.0000000,0,0,-1); //Police Maverick
	CopCarros[140] = AddStaticVehicleEx(597,1252.9000000,-1806.4000000,13.3000000,180.0000000,0,0,-1); //Police Car (SFPD)
	CopCarros[141] = AddStaticVehicleEx(597,1256.4000000,-1803.9000000,13.3000000,180.0000000,0,0,-1); //Police Car (SFPD)
	CopCarros[142] = AddStaticVehicleEx(597,1259.2998000,-1799.2998000,13.3000000,180.0000000,0,0,-1); //Police Car (SFPD)
	CopCarros[143] = AddStaticVehicleEx(427,1200.1000000,-1827.7000000,13.7000000,270.0000000,0,0,-1); //Enforcer
	CopCarros[144] = AddStaticVehicleEx(427,1200.0000000,-1831.9000000,13.7000000,270.0000000,0,0,-1); //Enforcer
	CopCarros[145] = AddStaticVehicleEx(522,1210.5000000,-1821.2002000,13.3000000,180.0000000,0,0,-1); //NRG-500
	CopCarros[146] = AddStaticVehicleEx(522,1209.2000000,-1821.3000000,13.3000000,180.0000000,0,0,-1); //NRG-500
	CopCarros[147] = AddStaticVehicleEx(523,1206.4000000,-1821.3000000,13.3000000,180.0000000,0,0,-1); //HPV1000
	CopCarros[148] = AddStaticVehicleEx(523,1205.0000000,-1821.4000000,13.3000000,180.0000000,0,0,-1); //HPV1000
	CopCarros[149] = AddStaticVehicleEx(523,1203.7000000,-1821.4000000,13.3000000,180.0000000,0,0,-1); //HPV1000
	CopCarros[150] = AddStaticVehicleEx(523,1202.5000000,-1821.4000000,13.2000000,180.0000000,0,0,-1); //HPV1000
	CopCarros[151] = AddStaticVehicleEx(523,1201.4000000,-1821.3000000,13.2000000,180.0000000,0,0,-1); //HPV1000
	CopCarros[152] = AddStaticVehicleEx(523,1200.1000000,-1821.3000000,13.2000000,180.0000000,0,0,-1); //HPV1000
	CopCarros[153] = AddStaticVehicleEx(597,1262.5000000,-1796.0000000,13.3000000,180.0000000,0,0,-1); //Police Car (SFPD)
	CopCarros[154] = AddStaticVehicleEx(523,1198.7000000,-1821.1000000,13.2000000,180.0000000,0,0,-1); //HPV1000
	CopCarros[155] = AddStaticVehicleEx(523,1197.5000000,-1821.2000000,13.2000000,180.0000000,0,0,-1); //HPV1000
	CopCarros[156] = AddStaticVehicleEx(490,1277.1000000,-1791.5000000,13.9000000,180.0000000,0,0,-1); //FBI Rancher
	CopCarros[157] = AddStaticVehicleEx(490,1270.1000000,-1791.5000000,13.9000000,180.0000000,0,0,-1); //FBI Rancher
	CopCarros[158] = AddStaticVehicleEx(490,1273.6000000,-1791.5000000,13.9000000,180.0000000,0,0,-1); //FBI Rancher
	CopCarros[159] = AddStaticVehicleEx(490,1280.9000000,-1791.6000000,13.9000000,180.0000000,0,0,-1); //FBI Rancher
	CopCarros[160] = AddStaticVehicleEx(601,1278.6000000,-1806.2000000,13.3000000,90.0000000,0,0,-1); //S.W.A.T. Van
	CopCarros[161] = AddStaticVehicleEx(431,1201.4000000,-1835.3000000,13.6000000,270.0000000,0,0,-1); //Bus
	CopCarros[162] = AddStaticVehicleEx(528,1279.0000000,-1810.3000000,13.6000000,90.0000000,0,0,-1); //FBI Truck
	CopCarros[163] = AddStaticVehicleEx(522,1208.0000000,-1821.3000000,13.3000000,180.0000000,0,0,-1); //NRG-500
	//Policia Florestal
	CopCarros[164] = AddStaticVehicleEx(596,-1187.3000000,-915.3000000,129.3000000,204.0000000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[165] = AddStaticVehicleEx(596,-1183.5000000,-914.5000000,129.3000000,203.9940000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[166] = AddStaticVehicleEx(596,-1179.0000000,-913.6000000,129.3000000,203.9890000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[167] = AddStaticVehicleEx(596,-1175.5000000,-913.3000000,129.3000000,203.9830000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[168] = AddStaticVehicleEx(596,-1171.3000000,-912.8000000,129.3000000,203.9830000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[169] = AddStaticVehicleEx(596,-1183.9000000,-929.7000000,129.3000000,22.0000000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[170] = AddStaticVehicleEx(596,-1180.4000000,-928.2000000,129.3000000,21.9950000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[171] = AddStaticVehicleEx(596,-1176.6000000,-926.6000000,129.3000000,21.9950000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[172] = AddStaticVehicleEx(596,-1173.0000000,-925.0000000,129.3000000,21.9950000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[173] = AddStaticVehicleEx(596,-1170.1000000,-923.7000000,129.3000000,21.9950000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[174] = AddStaticVehicleEx(596,-1167.3000000,-922.7000000,129.3000000,21.9950000,-1,-1,RESPAWN_TIME); //Police Car (LSPD)
    CopCarros[175] = AddStaticVehicleEx(597,-1138.3000000,-912.6000000,129.1000000,174.0000000,-1,-1,RESPAWN_TIME); //Police Car (SFPD)
    CopCarros[176] = AddStaticVehicleEx(597,-1134.2000000,-912.8000000,129.1000000,173.9960000,-1,-1,RESPAWN_TIME); //Police Car (SFPD)
    CopCarros[177] = AddStaticVehicleEx(597,-1130.2000000,-913.2000000,129.1000000,173.9960000,-1,-1,RESPAWN_TIME); //Police Car (SFPD)
    CopCarros[178] = AddStaticVehicleEx(597,-1125.7000000,-913.8000000,129.1000000,173.9960000,-1,-1,RESPAWN_TIME); //Police Car (SFPD)
    CopCarros[179] = AddStaticVehicleEx(597,-1120.5000000,-914.5000000,129.1000000,173.9960000,-1,-1,RESPAWN_TIME); //Police Car (SFPD)
    CopCarros[180] = AddStaticVehicleEx(598,-1009.5000000,-989.8000000,129.3000000,110.0000000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
    CopCarros[181] = AddStaticVehicleEx(598,-1008.6000000,-994.1000000,129.3000000,109.9950000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
    CopCarros[182] = AddStaticVehicleEx(598,-1007.3000000,-999.2000000,129.3000000,109.9900000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
    CopCarros[183] = AddStaticVehicleEx(598,-1006.5000000,-1003.8000000,129.3000000,109.9840000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
    CopCarros[184] = AddStaticVehicleEx(598,-1006.1000000,-1007.3000000,129.3000000,109.9790000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
    CopCarros[185] = AddStaticVehicleEx(598,-1006.3000000,-1010.4000000,129.3000000,109.9730000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
    CopCarros[186] = AddStaticVehicleEx(598,-1006.0000000,-1014.1000000,129.3000000,109.9680000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
    CopCarros[187] = AddStaticVehicleEx(490,-1007.7000000,-1057.5000000,129.5000000,0.0000000,-1,-1,RESPAWN_TIME); //FBI Rancher
    CopCarros[188] = AddStaticVehicleEx(490,-1012.8000000,-1057.3000000,129.5000000,0.0000000,-1,-1,RESPAWN_TIME); //FBI Rancher
    CopCarros[189] = AddStaticVehicleEx(490,-1017.6000000,-1057.4000000,129.5000000,0.0000000,-1,-1,RESPAWN_TIME); //FBI Rancher
    CopCarros[190] = AddStaticVehicleEx(490,-1023.2000000,-1057.5000000,129.5000000,0.0000000,-1,-1,RESPAWN_TIME); //FBI Rancher
    CopCarros[191] = AddStaticVehicleEx(490,-1028.0000000,-1057.1000000,129.5000000,0.0000000,-1,-1,RESPAWN_TIME); //FBI Rancher
    CopCarros[192] = AddStaticVehicleEx(427,-1036.7000000,-1054.6000000,129.5000000,0.0000000,-1,-1,RESPAWN_TIME); //Enforcer
    CopCarros[193] = AddStaticVehicleEx(427,-1042.0000000,-1055.0000000,129.5000000,0.0000000,-1,-1,RESPAWN_TIME); //Enforcer
    CopCarros[194] = AddStaticVehicleEx(427,-1047.4000000,-1055.2000000,129.5000000,0.0000000,-1,-1,RESPAWN_TIME); //Enforcer
    CopCarros[195] = AddStaticVehicleEx(497,-1071.6000000,-930.2000000,130.0000000,90.0000000,-1,-1,RESPAWN_TIME); //Police Maverick
    CopCarros[196] = AddStaticVehicleEx(497,-1071.8000000,-941.2000000,130.0000000,90.0000000,-1,-1,RESPAWN_TIME); //Police Maverick
    CopCarros[197] = AddStaticVehicleEx(523,-1120.5000000,-1063.8000000,129.0000000,0.0000000,-1,-1,RESPAWN_TIME); //HPV1000
    CopCarros[198] = AddStaticVehicleEx(523,-1123.0000000,-1063.6000000,129.0000000,0.0000000,-1,-1,RESPAWN_TIME); //HPV1000
    CopCarros[199] = AddStaticVehicleEx(523,-1125.4000000,-1063.4000000,129.0000000,0.0000000,-1,-1,RESPAWN_TIME); //HPV1000
    CopCarros[200] = AddStaticVehicleEx(523,-1127.6000000,-1063.4000000,129.0000000,0.0000000,-1,-1,RESPAWN_TIME); //HPV1000
    CopCarros[201] = AddStaticVehicleEx(523,-1129.9000000,-1063.3000000,129.0000000,0.0000000,-1,-1,RESPAWN_TIME); //HPV1000
    CopCarros[202] = AddStaticVehicleEx(523,-1132.7000000,-1063.1000000,129.0000000,0.0000000,-1,-1,RESPAWN_TIME); //HPV1000
    CopCarros[203] = AddStaticVehicleEx(523,-1135.2000000,-1063.3000000,129.0000000,0.0000000,-1,-1,RESPAWN_TIME); //HPV1000
    CopCarros[204] = AddStaticVehicleEx(523,-1137.7000000,-1063.5000000,129.0000000,0.0000000,-1,-1,RESPAWN_TIME); //HPV1000
    CopCarros[205] = AddStaticVehicleEx(522,-1102.1552,-1062.2720,128.7885,181.7325,0,0,RESPAWN_TIME); //NRG
    CopCarros[206] = AddStaticVehicleEx(522,-1099.3322,-1062.4066,128.7905,179.7574,0,0,RESPAWN_TIME); //NRG
    CopCarros[207] = AddStaticVehicleEx(522,-1096.7566,-1062.3325,128.7890,179.4432,0,0,RESPAWN_TIME); //NRG
    CopCarros[208] = AddStaticVehicleEx(522,-1094.2952,-1063.1168,128.7851,177.9571,0,0,RESPAWN_TIME); //NRG
    CopCarros[209] = AddStaticVehicleEx(522,-1092.1300,-1063.5951,128.7881,177.9750,0,0,RESPAWN_TIME); //NRG
//=============================================[CARROS BALLAS]===========================================================================
    BallasCarros[0] = AddStaticVehicleEx(475,1092.80004883,-1249.80004883,15.69999981,0.00000000,5,5,-1); //Sabre
    BallasCarros[1] = AddStaticVehicleEx(565,1102.50000000,-1250.09997559,15.50000000,0.00000000,5,5,-1); //Flash
    BallasCarros[2] = AddStaticVehicleEx(567,1108.40002441,-1226.30004883,15.80000019,180.00000000,5,5,-1); //Savanna
    BallasCarros[3] = AddStaticVehicleEx(560,1103.00000000,-1225.80004883,15.60000038,180.00000000,5,5,-1); //Sultan
    BallasCarros[4] = AddStaticVehicleEx(482,1086.09997559,-1226.50000000,16.10000038,180.00000000,5,5,-1); //Burrito
    BallasCarros[5] = AddStaticVehicleEx(510,1084.09997559,-1191.69995117,17.89999962,178.00000000,5,5,-1); //Mountain Bike
    BallasCarros[6] = AddStaticVehicleEx(522,1098.90002441,-1224.80004883,15.50000000,180.00000000,5,5,-1); //NRG-500
    BallasCarros[7] = AddStaticVehicleEx(461,1095.69995117,-1224.69995117,15.50000000,182.00000000,5,5,-1); //PCJ-600
    BallasCarros[8] = AddStaticVehicleEx(510,1086.69995117,-1191.80004883,17.89999962,177.99499512,5,5,-1); //Mountain Bike
    BallasCarros[9] = AddStaticVehicleEx(468,1092.90002441,-1224.59997559,15.60000038,182.00000000,5,5,-1); //Sanchez
    BallasCarros[10] = AddStaticVehicleEx(480,1097.50000000,-1249.90002441,15.69999981,0.00000000,5,5,-1); //Comet
    BallasCarros[11] = AddStaticVehicleEx(402,1088.09997559,-1249.30004883,15.80000019,0.00000000,5,5,-1); //Buffalo
    BallasCarros[12] = AddStaticVehicleEx(559,1107.00000000,-1249.90002441,15.60000038,0.00000000,5,5,-1); //Jester
    BallasCarros[13] = AddStaticVehicleEx(426,1112.69995117,-1249.30004883,15.60000038,0.00000000,5,5,-1); //Premier
    BallasCarros[14] = AddStaticVehicleEx(487,1129.80004883,-1167.40002441,32.29999924,0.00000000,5,5,-1); //Maverick
//=============================================[CARROS GROOVE STREET]==============================================================--
    GrooveCar[0] = AddStaticVehicleEx(560,2507.19995117,-1678.00000000,13.39999962,344.00000000,86,86,-1); //Sultan
    GrooveCar[1] = AddStaticVehicleEx(559,2509.30004883,-1666.30004883,13.19999981,12.00000000,86,86,-1); //Jester
    GrooveCar[2] = AddStaticVehicleEx(475,2500.39990234,-1655.50000000,13.30000019,78.00769043,86,86,-1); //Sabre
    GrooveCar[3] = AddStaticVehicleEx(565,2482.69995117,-1687.69995117,13.19999981,354.00000000,86,86,-1); //Flash
    GrooveCar[4] = AddStaticVehicleEx(482,2473.89990234,-1685.59997559,13.80000019,0.00000000,86,86,-1); //Burrito
    GrooveCar[5] = AddStaticVehicleEx(567,2483.69995117,-1653.90002441,13.30000019,90.01049805,86,86,-1); //Savanna
    GrooveCar[6] = AddStaticVehicleEx(426,2469.10009766,-1671.09997559,13.10000038,14.01220703,86,86,-1); //Premier
    GrooveCar[7] = AddStaticVehicleEx(510,2480.10009766,-1683.50000000,13.19999981,0.00000000,86,86,-1); //Mountain Bike
    GrooveCar[8] = AddStaticVehicleEx(510,2478.00000000,-1682.69995117,13.00000000,0.00000000,86,86,-1); //Mountain Bike
    GrooveCar[9] = AddStaticVehicleEx(468,2499.50000000,-1683.19995117,13.10000038,0.00000000,86,86,-1); //Sanchez
    GrooveCar[10] = AddStaticVehicleEx(461,2492.10009766,-1684.19995117,13.00000000,358.00000000,86,86,-1); //PCJ-600
    GrooveCar[11] = AddStaticVehicleEx(522,2490.10009766,-1684.09997559,13.19999981,0.00000000,86,86,-1); //NRG-500
    GrooveCar[12] = AddStaticVehicleEx(487,2528.19995117,-1676.09997559,20.20000076,90.00000000,86,86,-1); //Maverick
//==========================================[CARRROS AZTECAS]=============================================================
    AztecasCar[0] = AddStaticVehicleEx(560,1672.80004883,-2115.50000000,13.39999962,270.00000000,79,79,-1); //Sultan
    AztecasCar[1] = AddStaticVehicleEx(567,1672.90002441,-2111.10009766,13.50000000,270.00000000,79,79,-1); //Savanna
    AztecasCar[2] = AddStaticVehicleEx(482,1705.09997559,-2123.69995117,13.80000019,0.00000000,79,79,-1); //Burrito
    AztecasCar[3] = AddStaticVehicleEx(565,1705.30004883,-2107.39990234,13.19999981,270.00000000,79,79,-1); //Flash
    AztecasCar[4] = AddStaticVehicleEx(426,1700.30004883,-2097.30004883,13.39999962,182.00000000,79,79,-1); //Premier
    AztecasCar[5] = AddStaticVehicleEx(475,1687.40002441,-2107.69995117,13.39999962,270.00000000,79,79,-1); //Sabre
    AztecasCar[6] = AddStaticVehicleEx(559,1691.80004883,-2117.60009766,13.10000038,270.00000000,79,79,-1); //Jester
    AztecasCar[7] = AddStaticVehicleEx(510,1687.09997559,-2120.10009766,13.19999981,0.00000000,79,79,-1); //Mountain Bike
    AztecasCar[8] = AddStaticVehicleEx(510,1685.30004883,-2120.00000000,13.19999981,0.00000000,79,79,-1); //Mountain Bike
    AztecasCar[9] = AddStaticVehicleEx(468,1693.59997559,-2107.69995117,13.30000019,176.00000000,79,79,-1); //Sanchez
    AztecasCar[10] = AddStaticVehicleEx(522,1701.09997559,-2117.30004883,13.00000000,0.00000000,79,79,-1); //NRG-500
    AztecasCar[11] = AddStaticVehicleEx(461,1698.80004883,-2117.30004883,13.10000038,0.00000000,79,79,-1); //PCJ-600
    AztecasCar[12] = AddStaticVehicleEx(402,1696.80004883,-2102.00000000,13.50000000,180.00000000,79,79,-1); //Buffalo
    AztecasCar[13] = AddStaticVehicleEx(487,1668.80004883,-2145.00000000,13.80000019,0.00000000,79,79,-1); //Maverick
//========================================[carros Vagos]============================================
    VagosCar[0] = AddStaticVehicleEx(560,2829.50000000,-1194.30004883,24.60000038,4.00000000,6,6,-1); //Sultan
    VagosCar[1] = AddStaticVehicleEx(559,2834.10009766,-1163.50000000,24.70000076,184.00000000,6,6,-1); //Jester
    VagosCar[2] = AddStaticVehicleEx(510,2814.39990234,-1187.80004883,24.89999962,0.00000000,6,6,-1); //Mountain Bike
    VagosCar[3] = AddStaticVehicleEx(567,2805.50000000,-1187.40002441,25.39999962,270.00000000,6,6,-1); //Savanna
    VagosCar[4] = AddStaticVehicleEx(475,2836.69995117,-1192.50000000,24.39999962,5.99914551,6,6,-1); //Sabre
    VagosCar[5] = AddStaticVehicleEx(522,2818.9468,-1179.0214,24.8215,182.2969,6,6,-1); //NRG-500
    VagosCar[6] = AddStaticVehicleEx(461,2822.80004883,-1178.80004883,24.89999962,180.00000000,6,6,-1); //PCJ-600
    VagosCar[7] = AddStaticVehicleEx(468,2820.7004,-1187.6853,24.8881,0.6519,6,6,-1); //Sanchez
    VagosCar[8] = AddStaticVehicleEx(480,2828.39990234,-1167.90002441,24.79999924,272.00000000,6,6,-1); //Comet
    VagosCar[9] = AddStaticVehicleEx(510,2817.10009766,-1187.80004883,24.89999962,0.00000000,6,6,-1); //Mountain Bike
    VagosCar[10] = AddStaticVehicleEx(562,2828.69995117,-1172.59997559,24.70000076,274.00000000,6,6,-1); //Elegy
    VagosCar[11] = AddStaticVehicleEx(565,2804.89990234,-1183.80004883,25.10000038,268.00000000,6,6,-1); //Flash
    VagosCar[12] = AddStaticVehicleEx(482,2826.89990234,-1198.09997559,25.20000076,2.00000000,6,6,-1); //Burrito
    VagosCar[13] = AddStaticVehicleEx(426,2806.10009766,-1180.59997559,25.20000076,268.00000000,6,6,-1); //Premier
    VagosCar[14] = AddStaticVehicleEx(487,2821.10009766,-1167.90002441,32.90000153,270.00000000,6,6,-1); //Maverick
 //===================================[CARROS HITMANS]==========================================================
    CarrosHit[0] = AddStaticVehicleEx(560,1094.65625000,-332.48144531,73.79716492,88.00000000,24,24,-1); //Sultan
    CarrosHit[1] = AddStaticVehicleEx(560,1094.12963867,-339.02896118,73.79716492,87.99499512,24,24,-1); //Sultan
    CarrosHit[2] = AddStaticVehicleEx(487,1061.28405762,-304.56274414,74.25718689,0.00000000,24,24,-1); //Maverick
    CarrosHit[3] = AddStaticVehicleEx(451,1029.86572266,-313.75509644,73.75656128,178.00000000,24,24,-1); //Turismo
    CarrosHit[4] = AddStaticVehicleEx(451,1034.71228027,-313.96206665,73.75656128,178.00000000,24,24,-1); //Turismo
    CarrosHit[5] = AddStaticVehicleEx(402,1082.16674805,-292.73696899,73.93218994,178.00000000,24,24,-1); //Buffalo
    CarrosHit[6] = AddStaticVehicleEx(402,1085.86547852,-293.00689697,73.93218994,177.99499512,24,24,-1); //Buffalo
    CarrosHit[7] = AddStaticVehicleEx(579,1041.64013672,-349.49005127,74.09082794,0.00000000,24,24,-1); //Huntley
    CarrosHit[8] = AddStaticVehicleEx(461,1089.88940430,-314.69131470,73.66668701,88.00000000,24,24,-1); //PCJ-600
    CarrosHit[9] = AddStaticVehicleEx(522,1089.72363281,-316.59765625,73.63111115,87.99499512,24,24,-1); //NRG-500
    CarrosHit[10] = AddStaticVehicleEx(581,1089.49426270,-318.37503052,73.69206238,87.99499512,24,24,-1); //BF-400
    CarrosHit[11] = AddStaticVehicleEx(411,1073.88208008,-292.13003540,73.78505707,178.00000000,24,24,-1); //Infernus
    CarrosHit[12] = AddStaticVehicleEx(411,1077.37707520,-292.25567627,73.78505707,178.00000000,24,24,-1); //Infernus [469]
    CarrosHit[13] = AddStaticVehicleEx(565,1070.65637207,-292.69549561,73.67698669,180.00000000,24,24,-1); //Flash        [ 262 ]
    CarrosHit[14] = AddStaticVehicleEx(565,1067.02380371,-292.78121948,73.67698669,180.00000000,24,24,-1); //Flash    [714]
//===========================================[CARROS MEDICOS]========================================================================
	MedicosCar[0] = AddStaticVehicleEx(416,1185.4093,-1336.1479,13.7229,269.2588,1,3,-1); // carro SAMU 1       [ 119 ]
	MedicosCar[1] = AddStaticVehicleEx(416,1177.5361,-1340.1204,14.0647,269.7826,1,3,-1); // carro SAMU 2       [ 120 ]
	MedicosCar[2] = AddStaticVehicleEx(416,1184.7588,-1311.7882,13.7154,270.0790,1,3,-1); // carro SAMU 3       [ 121 ]
	MedicosCar[3] = AddStaticVehicleEx(416,1177.3369,-1307.6559,14.0466,268.5302,1,3,-1); // carro SAMU 4       [ 122 ]
	MedicosCar[4] = AddStaticVehicleEx(487,1161.2926,-1321.7860,31.6694,359.7393,1,3,-1); // heli SAMU 5        [ 123 ]
	MedicosCar[5] = AddStaticVehicleEx(407,1184.5123,-1317.4987,13.8132,269.2199,3,3,-1); // bomb SAMU 6        [ 124 ]
	MedicosCar[6] = AddStaticVehicleEx(407,1184.5476,-1330.4323,13.8088,266.8372,3,3,-1); // bomb SAMU 7        [ 125 ]
	MedicosCar[7] = AddStaticVehicleEx(586,1187.4664,-1304.3861,13.0719,269.8548,1,3,-1); // moto SAMU 8        [ 126 ]
	MedicosCar[8] = AddStaticVehicleEx(586,1187.6246,-1302.4747,13.0700,270.8045,1,3,-1); // moto SAMU 1        [ 127 ]
	MedicosCar[9] = AddStaticVehicleEx(586,1187.7906,-1300.5535,13.0690,268.0529,1,3,-1); // moto SAMU 2        [ 128 ]
	MedicosCar[10] = AddStaticVehicleEx(563,1162.2268,-1309.1311,31.6690,180.6752,1,3,-1); // heli grande SAMU   [ 129 ]
//============================================[CARROS REPORTERES]=====================================================
	NewsCar[0] = AddStaticVehicleEx(582,738.3984,-1334.7648,13.6000,181.2554,-1,-1,-1); // van reporter 1     [ 130 ]
	NewsCar[1] = AddStaticVehicleEx(582,741.8419,-1334.8721,13.5963,178.8535,-1,-1,-1); // van reporter 2     [ 131 ]
	NewsCar[2] = AddStaticVehicleEx(582,745.6342,-1334.8610,13.5953,179.1888,-1,-1,-1); // van reporter 3    [ 132 ]
	NewsCar[3] = AddStaticVehicleEx(582,749.2769,-1334.8060,13.5979,180.0729,-1,-1,-1); // van reporter 4   [ 133 ]
	NewsCar[4] = AddStaticVehicleEx(582,752.7092,-1334.7919,13.5958,181.4010,-1,-1,-1); // van reporter 5   [ 134 ]
	NewsCar[5] = AddStaticVehicleEx(586,782.6538,-1352.6757,13.5996,88.8960,-1,-1,-1); // moto reporter 6    [ 135 ]
	NewsCar[6] = AddStaticVehicleEx(586,782.7337,-1357.2595,13.5933,91.4296,-1,-1,-1); // moto reporter 7    [ 136 ]
	NewsCar[7] = AddStaticVehicleEx(586,782.6810,-1361.0303,13.5949,88.9797,-1,-1,-1); // moto reporter 8      [ 137 ]
	NewsCar[8] = AddStaticVehicleEx(488,741.9368,-1369.3556,25.8697,174.2482,-1,-1,-1); // heli reporter       [ 138 ]
	NewsCar[9] = AddStaticVehicleEx(586,782.6296,-1348.3770,13.5955,91.3518,-1,-1,-1); // moto reporter 7    [ 139 ]
	NewsCar[10] = AddStaticVehicleEx(586,782.5760,-1344.5055,13.5968,93.0199,-1,-1,-1); // moto reporter 8    [ 140 ]
//============================================[CARROS AmigodosAmigos]=====================================================
	AmigodosAmigosCar[0] = AddStaticVehicleEx(560,1653.1992200,-1328.0000000,17.2000000,90.0380000,2,2,RESPAWN_TIME); //Sultan
	AmigodosAmigosCar[1] = AddStaticVehicleEx(422,1653.0000000,-1331.6992200,17.2000000,90.0330000,2,2,RESPAWN_TIME); //Bobcat
	AmigodosAmigosCar[2] = AddStaticVehicleEx(422,1628.4000200,-1368.0999800,17.2000000,1.6980000,2,2,RESPAWN_TIME); //Bobcat
	AmigodosAmigosCar[3] = AddStaticVehicleEx(541,1637.4000200,-1368.3000500,17.2000000,359.9920000,2,2,RESPAWN_TIME); //Bullet
	AmigodosAmigosCar[4] = AddStaticVehicleEx(411,1632.9000200,-1368.3000500,17.2000000,1.9930000,2,2,RESPAWN_TIME); //Infernus
	AmigodosAmigosCar[5] = AddStaticVehicleEx(481,1659.6999500,-1357.0000000,17.0000000,139.9890000,2,2,RESPAWN_TIME); //BMX
	AmigodosAmigosCar[6] = AddStaticVehicleEx(578,1657.5000000,-1320.3000500,18.2000000,89.9910000,2,2,RESPAWN_TIME); //DFT-30
	AmigodosAmigosCar[7] = AddStaticVehicleEx(481,1661.1999500,-1357.0000000,17.0000000,142.0000000,2,2,RESPAWN_TIME); //BMX
	AmigodosAmigosCar[8] = AddStaticVehicleEx(490,1660.5000000,-1328.1999500,17.7000000,89.9950000,2,2,RESPAWN_TIME); //FBI Rancher
	AmigodosAmigosCar[9] = AddStaticVehicleEx(522,1653.5999800,-1344.0999800,17.1000000,87.9950000,2,2,RESPAWN_TIME); //NRG-500
	AmigodosAmigosCar[10] = AddStaticVehicleEx(522,1653.5000000,-1338.5999800,17.1000000,89.9950000,2,2,RESPAWN_TIME); //NRG-500
	AmigodosAmigosCar[11] = AddStaticVehicleEx(522,1653.3000500,-1353.4000200,17.1000000,87.9950000,2,2,RESPAWN_TIME); //NRG-500
	AmigodosAmigosCar[12] = AddStaticVehicleEx(522,1653.1999500,-1355.5000000,17.1000000,89.9950000,2,2,RESPAWN_TIME); //NRG-500
	AmigodosAmigosCar[13] = AddStaticVehicleEx(487,1670.9000200,-1348.6999500,160.3000000,80.0000000,2,2,RESPAWN_TIME); //Maverick
	AmigodosAmigosCar[14] = AddStaticVehicleEx(522,1653.5999800,-1347.5000000,17.1000000,87.9950000,2,2,RESPAWN_TIME); //NRG-500
	AmigodosAmigosCar[15] = AddStaticVehicleEx(522,1653.5000000,-1341.3000500,17.1000000,87.9950000,2,2,RESPAWN_TIME); //NRG-500
	AmigodosAmigosCar[16] = AddStaticVehicleEx(510,1653.3000500,-1357.8000500,17.1000000,89.9950000,2,2,RESPAWN_TIME); //NRG-500
	AmigodosAmigosCar[17] = AddStaticVehicleEx(510,1653.5000000,-1360.1999500,17.1000000,89.9950000,2,2,RESPAWN_TIME); //NRG-500
	AmigodosAmigosCar[18] = AddStaticVehicleEx(487,1669.3000500,-1336.4000200,160.3000000,98.3600000,2,2,RESPAWN_TIME); //Maverick
//============================================[CARROS AmigodosAmigos]=====================================================
	yStiflerSCar[0] = AddStaticVehicleEx(402,2476.5000000,-1556.4000244,24.0000000,0.0000000,158,0,RESPAWN_TIME); //Buffalo
	yStiflerSCar[1] = AddStaticVehicleEx(522,2482.3000488,-1533.0999756,23.7999992,272.0000000,158,0,RESPAWN_TIME); //NRG-500
	yStiflerSCar[2] = AddStaticVehicleEx(468,2482.1999512,-1535.0999756,23.8999996,272.0000000,158,0,RESPAWN_TIME); //Sanchez
	yStiflerSCar[3] = AddStaticVehicleEx(522,2482.3000488,-1534.0000000,23.7999992,271.9995117,158,0,RESPAWN_TIME); //NRG-500
	yStiflerSCar[4] = AddStaticVehicleEx(481,2482.1999512,-1536.0999756,23.8999996,271.9995117,158,0,RESPAWN_TIME); //Sanchez
	yStiflerSCar[5] = AddStaticVehicleEx(482,2481.3000488,-1517.8000488,24.2000008,179.9996338,158,0,RESPAWN_TIME); //Burrito
	yStiflerSCar[6] = AddStaticVehicleEx(411,2484.6999512,-1517.9000244,23.8999996,179.9996338,158,0,RESPAWN_TIME); //Tahoma
	yStiflerSCar[7] = AddStaticVehicleEx(560,2490.6000977,-1557.0000000,23.8999996,0.0000000,158,0,RESPAWN_TIME); //Sultan
	yStiflerSCar[8] = AddStaticVehicleEx(565,2487.3999023,-1557.4000244,23.7999992,0.0000000,158,0,RESPAWN_TIME); //Flash
	yStiflerSCar[9] = AddStaticVehicleEx(480,2483.8000488,-1557.0999756,23.8999996,0.0000000,158,0,RESPAWN_TIME); //Comet
	yStiflerSCar[10] = AddStaticVehicleEx(429,2480.1999512,-1557.0999756,23.7999992,0.0000000,158,0,RESPAWN_TIME); //Banshee
//=============================================[Carros Taxistas]================================================================
	TaxiCar[0] = AddStaticVehicleEx(420,1028.6188,-1433.2297,13.3313,90.2572,6,6,-1); // Carro Taxistas 1 	[ 166 ]
	TaxiCar[1] = AddStaticVehicleEx(420,1028.6086,-1437.5942,13.3342,89.0894,6,6,-1); // Carro Taxistas 2 	[ 167 ]
	TaxiCar[2] = AddStaticVehicleEx(420,1028.8123,-1441.9640,13.3341,91.0990,6,6,-1); // Carro Taxistas 3 	[ 168 ]
	TaxiCar[3] = AddStaticVehicleEx(420,1028.8928,-1446.4242,13.3343,89.0750,6,6,-1); // Carro Taxistas 4 	[ 169 ]
	TaxiCar[4] = AddStaticVehicleEx(487,982.3621,-1467.4258,21.4407,359.7532,6,6,-1); // Heli Taxistas 5 	[ 170 ]
	TaxiCar[5] = AddStaticVehicleEx(420,989.4200,-1433.9922,13.3264,181.5125,6,6,-1); // Carro Taxistas 6 	[ 171 ]
	TaxiCar[6] = AddStaticVehicleEx(420,993.7621,-1433.9944,13.3264,181.9905,6,6,-1); // Carro Taxistas 7 	[ 172 ]
	TaxiCar[7] = AddStaticVehicleEx(420,985.0569,-1434.1802,13.3271,177.5252,6,6,-1); // Carro Taxistas 8	[ 173 ]
	TaxiCar[8] = AddStaticVehicleEx(420,980.8220,-1433.9143,13.3262,178.8028,6,6,-1); // Carro Taxistas 9	[ 174 ]
	TaxiCar[9] = AddStaticVehicleEx(586,1029.6152,-1449.4296,13.1238,90.8806,6,6,-1); // moto taxista 1 [ 175 ]
	TaxiCar[10] = AddStaticVehicleEx(586,1029.5411,-1452.2153,13.1245,89.9486,6,6,-1); // moto taxista 2 [ 176 ]
	TaxiCar[11] = AddStaticVehicleEx(586,1029.5632,-1455.0842,13.1249,92.3829,6,6,-1); // moto taxista 3 [ 177 ]
	TaxiCar[12] = AddStaticVehicleEx(586,998.8055,-1432.9639,13.0671,179.1122,6,6,-1); // moto taxista 5       [ 178 ]
	TaxiCar[13] = AddStaticVehicleEx(586,1001.3549,-1433.1467,13.0670,184.8488,6,6,-1); // moto taxista 6       [ 179 ]
	TaxiCar[14] = AddStaticVehicleEx(586,1003.8781,-1433.1641,13.0668,182.8953,6,6,-1); // moto taxista 7       [ 180 ]
//=====================================[CARROS ALUGUEL]=======================================================
    CarAlug[0] = AddStaticVehicleEx(560,-1993.1045,241.7397,34.8769,268.3880,0,0,-1); // wang [ 194 ]
	CarAlug[1] = AddStaticVehicleEx(506,-1992.5270,246.2024,34.8764,265.1727,0,0,-1); // wang [ 195 ]
	CarAlug[2] = AddStaticVehicleEx(458,-1992.5665,250.8353,35.0905,265.6510,0,0,-1); // wang [ 196 ]
	CarAlug[3] = AddStaticVehicleEx(400,-1991.6487,255.4123,35.2642,264.4245,0,0,-1); // wang [ 197 ]
	CarAlug[4] = AddStaticVehicleEx(405,-1991.1527,259.6069,35.0708,265.0295,0,0,-1); // wang [ 198 ]
	CarAlug[5] = AddStaticVehicleEx(411,-1991.0232,264.3011,34.8981,264.4915,0,0,-1); // wang [ 199 ]
	CarAlug[6] = AddStaticVehicleEx(415,-1990.5845,268.7502,34.9469,265.1599,0,0,-1); // wang [ 200 ]
	CarAlug[7] = AddStaticVehicleEx(451,-1989.9050,273.2557,34.8807,265.2162,0,0,-1); // wang [ 201 ]
	CarAlug[8] = AddStaticVehicleEx(560,-1988.3324,307.4832,34.8841,267.5136,0,0,-1); // wang [ 202 ]
    CarAlug[9] = AddStaticVehicleEx(560,558.3553,-1289.7278,16.9551,0.8050,-1,-1,-1); // carro aluguel 1      [ 332 ]
	CarAlug[10] = AddStaticVehicleEx(560,554.5654,-1289.6489,16.9552,2.4649,-1,-1,-1); // carro aluguel 2      [ 333 ]
	CarAlug[11] = AddStaticVehicleEx(560,550.9343,-1289.6908,16.9546,3.3999,-1,-1,-1); // carro aluguel 3      [ 334 ]
	CarAlug[12] = AddStaticVehicleEx(506,546.8458,-1289.9054,16.9545,4.1478,-1,-1,-1); // carro aluguel 4      [ 335 ]
	CarAlug[13] = AddStaticVehicleEx(506,542.8229,-1290.2216,16.9480,3.6802,-1,-1,-1); // carro aluguel 5      [ 336 ]
	CarAlug[14] = AddStaticVehicleEx(506,538.1052,-1290.2968,16.9493,1.1534,-1,-1,-1); // carro aluguel 6      [ 337 ]
	CarAlug[15] = AddStaticVehicleEx(559,533.5905,-1290.3926,16.9486,2.4711,-1,-1,-1); // carro aluguel 7      [ 338 ]
	CarAlug[16] = AddStaticVehicleEx(559,528.9374,-1290.5078,16.9491,2.5434,-1,-1,-1); // carro aluguel 8      [ 339 ]
	CarAlug[17] = AddStaticVehicleEx(559,524.9777,-1290.4878,16.9490,4.3869,-1,-1,-1); // carro aluguel 9      [ 340 ]
	CarAlug[18] = AddStaticVehicleEx(480,520.7125,-1291.0891,16.9489,5.2022,-1,-1,-1); // carro aluguel 10     [ 341 ]
	CarAlug[19] = AddStaticVehicleEx(480,552.0004,-1263.1455,16.9484,209.2874,-1,-1,-1); // carro aluguel 11   [ 342 ]
	CarAlug[20] = AddStaticVehicleEx(480,548.2775,-1265.9437,16.9494,207.4516,-1,-1,-1); // carro aluguel 12   [ 343 ]
	CarAlug[21] = AddStaticVehicleEx(451,544.0808,-1268.7469,16.9525,209.3285,-1,-1,-1); // carro aluguel 13   [ 344 ]
	CarAlug[22] = AddStaticVehicleEx(451,540.1223,-1271.9517,16.9491,211.3782,-1,-1,-1); // carro aluguel 14   [ 345 ]
	CarAlug[23] = AddStaticVehicleEx(522,567.0040,-1280.6033,16.8134,101.3406,-1,-1,-1); // moto aluguel 1     [ 346 ]
	CarAlug[24] = AddStaticVehicleEx(522,567.1725,-1282.8904,16.8150,98.1773,7,79,-1); // moto aluguel 2     [ 347 ]
	CarAlug[25] = AddStaticVehicleEx(522,567.9107,-1285.1788,16.8099,104.7714,8,82,-1); // moto aluguel 3     [ 348 ]
	CarAlug[26] = AddStaticVehicleEx(522,568.4707,-1286.9088,16.8207,106.0463,-1,-1,-1); // moto aluguel 4     [ 349 ]
	CarAlug[27] = AddStaticVehicleEx(521,569.0721,-1289.0919,16.8163,109.3813,-1,-1,-1); // moto aluguel 5     [ 350 ]
	CarAlug[28] = AddStaticVehicleEx(521,569.4713,-1291.3688,16.8175,94.5475,-1,-1,-1); // moto aluguel 6      [ 351 ]
    CarAlug[29] = AddStaticVehicleEx(411,-1987.8965,302.2708,34.9027,266.4140,0,0,-1); // wang [ 225 ]
	CarAlug[30] = AddStaticVehicleEx(562,-2714.5452,189.9252,3.9881,271.4840,0,1,-1); // wheel [ 226 ]
	CarAlug[31] = AddStaticVehicleEx(562,-2714.7419,194.1241,3.9928,272.9267,0,0,-1); // wheel [ 227 ]
	CarAlug[32] = AddStaticVehicleEx(562,-2714.5957,198.7781,3.9896,273.1364,0,0,-1); // wheel [ 228 ]
	CarAlug[33] = AddStaticVehicleEx(560,-2714.3113,206.0082,4.0333,270.7872,0,0,-1); // wheel [ 229 ]
	CarAlug[34] = AddStaticVehicleEx(560,-2714.6912,202.4119,4.0370,272.3214,0,0,-1); // wheel [ 230 ]
    CarAlug[35] = AddStaticVehicleEx(560,1197.5151,-1729.0217,13.2743,270.0705,0,0,-1); // carro 1 [ 182 ]
	CarAlug[36] = AddStaticVehicleEx(411,1197.5801,-1733.0774,13.2999,269.4758,0,0,-1); // carro 2 [ 183 ]
	CarAlug[37] = AddStaticVehicleEx(560,1197.5258,-1737.1575,13.2844,270.2484,0,0,-1); // carro 3 [ 184 ]
	CarAlug[38] = AddStaticVehicleEx(496,1209.5243,-1724.8940,13.2801,359.6837,0,0,-1); // carro 4 [ 185 ]
	CarAlug[39] = AddStaticVehicleEx(522,1233.0262,-1724.7229,13.1367,359.7565,0,0,-1); // carro 5 [ 186 ]
	CarAlug[40] = AddStaticVehicleEx(411,1213.8667,-1725.0580,13.2915,359.9107,0,0,-1); // carro 5 [ 187 ]
	CarAlug[41] = AddStaticVehicleEx(496,1218.3632,-1724.5286,13.2791,358.1933,0,0,-1); // carro 6 [ 188 ]
	CarAlug[42] = AddStaticVehicleEx(463,1221.8517,-1724.9045,13.1047,355.1953,0,0,-1); // moto 1 [ 189 ]
	CarAlug[43] = AddStaticVehicleEx(463,1224.0054,-1724.8936,13.1049,359.7699,0,0,-1); // moto 2 [ 190 ]
	CarAlug[44] = AddStaticVehicleEx(463,1226.2170,-1724.8375,13.1051,359.8288,0,0,-1); // moto 3 [ 191 ]
	CarAlug[45] = AddStaticVehicleEx(463,1228.5361,-1724.7629,13.1049,0.6623,0,0,-1); // moto [ 192 ]
	CarAlug[46] = AddStaticVehicleEx(522,1230.8701,-1724.6012,13.1263,358.8534,0,0,-1); // moto 5 [ 193 ]
    CarAlug[47] = AddStaticVehicleEx(462,7659.6910,8216.3334,-478.1465,270.4751,-1,-1,-1); // val [505]
	CarAlug[48] = AddStaticVehicleEx(462,7813.7316,9468.2460,-587.1463,265.8817,-1,-1,-1); // val [506]
	CarAlug[49] = AddStaticVehicleEx(462,8563.6890,6318.2225,-698.1454,267.6799,-1,-1,-1); // val [507]
	CarAlug[50] = AddStaticVehicleEx(462,1719.7513,6318.0924,-254.1463,268.7625,-1,-1,-1); // val [508]
	CarAlug[51] = AddStaticVehicleEx(522,7631.9043,8462.9482,-632.1159,268.8856,-1,-1,-1); // val [509]
	CarAlug[52] = AddStaticVehicleEx(522,7954.9088,132.9675,-187.1100,266.9431,-1,-1,-1); // val [510]
	CarAlug[53] = AddStaticVehicleEx(462,1840.5389,-1172.5690,23.4277,179.2235,0,0,-1); // pert loja arma [ 231 ]
	CarAlug[54] = AddStaticVehicleEx(462,1843.0200,-1172.6951,23.4275,184.0619,0,0,-1); // pert loja arma [ 232 ]
	CarAlug[55] = AddStaticVehicleEx(462,1845.6017,-1172.5404,23.4277,184.9553,0,0,-1); // pert loja arma [ 233 ]
	CarAlug[56] = AddStaticVehicleEx(462,1848.0537,-1172.6368,23.4266,180.5397,0,0,-1); // pert loja arma [ 234 ]
	CarAlug[57] = AddStaticVehicleEx(462,1850.4945,-1172.5801,23.4260,180.5202,0,0,-1); // pert loja arma [ 235 ]
    CarAlug[58] = AddStaticVehicleEx(462,1644.7346,-1710.5509,20.0798,270.1570,-1,-1,-1); // emp [511]
	CarAlug[59] = AddStaticVehicleEx(462,1644.6259,-1708.5593,20.0841,272.3146,-1,-1,-1); // emp [512]
	CarAlug[60] = AddStaticVehicleEx(462,1644.6984,-1706.2412,20.0839,267.1887,-1,-1,-1); // emp [513]
	CarAlug[61] = AddStaticVehicleEx(462,1644.7793,-1703.9790,20.0836,270.6415,-1,-1,-1); // emp [514]
	CarAlug[62] = AddStaticVehicleEx(462,1644.9408,-1702.0175,20.0882,267.8679,-1,-1,-1); // emp [515]
    CarAlug[63] = AddStaticVehicleEx(462,1644.9701,-1699.7405,20.0769,268.0691,-1,-1,-1); // emp [521]
	CarAlug[64] = AddStaticVehicleEx(462,1645.2627,-1697.2108,20.0615,271.1686,-1,-1,-1); // emp [522]
	CarAlug[65] = AddStaticVehicleEx(462,1644.9923,-1694.6737,20.0518,270.9147,-1,-1,-1); // emp [523]
	CarAlug[66] = AddStaticVehicleEx(462,1829.2434,-1665.8199,13.1466,89.1275,-1,-1,-1); // alha [524]
	CarAlug[67] = AddStaticVehicleEx(462,1829.2948,-1668.0667,13.1461,90.4328,-1,-1,-1); // alha [525]
	CarAlug[68] = AddStaticVehicleEx(462,1829.1804,-1663.2340,13.1457,85.4299,-1,-1,-1); // alha [526]
	CarAlug[69] = AddStaticVehicleEx(462,1829.2128,-1660.6707,13.1465,86.0268,-1,-1,-1); // alha [527]
    CarAlug[70] = AddStaticVehicleEx(462,1829.0118,-1657.8396,13.1460,89.9586,-1,-1,-1); // alha [600]
	CarAlug[71] = AddStaticVehicleEx(462,1829.3961,-1655.4045,13.1438,88.4928,-1,-1,-1); // alha [601]
	CarAlug[72] = AddStaticVehicleEx(462,1829.4860,-1652.4707,13.1465,86.2273,-1,-1,-1); // alha [602]
    CarAlug[73] = AddStaticVehicleEx(462,1829.4934,-1649.4659,13.1461,90.0861,-1,-1,-1); // alha [ 324 ]
	CarAlug[74] = AddStaticVehicleEx(462,1829.4225,-1646.2994,13.1465,91.3172,-1,-1,-1); // alha [ 325 ]
	CarAlug[75] = AddStaticVehicleEx(462,1829.3783,-1643.8030,13.1450,90.0107,-1,-1,-1); // alha [ 326 ]
	CarAlug[76] = AddStaticVehicleEx(462,1028.4375,-1340.3429,13.3261,87.8119,0,0,-1); // lone [ 327 ]
	CarAlug[77] = AddStaticVehicleEx(462,1028.4916,-1342.9347,13.3262,91.1920,0,0,-1); // lone [ 328 ]
	CarAlug[78] = AddStaticVehicleEx(462,1028.5717,-1345.5555,13.3262,88.7275,0,0,-1); // lone [ 329 ]
	CarAlug[79] = AddStaticVehicleEx(462,1028.7416,-1347.8856,13.3261,90.1098,0,0,-1); // lone [ 330 ]
	CarAlug[80] = AddStaticVehicleEx(462,1028.6726,-1350.5033,13.3260,92.1646,0,0,-1); // lone [ 331 ]
    CarAlug[81] = AddStaticVehicleEx(462,1028.6378,-1353.1671,13.3261,91.2592,0,0,-1); // lone [519]
    CarAlug[82] = AddStaticVehicleEx(462,1028.6378,-1353.1671,13.3261,91.2592,0,0,-1); // lone [455]
    CarAlug[83] = AddStaticVehicleEx(462,1345.2349,-951.7996,34.4632,271.8085,-1,-1,-1); // vine [476]
	CarAlug[84] = AddStaticVehicleEx(462,1345.4346,-954.7184,34.0424,269.7899,-1,-1,-1); // vine [477]
	CarAlug[85] = AddStaticVehicleEx(462,1345.5267,-957.6382,33.5573,267.5927,-1,-1,-1); // vine [478]
	CarAlug[86] = AddStaticVehicleEx(462,1345.4027,-960.2336,33.1000,265.8904,-1,-1,-1); // vine [479]
	CarAlug[87] = AddStaticVehicleEx(462,1345.4386,-963.0696,32.6209,266.1766,-1,-1,-1); // vine [480]
	CarAlug[88] = AddStaticVehicleEx(462,1345.3160,-966.2366,32.0668,264.9064,-1,-1,-1); // vine [481]
	CarAlug[89] = AddStaticVehicleEx(462,1345.0676,-969.6870,31.4126,268.9185,-1,-1,-1); // vine [482]
	CarAlug[90] = AddStaticVehicleEx(462,1345.2931,-974.0058,30.6291,268.2279,-1,-1,-1); // vine [483]
	CarAlug[91] = AddStaticVehicleEx(462,1345.0813,-978.0594,29.8470,268.4596,-1,-1,-1); // vine [484]
    CarAlug[92] = AddStaticVehicleEx(560,1282.6999500,-1295.0999800,13.2000000,90.0000000,1,1,-1); //Sultan
    CarAlug[93] = AddStaticVehicleEx(560,1282.6999500,-1299.5999800,13.2000000,90.0000000,1,1,-1); //Sultan
    CarAlug[94] = AddStaticVehicleEx(560,1282.6999500,-1304.4000200,13.2000000,90.0000000,1,1,-1); //Sultan
    CarAlug[95] = AddStaticVehicleEx(451,1282.6999500,-1309.1999500,13.1000000,90.0000000,1,1,-1); //Turismo
    CarAlug[96] = AddStaticVehicleEx(451,1282.5999800,-1314.5999800,13.1000000,90.0000000,1,1,-1); //Turismo
    CarAlug[97] = AddStaticVehicleEx(565,1282.5999800,-1318.9000200,13.1000000,90.0000000,1,1,-1); //Flash
    CarAlug[98] = AddStaticVehicleEx(565,1282.6999500,-1323.3000500,13.1000000,90.0000000,1,1,-1); //Flash
    CarAlug[99] = AddStaticVehicleEx(506,1282.3000500,-1335.0000000,13.2000000,90.0000000,1,1,-1); //Super GT
    CarAlug[100] = AddStaticVehicleEx(506,1282.4000200,-1339.8000500,13.2000000,90.0000000,1,1,-1); //Super GT
    CarAlug[101] = AddStaticVehicleEx(541,1282.9000200,-1344.5000000,13.1000000,90.0000000,1,1,-1); //Bullet
    CarAlug[102] = AddStaticVehicleEx(541,1282.8000500,-1348.4000200,13.1000000,90.0000000,1,1,-1); //Bullet
    CarAlug[103] = AddStaticVehicleEx(480,1282.9000200,-1353.0999800,13.2000000,90.0000000,1,1,-1); //Comet
    CarAlug[104] = AddStaticVehicleEx(480,1282.6999500,-1357.6999500,13.2000000,89.9950000,1,1,-1); //Comet
    CarAlug[105] = AddStaticVehicleEx(411,1282.8000500,-1362.3000500,13.2000000,90.0000000,1,1,-1); //Infernus
    CarAlug[106] = AddStaticVehicleEx(463,1272.6999500,-1293.1999500,13.1000000,270.0000000,1,1,-1); //Freeway
    CarAlug[107] = AddStaticVehicleEx(463,1272.6999500,-1298.1999500,13.1000000,270.0000000,1,1,-1); //Freeway
    CarAlug[108] = AddStaticVehicleEx(463,1272.9000200,-1302.5000000,13.1000000,270.0000000,1,1,-1); //Freeway
    CarAlug[109] = AddStaticVehicleEx(522,1272.8000500,-1308.5999800,13.2000000,272.0000000,1,1,-1); //NRG-500
    CarAlug[110] = AddStaticVehicleEx(522,1272.9000200,-1314.8000500,13.2000000,271.9990000,1,1,-1); //NRG-500
    CarAlug[111] = AddStaticVehicleEx(522,1272.6999500,-1320.3000500,13.2000000,271.9990000,1,1,-1); //NRG-500
    CarAlug[112] = AddStaticVehicleEx(510,1267.8000500,-1352.9000200,13.2000000,92.0000000,1,1,-1); //Mountain Bike
    CarAlug[113] = AddStaticVehicleEx(510,1267.8000500,-1356.4000200,13.2000000,92.0000000,1,1,-1); //Mountain Bike
    CarAlug[114] = AddStaticVehicleEx(510,1267.9000200,-1360.4000200,13.2000000,92.0000000,1,1,-1); //Mountain Bike
    CarAlug[115] = AddStaticVehicleEx(510,1268.0000000,-1364.9000200,13.2000000,92.0000000,1,1,-1); //Mountain Bike
    CarAlug[116] = AddStaticVehicleEx(510,1268.1999500,-1370.0000000,13.1000000,92.0000000,1,1,-1); //Mountain Bike
    //os da dp daki pra baixo
   /* CarAlug[119] = AddStaticVehicleEx(560,1522.18225098,-1685.77038574,13.35185051,270.00000000,0,0,-1); //Sultan
    CarAlug[120] = AddStaticVehicleEx(451,1521.46960449,-1672.65258789,13.31124687,270.00000000,0,0,-1); //Turismo
    CarAlug[121] = AddStaticVehicleEx(451,1521.76245117,-1660.69995117,13.30354691,270.00000000,0,0,-1); //Turismo
    CarAlug[122] = AddStaticVehicleEx(522,1521.96972656,-1697.52197266,13.20725250,274.00000000,0,0,-1); //NRG-500
    CarAlug[123] = AddStaticVehicleEx(522,1522.01281738,-1703.42285156,13.20725250,273.99902344,0,0,-1); //NRG-500
    CarAlug[124] = AddStaticVehicleEx(522,1522.27307129,-1648.83459473,13.19955254,273.99902344,0,0,-1); //NRG-500*/
//======================================[Carros Máfia Cosa Nostra]==========================================
	CarCosa[0] = AddStaticVehicleEx(559,1459.3711,-690.7289,94.4104,269.1152,2,2,-1); // carro Máfia Cosa Nostra 1   [ 203 ]
	CarCosa[1] = AddStaticVehicleEx(609,1473.6379,-660.5731,94.8179,178.8805,2,2,-1); // carro Máfia Cosa Nostra 2   [ 204 ]
	CarCosa[2] = AddStaticVehicleEx(579,1459.8967,-666.8953,94.6868,269.7493,2,2,-1); // carro Máfia Cosa Nostra 3  [ 205 ]
	CarCosa[3] = AddStaticVehicleEx(480,1459.6017,-681.9838,94.5350,268.9948,2,2,-1); // carro Máfia Cosa Nostra 4   [ 206 ]
	CarCosa[4] = AddStaticVehicleEx(609,1468.2308,-660.4578,94.8277,180.4262,2,2,-1); // carro Máfia Cosa Nostra 5   [ 207 ]
	CarCosa[5] = AddStaticVehicleEx(560,1459.3278,-672.6233,94.4573,270.6589,2,2,-1); // carro Máfia Cosa Nostra 6   [ 208 ]
	CarCosa[6] = AddStaticVehicleEx(562,1459.2870,-686.5667,94.4004,270.3835,2,2,-1); // carro Máfia Cosa Nostra 7   [ 209 ]
	CarCosa[7] = AddStaticVehicleEx(560,1459.3638,-677.3371,94.4553,268.7627,2,2,-1); // carro Máfia Cosa Nostra 8  [ 210 ]
	CarCosa[8] = AddStaticVehicleEx(522,1479.2185,-679.4892,94.3065,93.7490,2,2,-1); // moto Máfia Cosa Nostra 1     [ 211 ]
	CarCosa[9] = AddStaticVehicleEx(522,1479.2134,-675.9341,94.3004,92.7336,2,2,-1); // moto Máfia Cosa Nostra 2     [ 212 ]
	CarCosa[10] = AddStaticVehicleEx(487,1496.8555,-692.4993,103.9904,269.7480,2,2,-1); // heli Máfia Cosa Nostra      [ 213 ]
//=========================================[Carros Máfia Yakuza]================================================================
	YakuzaCar[0] = AddStaticVehicleEx(609,686.7582,-1304.3781,13.2839,89.1099,0,0,-1); // carro Yakuza 1      [ 214 ]
	YakuzaCar[1] = AddStaticVehicleEx(609,686.8018,-1300.0002,13.2569,90.7432,0,0,-1); // carro Yakuza 2     [ 215 ]
	YakuzaCar[2] = AddStaticVehicleEx(579,686.4913,-1295.5823,13.3162,91.0317,0,0,-1); // carro Yakuza 3       [ 216 ]
	YakuzaCar[3] = AddStaticVehicleEx(480,686.7732,-1290.7100,13.3501,89.3128,0,0,-1); // carro Yakuza 4       [ 217 ]
	YakuzaCar[4] = AddStaticVehicleEx(559,686.2200,-1285.9563,13.3426,90.7709,0,0,-1); // carro Yakuza 5       [ 218 ]
	YakuzaCar[5] = AddStaticVehicleEx(560,686.6278,-1281.2258,13.2807,90.7563,0,0,-1); // carro Yakuza 6      [ 219 ]
	YakuzaCar[6] = AddStaticVehicleEx(562,685.8911,-1276.7478,13.3717,90.6977,0,0,-1); // carro Yakuza 7      [ 220 ]
	YakuzaCar[7] = AddStaticVehicleEx(560,686.3205,-1270.9865,13.3532,88.2486,0,0,-1); // carro Yakuza 8      [ 221 ]
	YakuzaCar[8] = AddStaticVehicleEx(522,687.5290,-1266.2338,13.1258,87.0329,0,79,-1); // moto yakuza 1         [ 222 ]
	YakuzaCar[9] = AddStaticVehicleEx(522,687.2665,-1263.2662,13.1193,88.5126,0,79,-1); // moto yakuza 2       [ 223 ]
	YakuzaCar[10] = AddStaticVehicleEx(487,706.2159,-1241.6147,13.8068,272.8419,0,79,-1); // heli yakuza         [ 224 ]
//========================================[Carros al´qaeda]==========================================================
	AlCar[0] = AddStaticVehicleEx(520,382.0672,2538.5024,17.2623,179.0163,102,102,-1); // hydra al´qaeda 1      [ 282 ]
	AlCar[1] = AddStaticVehicleEx(425,347.0407,2539.1038,17.5199,179.0246,102,102,-1); // hydra al´qaeda 2      [ 283 ]
	AlCar[2] = AddStaticVehicleEx(487,366.0395,2537.8293,16.8276,161.9232,102,102,-1); // heli al´qaeda       [ 284 ]
	AlCar[3] = AddStaticVehicleEx(432,424.8906,2516.1953,16.4970,89.8145,102,102,-1); // tanque al´qaeda 1     [ 285 ]
	AlCar[4] = AddStaticVehicleEx(432,424.3374,2504.1704,16.4971,88.5026,102,102,-1); // tanque al´qaeda 2     [ 286 ]
	AlCar[5] = AddStaticVehicleEx(402,413.2605,2452.6563,16.2054,357.5121,102,102,-1); // carro al´qaeda 1    [ 287 ]
	AlCar[6] = AddStaticVehicleEx(559,401.1563,2453.1179,16.2052,359.3275,102,102,-1); // carro al´qaeda 2    [ 288 ]
	AlCar[7] = AddStaticVehicleEx(451,407.3538,2460.2817,16.2057,357.3129,102,102,-1); // carro al´qaeda 3    [ 289 ]
	AlCar[8] = AddStaticVehicleEx(541,418.2018,2437.5090,16.2049,359.6690,102,102,-1); // carro al´qaeda 4     [ 290 ]
	AlCar[9] = AddStaticVehicleEx(533,413.4090,2437.3838,16.2049,1.4261,102,102,-1); // carro al´qaeda 5       [ 291 ]
	AlCar[10] = AddStaticVehicleEx(560,408.0492,2437.2141,16.2053,358.9307,102,102,-1); // carro al´qaeda 6     [ 292 ]
	AlCar[11] = AddStaticVehicleEx(579,400.6902,2437.0471,16.2054,1.0032,102,102,-1); // carro al´qaeda 7       [ 293 ]
	AlCar[12] = AddStaticVehicleEx(579,397.4241,2437.1575,16.2052,359.4397,102,102,-1); // carro al´qaeda 8     [ 294 ]
	AlCar[13] = AddStaticVehicleEx(522,392.1531,2436.7544,16.0708,359.2458,102,102,-1); // moto al´qaeda 1       [ 295 ]
	AlCar[14] = AddStaticVehicleEx(522,390.8281,2436.8748,16.0638,358.4109,102,102,-1); // moto al´qaeda 2      [ 296 ]
//========================================[Carros Taliban]================================================================
	TalCar[0] = AddStaticVehicleEx(520,2765.4023,-2507.6582,14.3449,3.8515,166,166,-1); // hydra Taliban 1        [ 297 ]
	TalCar[1] = AddStaticVehicleEx(425,2746.2673,-2395.5330,14.2033,176.9398,166,166,-1); // hydra Taliban 2        [ 298 ]
	TalCar[2] = AddStaticVehicleEx(432,2788.3572,-2418.1135,13.6495,88.9305,166,166,-1); // tanque Taliban 1      [ 299 ]
	TalCar[3] = AddStaticVehicleEx(432,2785.8474,-2456.0635,13.6500,89.5964,166,166,-1); // tanque Taliban 2      [ 300 ]
	TalCar[4] = AddStaticVehicleEx(579,2748.9399,-2445.3259,13.5813,269.5579,166,166,-1); // carro Taliban 1       [ 301 ]
	TalCar[5] = AddStaticVehicleEx(402,2748.2117,-2458.7476,13.4802,270.2032,166,166,-1); // carro Taliban 2       [ 302 ]
	TalCar[6] = AddStaticVehicleEx(559,2748.2192,-2462.8203,13.3048,270.5482,166,166,-1); // carro Taliban 3       [ 303 ]
	TalCar[7] = AddStaticVehicleEx(451,2748.4551,-2466.7014,13.3554,271.3549,166,166,-1); // carro Taliban 4        [ 304 ]
	TalCar[8] = AddStaticVehicleEx(541,2748.8694,-2470.7781,13.2733,271.0843,166,166,-1); // carro Taliban 5        [ 305 ]
	TalCar[9] = AddStaticVehicleEx(533,2748.3594,-2432.0737,13.3523,269.8383,166,166,-1); // carro Taliban 6        [ 306 ]
	TalCar[10] = AddStaticVehicleEx(560,2748.2373,-2440.6599,13.3484,268.3277,166,166,-1); // carro Taliban 7        [ 307 ]
	TalCar[11] = AddStaticVehicleEx(579,2747.4832,-2423.2556,13.5600,271.1836,166,166,-1); // carro Taliban 8        [ 308 ]
	TalCar[12] = AddStaticVehicleEx(522,2778.2864,-2432.5647,13.2061,179.7750,166,166,-1);// moto Taliban 1        [ 309 ]
	TalCar[13] = AddStaticVehicleEx(522,2776.2734,-2432.6140,13.2073,178.3195,166,166,-1); // moto Taliban 2          [ 310 ]
	TalCar[14] = AddStaticVehicleEx(487,2762.2505,-2394.0913,13.8093,183.8786,166,166,-1); // heli Taliban         [ 311 ]
//=======================================[Carros Governo]============================================================
    GovCar[0] = AddStaticVehicleEx(409,1506.4941,-1749.5753,13.2750,89.7772,1,1,-1); // limosine governo 1 [ 384 ]
	GovCar[1] = AddStaticVehicleEx(560,1496.8917,-1748.8296,13.2433,0.9462,1,1,-1); // sultan governo 2 [ 385 ]
	GovCar[2] = AddStaticVehicleEx(560,1494.2141,-1748.8683,13.2439,1.3062,1,1,-1); // sultan governo 3 [ 386 ]
	GovCar[3] = AddStaticVehicleEx(522,1450.2483,-1796.5590,13.3263,268.9737,1,1,-1); // moto governo 1 [ 387 ]
	GovCar[4] = AddStaticVehicleEx(522,1449.6298,-1771.9882,13.2706,268.3270,1,1,-1); // moto governo 2 [ 388 ]
	GovCar[5] = AddStaticVehicleEx(522,1510.8292,-1772.2804,13.3103,269.1833,1,1,-1); // moto governo [ 389 ]
    GovCar[6] = AddStaticVehicleEx(560,1454.4629,-1751.1550,13.2301,269.3316,1,1,-1); // Sultan Governo 1 [427]
	GovCar[7] = AddStaticVehicleEx(560,1491.4076,-1748.9688,13.2411,359.2778,1,1,-1); // Sultan Governo 2 [428]
    GovCar[8] = AddStaticVehicleEx(487,1458.0172,-1807.6858,14.1031,1.2040,1,1,-1); // Heli Governo    [516]
//===================================[Carros RC]==========================================================
    CivilCar[0] = AddStaticVehicleEx(462,1575.1000000,-1879.6000000,13.2000000,0.0000000,2,2,40000); //Faggio
    CivilCar[1] = AddStaticVehicleEx(462,1578.5000000,-1879.8000000,13.2000000,0.0000000,2,2,40000); //Faggio
    CivilCar[2] = AddStaticVehicleEx(462,1577.2998000,-1879.7002000,13.2000000,0.0000000,2,2,40000); //Faggio
    CivilCar[3] = AddStaticVehicleEx(462,1576.2002000,-1879.7002000,13.2000000,0.0000000,2,2,40000); //Faggio
    CivilCar[4] = AddStaticVehicleEx(462,1560.9000000,-1880.2000000,13.2000000,0.0000000,2,2,40000); //Faggio
    CivilCar[5] = AddStaticVehicleEx(462,1557.5000000,-1880.2002000,13.2000000,0.0000000,2,2,40000); //Faggio
    CivilCar[6] = AddStaticVehicleEx(462,1558.5996000,-1880.2002000,13.2000000,0.0000000,2,2,40000); //Faggio
    CivilCar[7] = AddStaticVehicleEx(462,1559.7998000,-1880.2002000,13.2000000,0.0000000,2,2,40000); //Faggio
	CivilCar[8] = AddStaticVehicleEx(468,1562.3700,-1880.4189,13.2161,358.5722,2,2,40000); //Faggio
//=====================================[ônibus de Ls]==============================================================
    /*BusCar[0] = AddStaticVehicleEx(431,1278.6514,-1800.1353,13.4807,147.0316,9,125,-1); // onibus 1       [ 380 ]
	BusCar[1] = AddStaticVehicleEx(431,1273.3673,-1798.4585,13.4974,145.2074,9,125,-1); // onibus 2       [ 381 ]
	BusCar[2] = AddStaticVehicleEx(437,1266.2963,-1798.0532,13.5449,144.6720,9,125,-1); // onibus 3      [ 382 ]
	BusCar[3] = AddStaticVehicleEx(437,1258.5909,-1798.4443,13.5583,145.3796,9,125,-1); // onibus 4       [ 383 ]*/
//======================================[Carros Mecanicos]====================================================
    MecCar[0] = AddStaticVehicleEx(525,1362.7439,-1653.0907,13.2648,270.3777,0,1,-1); // Guincho Mecanico 1 [451]
	MecCar[1] = AddStaticVehicleEx(525,1362.6414,-1657.6038,13.2670,270.2456,0,1,-1); // Guincho Mecanico 2 [452]
	MecCar[2] = AddStaticVehicleEx(525,1363.0619,-1643.6759,13.2603,271.7852,0,1,-1); // Guincho Mecanico 3 [453]
	MecCar[3] = AddStaticVehicleEx(525,1362.6522,-1661.8405,13.2727,268.1479,0,1,-1); // Guincho Mecanico 4 [454]
    MecCar[4] = AddStaticVehicleEx(525,1362.6272,-1639.3701,13.2650,269.1093,0,1,-1); // Guincho Mecanico 1 [439]
	MecCar[5] = AddStaticVehicleEx(525,1362.9874,-1648.3406,13.2661,269.6606,0,1,-1); // Guincho Mecanico 2 [440]
//=========================================[Carros Palominio]===================================================
    CityCar[0] = AddStaticVehicleEx(586,2337.50000000,-0.10000000,26.10000038,276.00000000,-1,-1,-1); //Wayfarer         [810]
	CityCar[1] = AddStaticVehicleEx(463,2337.60009766,-1.50000000,26.10000038,272.00000000,-1,-1,-1); //Freeway
	CityCar[2] = AddStaticVehicleEx(463,2338.10009766,1.60000002,26.10000038,280.00000000,-1,-1,-1); //Freeway
	CityCar[3] = AddStaticVehicleEx(586,2338.10009766,2.79999995,26.10000038,278.00000000,-1,-1,-1); //Wayfarer
	CityCar[4] = AddStaticVehicleEx(584,1360.80004883,478.60000610,21.39999962,149.99987793,-1,-1,-1); //Trailer 3
	CityCar[5] = AddStaticVehicleEx(403,1354.69995117,468.50000000,20.79999924,147.99987793,-1,-1,-1); //Linerunner
	CityCar[6] = AddStaticVehicleEx(406,626.20001221,864.70001221,-42.20000076,0.00000000,-1,-1,-1); //Dumper
	CityCar[7] = AddStaticVehicleEx(586,-145.50000000,1216.19995117,19.29999924,0.00000000,-1,-1,-1); //Wayfarer
	CityCar[8] = AddStaticVehicleEx(586,-146.89999390,1216.50000000,19.29999924,0.00000000,-1,-1,-1); //Wayfarer
	CityCar[9] = AddStaticVehicleEx(463,-142.60000610,1216.19995117,19.39999962,0.00000000,-1,-1,-1); //Freeway      [819]
//=========================================[Carros Hells Angels]=====================================================================
    HellsCar[0] = AddStaticVehicleEx(463,695.34197998,-472.95684814,15.95293713,272.00000000,43,43,-1); //Freeway
    HellsCar[1] = AddStaticVehicleEx(463,695.40704346,-470.02896118,15.95293713,271.99951172,43,43,-1); //Freeway
    HellsCar[2] = AddStaticVehicleEx(463,695.40960693,-466.66549683,15.95293713,271.99951172,43,43,-1); //Freeway
    HellsCar[3] = AddStaticVehicleEx(463,695.50073242,-463.71218872,15.95293713,271.99951172,43,43,-1); //Freeway
    HellsCar[4] = AddStaticVehicleEx(463,695.41894531,-460.55017090,15.95293713,271.99951172,43,43,-1); //Freeway
    HellsCar[5] = AddStaticVehicleEx(586,708.18511963,-458.20602417,15.93293762,90.00000000,43,43,-1); //Wayfarer
    HellsCar[6] = AddStaticVehicleEx(586,708.21551514,-461.35186768,15.93293762,90.00000000,43,43,-1); //Wayfarer
    HellsCar[7] = AddStaticVehicleEx(586,708.52087402,-464.43896484,15.93293762,90.00000000,43,43,-1); //Wayfarer
    HellsCar[8] = AddStaticVehicleEx(586,707.89678955,-467.59048462,15.93293762,90.00000000,43,43,-1); //Wayfarer
    HellsCar[9] = AddStaticVehicleEx(586,707.71630859,-470.38833618,15.93293762,90.00000000,43,43,-1); //Wayfarer
    HellsCar[10] = AddStaticVehicleEx(586,667.52319336,-470.78186035,15.93293762,88.00000000,43,43,-1); //Wayfarer
    HellsCar[11] = AddStaticVehicleEx(586,667.50921631,-467.69863892,15.93293762,87.99499512,43,43,-1); //Wayfarer
    HellsCar[12] = AddStaticVehicleEx(463,667.85925293,-464.75799561,15.95293713,88.00000000,43,43,-1); //Freeway
    HellsCar[13] = AddStaticVehicleEx(463,667.72943115,-461.75531006,15.95293713,87.99499512,43,43,-1); //Freeway
    HellsCar[14] = AddStaticVehicleEx(463,667.92706299,-458.54699707,15.95293713,87.99499512,43,43,-1); //Freeway
    HellsCar[15] = AddStaticVehicleEx(487,682.69464111,-461.62292480,22.83546448,0.00000000,43,43,-1); //Maverick
    HellsCar[16] = AddStaticVehicleEx(459,655.31939697,-452.84576416,16.47593689,182.00000000,43,43,-1); //Berkley's RC Van
    HellsCar[17] = AddStaticVehicleEx(482,663.18701172,-452.89550781,16.58593750,180.00000000,43,43,-1); //Burrito
    HellsCar[18] = AddStaticVehicleEx(567,659.60797119,-463.33432007,16.31427956,180.00000000,43,43,-1); //Savanna
    HellsCar[19] = AddStaticVehicleEx(463,672.97216797,-477.66326904,15.95293713,182.00000000,43,43,-1); //Freeway
    HellsCar[20] = AddStaticVehicleEx(463,675.46148682,-477.78826904,15.95293713,181.99951172,43,43,-1); //Freeway [673]
//================================[Carros Sub HQ HA]=============================================================================
    HellsCar[21] = AddStaticVehicleEx(463,1980.50000000,-2055.00000000,13.19999981,180.00000000,43,43,-1); //Freeway
    HellsCar[22] = AddStaticVehicleEx(463,1975.90002441,-2054.69995117,13.19999981,182.00000000,43,43,-1); //Freeway
    HellsCar[23] = AddStaticVehicleEx(586,1983.00000000,-2054.80004883,13.10000038,184.00000000,43,43,-1); //Wayfarer
    HellsCar[24] = AddStaticVehicleEx(586,1985.59997559,-2054.60009766,13.10000038,178.00000000,43,43,-1); //Wayfarer
    HellsCar[25] = AddStaticVehicleEx(543,1989.90002441,-2058.69995117,13.30000019,90.00000000,43,43,-1); //Sadler
    HellsCar[26] = AddStaticVehicleEx(475,1990.30004883,-2061.69995117,13.30000019,90.00000000,43,43,-1); //Sabre
    HellsCar[27] = AddStaticVehicleEx(586,1987.69995117,-2054.89990234,13.10000038,181.99963379,43,43,-1); //Wayfarer
    HellsCar[28] = AddStaticVehicleEx(586,1990.59997559,-2054.50000000,13.10000038,180.00000000,43,43,-1); //Wayfarer
    HellsCar[29] = AddStaticVehicleEx(463,1973.19995117,-2054.50000000,13.19999981,182.00000000,43,43,-1); //Freeway
    HellsCar[30] = AddStaticVehicleEx(463,1873.69995117,-1878.09997559,13.10000038,0.00000000,43,43,-1); //Freeway
    HellsCar[31] = AddStaticVehicleEx(463,1875.50000000,-1878.00000000,13.10000038,0.00000000,43,43,-1); //Freeway
    HellsCar[32] = AddStaticVehicleEx(463,1877.30004883,-1877.90002441,13.10000038,0.00000000,43,43,-1); //Freeway
    HellsCar[33] = AddStaticVehicleEx(463,1878.50000000,-1877.80004883,13.10000038,0.00000000,43,43,-1); //Freeway
    HellsCar[34] = AddStaticVehicleEx(586,1880.50000000,-1877.69995117,13.10000038,0.00000000,43,43,-1); //Wayfarer
    HellsCar[35] = AddStaticVehicleEx(586,1882.69995117,-1877.69995117,13.10000038,0.00000000,43,43,-1); //Wayfarer
    HellsCar[36] = AddStaticVehicleEx(586,1884.50000000,-1877.69995117,13.10000038,0.00000000,43,43,-1); //Wayfarer
    HellsCar[37] = AddStaticVehicleEx(586,1886.59997559,-1877.80004883,13.10000038,0.00000000,43,43,-1); //Wayfarer
    HellsCar[38] = AddStaticVehicleEx(434,1877.69995117,-1864.90002441,13.69999981,270.00000000,43,43,-1); //Hotknife
    HellsCar[39] = AddStaticVehicleEx(463,1978.19995117,-2054.80004883,13.19999981,180.00000000,43,43,-1); //Freeway
//==========================================[Carros Mongols]====================================================================
    MongolsCar[0] = AddStaticVehicleEx(487,28.50000000,-2654.50000000,43.70000076,92.00000000,114,114,-1); //Maverick    [788]
    MongolsCar[1] = AddStaticVehicleEx(463,22.00000000,-2653.80004883,40.09999847,96.00000000,114,114,-1); //Freeway
    MongolsCar[2] = AddStaticVehicleEx(463,22.29999924,-2655.80004883,40.09999847,92.00000000,114,114,-1); //Freeway
    MongolsCar[3] = AddStaticVehicleEx(543,38.00000000,-2644.89990234,40.40000153,0.00000000,114,114,-1); //Sadler
    MongolsCar[4] = AddStaticVehicleEx(463,34.20000076,-2644.89990234,40.40000153,0.00000000,114,114,-1); //Freeway
    MongolsCar[5] = AddStaticVehicleEx(463,23.10000038,-2662.89990234,40.20000076,0.00000000,114,114,-1); //Freeway
    MongolsCar[6] = AddStaticVehicleEx(463,21.50000000,-2663.00000000,40.20000076,0.00000000,114,114,-1); //Freeway
    MongolsCar[7] = AddStaticVehicleEx(463,20.29999924,-2662.89990234,40.20000076,0.00000000,114,114,-1); //Freeway
    MongolsCar[8] = AddStaticVehicleEx(463,19.00000000,-2662.80004883,40.20000076,0.00000000,114,114,-1); //Freeway
    MongolsCar[9] = AddStaticVehicleEx(463,17.70000076,-2662.69995117,40.20000076,0.00000000,114,114,-1); //Freeway
    MongolsCar[10] = AddStaticVehicleEx(463,24.50000000,-2662.89990234,40.20000076,0.00000000,114,114,-1); //Freeway
    MongolsCar[11] = AddStaticVehicleEx(463,26.20000076,-2663.00000000,40.20000076,0.00000000,114,114,-1); //Freeway
    MongolsCar[12] = AddStaticVehicleEx(459,29.50000000,-2659.00000000,40.70000076,92.00000000,114,114,-1); //Berkley's RC Van
    MongolsCar[13] = AddStaticVehicleEx(463,27.60000038,-2663.00000000,40.20000076,0.00000000,114,114,-1); //Freeway
    MongolsCar[14] = AddStaticVehicleEx(567,28.10000038,-2640.69995117,40.40000153,92.00000000,114,114,-1); //Savanna
    MongolsCar[15] = AddStaticVehicleEx(586,18.00000000,-2633.00000000,40.00000000,182.00000000,114,114,-1); //Wayfarer
    MongolsCar[16] = AddStaticVehicleEx(586,19.79999924,-2633.10009766,40.00000000,184.00000000,114,114,-1); //Wayfarer
    MongolsCar[17] = AddStaticVehicleEx(586,21.70000076,-2632.80004883,40.00000000,184.00000000,114,114,-1); //Wayfarer
    MongolsCar[18] = AddStaticVehicleEx(586,23.39999962,-2633.00000000,40.00000000,182.00000000,114,114,-1); //Wayfarer
    MongolsCar[19] = AddStaticVehicleEx(586,25.00000000,-2632.89990234,40.00000000,184.00000000,114,114,-1); //Wayfarer
    MongolsCar[20] = AddStaticVehicleEx(586,26.70000076,-2633.00000000,40.00000000,178.00000000,114,114,-1); //Wayfarer
    MongolsCar[21] = AddStaticVehicleEx(515,33.59999847,-2635.69995117,41.59999847,92.00000000,114,114,-1); //Roadtrain   [809]
// Sub HQ Mongols
    MongolsCar[22] = AddStaticVehicleEx(463,2122.50000000,-1782.50000000,13.00000000,0.00000000,114,114,-1); //Freeway
    MongolsCar[23] = AddStaticVehicleEx(463,2119.19995117,-1782.50000000,13.00000000,0.00000000,114,114,-1); //Freeway
    MongolsCar[24] = AddStaticVehicleEx(463,2115.60009766,-1782.40002441,13.00000000,0.00000000,114,114,-1); //Freeway
    MongolsCar[25] = AddStaticVehicleEx(463,2112.00000000,-1782.30004883,13.00000000,0.00000000,114,114,-1); //Freeway
    MongolsCar[26] = AddStaticVehicleEx(586,2108.50000000,-1782.09997559,13.00000000,0.00000000,114,114,-1); //Wayfarer
    MongolsCar[27] = AddStaticVehicleEx(586,2104.89990234,-1782.30004883,13.00000000,0.00000000,114,114,-1); //Wayfarer
    MongolsCar[28] = AddStaticVehicleEx(586,2101.39990234,-1782.40002441,13.00000000,0.00000000,114,114,-1); //Wayfarer
    MongolsCar[29] = AddStaticVehicleEx(567,2106.60009766,-1772.19995117,13.39999962,272.00000000,114,114,-1); //Savanna
//=================================================[Carros Sons]========================================================================
    SonsCar[1] = AddStaticVehicleEx(463,-1554.53796387,-2741.75292969,48.06079102,143.09436035,79,79,-1); //Freeway
    SonsCar[2] = AddStaticVehicleEx(463,-1556.61413574,-2740.26074219,48.16174698,143.09143066,79,79,-1); //Freeway
    SonsCar[3] = AddStaticVehicleEx(463,-1558.92724609,-2738.68554688,48.16173553,143.09143066,79,79,-1); //Freeway
    SonsCar[4] = AddStaticVehicleEx(463,-1561.40808105,-2736.98950195,48.16136551,143.09143066,79,79,-1); //Freeway
    SonsCar[5] = AddStaticVehicleEx(463,-1563.61242676,-2735.55029297,48.16143417,143.09143066,79,79,-1); //Freeway
    SonsCar[6] = AddStaticVehicleEx(463,-1566.05737305,-2733.91748047,48.16166306,143.09143066,79,79,-1); //Freeway
    SonsCar[7] = AddStaticVehicleEx(463,-1568.29138184,-2732.32714844,48.16141891,143.09143066,79,79,-1); //Freeway
    SonsCar[8] = AddStaticVehicleEx(463,-1570.61303711,-2730.65625000,48.16173172,143.09143066,79,79,-1); //Freeway
    SonsCar[9] = AddStaticVehicleEx(463,-1572.76281738,-2729.18676758,48.16156387,143.09143066,79,79,-1); //Freeway
    SonsCar[10] = AddStaticVehicleEx(463,-1575.09570312,-2727.56835938,48.16159439,143.09143066,79,79,-1); //Freeway
    SonsCar[11] = AddStaticVehicleEx(586,-1526.50744629,-2756.32495117,48.13606262,169.44458008,79,79,-1); //Wayfarer
    SonsCar[12] = AddStaticVehicleEx(586,-1531.18579102,-2755.10009766,48.13606262,169.44213867,79,79,-1); //Wayfarer
    SonsCar[13] = AddStaticVehicleEx(586,-1535.68298340,-2753.96215820,48.13606262,169.44213867,79,79,-1); //Wayfarer
    SonsCar[14] = AddStaticVehicleEx(586,-1540.55761719,-2752.43115234,48.13109589,169.44213867,79,79,-1); //Wayfarer
    SonsCar[15] = AddStaticVehicleEx(586,-1545.92077637,-2751.05444336,48.13307953,169.44213867,79,79,-1); //Wayfarer
    SonsCar[16] = AddStaticVehicleEx(482,-1565.66601562,-2756.15307617,48.78906250,0.00000000,79,79,-1); //Burrito
    SonsCar[17] = AddStaticVehicleEx(567,-1573.61962891,-2750.53906250,48.51740265,0.00000000,79,79,-1); //Savanna
    SonsCar[18] = AddStaticVehicleEx(487,-1584.45007324,-2730.57788086,48.66180801,325.83990479,79,79,-1); //Maverick
// Sub HQ Sons
    SonsCar[19] = AddStaticVehicleEx(463,2407.50000000,-1241.59997559,23.39999962,268.00000000,79,79,-1); //Freeway
    SonsCar[20] = AddStaticVehicleEx(463,2407.50000000,-1239.40002441,23.39999962,267.99499512,79,79,-1); //Freeway
    SonsCar[21] = AddStaticVehicleEx(463,2407.39990234,-1236.90002441,23.39999962,267.99499512,79,79,-1); //Freeway
    SonsCar[22] = AddStaticVehicleEx(463,2407.39990234,-1234.19995117,23.39999962,267.99499512,79,79,-1); //Freeway
    SonsCar[23] = AddStaticVehicleEx(463,2407.39990234,-1231.19995117,23.50000000,267.99499512,79,79,-1); //Freeway
    SonsCar[24] = AddStaticVehicleEx(586,2435.89990234,-1221.40002441,24.79999924,182.00000000,79,79,-1); //Wayfarer
    SonsCar[25] = AddStaticVehicleEx(586,2432.39990234,-1221.40002441,24.79999924,181.99951172,79,79,-1); //Wayfarer
    SonsCar[26] = AddStaticVehicleEx(586,2429.10009766,-1221.50000000,25.00000000,181.99951172,79,79,-1); //Wayfarer
    SonsCar[27] = AddStaticVehicleEx(586,2425.80004883,-1221.59997559,25.00000000,181.99951172,79,79,-1); //Wayfarer
    SonsCar[28] = AddStaticVehicleEx(567,2429.00000000,-1239.19995117,24.39999962,90.00000000,79,79,-1); //Savanna
    SonsCar[29] = AddStaticVehicleEx(487,2400.80004883,-1235.00000000,28.60000038,0.00000000,79,79,-1); //Maverick
//=======================================[Carros Caminhoneiros]=========================================================
    CaminhaoCar[0] = AddStaticVehicleEx(514,-77.5039,-1108.1729,1.6683,161.8915,-1,-1,-1); // truck 						[627]
	CaminhaoCar[1] = AddStaticVehicleEx(514,-72.3507,-1109.7822,1.6670,161.7769,-1,-1,-1); // truck 						[628]
	CaminhaoCar[2] = AddStaticVehicleEx(514,-67.0126,-1111.7156,1.6688,160.4800,-1,-1,-1); // truck 						[629]
	CaminhaoCar[3] = AddStaticVehicleEx(435,-51.0638,-1135.2831,1.0781,68.3320,-1,-1,-1); // trailer 						[630]
	CaminhaoCar[4] = AddStaticVehicleEx(435,-53.6230,-1139.7546,1.0781,67.5604,-1,-1,-1); // trailer 						[631]
	CaminhaoCar[5] = AddStaticVehicleEx(435,-55.0517,-1144.3676,0.8018,68.1347,-1,-1,-1); // trailer 						[632]
//============================================[CArros PCC]===================================================================
	PccCar[0] = AddStaticVehicleEx(560,1307.69995117,-855.29998779,39.40000153,268.00000000,65,65,-1); //Sultan
    PccCar[1] = AddStaticVehicleEx(565,1307.59997559,-860.00000000,39.29999924,268.00000000,65,65,-1); //Flash
    PccCar[2] = AddStaticVehicleEx(559,1307.69995117,-864.59997559,39.29999924,270.00000000,65,65,-1); //Jester
    PccCar[3] = AddStaticVehicleEx(402,1307.80004883,-869.40002441,39.50000000,270.00000000,65,65,-1); //Buffalo
    PccCar[4] = AddStaticVehicleEx(475,1307.90002441,-874.29998779,39.50000000,270.00000000,65,65,-1); //Sabre
    PccCar[5] = AddStaticVehicleEx(482,1338.80004883,-858.50000000,39.59999847,180.00000000,65,65,-1); //Burrito
    PccCar[6] = AddStaticVehicleEx(567,1330.69995117,-881.00000000,39.59999847,0.00000000,65,65,-1); //Savanna
    PccCar[7] = AddStaticVehicleEx(510,1316.00000000,-853.90002441,39.29999924,178.00000000,65,65,-1); //Mountain Bike
    PccCar[8] = AddStaticVehicleEx(510,1318.19995117,-854.00000000,39.29999924,177.99951172,65,65,-1); //Mountain Bike
    PccCar[9] = AddStaticVehicleEx(522,1320.90002441,-854.70001221,39.20000076,176.00000000,65,65,-1); //NRG-500
    PccCar[10] = AddStaticVehicleEx(461,1323.09997559,-854.90002441,39.29999924,180.00000000,65,65,-1); //PCJ-600
    PccCar[11] = AddStaticVehicleEx(468,1326.00000000,-855.00000000,39.29999924,176.00000000,65,65,-1); //Sanchez
    PccCar[12] = AddStaticVehicleEx(487,1315.30004883,-887.00000000,45.50000000,0.00000000,65,65,-1); //Maverick 				[626]
//============================================[Carros Comando vermelho]====================================================
	CvCarros[0] = AddStaticVehicleEx(567,2166.9192,-1808.8960,13.2744,1.8027,3,3,-1); // carro CV 6     			[603]
	CvCarros[1] = AddStaticVehicleEx(480,2162.8418,-1808.9608,13.1587,355.8469,3,3,-1); // carro CV 7   			[604]
	CvCarros[2] = AddStaticVehicleEx(533,2170.3511,-1808.2281,13.0954,356.7516,3,3,-1); // carro CV 8   			[605]
	CvCarros[3] = AddStaticVehicleEx(487,2140.4653,-1811.3521,18.8720,359.0771,3,3,-1); // heli CV      			[606]
	CvCarros[4] = AddStaticVehicleEx(522,2153.0305,-1797.7424,13.1315,95.4350,3,3,-1); // moto CV 1     			[607]
	CvCarros[5] = AddStaticVehicleEx(522,2152.9424,-1795.8729,13.1157,89.3051,3,3,-1); // moto CV 2     			[608]
	CvCarros[6] = AddStaticVehicleEx(560,2170.0002,-1793.9656,13.1749,178.4637,3,3,-1); // carro CV 2   			[609]
	CvCarros[7] = AddStaticVehicleEx(560,2159.1633,-1808.6270,13.0691,359.6226,3,3,-1); // carro CV 3   			[610]
	CvCarros[8] = AddStaticVehicleEx(559,2161.1936,-1793.8085,13.0271,178.9899,3,3,-1); // carro CV 4   			[611]
	CvCarros[9] = AddStaticVehicleEx(562,2165.2068,-1793.7007,13.0222,177.9311,3,3,-1); // carro CV 5   			[612]
	CvCarros[10] = AddStaticVehicleEx(424,2173.9265,-1808.1708,13.1515,0.4743,3,3,-1); // carro CV 1     			[613]
//============================================[Motos Rally]===========================================================
    RallyCar[0] = AddStaticVehicleEx(468,-2396.6487,-2194.7942,32.9527,244.9457,14,14,-1); // rally1 [556]
    RallyCar[1] = AddStaticVehicleEx(468,-2397.9363,-2196.0374,32.9525,251.1160,10,0,-1); // rally2 [557]
    RallyCar[2] = AddStaticVehicleEx(468,-2399.1172,-2196.9358,32.9529,253.3459,8,8,-1); // rally3 [558]
    RallyCar[3] = AddStaticVehicleEx(468,-2400.7209,-2198.4172,32.9483,263.7230,1,1,-1); // rally4 [559]
    RallyCar[4] = AddStaticVehicleEx(468,-2396.6289,-2194.7290,32.9359,237.7247,14,14,-1); // rally1 [560]
    RallyCar[5] = AddStaticVehicleEx(468,-2397.8621,-2195.9563,32.9209,240.0725,10,0,-1); // rally2 [561]
    RallyCar[6] = AddStaticVehicleEx(468,-2399.1553,-2197.2615,32.9516,268.3748,8,8,-1); // rally3 [562]
    RallyCar[7] = AddStaticVehicleEx(468,-2400.7368,-2198.5469,32.9272,258.2426,1,1,-1); // rally4 [563]
    RallyCar[8] = AddStaticVehicleEx(468,-2401.6670,-2199.7456,32.9394,242.1490,11,11,-1); // rally5 [564]
    RallyCar[9] = AddStaticVehicleEx(468,-2402.8044,-2200.7349,32.9736,258.3496,2,2,-1); // rally6 [565]
    RallyCar[10] = AddStaticVehicleEx(468,-2403.2639,-2202.2148,32.9559,287.4485,20,20,-1); // rally7 [566]
    RallyCar[11] = AddStaticVehicleEx(468,-2403.2646,-2203.6196,32.9454,278.7190,18,18,-1); // rally8 [567]
    RallyCar[12] = AddStaticVehicleEx(468,-2403.2813,-2205.2979,32.9544,270.3040,19,19,-1); // rally9 [568]
    RallyCar[13] = AddStaticVehicleEx(468,-2402.6687,-2206.1614,32.9588,293.0764,5,5,-1); // rally10 [569]
    RallyCar[14] = AddStaticVehicleEx(468,-2402.5225,-2207.9175,32.9407,283.6688,9,9,-1); // rally11 [570]
    RallyCar[15] = AddStaticVehicleEx(468,-2402.4133,-2209.6116,32.9523,284.1946,17,17,-1); // rally12 [571]
    RallyCar[16] = AddStaticVehicleEx(468,-2401.7029,-2210.8396,32.9555,273.4699,6,6,-1); // rally13 [572]
    RallyCar[17] = AddStaticVehicleEx(468,-2400.9187,-2212.2036,32.9469,293.0626,0,0,-1); // rally14 [573]
    RallyCar[18] = AddStaticVehicleEx(468,-2400.0249,-2213.6221,32.9497,310.2712,3,3,-1); // rally15 [574]
    RallyCar[19] = AddStaticVehicleEx(468,-2398.7419,-2215.3887,32.9686,325.4236,4,4,-1); // rally16 [575]
    RallyCar[20] = AddStaticVehicleEx(468,-2397.2495,-2216.1824,32.9741,321.5857,16,16,-1); // rally17 [576]
    RallyCar[21] = AddStaticVehicleEx(468,-2395.8289,-2216.4360,32.9561,345.0271,13,13,-1); // rally18 [577]
    RallyCar[22] = AddStaticVehicleEx(468,-2393.3403,-2216.3254,32.9401,344.7386,7,7,-1); // rally19 [578]
    RallyCar[23] = AddStaticVehicleEx(468,-2391.2278,-2216.4109,32.9444,332.2098,15,15,-1); // rally20 [579]
    RallyCar[24] = AddStaticVehicleEx(468,-2389.5447,-2215.9106,32.9606,355.1463,21,21,-1); // rally21 [580]
    RallyCar[25] = AddStaticVehicleEx(468,-2387.7131,-2216.2065,32.9582,3.4455,12,12,-1); // rally22 [581]
//=============================================[Carros Vips]================================================================
    VipCar[0] = AddStaticVehicleEx(487,349.1804,-1830.5696,3.9809,178.7809,0,0,-1); // heli vip 1 [487]
	VipCar[1] = AddStaticVehicleEx(487,324.8780,-1828.9980,4.0119,183.8850,0,0,-1); // heli vip 2 [488]
	VipCar[2] = AddStaticVehicleEx(560,311.5820,-1809.5995,4.1686,359.9641,0,0,-1); // carro praia 1 [489]
	VipCar[3] = AddStaticVehicleEx(560,317.9657,-1809.2924,4.1840,359.9130,0,0,-1); // carro praia 2 [490]
	VipCar[4] = AddStaticVehicleEx(560,324.5570,-1809.4357,4.1836,359.9243,0,0,-1); // carro praia 3 [491]
	VipCar[5] = AddStaticVehicleEx(560,331.0591,-1809.2834,4.1908,359.7497,0,0,-1); // carro praia 4 [492]
	VipCar[6] = AddStaticVehicleEx(560,340.6517,-1809.6073,4.2141,359.7410,0,0,-1); // carro praia 5 [493]
	VipCar[7] = AddStaticVehicleEx(560,347.1095,-1809.3694,4.2270,359.6306,0,0,-1); // carro praia 6 [494]
	VipCar[8] = AddStaticVehicleEx(560,353.4774,-1809.4420,4.2314,1.3118,0,0,-1); // carro praia 7 [495]
	VipCar[9] = AddStaticVehicleEx(452,166.6003,-1898.6937,-0.4749,178.4558,1,22,-1); // lancha praia 1 [496]
	VipCar[10] = AddStaticVehicleEx(452,175.4223,-1896.5074,-0.2244,177.1550,1,16,-1); // lancha praia 2 [497]
	VipCar[11] = AddStaticVehicleEx(452,166.3409,-1914.8420,-0.5107,178.3757,1,57,-1); // lancha praia 3 [498]
	VipCar[12] = AddStaticVehicleEx(452,173.7822,-1914.0876,-0.4673,175.7722,1,35,-1); // lancha praia 4 [499]
	VipCar[13] = AddStaticVehicleEx(452,185.2851,-1898.3643,-0.2911,174.2977,1,5,-1); // lancha praia 5 [500]
	VipCar[14] = AddStaticVehicleEx(452,183.2590,-1915.6124,-0.4429,174.8717,1,53,-1); // lancha praia 6 [501]
	VipCar[15] = AddStaticVehicleEx(471,311.6365,-1788.7190,4.0551,180.0642,0,0,-1); // quad praia 1 [502]
    VipCar[16] = AddStaticVehicleEx(471,315.3439,-1788.6288,4.1146,179.8893,0,0,-1); // quad praia 2 [398]
//====================================[Helicópteros de alug]=====================================================================
    AlugarHeli[0] = AddStaticVehicleEx(487,2069.4409,-2637.0068,13.5469,8.9195,-1,-1,-1); // Heli 1(LS) [407]
    AlugarHeli[1] = AddStaticVehicleEx(487,2059.1113,-2638.4084,13.5469,10.1728,-1,-1,-1); // Heli 2(LS) [408]
    AlugarHeli[2] = AddStaticVehicleEx(513,2044.4976,-2639.1333,13.5469,8.9195,-1,-1,-1); // A.Manobras 1(LS) [409]
    AlugarHeli[3] = AddStaticVehicleEx(513,2029.3884,-2639.7593,13.5469,354.7468,-1,-1,-1); // A.Manobras 2(LS) [410]
    AlugarHeli[4] = AddStaticVehicleEx(519,2005.5210,-2641.6875,13.5469,7.3528,-1,-1,-1); // A.Jatinho 1(LS) [411]
    AlugarHeli[5] = AddStaticVehicleEx(592,1475.8405,-2634.4702,13.5469,286.2323,-1,-1,-1); // A.Andromeda (LS) [412]
	AlugarHeli[6] = AddStaticVehicleEx(513,-1363.9288,-486.9547,14.1719,204.7414,-1,-1,-1); // A.Manobras 1 (SF) [413]
	AlugarHeli[7] = AddStaticVehicleEx(513,-1436.6971,-529.5022,14.1719,202.5247,-1,-1,-1); // A.Manobras 2 (SF) [414]
	AlugarHeli[8] = AddStaticVehicleEx(592,-1637.8472,-145.2139,14.1484,315.9523,-1,-1,-1); // A.Andromeda (SF) [415]
	AlugarHeli[9] = AddStaticVehicleEx(519,-1531.3790,-85.7326,14.1484,340.1258,-1,-1,-1); // A.Jatinho 1 (SF) [416]
	AlugarHeli[10] = AddStaticVehicleEx(519,-1435.5215,11.6454,14.1484,351.7193,-1,-1,-1); // A.Jatinho 2 (SF) [417]
	AlugarHeli[11] = AddStaticVehicleEx(447,1475.2814,-2404.2607,13.5547,172.5246,-1,-1,-1); // Heli Boia (LS) [418]
	AlugarHeli[12] = AddStaticVehicleEx(469,1488.2610,-2405.7734,13.5547,166.8612,-1,-1,-1); // Heli Boia (LS) [419]
    AlugarHeli[13] = AddStaticVehicleEx(487,2081.3425,-2635.8618,13.7662,13.9935,0,0,-1); // heli [485]
	AlugarHeli[14] = AddStaticVehicleEx(487,2093.8066,-2632.9290,13.7230,21.3379,0,0,-1); // heli [486]
    AlugarHeli[15] = AddStaticVehicleEx(519,1981.6908,-2644.9192,14.4686,0.8321,-1,-1,-1); // heli [503]
	AlugarHeli[16] = AddStaticVehicleEx(519,1956.8619,-2646.7402,14.4686,10.5305,-1,-1,-1); // heli [504]
//===================================[Carros HQ Triads]===========================================================================
    TriadsCar[0] = AddStaticVehicleEx(551,-379.89999390,-1447.90002441,25.60000038,270.00000000,12,12,-1); //Merit
    TriadsCar[1] = AddStaticVehicleEx(487,-410.60000610,-1377.30004883,26.00000000,170.00000000,12,12,-1); //Maverick
    TriadsCar[2] = AddStaticVehicleEx(560,-380.50000000,-1444.80004883,25.50000000,270.00000000,12,12,-1); //Sultan
    TriadsCar[3] = AddStaticVehicleEx(559,-380.60000610,-1441.90002441,25.50000000,270.00000000,12,12,-1); //Jester
    TriadsCar[4] = AddStaticVehicleEx(541,-380.79998779,-1435.80004883,25.39999962,270.00000000,12,12,-1); //Bullet
    TriadsCar[5] = AddStaticVehicleEx(480,-380.60000610,-1432.59997559,25.60000038,270.00000000,12,12,-1); //Comet
    TriadsCar[6] = AddStaticVehicleEx(522,-381.79998779,-1428.09997559,25.60000038,274.00000000,12,12,-1); //NRG-500
    TriadsCar[7] = AddStaticVehicleEx(522,-381.79998779,-1427.00000000,25.60000038,273.99902344,12,12,-1); //NRG-500
    TriadsCar[8] = AddStaticVehicleEx(522,-381.70001221,-1425.90002441,25.70000076,273.99902344,12,12,-1); //NRG-500
    TriadsCar[9] = AddStaticVehicleEx(522,-381.70001221,-1424.80004883,25.70000076,273.99902344,12,12,-1); //NRG-500
//====================================[Carros HQ Drifters]================================================================================
    DriftersCar[0] = AddStaticVehicleEx(560,839.59997559,-2061.69995117,12.69999981,0.00000000,125,125,-1); //Sultan
	DriftersCar[1] = AddStaticVehicleEx(560,835.90002441,-2061.89990234,12.69999981,0.00000000,125,125,-1); //Sultan
	DriftersCar[2] = AddStaticVehicleEx(562,843.70001221,-2061.69995117,12.60000038,0.00000000,125,125,-1); //Elegy
	DriftersCar[3] = AddStaticVehicleEx(562,848.79998779,-2061.69995117,12.60000038,0.00000000,125,125,-1); //Elegy
	DriftersCar[4] = AddStaticVehicleEx(565,849.70001221,-2042.50000000,12.60000038,90.00000000,125,125,-1); //Flash
	DriftersCar[5] = AddStaticVehicleEx(565,849.70001221,-2045.50000000,12.60000038,90.00000000,125,125,-1); //Flash
	DriftersCar[6] = AddStaticVehicleEx(522,821.90002441,-2047.50000000,12.50000000,270.00000000,125,125,-1); //NRG-500
	DriftersCar[7] = AddStaticVehicleEx(522,821.90002441,-2046.59997559,12.50000000,270.00000000,125,125,-1); //NRG-500
	DriftersCar[8] = AddStaticVehicleEx(522,821.89941406,-2045.79980469,12.50000000,270.00000000,125,125,-1); //NRG-500
	DriftersCar[9] = AddStaticVehicleEx(522,821.90002441,-2045.00000000,12.50000000,270.00000000,125,125,-1); //NRG-500
	DriftersCar[10] = AddStaticVehicleEx(541,847.50000000,-2049.00000000,12.60000038,88.00000000,125,125,-1); //Bullet
	DriftersCar[11] = AddStaticVehicleEx(541,848.79998779,-2052.60009766,12.60000038,87.99499512,125,125,-1); //Bullet
	DriftersCar[12] = AddStaticVehicleEx(451,825.79998779,-2039.59997559,12.60000038,270.00000000,125,125,-1); //Turismo
//=====================================[CARROS HQ SK]===================================================
    SkCar[0] = AddStaticVehicleEx(470,1216.7998000,-1654.0996100,11.9000000,270.0000000,2,2,-1); //Patriot
    SkCar[1] = AddStaticVehicleEx(470,1216.5996100,-1650.2998000,11.9000000,270.0000000,2,2,-1); //Patriot
    SkCar[2] = AddStaticVehicleEx(406,1238.5996100,-1672.3994100,13.3000000,2.0000000,2,2,-1); //Dumper
    SkCar[3] = AddStaticVehicleEx(535,1216.1992200,-1646.5996100,11.6000000,270.0000000,2,2,-1); //Slamvan
    SkCar[4] = AddStaticVehicleEx(522,1230.0996100,-1645.6992200,11.5000000,209.9980000,2,2,-1); //NRG-500
    SkCar[5] = AddStaticVehicleEx(522,1232.0000000,-1645.8994100,11.5000000,209.9930000,2,2,-1); //NRG-500
    SkCar[6] = AddStaticVehicleEx(522,1233.7998000,-1645.5996100,11.5000000,209.9930000,2,2,-1); //NRG-500
    SkCar[7] = AddStaticVehicleEx(522,1235.5000000,-1645.6992200,11.5000000,209.9930000,2,2,-1); //NRG-500
    SkCar[8] = AddStaticVehicleEx(522,1237.0996100,-1645.7998000,11.5000000,209.9930000,2,2,-1); //NRG-500
    SkCar[9] = AddStaticVehicleEx(522,1241.0999800,-1645.8000500,11.5000000,209.9930000,2,2,-1); //NRG-500
    SkCar[10] = AddStaticVehicleEx(522,1239.0999800,-1645.5999800,11.5000000,209.9930000,2,2,-1); //NRG-500
    SkCar[11] = AddStaticVehicleEx(411,1216.2998000,-1642.8994100,11.6000000,270.0000000,2,2,-1); //Infernus
    SkCar[12] = AddStaticVehicleEx(451,1216.1992200,-1638.8994100,11.6000000,272.0000000,2,2,-1); //Turismo
    SkCar[13] = AddStaticVehicleEx(487,1278.1992200,-1629.0000000,27.6000000,180.0000000,2,2,-1); //Maverick
    SkCar[14] = AddStaticVehicleEx(487,1268.0000000,-1629.0000000,27.6000000,180.0000000,2,2,-1); //Maverick
    SkCar[15] = AddStaticVehicleEx(560,1216.0000000,-1665.8994100,11.6000000,270.0000000,2,2,-1); //Sultan
    SkCar[16] = AddStaticVehicleEx(560,1215.8994100,-1669.3994100,11.6000000,270.0000000,2,2,-1); //Sultan
    SkCar[17] = AddStaticVehicleEx(490,1216.1992200,-1662.7998000,12.1000000,272.0000000,2,2,-1); //FBI Rancher
    SkCar[18] = AddStaticVehicleEx(490,1215.9000200,-1658.4000200,12.1000000,272.0000000,2,2,-1); //FBI Rancher
    SkCar[19] = AddStaticVehicleEx(402,1215.8000500,-1675.5999800,11.7000000,270.0000000,2,2,-1); //Buffalo
    SkCar[20] = AddStaticVehicleEx(402,1215.9000200,-1672.4000200,11.7000000,270.0000000,2,2,-1); //Buffalo
    SkCar[21] = AddStaticVehicleEx(463,1233.8000500,-1675.9000200,11.4000000,0.0000000,2,2,-1); //Freeway
    SkCar[22] = AddStaticVehicleEx(463,1232.4000200,-1675.5000000,11.4000000,0.0000000,2,2,-1); //Freeway
    SkCar[23] = AddStaticVehicleEx(463,1231.0000000,-1675.3000500,11.4000000,0.0000000,2,2,-1); //Freeway
    SkCar[24] = AddStaticVehicleEx(595,255.6000100,2933.8999000,0.0000000,0.0000000,2,2,-1); //Launch
    SkCar[25] = AddStaticVehicleEx(493,250.8000000,3790.8999000,0.0000000,180.0000000,2,2,-1); //Jetmax
    SkCar[26] = AddStaticVehicleEx(493,257.6000100,3790.6001000,0.0000000,179.9950000,2,2,-1); //Jetmax
    SkCar[27] = AddStaticVehicleEx(427,262.1000100,3789.8000500,1.3000000,0.0000000,2,2,-1); //Enforcer
//=======================================[Carros HQ AnonymouS]===========================================================
    CarStart[0] = AddStaticVehicleEx(411,252.8999900,-2215.8000500,1.8000000,2.0000000,93,93,-1); //Vehicle number 0
    CarStart[1] = AddStaticVehicleEx(411,249.8000000,-2215.8999000,1.8000000,2.0000000,93,93,-1); //Vehicle number 1
    CarStart[2] = AddStaticVehicleEx(522,272.7999900,-2225.3000500,1.6000000,0.0000000,93,93,-1); //Vehicle number 2
    CarStart[3] = AddStaticVehicleEx(522,269.3999900,-2225.5000000,1.6000000,0.0000000,93,93,-1); //Vehicle number 3
    CarStart[4] = AddStaticVehicleEx(522,266.2999900,-2225.6001000,1.6000000,0.0000000,93,93,-1); //Vehicle number 4
    CarStart[5] = AddStaticVehicleEx(522,263.1000100,-2225.6999500,1.6000000,0.0000000,93,93,-1); //Vehicle number 5
    CarStart[6] = AddStaticVehicleEx(522,263.6000100,-2234.6001000,1.6000000,184.0000000,93,93,-1); //Vehicle number 6
    CarStart[7] = AddStaticVehicleEx(522,266.8999900,-2234.3999000,1.6000000,180.0000000,93,93,-1); //Vehicle number 7
    CarStart[8] = AddStaticVehicleEx(571,269.7000100,-2234.5000000,1.3000000,178.0000000,93,93,-1); //Vehicle number 8
    CarStart[9] = AddStaticVehicleEx(571,273.2000100,-2234.3000500,1.3000000,182.0000000,93,93,-1); //Vehicle number 9
    CarStart[10] = AddStaticVehicleEx(487,297.5000000,-2187.1001000,3.1000000,274.0000000,93,93,-1); //Vehicle number 10
    CarStart[11] = AddStaticVehicleEx(487,298.1000100,-2199.3999000,3.1000000,272.0000000,93,93,-1); //Vehicle number 11
    CarStart[12] = AddStaticVehicleEx(541,233.8000000,-2216.0000000,1.7000000,2.0000000,93,93,-1); //Vehicle number 12
    CarStart[13] = AddStaticVehicleEx(541,230.7000000,-2216.0000000,1.7000000,2.0000000,93,93,-1); //Vehicle number 13
    CarStart[14] = AddStaticVehicleEx(510,251.5000000,-2236.8999000,1.7000000,274.0000000,93,93,-1); //Vehicle number 14
    CarStart[15] = AddStaticVehicleEx(510,251.5000000,-2233.6999500,1.7000000,273.9990000,93,93,-1); //Vehicle number 15
    CarStart[16] = AddStaticVehicleEx(406,283.6000100,-2244.1001000,3.0000000,92.0000000,93,93,-1); //Vehicle number 16
    CarStart[17] = AddStaticVehicleEx(470,283.7999900,-2236.5000000,2.1000000,92.0000000,93,93,-1); //Vehicle number 17
    CarStart[18] = AddStaticVehicleEx(470,284.0000000,-2239.6001000,2.1000000,92.0000000,93,93,-1); //Vehicle number 18
    CarStart[19] = AddStaticVehicleEx(556,284.2000100,-2207.6001000,2.4000000,92.0000000,93,93,-1); //Vehicle number 19
    CarStart[20] = AddStaticVehicleEx(560,237.2000000,-2216.5000000,1.8000000,2.0000000,93,93,-1); //Vehicle number 20
    CarStart[21] = AddStaticVehicleEx(560,240.3000000,-2216.5000000,1.8000000,2.0000000,93,93,-1); //Vehicle number 21
    CarStart[22] = AddStaticVehicleEx(565,243.3999900,-2216.1999500,1.7000000,2.0000000,93,93,-1); //Vehicle number 22
    CarStart[23] = AddStaticVehicleEx(565,246.3000000,-2216.1001000,1.7000000,2.0000000,93,93,-1); //Vehicle number 23
    CarStart[24] = AddStaticVehicleEx(402,256.2999900,-2215.8999000,1.9000000,2.0000000,93,93,-1); //Vehicle number 24
    CarStart[25] = AddStaticVehicleEx(500,259.5000000,-2215.8000500,2.2000000,2.0000000,93,93,-1); //Vehicle number 25
    CarStart[26] = AddStaticVehicleEx(539,252.3999900,-2239.8999000,1.6000000,270.0000000,93,93,-1); //Vehicle number 26
    CarStart[27] = AddStaticVehicleEx(539,252.5000000,-2243.1999500,1.6000000,270.0000000,93,93,-1); //Vehicle number 27
    CarStart[28] = AddStaticVehicleEx(495,283.2999900,-2213.8000500,2.5000000,92.0000000,93,93,-1); //Vehicle number 28
    CarStart[29] = AddStaticVehicleEx(571,284.7000100,-2223.5000000,1.3000000,92.0000000,93,93,-1); //Vehicle number 29
    //KARTS EMPRESA
    //===================================[Motoqueiros Car]=====================================================================================
    CarMotoqueiros[0] = AddStaticVehicleEx(543,1244.1999512,489.2999878,20.7000008,61.9958496,0,0,-1); //Vehicle number 0
    CarMotoqueiros[1] = AddStaticVehicleEx(482,1240.9000244,484.3999939,21.2999992,61.9958496,0,0,-1); //Vehicle number 1
    CarMotoqueiros[2] = AddStaticVehicleEx(567,1239.1999512,479.0000000,21.2000008,61.9953613,0,0,-1); //Vehicle number 2
    CarMotoqueiros[3] = AddStaticVehicleEx(487,1232.4000244,462.2999878,26.5000000,332.0000000,0,0,-1); //Vehicle number 3
    CarMotoqueiros[4] = AddStaticVehicleEx(463,1217.0999756,516.7999878,19.8999996,64.0000000,0,0,-1); //Vehicle number 4
    CarMotoqueiros[5] = AddStaticVehicleEx(463,1216.4000244,515.4000244,19.8999996,64.0000000,0,0,-1); //Vehicle number 5
    CarMotoqueiros[6] = AddStaticVehicleEx(463,1215.5000000,513.9000244,19.8999996,64.0000000,0,0,-1); //Vehicle number 6
    CarMotoqueiros[7] = AddStaticVehicleEx(463,1214.6999512,512.2999878,19.8999996,64.0000000,0,0,-1); //Vehicle number 7
    CarMotoqueiros[8] = AddStaticVehicleEx(463,1214.0000000,510.7999878,19.8999996,64.0000000,0,0,-1); //Vehicle number 8
    CarMotoqueiros[9] = AddStaticVehicleEx(463,1213.0999756,509.2000122,19.8999996,66.0000000,0,0,-1); //Vehicle number 9
    CarMotoqueiros[10] = AddStaticVehicleEx(463,1212.0999756,507.5000000,19.8999996,66.0000000,0,0,-1); //Vehicle number 10
    CarMotoqueiros[11] = AddStaticVehicleEx(463,1211.1999512,505.7999878,19.8999996,64.0000000,0,0,-1); //Vehicle number 11
    CarMotoqueiros[12] = AddStaticVehicleEx(463,1210.1999512,503.7999878,19.8999996,64.0000000,0,0,-1); //Vehicle number 12
    CarMotoqueiros[13] = AddStaticVehicleEx(522,1232.9000244,492.3999939,20.2000008,239.9958496,0,0,-1); //Vehicle number 13
    CarMotoqueiros[14] = AddStaticVehicleEx(522,1239.0999756,504.1000061,20.2000008,245.9948730,0,0,-1); //Vehicle number 14
    CarMotoqueiros[15] = AddStaticVehicleEx(522,1238.1999512,502.2999878,20.2000008,241.9958496,0,0,-1); //Vehicle number 15
    CarMotoqueiros[16] = AddStaticVehicleEx(522,1237.3000488,500.5000000,20.2000008,239.9963379,0,0,-1); //Vehicle number 16
    CarMotoqueiros[17] = AddStaticVehicleEx(522,1236.3000488,498.6000061,20.2000008,243.9953613,0,0,-1); //Vehicle number 17
    CarMotoqueiros[18] = AddStaticVehicleEx(522,1235.4000244,496.7999878,20.2000008,235.9973145,0,0,-1); //Vehicle number 18
    CarMotoqueiros[19] = AddStaticVehicleEx(586,1234.5999756,495.2999878,20.2000008,235.9973145,0,0,-1); //Vehicle number 19
    CarMotoqueiros[20] = AddStaticVehicleEx(586,1233.8000488,493.8999939,20.2000008,237.9963989,0,0,-1); //Vehicle number 20
    CarMotoqueiros[21] = AddStaticVehicleEx(515,1193.3000488,524.9000244,21.3999996,151.9998779,0,0,-1); //Vehicle number 21
    CarMotoqueiros[22] = AddStaticVehicleEx(463,1202.6999512,524.0999756,19.8999996,244.0000000,0,0,-1); //Vehicle number 22
    CarMotoqueiros[23] = AddStaticVehicleEx(463,1201.9000244,522.5000000,19.8999996,242.0000000,0,0,-1); //Vehicle number 23
    CarMotoqueiros[24] = AddStaticVehicleEx(463,1201.0999756,521.0000000,19.8999996,241.9958496,0,0,-1); //Vehicle number 24
    CarMotoqueiros[25] = AddStaticVehicleEx(463,1200.3000488,519.4000244,19.8999996,241.9958496,0,0,-1); //Vehicle number 25
    CarMotoqueiros[26] = AddStaticVehicleEx(463,1199.4000244,517.7999878,19.8999996,241.9958496,0,0,-1); //Vehicle number 26
    CarMotoqueiros[27] = AddStaticVehicleEx(463,1198.5000000,516.1992188,19.8999996,241.9958496,0,0,-1); //Vehicle number 27
    CarMotoqueiros[28] = AddStaticVehicleEx(518,1195.9000244,511.1000061,20.0000000,153.9999390,0,0,-1); //Vehicle number 28
    CarMotoqueiros[29] = AddStaticVehicleEx(490,1175.6999512,503.2000122,20.6000004,331.9958496,0,0,-1); //Vehicle number 29
    CarMotoqueiros[30] = AddStaticVehicleEx(463,2357.1000977,-1371.5000000,23.6000004,270.0000000,0,0,-1); //Vehicle number 30
    CarMotoqueiros[31] = AddStaticVehicleEx(463,2357.0000000,-1369.8000488,23.6000004,270.0000000,0,0,-1); //Vehicle number 31
    CarMotoqueiros[32] = AddStaticVehicleEx(463,2357.0000000,-1368.3000488,23.6000004,270.0000000,0,0,-1); //Vehicle number 32
    CarMotoqueiros[33] = AddStaticVehicleEx(463,2357.0000000,-1366.6999512,23.6000004,270.0000000,0,0,-1); //Vehicle number 33
    CarMotoqueiros[34] = AddStaticVehicleEx(463,2357.1000977,-1365.0999756,23.6000004,270.0000000,0,0,-1); //Vehicle number 34
    CarMotoqueiros[35] = AddStaticVehicleEx(463,2357.1000977,-1363.5000000,23.6000004,270.0000000,0,0,-1); //Vehicle number 35
    CarMotoqueiros[36] = AddStaticVehicleEx(463,2357.3000488,-1361.8000488,23.6000004,270.0000000,0,0,-1); //Vehicle number 36
    CarMotoqueiros[37] = AddStaticVehicleEx(463,2357.3000488,-1360.1999512,23.6000004,270.0000000,0,0,-1); //Vehicle number 37
    CarMotoqueiros[38] = AddStaticVehicleEx(560,2339.0000000,-1370.5000000,23.7999992,180.0000000,0,0,-1); //Vehicle number 38
    CarMotoqueiros[39] = AddStaticVehicleEx(549,2332.3999023,-1368.0999756,23.8999996,178.0000000,0,0,-1); //Vehicle number 39
    CarMotoqueiros[40] = AddStaticVehicleEx(463,2343.6000977,-1375.8000488,23.6000004,180.0000000,0,0,-1); //Vehicle number 40
    CarMotoqueiros[41] = AddStaticVehicleEx(463,2345.5000000,-1375.8000488,23.6000004,180.0000000,0,0,-1); //Vehicle number 41
    CarMotoqueiros[42] = AddStaticVehicleEx(444,1214.1999512,472.2999878,21.0000000,62.0000000,0,0,-1); //Vehicle number 42
    CarMotoqueiros[43] = AddStaticVehicleEx(434,1222.0999756,485.0000000,20.3999996,242.0000000,0,0,-1); //Vehicle number 43
    CarMotoqueiros[44] = AddStaticVehicleEx(412,1190.9000244,496.6000061,20.2000008,242.0000000,0,0,-1); //Vehicle number 44
    CarMotoqueiros[45] = AddStaticVehicleEx(487,2347.0000000,-1363.5000000,28.3999996,0.0000000,0,0,-1); //Vehicle number 45
	//===========================================[FARC]=================================================
    FARCCar[0] = AddStaticVehicleEx(562,-289.5274,1778.0225,42.3742,88.9341,166,166,-1); // carro farc 1
    FARCCar[1] = AddStaticVehicleEx(561,-290.1640,1772.8121,42.5113,88.4176,166,166,-1); // carro farc 2
    FARCCar[2] = AddStaticVehicleEx(602,-290.2047,1767.3833,42.4963,88.8853,166,166,-1); // carro farc 3
    FARCCar[3] = AddStaticVehicleEx(559,-290.3007,1762.1194,42.3455,89.1261,166,166,-1); // carro farc 4
    FARCCar[4] = AddStaticVehicleEx(533,-290.6852,1756.8600,42.4009,89.3385,166,166,-1); // carro farc 5
    FARCCar[5] = AddStaticVehicleEx(560,-290.6864,1751.7465,42.3951,88.7772,166,166,-1); // carro farc 6
    FARCCar[6] = AddStaticVehicleEx(482,-290.9297,1746.5620,42.8093,89.8602,166,166,-1); // carro farc 7
    FARCCar[7] = AddStaticVehicleEx(521,-321.1886,1746.3535,42.4089,271.7326,166,166,-1);// moto farc 8
    FARCCar[8] = AddStaticVehicleEx(521,-321.2504,1750.2207,42.3562,269.2197,166,166,-1); // moto farc 9
    FARCCar[9] = AddStaticVehicleEx(521,-321.2595,1754.5017,42.2959,270.3740,166,166,-1); // moto farc 10
    FARCCar[10] = AddStaticVehicleEx(521,-321.2346,1758.5103,42.3114,268.2691,166,166,-1); // moto farc 11
    FARCCar[11] = AddStaticVehicleEx(520,-257.3022,1887.0851,43.0124,117.9646,166,41664,-1); // jato farc 12
    FARCCar[12] = AddStaticVehicleEx(425,-343.5361,1889.5758,42.8711,236.9606,166,166,-1); // heli guerra farc 13
    FARCCar[13] = AddStaticVehicleEx(487,-357.2600,1831.8311,42.4654,271.2181,166,166,-1); // heli normal farc 14
    FARCCar[14] = AddStaticVehicleEx(432,-306.4431,1895.0936,42.3048,175.3947,166,166,-1); // tank origin farc 15
    FARCCar[15] = AddStaticVehicleEx(432,-295.5010,1831.1763,42.3051,49.7383,166,166,-1); // tank origin farc 2 16
   	FARCCar[16] = AddStaticVehicleEx(520,-277.3982,1855.7278,43.0123,67.1862,166,166,-1); // jato farc
    FARCCar[17] = AddStaticVehicleEx(571,2286.2141,-2354.5000,12.8306,225.8705,-1,-1,-1); // kart  [470]
	FARCCar[18] = AddStaticVehicleEx(571,2279.9412,-2348.4141,12.8312,225.8585,-1,-1,-1); // kart  [471]
	FARCCar[19] = AddStaticVehicleEx(571,2291.7932,-2345.5356,12.8305,227.3060,-1,-1,-1); // kart  [472]
	FARCCar[20] = AddStaticVehicleEx(571,2287.5615,-2341.6433,12.8306,226.5350,-1,-1,-1); // kart  [473]
	FARCCar[21] = AddStaticVehicleEx(571,2299.6785,-2338.3186,12.8307,224.3563,-1,-1,-1); // kart  [474]
	FARCCar[22] = AddStaticVehicleEx(571,2295.3887,-2334.9448,12.8307,227.9102,-1,-1,-1); // kart  [475]
    //BARCOS PRAIA
	AddStaticVehicleEx(452,720.1,-1694.0,-0.4,179.4,-1,-1,-1); // Barco Praia 1 [445]
	AddStaticVehicleEx(452,721.2,-1629.4,-0.4,180.9,-1,-1,-1); // Barco Praia 2 [446]
	AddStaticVehicleEx(452,739.5,-1670.5,-0.6,177.5,-1,-1,-1); // Barco Praia 3 [447]
    AddStaticVehicleEx(452,584.3558,-1932.9105,-0.4759,90.2416,-1,-1,-1);  // Barco Praia 4 [448]
    AddStaticVehicleEx(452,584.8385,-1927.7087,-0.4675,87.1082,-1,-1,-1);  // Barco Praia 5 [449]
    AddStaticVehicleEx(452,585.6655,-1922.4731,-0.4039,95.5683,-1,-1,-1); // Barco Praia 6 [450]
    //Bikes pista
    AddStaticVehicleEx(481,1864.0769,-1394.3240,12.9985,276.3050,0,0,-1); // Bicicleta 1 [420]
	AddStaticVehicleEx(481,1864.0367,-1395.9921,12.9973,269.3524,0,0,-1); // Bicicleta 2 [421]
	//Americano
	AmericanoCar[0] = AddStaticVehicleEx(522,268.7000100,1938.0000000,17.3000000,0.0000000,76,117,RESPAWN_TIME); //NRG-500
	AmericanoCar[1] = AddStaticVehicleEx(522,274.2000100,1938.0000000,17.3000000,0.0000000,76,117,RESPAWN_TIME); //NRG-500
	AmericanoCar[2] = AddStaticVehicleEx(522,270.0996100,1937.9004000,17.3000000,0.0000000,76,117,RESPAWN_TIME); //NRG-500
	AmericanoCar[3] = AddStaticVehicleEx(522,271.5000000,1937.9004000,17.3000000,0.0000000,76,117,RESPAWN_TIME); //NRG-500
	AmericanoCar[4] = AddStaticVehicleEx(522,272.7999900,1938.0000000,17.3000000,0.0000000,76,117,RESPAWN_TIME); //NRG-500
	AmericanoCar[5] = AddStaticVehicleEx(522,275.6000100,1938.1000000,17.3000000,0.0000000,76,117,RESPAWN_TIME); //NRG-500
	AmericanoCar[6] = AddStaticVehicleEx(522,277.0000000,1938.1000000,17.3000000,0.0000000,76,117,RESPAWN_TIME); //NRG-500
	AmericanoCar[7] = AddStaticVehicleEx(522,279.7999900,1938.1000000,17.3000000,0.0000000,76,117,RESPAWN_TIME); //NRG-500
	AmericanoCar[8] = AddStaticVehicleEx(522,278.2998000,1938.2002000,17.3000000,0.0000000,76,117,RESPAWN_TIME); //NRG-500
	AmericanoCar[9] = AddStaticVehicleEx(522,281.3999900,1938.2000000,17.3000000,0.0000000,76,117,RESPAWN_TIME); //NRG-500
	AmericanoCar[10] = AddStaticVehicleEx(497,309.0000000,2040.6000000,17.9000000,0.0000000,-1,-1,RESPAWN_TIME); //Police Maverick
	AmericanoCar[11] = AddStaticVehicleEx(497,298.2002000,2051.9004000,17.9000000,0.0000000,-1,-1,RESPAWN_TIME); //Police Maverick
	AmericanoCar[12] = AddStaticVehicleEx(497,319.2998000,2051.9004000,17.9000000,0.0000000,-1,-1,RESPAWN_TIME); //Police Maverick
	AmericanoCar[13] = AddStaticVehicleEx(470,278.8999900,1993.4000000,17.8000000,270.0000000,95,10,RESPAWN_TIME); //Patriot
	AmericanoCar[14] = AddStaticVehicleEx(470,279.1000100,1981.3000000,17.8000000,270.0000000,95,10,RESPAWN_TIME); //Patriot
	AmericanoCar[15] = AddStaticVehicleEx(470,278.7998000,1985.5000000,17.8000000,270.0000000,95,10,RESPAWN_TIME); //Patriot
	AmericanoCar[16] = AddStaticVehicleEx(470,279.0000000,1989.5000000,17.8000000,270.0000000,95,10,RESPAWN_TIME); //Patriot
	AmericanoCar[17] = AddStaticVehicleEx(470,278.7998000,1997.0000000,17.8000000,270.0000000,95,10,RESPAWN_TIME); //Patriot
	AmericanoCar[18] = AddStaticVehicleEx(548,371.3999900,1915.4000000,19.5000000,0.0000000,245,245,RESPAWN_TIME); //Cargobob
	AmericanoCar[19] = AddStaticVehicleEx(548,346.2000100,1915.0000000,19.5000000,0.0000000,245,245,RESPAWN_TIME); //Cargobob
	AmericanoCar[20] = AddStaticVehicleEx(548,358.1000100,1943.0000000,19.5000000,0.0000000,245,245,RESPAWN_TIME); //Cargobob
	AmericanoCar[21] = AddStaticVehicleEx(592,234.5000000,1979.4000000,21.3000000,0.0000000,245,245,RESPAWN_TIME); //Andromada
	AmericanoCar[22] = AddStaticVehicleEx(425,314.7999900,1837.4000000,18.5000000,0.0000000,95,10,RESPAWN_TIME); //Hunter
	AmericanoCar[23] = AddStaticVehicleEx(425,301.7000100,1814.6000000,18.5000000,0.0000000,95,10,RESPAWN_TIME); //Hunter
	AmericanoCar[24] = AddStaticVehicleEx(425,315.1000100,1814.4000000,18.5000000,0.0000000,95,10,RESPAWN_TIME); //Hunter
	AmericanoCar[25] = AddStaticVehicleEx(425,302.5000000,1837.2000000,18.5000000,0.0000000,95,10,RESPAWN_TIME); //Hunter
	AmericanoCar[26] = AddStaticVehicleEx(520,315.2999900,1921.2000000,18.6000000,0.0000000,-1,-1,RESPAWN_TIME); //Hydra
	AmericanoCar[27] = AddStaticVehicleEx(520,315.6000100,1999.7000000,18.6000000,0.0000000,-1,-1,RESPAWN_TIME); //Hydra
	AmericanoCar[28] = AddStaticVehicleEx(520,315.7999900,1972.7000000,18.6000000,0.0000000,-1,-1,RESPAWN_TIME); //Hydra
	AmericanoCar[29] = AddStaticVehicleEx(520,315.7999900,1947.2000000,18.6000000,0.0000000,-1,-1,RESPAWN_TIME); //Hydra
	AmericanoCar[30] = AddStaticVehicleEx(433,292.8999900,1883.7000000,18.2000000,270.0000000,95,10,RESPAWN_TIME); //Barracks
	AmericanoCar[31] = AddStaticVehicleEx(433,292.2999900,1888.1000000,18.2000000,270.0000000,95,10,RESPAWN_TIME); //Barracks
	AmericanoCar[32] = AddStaticVehicleEx(432,278.8999900,2019.0000000,17.7000000,272.0000000,95,10,RESPAWN_TIME);//Rhino
	AmericanoCar[33] = AddStaticVehicleEx(432,278.2998000,1950.2998000,17.7000000,272.0000000,95,10,RESPAWN_TIME);//Rhino
	AmericanoCar[34] = AddStaticVehicleEx(432,278.5000000,1959.2002000,17.7000000,272.0000000,95,10,RESPAWN_TIME); //Rhino
	AmericanoCar[35] = AddStaticVehicleEx(432,279.2000100,2028.7000000,17.7000000,272.0000000,95,10,RESPAWN_TIME); //Rhino
	//HQ RPP
	RPPCar[1] = AddStaticVehicleEx(427,1667.2000000,-1693.3000000,16.6000000,90.0000000,-1,-1,RESPAWN_TIME); //Enforcer
	RPPCar[2] = AddStaticVehicleEx(427,1667.5000000,-1698.0000000,16.6000000,90.0000000,-1,-1,RESPAWN_TIME); //Enforcer
	RPPCar[3] = AddStaticVehicleEx(598,1668.2000000,-1702.6000000,15.5000000,90.0000000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[4] = AddStaticVehicleEx(598,1668.2000000,-1706.5000000,15.5000000,90.0000000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[5] = AddStaticVehicleEx(598,1668.2000000,-1710.4000000,15.5000000,90.0000000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[6] = AddStaticVehicleEx(598,1668.2000000,-1714.3000000,15.5000000,90.0000000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[7] = AddStaticVehicleEx(598,1668.2000000,-1717.6000000,15.5000000,90.0000000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[8] = AddStaticVehicleEx(598,1647.6000000,-1708.3000000,15.5000000,265.0000000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[9] = AddStaticVehicleEx(598,1647.7000000,-1704.2000000,15.5000000,266.7500000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[10] = AddStaticVehicleEx(598,1646.1000000,-1708.5000000,20.4000000,240.2480000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[11] = AddStaticVehicleEx(598,1646.2000000,-1701.6000000,20.4000000,233.7480000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[12] = AddStaticVehicleEx(598,1669.8000000,-1719.6000000,20.4000000,40.5000000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[13] = AddStaticVehicleEx(598,1664.0000000,-1719.9000000,20.4000000,40.4960000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[14] = AddStaticVehicleEx(598,1658.0000000,-1720.0000000,20.4000000,40.4960000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[15] = AddStaticVehicleEx(598,1652.0000000,-1719.9000000,20.4000000,40.4960000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
	RPPCar[16] = AddStaticVehicleEx(598,1646.3000000,-1696.4000000,20.4000000,233.7450000,-1,-1,RESPAWN_TIME); //Police Car (LVPD)
    for(new i = 0; i < sizeof(Carro); i++)
    {
        if(Carro[i][CarroON] == 1)
        {
            Carro[i][CarroID] = CreateVehicle(Carro[i][Modelo],Carro[i][cSpawnX],Carro[i][cSpawnY],Carro[i][cSpawnZ],Carro[i][cAngulo],Carro[i][CorUm],Carro[i][CorDois], -1);
        }
    }
    for(new i = 0; i < sizeof(Carro); i++)
    {
        if(Carro[i][CarroON] == 1)
        {
    		CarregarTunning(i);
            format(gstring, sizeof(gstring), "BPF %d", Carro[i][CarroID]);
            SetVehicleNumberPlate(Carro[i][CarroID], gstring);
            if(Carro[i][Trancado] == 1)
            {
                VTrancado[Carro[i][CarroID]] = 1;
                LockCar(Carro[i][CarroID]);
            }
        }
        else
        {
		 	strmid(Carro[i][Dono], "Ninguem", 0, strlen("Ninguem"), 64);
        }
	}
//======================[RELOGIO]==========================//
   	SetTimer("Clock", 1000, 1);
    TempoCheckHack = SetTimer("CheckHack", 3000, 1);
    SetTimer("FuncoesBPF", 1000, 1);
    for(new i = 0; i < sizeof(CreatedCars); i++)
    {
        CreatedCars[i] = 0;
    }
    //CreatePickup(1272, 23, 2780.4939,-1812.2635,11.8438);
    //Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Concessionária\n{FFFFFF}Aperte Enter Para Usar",COR_3DLABEL,361.8300,173.5202,1008.3828,15.0,0);
//----------------------------TextDraw-----------------------------------------
    forum = TextDrawCreate(301.000000, 435.000000, "    ~b~~h~~h~visite: ~w~www.brasilplaystart~w~.com.br ~<~~<~                     ~b~~h~~h~Versao: ~w~5.1 ~<~~<~");
	TextDrawAlignment(forum, 2);
	TextDrawBackgroundColor(forum, 255);
	TextDrawFont(forum, 3);
	TextDrawLetterSize(forum, 0.490000, 1.100000);
	TextDrawColor(forum, -1);
	TextDrawSetOutline(forum, 1);
	TextDrawSetProportional(forum, 1);
	TextDrawUseBox(forum, 1);
	TextDrawBoxColor(forum, 102);
	TextDrawTextSize(forum, 71.000000, 673.000000);

	TextData = TextDrawCreate(496.000000,4.000000, "-- de --");
	TextHora = TextDrawCreate(550.000000,23.000000,"--:--");
	TextDrawAlignment(TextData,0);
	TextDrawAlignment(TextHora,0);
	TextDrawBackgroundColor(TextData,255);
	TextDrawBackgroundColor(TextHora,255);
	TextDrawFont(TextData,3);
	TextDrawLetterSize(TextData, 0.500000,2.000000);
	TextDrawFont(TextHora,3);
	TextDrawLetterSize(TextHora,0.399999,2.000000);
	TextDrawColor(TextData,0xFFFFFFFF);
	TextDrawColor(TextHora,0xFFFFFFFF);
	TextDrawSetOutline(TextData,1);
	TextDrawSetOutline(TextHora,1);
	TextDrawSetProportional(TextData,1);
	TextDrawSetProportional(TextHora,1);
	TextDrawSetShadow(TextData,1);
	TextDrawSetShadow(TextHora,1);

    TextMorro0 = TextDrawCreate(490.000000, 131.000000, "Guerra no Morro");
	TextDrawBackgroundColor(TextMorro0, 255);
	TextDrawFont(TextMorro0, 2);
	TextDrawLetterSize(TextMorro0, 0.310000, 1.500000);
	TextDrawColor(TextMorro0, -1);
	TextDrawSetOutline(TextMorro0, 0);
	TextDrawSetProportional(TextMorro0, 1);
	TextDrawSetShadow(TextMorro0, 1);
	TextDrawUseBox(TextMorro0, 1);
	TextDrawBoxColor(TextMorro0, 0x013ADFAA);
	TextDrawTextSize(TextMorro0, 607.000000, 0.000000);

	TextMorro1 = TextDrawCreate(490.000000, 148.000000, "_");
	TextDrawBackgroundColor(TextMorro1, 255);
	TextDrawFont(TextMorro1, 1);
	TextDrawLetterSize(TextMorro1, 0.500000, 23.000000);
	TextDrawColor(TextMorro1, -1);
	TextDrawSetOutline(TextMorro1, 0);
	TextDrawSetProportional(TextMorro1, 1);
	TextDrawSetShadow(TextMorro1, 1);
	TextDrawUseBox(TextMorro1, 1);
	TextDrawBoxColor(TextMorro1, 0x013ADFAA);
	TextDrawTextSize(TextMorro1, 488.000000, 0.000000);

	TextMorro2 = TextDrawCreate(611.000000, 148.000000, "_");
	TextDrawBackgroundColor(TextMorro2, 255);
	TextDrawFont(TextMorro2, 1);
	TextDrawLetterSize(TextMorro2, 0.500000, 23.000000);
	TextDrawColor(TextMorro2, -1);
	TextDrawSetOutline(TextMorro2, 0);
	TextDrawSetProportional(TextMorro2, 1);
	TextDrawSetShadow(TextMorro2, 1);
	TextDrawUseBox(TextMorro2, 1);
	TextDrawBoxColor(TextMorro2, 0x013ADFAA);
	TextDrawTextSize(TextMorro2, 605.000000, 0.000000);

	TextMorro3 = TextDrawCreate(490.000000, 357.000000, "_");
	TextDrawBackgroundColor(TextMorro3, 255);
	TextDrawFont(TextMorro3, 2);
	TextDrawLetterSize(TextMorro3, 0.310000, -0.200000);
	TextDrawColor(TextMorro3, -1);
	TextDrawSetOutline(TextMorro3, 0);
	TextDrawSetProportional(TextMorro3, 1);
	TextDrawSetShadow(TextMorro3, 1);
	TextDrawUseBox(TextMorro3, 1);
	TextDrawBoxColor(TextMorro3, 0x013ADFAA);
	TextDrawTextSize(TextMorro3, 607.000000, 0.000000);

	TextMorro4 = TextDrawCreate(492.000000, 148.000000, "_");
	TextDrawBackgroundColor(TextMorro4, 255);
	TextDrawFont(TextMorro4, 2);
	TextDrawLetterSize(TextMorro4, 0.280000, 22.800001);
	TextDrawColor(TextMorro4, -1);
	TextDrawSetOutline(TextMorro4, 0);
	TextDrawSetProportional(TextMorro4, 1);
	TextDrawSetShadow(TextMorro4, 1);
	TextDrawUseBox(TextMorro4, 1);
	TextDrawBoxColor(TextMorro4, 0x00000043);
	TextDrawTextSize(TextMorro4, 605.000000, 0.000000);

	TextMorro5 = TextDrawCreate(493.000000, 153.000000, "Policia Militar - 0");
	TextDrawBackgroundColor(TextMorro5, 255);
	TextDrawFont(TextMorro5, 2);
	TextDrawLetterSize(TextMorro5, 0.230000, 1.300000);
	TextDrawColor(TextMorro5, COR_PM);
	TextDrawSetOutline(TextMorro5, 0);
	TextDrawSetProportional(TextMorro5, 1);
	TextDrawSetShadow(TextMorro5, 1);

	TextMorro6 = TextDrawCreate(493.000000, 164.000000, "R.O.T.A - 0");
	TextDrawBackgroundColor(TextMorro6, 255);
	TextDrawFont(TextMorro6, 2);
	TextDrawLetterSize(TextMorro6, 0.230000, 1.300000);
	TextDrawColor(TextMorro6, COR_ROTA);
	TextDrawSetOutline(TextMorro6, 0);
	TextDrawSetProportional(TextMorro6, 1);
	TextDrawSetShadow(TextMorro6, 1);

    TextMorro7 = TextDrawCreate(493.000000, 184.000000, "BOPE - 0");
	TextDrawBackgroundColor(TextMorro7, 255);
	TextDrawFont(TextMorro7, 2);
	TextDrawLetterSize(TextMorro7, 0.230000, 1.300000);
	TextDrawColor(TextMorro7, COR_BOPE);
	TextDrawSetOutline(TextMorro7, 0);
	TextDrawSetProportional(TextMorro7, 1);
	TextDrawSetShadow(TextMorro7, 1);

	TextMorro8 = TextDrawCreate(493.000000, 224.000000, "Los Aztecas - 0");
	TextDrawBackgroundColor(TextMorro8, 255);
	TextDrawFont(TextMorro8, 2);
	TextDrawLetterSize(TextMorro8, 0.230000, 1.300000);
	TextDrawColor(TextMorro8, COR_AZTECAS);
	TextDrawSetOutline(TextMorro8, 0);
	TextDrawSetProportional(TextMorro8, 1);
	TextDrawSetShadow(TextMorro8, 1);

	TextMorro9 = TextDrawCreate(493.000000, 235.000000, "Groove Street - 0");
	TextDrawBackgroundColor(TextMorro9, 255);
	TextDrawFont(TextMorro9, 2);
	TextDrawLetterSize(TextMorro9, 0.230000, 1.300000);
	TextDrawColor(TextMorro9, COR_GRO);
	TextDrawSetOutline(TextMorro9, 0);
	TextDrawSetProportional(TextMorro9, 1);
	TextDrawSetShadow(TextMorro9, 1);

	TextMorro10 = TextDrawCreate(493.000000, 245.000000, "Ballas - 0");
	TextDrawBackgroundColor(TextMorro10, 255);
	TextDrawFont(TextMorro10, 2);
	TextDrawLetterSize(TextMorro10, 0.230000, 1.300000);
	TextDrawColor(TextMorro10, COR_BALLAS);
	TextDrawSetOutline(TextMorro10, 0);
	TextDrawSetProportional(TextMorro10, 1);
	TextDrawSetShadow(TextMorro10, 1);

	TextMorro11 = TextDrawCreate(493.000000, 255.000000, "Los Vagos - 0");
	TextDrawBackgroundColor(TextMorro11, 255);
	TextDrawFont(TextMorro11, 2);
	TextDrawLetterSize(TextMorro11, 0.230000, 1.300000);
	TextDrawColor(TextMorro11, COR_VAGOS);
	TextDrawSetOutline(TextMorro11, 0);
	TextDrawSetProportional(TextMorro11, 1);
	TextDrawSetShadow(TextMorro11, 1);

	TextMorro12 = TextDrawCreate(493.000000, 265.000000, "Comando Vermelho - 0");
	TextDrawBackgroundColor(TextMorro12, 255);
	TextDrawFont(TextMorro12, 2);
	TextDrawLetterSize(TextMorro12, 0.180000, 1.300000);
	TextDrawColor(TextMorro12, COR_CVM);
	TextDrawSetOutline(TextMorro12, 0);
	TextDrawSetProportional(TextMorro12, 1);
	TextDrawSetShadow(TextMorro12, 1);

	TextMorro13 = TextDrawCreate(493.000000, 275.000000, "P.C.C - 0");
	TextDrawBackgroundColor(TextMorro13, 255);
	TextDrawFont(TextMorro13, 2);
	TextDrawLetterSize(TextMorro13, 0.230000, 1.300000);
	TextDrawColor(TextMorro13, COR_PCC);
	TextDrawSetOutline(TextMorro13, 0);
	TextDrawSetProportional(TextMorro13, 1);
	TextDrawSetShadow(TextMorro13, 1);

	TextMorro15 = TextDrawCreate(493.000000, 284.000000, "OwnZ - 0");
	TextDrawBackgroundColor(TextMorro15, 255);
	TextDrawFont(TextMorro15, 2);
	TextDrawLetterSize(TextMorro15, 0.230000, 1.300000);
	TextDrawColor(TextMorro15, COLOR_SK);
	TextDrawSetOutline(TextMorro15, 0);
	TextDrawSetProportional(TextMorro15, 1);
	TextDrawSetShadow(TextMorro15, 1);

	TextMorro16 = TextDrawCreate(493.000000, 294.000000, "Amigo dos Amigos - 0");
	TextDrawBackgroundColor(TextMorro16, 255);
	TextDrawFont(TextMorro16, 2);
	TextDrawLetterSize(TextMorro16, 0.230000, 1.300000);
	TextDrawColor(TextMorro16, COR_AmigodosAmigos);
	TextDrawSetOutline(TextMorro16, 0);
	TextDrawSetProportional(TextMorro16, 1);
	TextDrawSetShadow(TextMorro16, 1);

	TextMorro14 = TextDrawCreate(493.000000, 174.000000, "Policia Florestal - 0");
	TextDrawBackgroundColor(TextMorro14, 255);
	TextDrawFont(TextMorro14, 2);
	TextDrawLetterSize(TextMorro14, 0.230000, 1.300000);
	TextDrawColor(TextMorro14, COR_ROOXY);
	TextDrawSetOutline(TextMorro14, 0);
	TextDrawSetProportional(TextMorro14, 1);
	TextDrawSetShadow(TextMorro14, 1);

	TextMorro17 = TextDrawCreate(493.000000, 304.000000, "yStiflerS - 0");
	TextDrawBackgroundColor(TextMorro17, 255);
	TextDrawFont(TextMorro17, 2);
	TextDrawLetterSize(TextMorro17, 0.230000, 1.300000);
	TextDrawColor(TextMorro17, COR_YSTIFLERS);
	TextDrawSetOutline(TextMorro17, 0);
	TextDrawSetProportional(TextMorro17, 1);
	TextDrawSetShadow(TextMorro17, 1);

	TextMorro18 = TextDrawCreate(493.000000, 314.000000, "Motoqueiros - 0");
	TextDrawBackgroundColor(TextMorro18, 255);
	TextDrawFont(TextMorro18, 2);
	TextDrawLetterSize(TextMorro18, 0.230000, 1.300000);
	TextDrawColor(TextMorro18, COR_MOTOQUEIROS);
	TextDrawSetOutline(TextMorro18, 0);
	TextDrawSetProportional(TextMorro18, 1);
	TextDrawSetShadow(TextMorro18, 1);

	TextMorro19 = TextDrawCreate(493.000000, 184.000000, "Policia Civil - 0");
	TextDrawBackgroundColor(TextMorro19, 255);
	TextDrawFont(TextMorro19, 2);
	TextDrawLetterSize(TextMorro19, 0.230000, 1.300000);
	TextDrawColor(TextMorro19, COR_RPP);
	TextDrawSetOutline(TextMorro19, 0);
	TextDrawSetProportional(TextMorro19, 1);
	TextDrawSetShadow(TextMorro19, 1);

	//Guerra da Pedreira
	TextPedreira0 = TextDrawCreate(481.000000, 211.000000, "Guerra da Pedreira");
	TextDrawBackgroundColor(TextPedreira0, 255);
	TextDrawFont(TextPedreira0, 2);
	TextDrawLetterSize(TextPedreira0, 0.310000, 1.699999);
	TextDrawColor(TextPedreira0, -1);
	TextDrawSetOutline(TextPedreira0, 0);
	TextDrawSetProportional(TextPedreira0, 1);
	TextDrawSetShadow(TextPedreira0, 1);
	TextDrawUseBox(TextPedreira0, 1);
	TextDrawBoxColor(TextPedreira0, 0x013ADFAA);
	TextDrawTextSize(TextPedreira0, 617.000000, 63.000000);

	TextPedreira1 = TextDrawCreate(621.000000, 223.000000, "_");
	TextDrawBackgroundColor(TextPedreira1, 255);
	TextDrawFont(TextPedreira1, 2);
	TextDrawLetterSize(TextPedreira1, 0.310000, 15.699999);
	TextDrawColor(TextPedreira1, -1);
	TextDrawSetOutline(TextPedreira1, 0);
	TextDrawSetProportional(TextPedreira1, 1);
	TextDrawSetShadow(TextPedreira1, 1);
	TextDrawUseBox(TextPedreira1, 1);
	TextDrawBoxColor(TextPedreira1, 0x013ADFAA);
	TextDrawTextSize(TextPedreira1, 614.000000, 63.000000);

	TextPedreira2 = TextDrawCreate(481.000000, 223.000000, "_");
	TextDrawBackgroundColor(TextPedreira2, 255);
	TextDrawFont(TextPedreira2, 2);
	TextDrawLetterSize(TextPedreira2, 0.310000, 15.699999);
	TextDrawColor(TextPedreira2, -1);
	TextDrawSetOutline(TextPedreira2, 0);
	TextDrawSetProportional(TextPedreira2, 1);
	TextDrawSetShadow(TextPedreira2, 1);
	TextDrawUseBox(TextPedreira2, 1);
	TextDrawBoxColor(TextPedreira2, 0x013ADFAA);
	TextDrawTextSize(TextPedreira2, 479.000000, 63.000000);

	TextPedreira3 = TextDrawCreate(620.000000, 366.000000, "_");
	TextDrawBackgroundColor(TextPedreira3, 255);
	TextDrawFont(TextPedreira3, 2);
	TextDrawLetterSize(TextPedreira3, 0.310000, -0.200000);
	TextDrawColor(TextPedreira3, -1);
	TextDrawSetOutline(TextPedreira3, 0);
	TextDrawSetProportional(TextPedreira3, 1);
	TextDrawSetShadow(TextPedreira3, 1);
	TextDrawUseBox(TextPedreira3, 1);
	TextDrawBoxColor(TextPedreira3, 0x013ADFAA);
	TextDrawTextSize(TextPedreira3, 479.000000, 63.000000);

	TextPedreira4 = TextDrawCreate(619.000000, 230.000000, "_");
	TextDrawBackgroundColor(TextPedreira4, 255);
	TextDrawFont(TextPedreira4, 2);
	TextDrawLetterSize(TextPedreira4, 0.310000, 14.699998);
	TextDrawColor(TextPedreira4, -1);
	TextDrawSetOutline(TextPedreira4, 0);
	TextDrawSetProportional(TextPedreira4, 1);
	TextDrawSetShadow(TextPedreira4, 1);
	TextDrawUseBox(TextPedreira4, 1);
	TextDrawBoxColor(TextPedreira4, 0x00000043);
	TextDrawTextSize(TextPedreira4, 479.000000, 63.000000);

	TextPedreira5 = TextDrawCreate(488.000000, 244.000000, "Exercito - 1");
	TextDrawBackgroundColor(TextPedreira5, 255);
	TextDrawFont(TextPedreira5, 2);
	TextDrawLetterSize(TextPedreira5, 0.290000, 1.499999);
	TextDrawColor(TextPedreira5, -1);
	TextDrawSetOutline(TextPedreira5, 0);
	TextDrawSetProportional(TextPedreira5, 1);
	TextDrawSetShadow(TextPedreira5, 1);

	TextPedreira6 = TextDrawCreate(488.000000, 256.000000, "Americano - 1");
	TextDrawBackgroundColor(TextPedreira6, 255);
	TextDrawFont(TextPedreira6, 2);
	TextDrawLetterSize(TextPedreira6, 0.290000, 1.499999);
	TextDrawColor(TextPedreira6, -1);
	TextDrawSetOutline(TextPedreira6, 0);
	TextDrawSetProportional(TextPedreira6, 1);
	TextDrawSetShadow(TextPedreira6, 1);

	TextPedreira7 = TextDrawCreate(488.000000, 288.000000, "Taliban - 1");
	TextDrawBackgroundColor(TextPedreira7, 255);
	TextDrawFont(TextPedreira7, 2);
	TextDrawLetterSize(TextPedreira7, 0.290000, 1.499999);
	TextDrawColor(TextPedreira7, -1);
	TextDrawSetOutline(TextPedreira7, 0);
	TextDrawSetProportional(TextPedreira7, 1);
	TextDrawSetShadow(TextPedreira7, 1);

	TextPedreira8 = TextDrawCreate(488.000000, 300.000000, "Alqaeda - 1");
	TextDrawBackgroundColor(TextPedreira8, 255);
	TextDrawFont(TextPedreira8, 2);
	TextDrawLetterSize(TextPedreira8, 0.290000, 1.499999);
	TextDrawColor(TextPedreira8, -1);
	TextDrawSetOutline(TextPedreira8, 0);
	TextDrawSetProportional(TextPedreira8, 1);
	TextDrawSetShadow(TextPedreira8, 1);

	TextPedreira9 = TextDrawCreate(488.000000, 312.000000, "F.A.R.C - 1");
	TextDrawBackgroundColor(TextPedreira9, 255);
	TextDrawFont(TextPedreira9, 2);
	TextDrawLetterSize(TextPedreira9, 0.290000, 1.499999);
	TextDrawColor(TextPedreira9, -1);
	TextDrawSetOutline(TextPedreira9, 0);
	TextDrawSetProportional(TextPedreira9, 1);
	TextDrawSetShadow(TextPedreira9, 1);

	// • Carregando Objectos por - Theus_Crazzy
	TextCarregado1 = TextDrawCreate(450.000000, 340.000000, "_");
    TextDrawBackgroundColor(TextCarregado1, 255);
    TextDrawFont(TextCarregado1, 0);
    TextDrawLetterSize(TextCarregado1, 0.880000, 8.299997);
    TextDrawColor(TextCarregado1, -1);
    TextDrawSetOutline(TextCarregado1, 0);
    TextDrawSetProportional(TextCarregado1, 1);
    TextDrawSetShadow(TextCarregado1, 1);
    TextDrawUseBox(TextCarregado1, 1);
    TextDrawBoxColor(TextCarregado1, 0x00000035);
    TextDrawTextSize(TextCarregado1, 610.000000, 0.000000);

    TextCarregado2 = TextDrawCreate(470.000000, 353.000000, "Objetos");
    TextDrawBackgroundColor(TextCarregado2, 255);
    TextDrawFont(TextCarregado2, 2);
    TextDrawLetterSize(TextCarregado2, 0.629999, 2.199999);
    TextDrawColor(TextCarregado2, 0x1E90FFAA);
    TextDrawSetOutline(TextCarregado2, 0);
    TextDrawSetProportional(TextCarregado2, 1);
    TextDrawSetShadow(TextCarregado2, 1);

    TextCarregado3 = TextDrawCreate(464.000000, 373.000000, "Carregados");
    TextDrawBackgroundColor(TextCarregado3, 255);
    TextDrawFont(TextCarregado3, 2);
    TextDrawLetterSize(TextCarregado3, 0.500000, 2.199999);
    TextDrawColor(TextCarregado3, -1);
    TextDrawSetOutline(TextCarregado3, 0);
    TextDrawSetProportional(TextCarregado3, 1);
    TextDrawSetShadow(TextCarregado3, 1);

    // • Pagina de Login por - Theus_Crazzy
	TextLogin0 = TextDrawCreate(2.000000, 1.000000, "_");
    TextDrawBackgroundColor(TextLogin0, 255);
    TextDrawFont(TextLogin0, 1);
    TextDrawLetterSize(TextLogin0, 0.500000, 10.099998);
    TextDrawColor(TextLogin0, -1);
    TextDrawSetOutline(TextLogin0, 0);
    TextDrawSetProportional(TextLogin0, 1);
    TextDrawSetShadow(TextLogin0, 1);
    TextDrawUseBox(TextLogin0, 1);
    TextDrawBoxColor(TextLogin0, 255);
    TextDrawTextSize(TextLogin0, 639.000000, 10.000000);

    TextLogin1 = TextDrawCreate(2.000000, 355.000000, "_");
    TextDrawBackgroundColor(TextLogin1, 255);
    TextDrawFont(TextLogin1, 1);
    TextDrawLetterSize(TextLogin1, 0.500000, 10.099998);
    TextDrawColor(TextLogin1, -1);
    TextDrawSetOutline(TextLogin1, 0);
    TextDrawSetProportional(TextLogin1, 1);
    TextDrawSetShadow(TextLogin1, 1);
    TextDrawUseBox(TextLogin1, 1);
    TextDrawBoxColor(TextLogin1, 255);
    TextDrawTextSize(TextLogin1, 639.000000, 10.000000);

    TextLogin2 = TextDrawCreate(-1.000000, 95.000000, "_");
    TextDrawBackgroundColor(TextLogin2, 255);
    TextDrawFont(TextLogin2, 1);
    TextDrawLetterSize(TextLogin2, 0.500000, -0.200000);
    TextDrawColor(TextLogin2, -1);
    TextDrawSetOutline(TextLogin2, 0);
    TextDrawSetProportional(TextLogin2, 1);
    TextDrawSetShadow(TextLogin2, 1);
    TextDrawUseBox(TextLogin2, 1);
    TextDrawBoxColor(TextLogin2, 0x013ADFAA);
    TextDrawTextSize(TextLogin2, 642.000000, 0.000000);

    TextLogin3 = TextDrawCreate(-1.000000, 353.000000, "_");
    TextDrawBackgroundColor(TextLogin3, 255);
    TextDrawFont(TextLogin3, 1);
    TextDrawLetterSize(TextLogin3, 0.500000, -0.200000);
    TextDrawColor(TextLogin3, -1);
    TextDrawSetOutline(TextLogin3, 0);
    TextDrawSetProportional(TextLogin3, 1);
    TextDrawSetShadow(TextLogin3, 1);
    TextDrawUseBox(TextLogin3, 1);
    TextDrawBoxColor(TextLogin3, 0x013ADFAA);
    TextDrawTextSize(TextLogin3, 642.000000, 0.000000);

    TextLogin4 = TextDrawCreate(264.000000, 9.000000, "BPF-RPG");
    TextDrawBackgroundColor(TextLogin4, 255);
    TextDrawFont(TextLogin4, 2);
    TextDrawLetterSize(TextLogin4, 0.680000, 2.800000);
    TextDrawColor(TextLogin4, -1);
    TextDrawSetOutline(TextLogin4, 0);
    TextDrawSetProportional(TextLogin4, 1);
    TextDrawSetShadow(TextLogin4, 0);

    TextLogin5 = TextDrawCreate(258.000000, 30.000000, "brasil Play Start role play game");
    TextDrawBackgroundColor(TextLogin5, 255);
    TextDrawFont(TextLogin5, 2);
    TextDrawLetterSize(TextLogin5, 0.170000, 1.000000);
    TextDrawColor(TextLogin5, -1);
    TextDrawSetOutline(TextLogin5, 0);
    TextDrawSetProportional(TextLogin5, 1);
    TextDrawSetShadow(TextLogin5, 0);

    TextLogin6 = TextDrawCreate(287.000000, 51.000000, "BPF:RPG v5.1");
    TextDrawBackgroundColor(TextLogin6, 255);
    TextDrawFont(TextLogin6, 2);
    TextDrawLetterSize(TextLogin6, 0.190000, 1.100000);
    TextDrawColor(TextLogin6, 0x1E90FFAA);
    TextDrawSetOutline(TextLogin6, 0);
    TextDrawSetProportional(TextLogin6, 1);
    TextDrawSetShadow(TextLogin6, 0);

    TextLogin7 = TextDrawCreate(266.000000, 74.000000, "Sua vida em segundo plano");
    TextDrawBackgroundColor(TextLogin7, 255);
    TextDrawFont(TextLogin7, 0);
    TextDrawLetterSize(TextLogin7, 0.380000, 1.200000);
    TextDrawColor(TextLogin7, -1);
    TextDrawSetOutline(TextLogin7, 0);
    TextDrawSetProportional(TextLogin7, 1);
    TextDrawSetShadow(TextLogin7, 0);

    TextLogin8 = TextDrawCreate(147.000000, 165.000000, "_");
    TextDrawBackgroundColor(TextLogin8, 255);
    TextDrawFont(TextLogin8, 1);
    TextDrawLetterSize(TextLogin8, 0.500000, 11.000000);
    TextDrawColor(TextLogin8, -1);
    TextDrawSetOutline(TextLogin8, 0);
    TextDrawSetProportional(TextLogin8, 1);
    TextDrawSetShadow(TextLogin8, 1);
    TextDrawUseBox(TextLogin8, 1);
    TextDrawBoxColor(TextLogin8, 0x00000065);
    TextDrawTextSize(TextLogin8, 490.000000, 0.000000);

    TextLogin9 = TextDrawCreate(216.000000, 190.000000, "CARREGANDO...");
    TextDrawBackgroundColor(TextLogin9, 255);
    TextDrawFont(TextLogin9, 2);
    TextDrawLetterSize(TextLogin9, 0.700000, 3.000000);
    TextDrawColor(TextLogin9, -1);
    TextDrawSetOutline(TextLogin9, 0);
    TextDrawSetProportional(TextLogin9, 1);
    TextDrawSetShadow(TextLogin9, 1);

    TextLogin10 = TextDrawCreate(220.000000, 219.000000, "AGUARDE UM MOMENTO PARA EFETUAR O LOGIN");
    TextDrawBackgroundColor(TextLogin10, 255);
    TextDrawFont(TextLogin10, 2);
    TextDrawLetterSize(TextLogin10, 0.200000, 1.100000);
    TextDrawColor(TextLogin10, -1);
    TextDrawSetOutline(TextLogin10, 0);
    TextDrawSetProportional(TextLogin10, 1);
    TextDrawSetShadow(TextLogin10, 1);

    TextPlayersOn = TextDrawCreate(10.000000, 370.000000, "Usuarios: ~g~~h~~h~100");
    TextDrawBackgroundColor(TextPlayersOn, 255);
    TextDrawFont(TextPlayersOn, 0);
    TextDrawLetterSize(TextPlayersOn, 0.500000, 1.500000);
    TextDrawColor(TextPlayersOn, 0x1E90FFAA);
    TextDrawSetOutline(TextPlayersOn, 0);
    TextDrawSetProportional(TextPlayersOn, 1);
    TextDrawSetShadow(TextPlayersOn, 1);

    TextHospital0 = TextDrawCreate(431.000000, 160.000000, "_");
    TextDrawBackgroundColor(TextHospital0, 255);
    TextDrawFont(TextHospital0, 1);
    TextDrawLetterSize(TextHospital0, 0.500000, 13.100000);
    TextDrawColor(TextHospital0, -1);
    TextDrawSetOutline(TextHospital0, 0);
    TextDrawSetProportional(TextHospital0, 1);
    TextDrawSetShadow(TextHospital0, 1);
    TextDrawUseBox(TextHospital0, 1);
    TextDrawBoxColor(TextHospital0, 0x00000045);
    TextDrawTextSize(TextHospital0, 610.000000, 0.000000);

    TextHospital1 = TextDrawCreate(452.000000, 224.000000, "Status: ~b~~h~Recuperando");
    TextDrawBackgroundColor(TextHospital1, 255);
    TextDrawFont(TextHospital1, 2);
    TextDrawLetterSize(TextHospital1, 0.270000, 1.100000);
    TextDrawColor(TextHospital1, -1);
    TextDrawSetOutline(TextHospital1, 0);
    TextDrawSetProportional(TextHospital1, 1);
    TextDrawSetShadow(TextHospital1, 1);

    TextHospital2 = TextDrawCreate(452.000000, 236.000000, "Tempo: ~b~~h~20 ~w~segundos");
    TextDrawBackgroundColor(TextHospital2, 255);
    TextDrawFont(TextHospital2, 2);
    TextDrawLetterSize(TextHospital2, 0.270000, 1.100000);
    TextDrawColor(TextHospital2, -1);
    TextDrawSetOutline(TextHospital2, 0);
    TextDrawSetProportional(TextHospital2, 1);
    TextDrawSetShadow(TextHospital2, 1);

    TextHospital3 = TextDrawCreate(450.000000, 174.000000, "]~b~~h~Hospital~w~]");
    TextDrawBackgroundColor(TextHospital3, 255);
    TextDrawFont(TextHospital3, 2);
    TextDrawLetterSize(TextHospital3, 0.500000, 2.100000);
    TextDrawColor(TextHospital3, -1);
    TextDrawSetOutline(TextHospital3, 0);
    TextDrawSetProportional(TextHospital3, 1);
    TextDrawSetShadow(TextHospital3, 1);

	//============================[Tutorial]==============================================================
	BoasVindas = TextDrawCreate(301.000000, 138.000000, "~>~~>~ ~y~~h~Bem Vindo ao ~p~~h~PlayStart ~r~~h~RPG ~<~~<~");
	TextDrawAlignment(BoasVindas, 2);
	TextDrawBackgroundColor(BoasVindas, 255);
	TextDrawFont(BoasVindas, 1);
	TextDrawLetterSize(BoasVindas, 0.529999, 1.900000);
	TextDrawColor(BoasVindas, -1);
	TextDrawSetOutline(BoasVindas, 0);
	TextDrawSetProportional(BoasVindas, 1);
	TextDrawSetShadow(BoasVindas, 1);

	InfoBasicas = TextDrawCreate(301.000000, 138.000000, "~w~] ~b~~h~~h~ Informacoes Basicas ~w~]");
	TextDrawAlignment(InfoBasicas, 2);
	TextDrawBackgroundColor(InfoBasicas, 255);
	TextDrawFont(InfoBasicas, 1);
	TextDrawLetterSize(InfoBasicas, 0.529999, 1.900000);
	TextDrawColor(InfoBasicas, -1);
	TextDrawSetOutline(InfoBasicas, 0);
	TextDrawSetProportional(InfoBasicas, 1);
	TextDrawSetShadow(InfoBasicas, 1);

	RegBasicas = TextDrawCreate(301.000000, 138.000000, "~w~] ~b~~h~~h~Regras Basicas ~w~]");
	TextDrawAlignment(RegBasicas, 2);
	TextDrawBackgroundColor(RegBasicas, 255);
	TextDrawFont(RegBasicas, 1);
	TextDrawLetterSize(RegBasicas, 0.529999, 1.900000);
	TextDrawColor(RegBasicas, -1);
	TextDrawSetOutline(RegBasicas, 0);
	TextDrawSetProportional(RegBasicas, 1);
	TextDrawSetShadow(RegBasicas, 1);

	CmdUteis = TextDrawCreate(301.000000, 138.000000, "~w~] ~b~~h~~h~Comando Uteis ~w~]");
	TextDrawAlignment(CmdUteis, 2);
	TextDrawBackgroundColor(CmdUteis, 255);
	TextDrawFont(CmdUteis, 1);
	TextDrawLetterSize(CmdUteis, 0.529999, 1.900000);
	TextDrawColor(CmdUteis, -1);
	TextDrawSetOutline(CmdUteis, 0);
	TextDrawSetProportional(CmdUteis, 1);
	TextDrawSetShadow(CmdUteis, 1);

	LocaisUteis = TextDrawCreate(301.000000, 138.000000, "~w~] ~b~~h~~h~Locais Importantes ~w~]");
	TextDrawAlignment(LocaisUteis, 2);
	TextDrawBackgroundColor(LocaisUteis, 255);
	TextDrawFont(LocaisUteis, 1);
	TextDrawLetterSize(LocaisUteis, 0.529999, 1.900000);
	TextDrawColor(LocaisUteis, -1);
	TextDrawSetOutline(LocaisUteis, 0);
	TextDrawSetProportional(LocaisUteis, 1);
	TextDrawSetShadow(LocaisUteis, 1);

	BoxTuto1 = TextDrawCreate(650.000000, 3.000000, "_");
	TextDrawBackgroundColor(BoxTuto1, 255);
	TextDrawFont(BoxTuto1, 1);
	TextDrawLetterSize(BoxTuto1, 0.340000, 13.600002);
	TextDrawColor(BoxTuto1, -1);
	TextDrawSetOutline(BoxTuto1, 0);
	TextDrawSetProportional(BoxTuto1, 1);
	TextDrawSetShadow(BoxTuto1, 1);
	TextDrawUseBox(BoxTuto1, 1);
	TextDrawBoxColor(BoxTuto1, 102);
	TextDrawTextSize(BoxTuto1, -4.000000, 5.000000);

	BoxTuto2 = TextDrawCreate(650.000000, 323.000000, "_");
	TextDrawBackgroundColor(BoxTuto2, 255);
	TextDrawFont(BoxTuto2, 1);
	TextDrawLetterSize(BoxTuto2, 0.340000, 13.600002);
	TextDrawColor(BoxTuto2, -1);
	TextDrawSetOutline(BoxTuto2, 0);
	TextDrawSetProportional(BoxTuto2, 1);
	TextDrawSetShadow(BoxTuto2, 1);
	TextDrawUseBox(BoxTuto2, 1);
	TextDrawBoxColor(BoxTuto2, 102);
	TextDrawTextSize(BoxTuto2, -4.000000, 5.000000);

    // • Velocimetro por - Theus_Crazzy
	box = TextDrawCreate(146.000000, 342.000000, "_");
	TextDrawBackgroundColor(box, 255);
	TextDrawFont(box, 1);
	TextDrawLetterSize(box, 0.280000, 8.899999);
	TextDrawColor(box, -1);
	TextDrawSetOutline(box, 0);
	TextDrawSetProportional(box, 1);
	TextDrawSetShadow(box, 1);
	TextDrawUseBox(box, 1);
	TextDrawBoxColor(box, 0x00000045);
	TextDrawTextSize(box, 320.000000, 11.000000);

	box1 = TextDrawCreate(146.000000, 342.000000, "_");
	TextDrawBackgroundColor(box1, 255);
	TextDrawFont(box1, 1);
	TextDrawLetterSize(box1, 0.280000, 8.899999);
	TextDrawColor(box1, -1);
	TextDrawSetOutline(box1, 0);
	TextDrawSetProportional(box1, 1);
	TextDrawSetShadow(box1, 1);
	TextDrawUseBox(box1, 1);
	TextDrawBoxColor(box1, 0x1E90FF25);
	TextDrawTextSize(box1, 140.000000, 11.000000);

	box2 = TextDrawCreate(326.000000, 342.000000, "_");
	TextDrawBackgroundColor(box2, 255);
	TextDrawFont(box2, 1);
	TextDrawLetterSize(box2, 0.280000, 8.899999);
	TextDrawColor(box2, -1);
	TextDrawSetOutline(box2, 0);
	TextDrawSetProportional(box2, 1);
	TextDrawSetShadow(box2, 1);
	TextDrawUseBox(box2, 1);
	TextDrawBoxColor(box2, 0x1E90FF25);
	TextDrawTextSize(box2, 320.000000, 11.000000);

	box3 = TextDrawCreate(146.000000, 342.000000, "_");
	TextDrawBackgroundColor(box3, 255);
	TextDrawFont(box3, 1);
	TextDrawLetterSize(box3, 0.280000, -0.200000);
	TextDrawColor(box3, -1);
	TextDrawSetOutline(box3, 0);
	TextDrawSetProportional(box3, 1);
	TextDrawSetShadow(box3, 1);
	TextDrawUseBox(box3, 1);
	TextDrawBoxColor(box3, 0x1E90FF25);
	TextDrawTextSize(box3, 320.000000, 11.000000);

	box4 = TextDrawCreate(146.000000, 424.000000, "_");
	TextDrawBackgroundColor(box4, 255);
	TextDrawFont(box4, 1);
	TextDrawLetterSize(box4, 0.280000, -0.200000);
	TextDrawColor(box4, -1);
	TextDrawSetOutline(box4, 0);
	TextDrawSetProportional(box4, 1);
	TextDrawSetShadow(box4, 1);
	TextDrawUseBox(box4, 1);
	TextDrawBoxColor(box4, 0x1E90FF25);
	TextDrawTextSize(box4, 320.000000, 11.000000);

	box5 = TextDrawCreate(146.000000, 343.000000, "VELOCIMETRO");
	TextDrawBackgroundColor(box5, 255);
	TextDrawFont(box5, 2);
	TextDrawLetterSize(box5, 0.300000, 1.100000);
	TextDrawColor(box5, -1);
	TextDrawSetOutline(box5, 0);
	TextDrawSetProportional(box5, 1);
	TextDrawSetShadow(box5, 1);
	TextDrawUseBox(box5, 1);
	TextDrawBoxColor(box5, 0x1E90FF25);
	TextDrawTextSize(box5, 320.000000, 1.000000);

    for(new i=0; i<MaiorID; i++)
    {
		TextPosto[i] = TextDrawCreate(450.000000, 180.000000, "_");
		TextDrawBackgroundColor(TextPosto[i], 255);
		TextDrawFont(TextPosto[i], 3);
		TextDrawLetterSize(TextPosto[i], 0.299999,1.000000);
		TextDrawColor(TextPosto[i], -1);
		TextDrawSetOutline(TextPosto[i], 1);
		TextDrawSetProportional(TextPosto[i], 1);

		VeInfo[i] = TextDrawCreate(149.000000, 356.000000, "Veiculo: ~b~~h~Turismo");
		TextDrawBackgroundColor(VeInfo[i], 255);
		TextDrawFont(VeInfo[i], 2);
		TextDrawLetterSize(VeInfo[i], 0.300000, 1.100000);
		TextDrawColor(VeInfo[i], -1);
		TextDrawSetOutline(VeInfo[i], 0);
		TextDrawSetProportional(VeInfo[i], 1);
		TextDrawSetShadow(VeInfo[i], 1);

        kmhor[i] = TextDrawCreate(149.000000, 365.000000, "VELOCIDADE: 100 ~r~~h~KM/H");
        TextDrawBackgroundColor(kmhor[i], 255);
        TextDrawFont(kmhor[i], 2);
        TextDrawLetterSize(kmhor[i], 0.300000, 1.100000);
        TextDrawColor(kmhor[i], -1);
        TextDrawSetOutline(kmhor[i], 0);
        TextDrawSetProportional(kmhor[i], 1);
        TextDrawSetShadow(kmhor[i], 1);

        LataInfo[i] = TextDrawCreate(149.000000, 374.000000, "LATARIA: ~b~~h~100");
        TextDrawBackgroundColor(LataInfo[i], 255);
        TextDrawFont(LataInfo[i], 2);
        TextDrawLetterSize(LataInfo[i], 0.300000, 1.100000);
        TextDrawColor(LataInfo[i], -1);
        TextDrawSetOutline(LataInfo[i], 0);
        TextDrawSetProportional(LataInfo[i], 1);
        TextDrawSetShadow(LataInfo[i], 1);

        TempoGasInfo[i] = TextDrawCreate(145.000000,385.000000, "~w~Gas Tempo: ~p~~h~100 Min");
        TextDrawBackgroundColor(TempoGasInfo[i], 255);
        TextDrawFont(TempoGasInfo[i], 3);
        TextDrawLetterSize(TempoGasInfo[i], 0.299999,1.000000);
        TextDrawColor(TempoGasInfo[i], 16711935);
        TextDrawSetOutline(TempoGasInfo[i], 1);
        TextDrawSetProportional(TempoGasInfo[i], 1);

        GazoInfo[i] = TextDrawCreate(149.000000, 384.000000, "Litros Gasolina: ~b~~h~~h~100");
        TextDrawBackgroundColor(GazoInfo[i], 255);
        TextDrawFont(GazoInfo[i], 2);
        TextDrawLetterSize(GazoInfo[i], 0.300000, 1.100000);
        TextDrawColor(GazoInfo[i], -1);
        TextDrawSetOutline(GazoInfo[i], 0);
        TextDrawSetProportional(GazoInfo[i], 1);
        TextDrawSetShadow(GazoInfo[i], 1);

        LocalInf[i] = TextDrawCreate(149.000000, 398.000000, "Localizacao:~n~~b~~h~~h~Las venturas");
        TextDrawBackgroundColor(LocalInf[i], 255);
        TextDrawFont(LocalInf[i], 2);
        TextDrawLetterSize(LocalInf[i], 0.300000, 1.100000);
        TextDrawColor(LocalInf[i], -1);
        TextDrawSetOutline(LocalInf[i], 0);
        TextDrawSetProportional(LocalInf[i], 1);
        TextDrawSetShadow(LocalInf[i], 1);
    }
	unjailtimer = SetTimer("SetPlayerUnjail", 1000, 1);
	othtimer = SetTimer("OtherTimer", 3000, 1);
	cartimer = SetTimer("CarCheck", 40000, 1);
	pickuptimer = SetTimer("CustomPickups", 1000, 1);
	spectatetimer = SetTimer("Spectator", 2000, 1);
	productiontimer = SetTimer("Production", 300000, 1); //5 mins (300000)
	checkgastimer = SetTimer("CheckGas", 18000, 1);
	SetTimer("SalvarContas", TEMPO_SALVAMENTO, true);
    //SetTimer("ProcuradoPlayer", TEMPO_PROCTEXT, 1);
    GZPark = GangZoneCreate(1866.346, -1259.454, 2052.685, -1137.074);
    GZCemiterio = GangZoneCreate(791.5826, -1141.6468, 967.5826, -1061.6468);
    GZPosto = GangZoneCreate(-146.9439, -1249.0484, -2.9439, -1081.0484);
	GZShop = GangZoneCreate(1056.1223, -1575.7773, 1192.1223, -1415.7773);
 	GZSkate = GangZoneCreate(1861.9410,-1450.6462,1976.5867,-1351.4069);
 	GZPantano = GangZoneCreate(-847.4861,-2116.7615,-632.8773,-1833.163);
 	GZEstacao = GangZoneCreate(1687.613, -1958.204, 1813.106, -1859.51);
 	GZCasarao = GangZoneCreate(1098.173, -2084.531, 1299.723, -2005.577);
    for(new x = 1; x <= MAX_VEHICLES; x++)
    {
        if(IsACivilCar(x))
        {
            new Text3D:VeiculoCivilTexto3D;
            VeiculoCivilTexto3D = Create3DTextLabel("\n\n\n\n\n\n\n{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{FFFFFF}Veículo Civil", 0x00FF00FF, 0.0, 0.0, 0.0, 4.0, 0, 1 );
            Attach3DTextLabelToVehicle(VeiculoCivilTexto3D, x, 0.0, 0.0, 2.0);
        }
    }
    EleicoesOnLoad();
    AbrirEleicoes();
    LoadAdm();
    LoadHelp();
    LoadCofreOrg();
	LoadBoxer();
	LoadStuff();
	LoadVip();

    for(new h = 0; h < sizeof(HouseInfo); h++){if(HouseInfo[h][hLevel] > 20) { HouseInfo[h][hLevel] = 11; } } //remove
    GranaBanco = 10000 + random(8000);
	GranaLot = 3000 + random(9000);
	GranaPosto = 2000 + random(8000);
	GranaLoja1 = 2000 + random(7000);
	GranaLoja2 = 1500 + random(7000);
	GranaPref = 3000 + random(8000);
    for(new h = 0; h < sizeof(HouseInfo); h++)
	{
		if(HouseInfo[h][hOwned] == 0)
		{
			format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Casa A Venda\nTipo: %s\nValor: R$%d\nNivel: %d\n{FFFFFF}Para comprar digite /comprarcasa",HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel]);
			HouseLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
            HousePickup[h] = CreatePickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
        }
		if(HouseInfo[h][hOwned] == 1)
		{
			if(HouseInfo[h][hRentabil] == 0)
			{
                format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Dono: %s\nNivel: %d\n{FFFFFF}Status: Ocupada",HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
				HouseLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
                HousePickup[h] = CreatePickup(1318, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
            }
			else
			{
				format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Dono: %s\nAluguel: R$%d\nNivel: %d\n{FFFFFF}Digite /alugarquarto para alugar um quarto",HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
				HouseLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
                HousePickup[h] = CreatePickup(1318, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
            }
        }
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
		if(BizzInfo[h][bOwned] == 0)
		{
            BizzPickup[h] = CreatePickup(1272, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
            format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\n{FFFFFF}Para comprar digite /compraremp",BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded]);
			BizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,30.0,0);
		}
		if(BizzInfo[h][bOwned] == 1)
		{
            BizzPickup[h] = CreatePickup(1318, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
            format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\n{FFFFFF}Aperte Enter Para Entrar",BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded]);
   			BizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,30.0,0);
		}
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
        if(SBizzInfo[h][sbOwned] == 0)
		{
			SBizzPickup[h] = CreatePickup(1272, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],-1);
			format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\n{FFFFFF}Para comprar digite /comprarempresa",SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded]);
			SBizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,30.0,0);
		}
		else if(SBizzInfo[h][sbOwned] == 1)
		{
            SBizzPickup[h] = CreatePickup(1318, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],-1);
			format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\n{FFFFFF}Aperte Enter Para Entrar",SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevelNeeded]);
			SBizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,30.0,0);
		}
 	}
    if(donoPosto >= 0)
	{
		if(donoPosto == 0)
		{
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{80FFFF}Posto Abandonado\nNinguem no controle\n/do para Tomar",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
		if(donoPosto == 21)
		{
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{A80000}Posto Abandonado\nHells Angels no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
		if(donoPosto == 22)
		{
			DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{009B9B}Posto Abandonado\nMongols no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
        if(donoPosto == 1 || donoPosto == 2)
		{
			DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{6F6FFF}Posto Abandonado\nGoverno no Comando\nPoliciais Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
        if(donoPosto == 23)
		{
			DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{0063C6}Posto Abandonado\nSons Of Anarchy no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
        if(donoPosto == 25)
		{
			DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{6B56C2}Posto Abandonado\nDrifters no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
    }
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP Polícia Mílitar\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[1][Lider]);
	LabelOrg1 = Create3DTextLabel(strlabel, COR_3DLABEL, 1554.9537,-1675.6584,16.1953,30.0,0);

	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Fundos da Prefeitura \n{FDF000}R$ %d",CofreOrg[7][Dinheiro]);
	CofrePrefeitura = Create3DTextLabel(strlabel, COR_3DLABEL, 355.4539,159.9982,1008.4802,30.0,0);
	//R.O.T.A
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP  R.O.T.A\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[2][Lider]);
	LabelOrg2 = Create3DTextLabel(strlabel, COR_3DLABEL, 327.8898,-1511.8446,36.0325,30.0,0);
	//los aztecas
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Los Aztecas\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[5][Lider]);
	LabelOrg4 = Create3DTextLabel(strlabel, COR_3DLABEL, 1673.9886,-2122.1403,14.6014,30.0,0);
	//policia federal
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP Policia Federal\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[11][Lider]);
	LabelOrg5 = Create3DTextLabel(strlabel, COR_3DLABEL, 914.2606,-1003.7186,37.9976,30.0,0);
	//mafia cosa nostra
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Cosa Nostra\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[12][Lider]);
	LabelOrg6 = Create3DTextLabel(strlabel, COR_3DLABEL, 1497.0920,-687.8906,95.5633,30.0,0);
	//yakuza
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Mafia Yakuza\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[13][Lider]);
	LabelOrg7 = Create3DTextLabel(strlabel, COR_3DLABEL, 691.5710,-1276.1722,13.5607,30.0,0);
	//groove
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Groove Street\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[14][Lider]);
	LabelOrg8 = Create3DTextLabel(strlabel, COR_3DLABEL, 2495.3481,-1691.1355,14.7656,30.0,0);
	//Policia Rodoviaria
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP Policia Rodoviaria\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[16][Lider]);
	LabelOrg9 = Create3DTextLabel(strlabel, COR_3DLABEL, 918.8992,-1252.3286,16.2109,30.0,0);
	//ballas
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Ballas\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[17][Lider]);
	LabelOrg10 = Create3DTextLabel(strlabel, COR_3DLABEL, 1150.5472,-1180.6296,32.0275,30.0,0);
	//vagos
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Los Vagos\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[18][Lider]);
	LabelOrg11 = Create3DTextLabel(strlabel, COR_3DLABEL, 2808.1106,-1189.6528,25.3436,30.0,0);
	//Comando v
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Comando Vermelho\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[19][Lider]);
	LabelOrg12 = Create3DTextLabel(strlabel, COR_3DLABEL, 2140.9382,-1801.9813,16.1475,30.0,0);
	//PCC
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ PCC\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[20][Lider]);
	LabelOrg13 = Create3DTextLabel(strlabel, COR_3DLABEL, 967.2544,2175.1235,10.8203,30.0,0);
	//ploko
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Hells Angels\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[21][Lider]);
	LabelOrg14 = Create3DTextLabel(strlabel, COR_3DLABEL, 681.621521,-474.528533,16.185522,30.0,0);
	//mongols
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Mongols\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[22][Lider]);
	LabelOrg15 = Create3DTextLabel(strlabel, COR_3DLABEL, 23.8872,-2646.5869,40.4640,30.0,0);
    //sons
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Sons Of Anarchy\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[23][Lider]);
	LabelOrg16 = Create3DTextLabel(strlabel, COR_3DLABEL, -1566.5295,-2730.2783,48.7435,30.0,0);
    //rep
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}San News\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[9][Lider]);
	LabelOrg17 = Create3DTextLabel(strlabel, COR_3DLABEL, 647.3710,-1357.2606,13.5777,30.0,0);
    //med
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Hospital BPF\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[4][Lider]);
	LabelOrg18 = Create3DTextLabel(strlabel, COR_3DLABEL, 1173.2563,-1323.3102,15.3943,30.0,0);
//sk
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}GE\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[26][Lider]);
	LabelOrg19 = Create3DTextLabel(strlabel, COR_3DLABEL, 1173.2563,-1323.3102,15.3943,30.0,0);
    //Familia Motoqueiros
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Familia Motoqueiros\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[27][Lider]);
	LabelOrg20 = Create3DTextLabel(strlabel, COR_3DLABEL, 1228.2998,511.7998,19.6000,30.0,0);
	//BOPE
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP B.O.P.E\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[30][Lider]);
	LabelOrg21 = Create3DTextLabel(strlabel, COR_3DLABEL, 1219.4229,-1812.4161,16.5938,30.0,0);
	//Policia Florestal
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP Policia Florestal\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[28][Lider]);
	LabelOrg22 = Create3DTextLabel(strlabel, COR_3DLABEL, -1052.2855,-948.4227,129.2188,30.0,0);
	if(temporoubobanco == 1)
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre do Banco\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar");
		LabelBanco = Create3DTextLabel(strlabel, COR_3DLABEL, 2306.5127,-6.1166,26.7422,11.0,0);
	}
	else
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre do Banco\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaBanco);
		LabelBanco = Create3DTextLabel(strlabel, COR_3DLABEL, 2306.5127,-6.1166,26.7422,11.0,0);
	}
	if(temporoubolot == 1)
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Lotérica\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLot);
		LabelLot = Create3DTextLabel(strlabel, COR_3DLABEL, 820.6042,8.3990,1004.1962,11.0,0);
	}
	else
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Lotérica\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLot);
		LabelLot = Create3DTextLabel(strlabel, COR_3DLABEL, 820.6042,8.3990,1004.1962,11.0,0);
	}
	if(temporouboposto == 1)
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre do Posto\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaPosto);
		LabelPosto = Create3DTextLabel(strlabel, COR_3DLABEL, 381.5648,-188.1646,1000.6328,11.0,0);
	}
	else
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre do Posto\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaPosto);
		LabelPosto = Create3DTextLabel(strlabel, COR_3DLABEL, 381.5648,-188.1646,1000.6328,11.0,0);
	}
	if(temporouboloja1 == 1)
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja1);
		LabelLoja1 = Create3DTextLabel(strlabel, COR_3DLABEL, 2169.1516,1589.9265,999.9713,11.0,0);
	}
	else
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja1);
		LabelLoja1 = Create3DTextLabel(strlabel, COR_3DLABEL, 2169.1516,1589.9265,999.9713,11.0,0);
	}
	if(temporouboloja2 == 1)
	{
 		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja2);
		LabelLoja2 = Create3DTextLabel(strlabel, COR_3DLABEL, 451.3090,-79.8603,999.5547,11.0,0);
	}
	else
	{
 		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja2);
		LabelLoja2 = Create3DTextLabel(strlabel, COR_3DLABEL, 451.3090,-79.8603,999.5547,11.0,0);
	}
	if(temporouboprefe == 1)
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Prefeitura\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaPref);
		LabelPref = Create3DTextLabel(strlabel, COR_3DLABEL, 354.6608,172.0170,1008.3802,11.0,0);
	}
	else
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Prefeitura\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaPref);
		LabelPref = Create3DTextLabel(strlabel, COR_3DLABEL, 354.6608,172.0170,1008.3802,11.0,0);
	}
	ObjetosAtivos();
	printf("[PlayStart] %d Objetos Carregados!", ObjetosTheusCrazzy-1);
	return true;
}
//=============================================================================//
public SyncTime()
{
	new string[64];
	new tmphour;
	new tmpminute;
	new tmpsecond;
	gettime(tmphour, tmpminute, tmpsecond);
	Fixhour(tmphour);
	tmphour = shifthour;
	if ((tmphour > ghour) || (tmphour == 0 && ghour == 23))
	{
		format(string, sizeof(string), "[BPF]: Agora são %d:00 horas",shifthour);
		BroadCast(0x1583F0AA,string);
		ghour = tmphour;
		PayDay();
		SetHora();
	}
}
public GetClosestPlayer(p1)
{
	new x,Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	for (x=0;x<MaiorID;x++)
	{
		if(IsPlayerConnected(x))
		{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
		}
	}
	return player;
}
public Production()
{
    for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pFishes] >= 5) { if(FishCornt[i] >= 3) { PlayerInfo[i][pFishes] = 0; } else { FishCornt[i] += 1; } }
		    if(PlayerDrunk[i] > 0) { PlayerDrunk[i] = 0; PlayerDrunkTime[i] = 0; SetPlayerDrunkLevel (i, 0); GameTextForPlayer(i, "~w~O efeito da bebida~n~~b~acabou", 3500, 1); }
 		    if(PlayerInfo[i][pPayDay] < 6) { PlayerInfo[i][pPayDay] += 1; } //+ 5 min to PayDay anti-abuse
 		    if(WantedPoints[i] > 0)
			{
				SetPlayerWantedLevel(i, WantedPoints[i]);
                format(gstring, sizeof(gstring), "Nível de procurado:{00EAEA} %d", WantedPoints[i]);
		        SendClientMessage(i, 0xFEBF01FF, gstring);
			}
		}
	}
}
public PayDay()
{
	new Conta,interest;
	new rent = 0;
    new string[128];
    for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i) && !IsPlayerNPC(i))
		{
		    if(PlayerInfo[i][pLevel] > 0)
		    {
			    if(MoneyMessage[i]==1)
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "Você não pagou a sua dívida e foi preso.");
				    GameTextForPlayer(i, "~r~Preso!", 2000, 1);
				    SetPlayerInterior(i, 6);
			   		SetPlayerPos(i, 264.6288,77.5742,1001.0391);
		            PlayerInfo[i][pJailed] = 1;
		            ResetPlayerWeapons(i);
                    WantedPoints[i] = 0;
      				SetPlayerWantedLevel(i, 0);
					PlayerInfo[i][pJailTime] = 600;
					format(string, sizeof(string), "Você foi preso por %d segundos.", PlayerInfo[i][pJailTime]);
					SendClientMessage(i, COLOR_LIGHTBLUE, string);
					//ProcuradoPlayer(i);
				}
				new playername2[MAX_PLAYER_NAME];
				GetPlayerName(i, playername2, sizeof(playername2));
				Conta = PlayerInfo[i][pConta];
				new key = PlayerInfo[i][pPHousekey];
				if(key != 255)
				{
					rent = HouseInfo[key][hRent];
					if(strcmp(playername2, HouseInfo[key][hOwner], true) == 0)
					{
						rent = 0;
					}
					else if(rent > GetGranaTheus(i))
					{
						PlayerInfo[i][pPHousekey] = 255;
						SendClientMessage(i, COLOR_WHITE, "Você foi expulso(a).");
						rent = 0;
					}
					HouseInfo[key][hTakings] = HouseInfo[key][hTakings]+rent;
				}
				new tmpintrate;
			    if(PlayerInfo[i][pVIP] == 1) { tmpintrate = 2; }
			    else if(PlayerInfo[i][pVIP] == 2) { tmpintrate = 3; }
                else if(PlayerInfo[i][pVIP] == 3) { tmpintrate = 5; }
                else { tmpintrate = 1; }
				if(PlayerInfo[i][pPayDay] >= 3)
				{
				    Tax += TaxValue;
				    PlayerInfo[i][pConta] -= TaxValue;
					new checks = PlayerInfo[i][pSalario];

                    if(PlayerInfo[i][pVIP] == 1){checks = PlayerInfo[i][pSalario]*2;}
    			    if(PlayerInfo[i][pVIP] == 2) { checks = PlayerInfo[i][pSalario]*3; }
                    if(PlayerInfo[i][pVIP] == 3) { checks = PlayerInfo[i][pSalario]*4; }
				    new ebill = (PlayerInfo[i][pConta]/30000)*(PlayerInfo[i][pLevel]);
				    ConsumingMoney[i] = 1;
				    GranaTheus(i, checks);
				    if(PlayerInfo[i][pConta] > 0)
				    {
				    	PlayerInfo[i][pConta] -= ebill;
				    	SBizzInfo[4][sbTill] += ebill;
					}
					else
					{
					    ebill = 0;
					}
					interest = (PlayerInfo[i][pConta]/1000)*(tmpintrate);
    			    if(PlayerInfo[i][pVIP] == 2) { checks = PlayerInfo[i][pExp]+=1; }
                    if(PlayerInfo[i][pVIP] == 3) { checks = PlayerInfo[i][pExp]+=2; }
					//PlayerPlayMusic(i);
                    PlayerInfo[i][pExp] ++;
					PlayerInfo[i][pConta] = Conta+interest;
					SendClientMessage(i, 0x1E90FFAA, "~.~.~.~.~.~.~.~ Pagamento ~.~.~.~.~.~.~.~");
                    format(string, sizeof(string), "  Organização: %s   Cargo: %s", NomeORG(i), OrgCargo(i));
					SendClientMessage(i, 0xFFFFFFFF, string);
                    format(string, sizeof(string), "  Salário: R$%d   Imposto: -R$%d", checks, TaxValue);
					SendClientMessage(i, 0xFFFFFFFF, string);
					SendClientMessage(i, 0xBEBEBEAA, "  Médico: R$300");
					if(PlayerInfo[i][pPHousekey] != 255 || PlayerInfo[i][pPbiskey] != 255)
					{
					    format(string, sizeof(string), "  Energia: -R$%d", ebill);
						SendClientMessage(i, 0xFFD3A8FF, string);
					}
					format(string, sizeof(string), "  Banco: R$%d", Conta);
					SendClientMessage(i, 0xBEBEBEAA, string);
					format(string, sizeof(string), "  Juros: 0.%d  por cento",tmpintrate);
					SendClientMessage(i, 0xBEBEBEAA, string);
					SendClientMessage(i, 0x1E90FFAA, "~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~.~");
					format(string, sizeof(string), "  Novo extrato: R$%d", PlayerInfo[i][pConta]);
					SendClientMessage(i, 0xFFFFFFFF, string);
					format(string, sizeof(string), "  Aluguel: -R$%d", rent);
					SendClientMessage(i, 0xFFFFFFFF, string);
                    //SendClientMessage(i, CORS, "===========================================");
                    //PlayerPlaySound(i, 1185, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "~w~-==- ~b~~h~~h~ Play~r~~h~Start ~g~~h~~h~Salario ~w~ -==-");
					GameTextForPlayer(i, string, 5000, 1);
					GranaTheus(i,- 300);
					rent = 0;
					PlayerInfo[i][pPayDay] = 0;
					PlayerInfo[i][pSalario] = 0;
					PlayerInfo[i][pConnectTime] += 1;
					if(PlayerInfo[i][pEmprego] > 0)
	    			{
	    	    		if(PlayerInfo[i][pContractTime] < 25)
	    	    		{
							PlayerInfo[i][pContractTime] ++;
						}
	    			}
				}
				else
				{
				    SendClientMessage(i, COLOR_LIGHTRED, "* Você não jogou tempo suficiente para receber salário!.");
				}
			}
		}
		new lolbagui;
		lolbagui = PlayerInfo[i][pExp];
		new nxtlevel = PlayerInfo[i][pLevel]+1;
		if(lolbagui >= nxtlevel*levelexp)
		{
		    GameTextForPlayer(i, "~g~~h~Respeito Adquirido!~n~~r~~h~Digite /comprarnivel!", 5000, 1);
		}
	}
	OOCNews(COLOR_WHITE, "Loteria: Ja comecou a loteria.");
	new rand = random(80);
	if(rand < 77) { rand += 3; }
	Lotto(rand);
    SetTimer("CheckPlayStart",4000,0);
	//return 1;
}
stock GetNumberOfPlayersOnThisIP(test_ip[])
{
    new against_ip[32+1];
    new x = 0;
    new ip_count = 0;
    for(x=0; x<MaiorID; x++)
	{
        if(IsPlayerConnected(x))
		{
            GetPlayerIp(x,against_ip,32);
            if(!strcmp(against_ip,test_ip)) ip_count++;
        }
    }
    return ip_count;
}

strtok(const string[], &index)
{
	new length = strlen(string);
	while ((index < length) && (string[index] <= ' '))
	{
		index++;
	}
	new offset = index;
	new result[20];
	while ((index < length) && (string[index] > ' ') && ((index - offset) < (sizeof(result) - 1)))
	{
		result[index - offset] = string[index];
		index++;
	}
	result[index - offset] = EOS;
	return result;
}
public split(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
	    if(strsrc[i]==delimiter || i==strlen(strsrc)){
	        len = strmid(strdest[aNum], strsrc, li, i, 128);
	        strdest[aNum][len] = 0;
	        li = i+1;
	        aNum++;
		}
		i++;
	}
	return 1;
}
public OnPlayerRegister(playerid)
{
	if(IsPlayerConnected(playerid))
	{
            new file[128];
			GetPlayerName(playerid,loginname,sizeof(loginname));
			format(file, sizeof(file), OpenAccPlayer, PlayerName(playerid));
            if(!dini_Exists(file)){dini_Create(file);}
            dini_Set(file, "Key", StrPasswrd[playerid]);
            ClearMarriage(playerid);
            format(PlayerInfo[playerid][pKey],128, "%s", dini_Get(file, "Key"));
            SalvarPlayer(playerid);
            SetTimerEx("OnPlayerLogin", 1800, false, "i", playerid);
			/*SendClientMessage(playerid, 0x33FF00FF, "[BPF]: Você agora pode digitar /logar <senha>");
      		format(loginstring,sizeof(loginstring),"{FFB973}Seja Bem Vindo ao {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n\n\n{FFFFFF}          Status da Conta: {80FF80}Registrada\n\n\n{FFFFFF}Nome:{1E90FF} %s\n\n{72FCB0}Você já Está Registrado!\n\n{77D3EE}Digite sua Senha para Logar.\n\n{FFC184}   ** Caso erre 5 Vezes Será Banido!!\n\n{FFFFFF}Visite: www.brasilplayStart1.forumeiros.com  <~",loginname);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start",loginstring,"Logar","Cancelar");*/
	}
	return 1;
}
public OnPlayerLogin(playerid)
{
       new tmp2[128],file[128];
	   format(file, sizeof(file), OpenAccPlayer, PlayerName(playerid));
   	   format(PlayerInfo[playerid][pKey],128, "%s", dini_Get(file, "Key"));
	   if(strcmp(PlayerInfo[playerid][pKey],StrPasswrd[playerid], true ) == 0 )
	   {
            CarregarPlayer(playerid);
            logouagora[playerid] = 1;
			CheckOwnerb(playerid);
			CheckOwnerh(playerid);
            StopMusic(playerid);
		}
		else
		{
            GetPlayerName(playerid,loginname,sizeof(loginname));
			SendClientMessage(playerid, COLOR_YELLOW, "[BPF]: Senha errada! - Se errar a senha 6 vezes Será Kickado!");
			TogglePlayerControllable(playerid, 0);
   			SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
   			SetPlayerCameraPos(playerid,1841.2092,-1458.6342,105.9717);
            SetPlayerCameraLookAt(playerid,1841.2092,-1458.6342,105.9717);
   			//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
   			//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
			//InterpolateCameraLookAt(playerid, 1477.482666, -1070.184326, 217.019683, 1665.385986, -1308.891113, 206.348419, 25000, CAMERA_MOVE);
            format(loginstring,sizeof(loginstring),"\n\n{FFFFFF}********************************************\n\nConta: %s\nStatus: {00FF00}Registrada\n\n********************************************\n\n{FFFFFF}- Digite sua senha abaixo para logar\n* Caso erre sua senha 6 vezes será kikado!\n\n",loginname);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start v1.3",loginstring,"Logar","Cancelar");
	        gPlayerLogTries[playerid] += 1;
	        if(gPlayerLogTries[playerid] == 6)
			{
                SendClientMessage(playerid, COLOR_YELLOW, "[BPF]: Senha errada! - Você atingiu o Limite máximo de Tentativas e Foi Kickado!");
                Kick(playerid);
            }
	        return 1;
		}
		ClearChatbox(playerid, 30);
		gPlayerLogged[playerid] = 1;
        TogglePlayerControllable(playerid, 1);
        StatusPlayer(5, playerid);
		SetPlayerWantedLevel(playerid, WantedPoints[playerid]);
		if(PlayerInfo[playerid][pReg] == 0)
		{
			PlayerInfo[playerid][pLevel] = 3;
			PlayerInfo[playerid][pSHealth] = 0.0;
			PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pLocal] = 255;
			PlayerInfo[playerid][pTeam] = 3;
			if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
			new randphone = 1000 + random(8999);//
			PlayerInfo[playerid][pPnumber] = randphone;
			PlayerInfo[playerid][pPHousekey] = 255;
			PlayerInfo[playerid][pPbiskey] = 255;
			PlayerInfo[playerid][pConta] = 100;
			PlayerInfo[playerid][pReg] = 1;
			PlayerInfo[playerid][pEmprego] = 0;
			PlayerInfo[playerid][pKills] = 0;
			PlayerInfo[playerid][pDeaths] = 0;
			ResetGranaTheus(playerid);
		}
		if(PlayerInfo[playerid][pWarns] == 1) //1 aviso
		{
		    SendClientMessage(playerid, COLOR_YELLOW, "Sua Conta Já tem 1 Aviso!");
		    SendClientMessage(playerid, COLOR_YELLOW, "Se Você tiver 3 avisos será banido automaticamente!");
		}
		if(PlayerInfo[playerid][pWarns] == 2) //2 avisos
		{
		    SendClientMessage(playerid, COLOR_YELLOW, "Sua Conta Já tem 2 Avisos!");
		    SendClientMessage(playerid, COLOR_YELLOW, "Se Você tiver 3 avisos será banido automaticamente!");
		}
		if(PlayerInfo[playerid][pWarns] >= 3) //3 avisos
		{
		    PlayerInfo[playerid][pWarns] = 0;
		}
		printf("%s Logou no Servidor.",PlayerName(playerid));
		//SendClientMessage(playerid, COLOR_GREEN, "Bem Vindo ao {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start");
//  		format(string2, sizeof(string2), "Seu último login foi no dia %d/%d/%d horário %d:%d:%d",strval(Info[0]),strval(Info[1]),strval(Info[2]),strval(Info[3]),strval(Info[4]),strval(Info[5]));
  		new dia,mes,ano,hora,mins,seg;
	    getdate(ano,mes,dia);
	    gettime(hora,mins,seg);
  		/*format(string3, sizeof(string3),"%d/%d/%d/%d/%d/%d",dia,mes,ano,hora,mins,seg);
  		strmid(PlayerInfo[playerid][pLastLogin],string3,0,strlen(string3),255);*/
		AdmCheck(playerid);
        StatusPlayer(3, playerid);
        HelpCheck(playerid);
        StatusPlayer(4, playerid);
        SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin], 2405.0625,-1376.5313,24.3273, 1.0, -1, -1, -1, -1, -1, -1);
		if(gTeam[playerid] == 0)
		{
			gTeam[playerid] = 3;
		}
		else
		{
			gTeam[playerid] = PlayerInfo[playerid][pTeam];
		}
		Hospital[playerid] = 1;
		gPlayerLogged[playerid] = 1;
		format(tmp2, sizeof(tmp2), "~n~ ~w~Bem Vindo ~n~~p~~h~%s", PlayerName(playerid));
		GameTextForPlayer(playerid, tmp2, 5000, 1);
		SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL_SILENCED, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_DESERT_EAGLE, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SHOTGUN, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SAWNOFF_SHOTGUN, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SPAS12_SHOTGUN, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_MP5, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_AK47, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_M4, 999);
    	SetPlayerSkillLevel(playerid, WEAPONSKILL_SNIPERRIFLE, 999);
    	ScoreLevel(playerid);
		if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] < 3000)
		{
			new AdminName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, AdminName, sizeof(AdminName));
    		format(gstring, sizeof(gstring), "~p~%s: ~g~~h~~h~ON", AdminName);
            for(new i=0; i<MaiorID; i++)
			{
    			if(IsPlayerConnected(i)) GameTextForPlayer(i, gstring , 5000, 1);
			}
		}
		TempoLogin = SetTimerEx("LoginAgora", 10000, 0, "i", playerid);
		if(InfoLogin == 0)
		{
            format(gstring,sizeof(gstring), "AdmAviso: [%d]%s Logou no servidor - %d Players Online!",playerid,PlayerName(playerid),ContarJogadores());
    		SendMessageToOthersAdmins(playerid, COLOR_YELLOW, gstring);
        }
        new arquivo[64],RankVip[34];
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        SendClientMessage(playerid, 0xFFFFFFFF, "- {1E90FF}INFORMAÇÕES DO JOGADOR");
        new nxtlevel = PlayerInfo[playerid][pLevel]+1;
        new expquantidade = nxtlevel*levelexp;
        format(arquivo, sizeof(arquivo), OpenAccPlayer,PlayerName(playerid));
        format(strtheus,sizeof(strtheus),"- Último Login: {1E90FF}%d/%d/%d  {FFFFFF}Horário:{1E90FF} %d:%d:%d",dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
        SendClientMessage(playerid,0xFFFFFFFF,strtheus);
        if (VipCheck(playerid) == 0 && PlayerInfo[playerid][pVIP] > 0)//teste vipinfo
		{
			PlayerInfo[playerid][pVIP] = 0;
			SendClientMessage(playerid, COLOR_YELLOW, "Você não é mais um jogador VIP/Premium, renove seu VIP e receba seus benefícios de volta");
        }
		if(PlayerInfo[playerid][pVIP] == 0) { RankVip = "Gratis"; }
		else if(PlayerInfo[playerid][pVIP] == 1) { RankVip = "VIP"; }
		else if(PlayerInfo[playerid][pVIP] == 2) { RankVip = "VIP Premium"; }
        else if(PlayerInfo[playerid][pVIP] == 3) { RankVip = "Sócio"; }
        format(gstring,sizeof(gstring),"- Conta: {1E90FF}%s.",RankVip);
        SendClientMessage(playerid,0xFFFFFFFF,gstring);
		format(strtheus,sizeof(strtheus),"- Nivel: {1E90FF}%d{FFFFFF}  Respeito: {1E90FF}%d/%d{FFFFFF}  Horas Jogadas{1E90FF} %d",PlayerInfo[playerid][pLevel],PlayerInfo[playerid][pExp],expquantidade,PlayerInfo[playerid][pConnectTime]);
        SendClientMessage(playerid,0xFFFFFFFF,strtheus);
        format(gstring,sizeof(gstring),"- Organização: {1E90FF}%s",NomeORG(playerid));
        SendClientMessage(playerid,0xFFFFFFFF,gstring);
        format(gstring,sizeof(gstring),"- Seja bem-vindo %s, na dúvida utilize /duvida! {1E90FF}Tenha um bom jogo.",PlayerName(playerid));
        SendClientMessage(playerid,0xFFFFFFFF,gstring);
        SendClientMessage(playerid, 0xFFFFFFFF, "-");
        SendClientMessage(playerid, 0xFFFFFFFF, " ");
        TextDrawHideForPlayer(playerid, TextPlayersOn);
        TextDrawHideForPlayer(playerid, TextLogin0);
        TextDrawHideForPlayer(playerid, TextLogin1);
        TextDrawHideForPlayer(playerid, TextLogin2);
        TextDrawHideForPlayer(playerid, TextLogin3);
        TextDrawHideForPlayer(playerid, TextLogin4);
        TextDrawHideForPlayer(playerid, TextLogin5);
        TextDrawHideForPlayer(playerid, TextLogin6);
        TextDrawHideForPlayer(playerid, TextLogin7);
        TextDrawHideForPlayer(playerid, TextLogin8);
        Hospital[playerid] = 1;
        SpawnPlayer(playerid);
        StatusPlayer(1, playerid);
        ShowGz(playerid);
        if(EleicoesOn == 0) { PlayerInfo[playerid][pVotou] = 0; }
        /*new CrashLolz = GetGranaTheus(playerid);
        new CrashLolz2 = GetGranaTheus(playerid);
        if(CrashLolz < 0) { new CashTotal = CrashLolz+CrashLolz2; GranaTheus(playerid,CashTotal); }*/
        PlayerInfo[playerid][pOnline] = 1;
        StopMusic(playerid);
        if(strfind(PlayerInfo[playerid][pMarriedTo], "Luta", true) != -1){ClearMarriage(playerid);}
        CheckDonoCarro(playerid);
        if(PlayerInfo[playerid][pAdmin] >= 3000){HideAdm[playerid] = 1;}
        PlayerInfo[playerid][pLastDia] = dia;
    	PlayerInfo[playerid][pLastMes] = mes;
    	PlayerInfo[playerid][pLastAno] = ano;
    	PlayerInfo[playerid][pLastHora] = hora;
    	PlayerInfo[playerid][pLastMinuto] = mins;
    	PlayerInfo[playerid][pLastSegundo] = seg;
        VehPreso(playerid);
	    if(GetPlayerFamy(playerid) == FamilyBloqueada)
		{
  			SendClientMessage(playerid, COLOR_LIGHTRED, "* A sua Família Cancelada, Você foi Expulso Automaticamente.");
            PlayerInfo[playerid][pFamyLider] = 0;
			PlayerInfo[playerid][pFamyMember] = 0;
		}
        new curdate = getdate();
        if(PlayerInfo[playerid][pPHousekey] != 255)
        {
    		HouseInfo[PlayerInfo[playerid][pPHousekey]][hDate] = curdate;
    	}
        for(new h = 0; h < sizeof(Carro); h++)
    	{
            if (PlayerInfo[playerid][pChave] == Carro[h][CarroID])
    		{
    			Carro[h][cDate] = curdate;
                break;
    		}
    	}
        TextDrawShowForPlayer(playerid, forum);
	  	TextDrawShowForPlayer(playerid, TextData);
		TextDrawShowForPlayer(playerid, TextHora);
		return 1;
}
forward SalvarPlayer(playerid);
public SalvarPlayer(playerid)
{
    if(gPlayerLogged[playerid])
	{
        new file[128];
        format(file, sizeof(file), OpenAccPlayer, PlayerName(playerid));
            if(!dini_Exists(file))
            {
                dini_Create(file);
            }
            new File: hFile = fopen(file, io_write);
            if (hFile)
            {
            	new var[64];
            	PlayerInfo[playerid][pCash] = GetGranaTheus(playerid);
                //dini_Set(file, "Key", PlayerInfo[playerid][pKey]);
                format(var, 64, "Key=%s\n",PlayerInfo[playerid][pKey]);fwrite(hFile, var);
            	format(var, 64, "Level=%d\n",PlayerInfo[playerid][pLevel]);fwrite(hFile, var);
            	format(var, 64, "AdminLevel=%d\n",PlayerInfo[playerid][pAdmin]);fwrite(hFile, var);
                format(var, 64, "HelpLevel=%d\n",PlayerInfo[playerid][pHelper]);fwrite(hFile, var);
                format(var, 64, "DonateRank=%d\n",PlayerInfo[playerid][pVIP]);fwrite(hFile, var);
            	format(var, 64, "UpgradePoints=%d\n",PlayerInfo[playerid][gPupgrade]);fwrite(hFile, var);
            	format(var, 64, "ConnectedTime=%d\n",PlayerInfo[playerid][pConnectTime]);fwrite(hFile, var);
            	format(var, 64, "Registrado=%d\n",PlayerInfo[playerid][pReg]);fwrite(hFile, var);
            	format(var, 64, "Sex=%d\n",PlayerInfo[playerid][pSex]);fwrite(hFile, var);
            	format(var, 64, "Respeito=%d\n",PlayerInfo[playerid][pExp]);fwrite(hFile, var);
            	format(var, 64, "Money=%d\n",PlayerInfo[playerid][pCash]);fwrite(hFile, var);
            	format(var, 64, "Bank=%d\n",PlayerInfo[playerid][pConta]);fwrite(hFile, var);
            	format(var, 64, "Crimes=%d\n",PlayerInfo[playerid][pCrimes]);fwrite(hFile, var);
            	format(var, 64, "Kills=%d\n",PlayerInfo[playerid][pKills]);fwrite(hFile, var);
            	format(var, 64, "Deaths=%d\n",PlayerInfo[playerid][pDeaths]);fwrite(hFile, var);
            	format(var, 64, "Phonebook=%d\n",PlayerInfo[playerid][pPhoneBook]);fwrite(hFile, var);
            	format(var, 64, "LottoNr=%d\n",PlayerInfo[playerid][pLottoNr]);fwrite(hFile, var);
            	format(var, 64, "Fishes=%d\n",PlayerInfo[playerid][pFishes]);fwrite(hFile, var);
            	format(var, 64, "BiggestFish=%d\n",PlayerInfo[playerid][pBiggestFish]);fwrite(hFile, var);
            	format(var, 64, "Emprego=%d\n",PlayerInfo[playerid][pEmprego]);fwrite(hFile, var);
            	format(var, 64, "Paycheck=%d\n",PlayerInfo[playerid][pSalario]);fwrite(hFile, var);
            	format(var, 64, "HeadValue=%d\n",PlayerInfo[playerid][pHeadValue]);fwrite(hFile, var);
            	format(var, 64, "Jailed=%d\n",PlayerInfo[playerid][pJailed]);fwrite(hFile, var);
            	format(var, 64, "JailTime=%d\n",PlayerInfo[playerid][pJailTime]);fwrite(hFile, var);
            	format(var, 64, "Materiais=%d\n",PlayerInfo[playerid][pMats]);fwrite(hFile, var);
            	format(var, 64, "Maconha=%d\n",PlayerInfo[playerid][pDrogas]);fwrite(hFile, var);
            	format(var, 64, "Cocaina=%d\n",PlayerInfo[playerid][pDrogas2]);fwrite(hFile, var);
            	format(var, 64, "Crack=%d\n",PlayerInfo[playerid][pDrogas3]);fwrite(hFile, var);
            	format(var, 64, "Lider=%d\n",PlayerInfo[playerid][pLider]);fwrite(hFile, var);
                format(var, 64, "FamyLider=%d\n",PlayerInfo[playerid][pFamyLider]);fwrite(hFile, var);
                format(var, 64, "Member=%d\n",PlayerInfo[playerid][pMembro]);fwrite(hFile, var);
                format(var, 64, "MemberF=%d\n",PlayerInfo[playerid][pFamyMember]);fwrite(hFile, var);
                format(var, 64, "Rank=%d\n",PlayerInfo[playerid][pCargo]);fwrite(hFile, var);
            	format(var, 64, "Char=%d\n",PlayerInfo[playerid][pSkin]);fwrite(hFile, var);
            	format(var, 64, "ContractTime=%d\n",PlayerInfo[playerid][pContractTime]);fwrite(hFile, var);
            	format(var, 64, "DetSkill=%d\n",PlayerInfo[playerid][pDetSkill]);fwrite(hFile, var);
            	format(var, 64, "SexSkill=%d\n",PlayerInfo[playerid][pSexSkill]);fwrite(hFile, var);
            	format(var, 64, "BoxSkill=%d\n",PlayerInfo[playerid][pBoxSkill]);fwrite(hFile, var);
            	format(var, 64, "LawSkill=%d\n",PlayerInfo[playerid][pLawSkill]);fwrite(hFile, var);
            	format(var, 64, "MechSkill=%d\n",PlayerInfo[playerid][pMechSkill]);fwrite(hFile, var);
            	format(var, 64, "NewsSkill=%d\n",PlayerInfo[playerid][pNewsSkill]);fwrite(hFile, var);
            	format(var, 64, "DrogasSkill=%d\n",PlayerInfo[playerid][pDrogasSkill]);fwrite(hFile, var);
            	format(var, 64, "CookSkill=%d\n",PlayerInfo[playerid][pCookSkill]);fwrite(hFile, var);
            	format(var, 64, "FishSkill=%d\n",PlayerInfo[playerid][pFishSkill]);fwrite(hFile, var);
            	format(var, 64, "pSHealth=%.1f\n",PlayerInfo[playerid][pSHealth]);fwrite(hFile, var);
            	format(var, 64, "Team=%d\n",PlayerInfo[playerid][pTeam]);fwrite(hFile, var);
            	format(var, 64, "PhoneNr=%d\n",PlayerInfo[playerid][pPnumber]);fwrite(hFile, var);
            	format(var, 64, "House=%d\n",PlayerInfo[playerid][pPHousekey]);fwrite(hFile, var);
            	format(var, 64, "Bizz=%d\n",PlayerInfo[playerid][pPbiskey]);fwrite(hFile, var);
            	format(var, 64, "Spawn=%d\n",PlayerInfo[playerid][pSpawn]);fwrite(hFile, var);
            	format(var, 64, "SafeMaconha=%d\n",PlayerInfo[playerid][pSafeDrogas]);fwrite(hFile, var);
            	format(var, 64, "SafeCocaina=%d\n",PlayerInfo[playerid][pSafeDrogas2]);fwrite(hFile, var);
            	format(var, 64, "SafeCrack=%d\n",PlayerInfo[playerid][pSafeDrogas3]);fwrite(hFile, var);
            	format(var, 64, "NivelProcurado=%d\n",WantedPoints[playerid]);fwrite(hFile, var);
            	format(var, 64, "SafeMateriais=%d\n",PlayerInfo[playerid][psMats]);fwrite(hFile, var);
            	format(var, 64, "CarLic=%d\n",PlayerInfo[playerid][pCarLic]);fwrite(hFile, var);
                format(var, 64, "FlyLic=%d\n",PlayerInfo[playerid][pFlyLic]);fwrite(hFile, var);
            	format(var, 64, "BoatLic=%d\n",PlayerInfo[playerid][pBoatLic]);fwrite(hFile, var);
            	format(var, 64, "FishLic=%d\n",PlayerInfo[playerid][pFishLic]);fwrite(hFile, var);
            	format(var, 64, "GunLic=%d\n",PlayerInfo[playerid][pGunLic]);fwrite(hFile, var);
            	format(var, 64, "PayDay=%d\n",PlayerInfo[playerid][pPayDay]);fwrite(hFile, var);
				format(var, 64, "CDPlayer=%d\n",PlayerInfo[playerid][pCDPlayer]);fwrite(hFile, var);
            	format(var, 64, "Wins=%d\n",PlayerInfo[playerid][pWins]);fwrite(hFile, var);
            	format(var, 64, "Loses=%d\n",PlayerInfo[playerid][pLoses]);fwrite(hFile, var);
            	format(var, 64, "AlcoholPerk=%d\n",PlayerInfo[playerid][pAlcoholPerk]);fwrite(hFile, var);
            	format(var, 64, "DrugPerk=%d\n",PlayerInfo[playerid][pDrugPerk]);fwrite(hFile, var);
            	format(var, 64, "MiserPerk=%d\n",PlayerInfo[playerid][pMiserPerk]);fwrite(hFile, var);
            	format(var, 64, "PainPerk=%d\n",PlayerInfo[playerid][pPainPerk]);fwrite(hFile, var);
            	format(var, 64, "TraderPerk=%d\n",PlayerInfo[playerid][pTraderPerk]);fwrite(hFile, var);
            	format(var, 64, "Tutorial=%d\n",PlayerInfo[playerid][pTut]);fwrite(hFile, var);
            	format(var, 64, "Avisos=%d\n",PlayerInfo[playerid][pWarns]);fwrite(hFile, var);
            	format(var, 64, "Married=%d\n",PlayerInfo[playerid][pMarried]);fwrite(hFile, var);
            	format(var, 64, "Luta=%d\n",PlayerInfo[playerid][pLuta]);fwrite(hFile, var);
            	format(var, 64, "Dorgado=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
            	format(var, 64, "Dorgado2=%d\n",PlayerInfo[playerid][pDorgado]);fwrite(hFile, var);
            	format(var, 64, "Doenca=%d\n",PlayerInfo[playerid][pDoenca]);fwrite(hFile, var);
                format(var, 64, "DiaLogin=%d\n",PlayerInfo[playerid][pLastDia]);fwrite(hFile, var);
            	format(var, 64, "MesLogin=%d\n",PlayerInfo[playerid][pLastMes]);fwrite(hFile, var);
            	format(var, 64, "AnoLogin=%d\n",PlayerInfo[playerid][pLastAno]);fwrite(hFile, var);
            	format(var, 64, "HoraLogin=%d\n",PlayerInfo[playerid][pLastHora]);fwrite(hFile, var);
            	format(var, 64, "MinutoLogin=%d\n",PlayerInfo[playerid][pLastMinuto]);fwrite(hFile, var);
            	format(var, 64, "SegundoLogin=%d\n",PlayerInfo[playerid][pLastSegundo]);fwrite(hFile, var);
                format(var, 64, "Online=%d\n",PlayerInfo[playerid][pOnline]);fwrite(hFile, var);
                format(var, 64, "Votei=%d\n",PlayerInfo[playerid][pVotou]);fwrite(hFile, var);
                format(var, 64, "Hospital=%d\n",PlayerInfo[playerid][pHosp]);fwrite(hFile, var);
            	format(var, 64, "HospitalTime=%d\n",PlayerInfo[playerid][pHospTime]);fwrite(hFile, var);
                format(var, 64, "MarriedTo=%s\n",PlayerInfo[playerid][pMarriedTo]);fwrite(hFile, var);
                fclose(hFile);
            }
            //dini_Set(file, "Key", PlayerInfo[playerid][pKey]);
            //dini_Set(file, "MarriedTo", PlayerInfo[playerid][pMarriedTo]);
	        if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    	{
	        	for(new i = 0; i < sizeof(SpikeInfo); i++)
	  	    	{
	  	       		if(IsPlayerInRangeOfPoint(playerid, 3.0, SpikeInfo[i][sX], SpikeInfo[i][sY], SpikeInfo[i][sZ]))
	           		{
	  	           		if(SpikeInfo[i][sCreated] == 1)
	  	           		{
	  	               		new panels, doors, luzes, tires;
	  	               		new carid = GetPlayerVehicleID(playerid);
			           		GetVehicleDamageStatus(carid, panels, doors, luzes, tires);
			           		tires = encode_tires(1, 1, 1, 1);
			           		UpdateVehicleDamageStatus(carid, panels, doors, luzes, tires);
	  	           		}
	  	       		}
	  	    	}
	  		}
	}
	return 1;
}
public OnPlayerUpdate(playerid)
{
    if(IsPlayerConnected(playerid) && gPlayerLogged[playerid])
	{
	    //if(GetPlayerInterior(playerid) >= 1) SetPlayerArmedWeapon(playerid,0);
        if(AntCarSpam == 1)
        {
            new vehicleID = GetPlayerVehicleID(playerid);
            if(lastVehicle[playerid] != vehicleID)
            {
                lastVehicle[playerid] = vehicleID;
                if(GetVehicleModel(vehicleID))
                {
                    CallRemoteFunction("OnPlayerChangeVehicle","ii", playerid, vehicleID);
                }
            }
        }
	}
	return 1;
}
public OnPropUpdate()
{
	new idx;
	new File: file2;
	while (idx < sizeof(HouseInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%f,%f,%f,%f,%f,%f,%d,%d,%d,%d,%d,%d,%s,%s,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d,%d\n",
		HouseInfo[idx][hEntrancex],
		HouseInfo[idx][hEntrancey],
		HouseInfo[idx][hEntrancez],
		HouseInfo[idx][hExitx],
		HouseInfo[idx][hExity],
		HouseInfo[idx][hExitz],
		HouseInfo[idx][hHealthx],
		HouseInfo[idx][hHealthy],
		HouseInfo[idx][hHealthz],
		HouseInfo[idx][hArmorrx],
		HouseInfo[idx][hArmorry],
		HouseInfo[idx][hArmorrz],
		HouseInfo[idx][hOwner],
		HouseInfo[idx][hDiscription],
		HouseInfo[idx][hValue],
		HouseInfo[idx][hHel],
		HouseInfo[idx][hArm],
		HouseInfo[idx][hInt],
		HouseInfo[idx][hLock],
		HouseInfo[idx][hOwned],
		HouseInfo[idx][hRooms],
		HouseInfo[idx][hRent],
		HouseInfo[idx][hRentabil],
		HouseInfo[idx][hTakings],
		HouseInfo[idx][hVec],
		HouseInfo[idx][hVcol1],
		HouseInfo[idx][hVcol2],
		HouseInfo[idx][hDate],
		HouseInfo[idx][hLevel],
		HouseInfo[idx][hWorld]);

		HouseInfo[idx][hWorld] = idx;
		if(idx == 0)
		{
			file2 = fopen("PlayStart/property.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayStart/property.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(BizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d\n",
		BizzInfo[idx][bOwned],
		BizzInfo[idx][bOwner],
		BizzInfo[idx][bMessage],
		BizzInfo[idx][bExtortion],
		BizzInfo[idx][bEntranceX],
		BizzInfo[idx][bEntranceY],
		BizzInfo[idx][bEntranceZ],
		BizzInfo[idx][bExitX],
		BizzInfo[idx][bExitY],
		BizzInfo[idx][bExitZ],
		BizzInfo[idx][bLevelNeeded],
		BizzInfo[idx][bBuyPrice],
		BizzInfo[idx][bEntranceCost],
		BizzInfo[idx][bTill],
		BizzInfo[idx][bLocked],
		BizzInfo[idx][bInterior]);
		//BizzInfo[idx][VirtualWorld]);
		if(idx == 0)
		{
			file2 = fopen("PlayStart/bizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayStart/bizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	idx = 0;
	while (idx < sizeof(SBizzInfo))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%f|%f|%f|%d|%d|%d|%d|%d\n",
		SBizzInfo[idx][sbOwned],
		SBizzInfo[idx][sbOwner],
		SBizzInfo[idx][sbMessage],
		SBizzInfo[idx][sbExtortion],
		SBizzInfo[idx][sbEntranceX],
		SBizzInfo[idx][sbEntranceY],
		SBizzInfo[idx][sbEntranceZ],
		SBizzInfo[idx][sbLevelNeeded],
		SBizzInfo[idx][sbBuyPrice],
		SBizzInfo[idx][sbEntranceCost],
		SBizzInfo[idx][sbTill],
		SBizzInfo[idx][sbLocked]);
		if(idx == 0)
		{
			file2 = fopen("PlayStart/sbizz.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayStart/sbizz.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return true;
}

public BroadCast(COLOR,const string[])
{
	SendClientMessageToAll(COLOR, string);
	return 1;
}

public ABroadCast(COLOR,const string[],level)
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pAdmin] >= level)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}

public OOCNews(COLOR,const string[])
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			SendClientMessage(i, COLOR, string);
		}
	}
}

public SendEmpregoMessage(Emprego, COLOR, string[])
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pEmprego] == Emprego)
		    {
				SendClientMessage(i, COLOR, string);
			}
		}
	}
}

public SendFamilyMessage(family, COLOR, string[])
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(PlayerInfo[i][pMembro] == family || PlayerInfo[i][pLider] == family)
		    {
                if(!gFam[i] && admtrampando[i] == 0)
                {
					SendClientMessage(i, COLOR, string);
				}
			}
		}
	}
}
public ABroadCasth(COLOR,const string[],level)
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pHelper] >= level)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}
public ABroadCastah(COLOR,const string[],level)
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pHelper] >= level || PlayerInfo[i][pAdmin] >= level)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}
public FamyMsg(COLOR,const string[],level)
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if (PlayerInfo[i][pFamyLider] == level || PlayerInfo[i][pFamyMember] == level)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}
public SoEuVejoMsm(COLOR,const string[])
{
    for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(ServerOwner[i] == 1)
			{
				SendClientMessage(i, COLOR, string);
				printf("%s", string);
			}
		}
	}
	return 1;
}

public PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		SetTimerEx("StopMusic", 7000,false,"i",playerid);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

public StopMusic(playerid)
{
		if(IsPlayerConnected(playerid))
		{
			PlayerPlaySound(playerid, 1069, 0.0, 0.0, 0.0);
		}
}

public PlayerFixRadio(playerid)
{
    if(IsPlayerConnected(playerid))
	{
	    SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}

public PlayerFixRadio2()
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(Fixr[i])
			{
				PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
				Fixr[i] = 0;
			}
		}
	}
}

//---------------------------<[ OnPlayerCommandText ]>--------------------------------------------------------
public OnPlayerCommandText(playerid, cmdtext[])
{
 	new string[128];
    new cmd[128];
	new tmp[128];
	new playerdinheiro;
	new giveplayer[MAX_PLAYER_NAME];
	new playername[MAX_PLAYER_NAME];
	new plname[MAX_PLAYER_NAME];
	new giveplayerid, moneys, idx;
	cmd = strtok(cmdtext, idx);
    //-------------------------------[Login]--------------------------------------------------------------------------
 	if (strcmp(cmd, "/logar", true) ==0 )
	{
	    if(IsPlayerConnected(playerid) && !IsPlayerNPC(playerid))
	    {
			if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, " Você já está logado.");
				return 1;
			}
            SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
            SetPlayerCameraPos(playerid,1841.2092,-1458.6342,105.9717);
            SetPlayerCameraLookAt(playerid,1841.2092,-1458.6342,105.9717);
   			//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
   			//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
			//InterpolateCameraLookAt(playerid, 1477.482666, -1070.184326, 217.019683, 1665.385986, -1308.891113, 206.348419, 25000, CAMERA_MOVE);
            format(loginstring,sizeof(loginstring),"\n\n{FFFFFF}********************************************\n\nConta: %s\nStatus: {00FF00}Registrada\n\n********************************************\n\n{FFFFFF}- Digite sua senha abaixo para logar\n* Caso erre sua senha 6 vezes será kikado!\n\n",loginname);
			ShowPlayerDialog(playerid, 1, DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start",loginstring,"Logar","Cancelar");
			TogglePlayerControllable(playerid, 0);
        }
		return 1;
	}
	if (strcmp(cmd, "/registrar", true) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, " Você já está logado.");
				return 1;
			}
            SetPlayerPos(playerid,1415.4329,-806.9493,85.0470);
            SetPlayerCameraPos(playerid,1841.2092,-1458.6342,105.9717);
            SetPlayerCameraLookAt(playerid,1841.2092,-1458.6342,105.9717);
   			//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
   			//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
			//InterpolateCameraLookAt(playerid, 1477.482666, -1070.184326, 217.019683, 1665.385986, -1308.891113, 206.348419, 25000, CAMERA_MOVE);
            format(loginstring,sizeof(loginstring),"\n\n{FFFFFF}********************************************\n\nConta: %s\nStatus: {FF0000}Não Registrada\n\n********************************************\n\n{FFFFFF}- Digite uma senha abaixo para registrar\n* OBS: Não passe sua senha para ninguem por questão de segurança!\n\n",loginname);
			ShowPlayerDialog(playerid, 2, DIALOG_STYLE_INPUT,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start",loginstring,"Registrar","Cancelar");
		    TogglePlayerControllable(playerid, 0);
        }
		return 1;
	}
    if(gPlayerLogged[playerid] == 0) { return SendClientMessage(playerid, 0x00FFFFFF, "[BPF ERRO] Antes de usar algum Comando, Registre-se ou Logue no Servidor."); }
	if((strcmp(cmd, "/atualizar3dtext", true)==0 || strcmp(cmd, "/a3d", true) ==0) && PlayerInfo[playerid][pAdmin] == 3000)
	{
		Text3DTheus();
		return 1;
	}
	if((strcmp(cmd, "/deletarconta", true)==0 || strcmp(cmd, "/dc", true) ==0) && PlayerInfo[playerid][pAdmin] == 3000)
	{
	    new file[64];
	    tmp = strtok(cmdtext, idx);
     	if(!strlen(tmp))  return SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /deletarconta [Nick]");
     	if (PlayerInfo[playerid][pAdmin] != 3000)
		{
     		SendClientMessage(playerid, COLOR_GREY,"Você não tem permissão para usar esse comando!");
     		return 1;
		}
     	format(file,sizeof(file),OpenAccPlayer,tmp);
		format(string, 128, "%s.bak", file);
     	DINI_fcopytextfile(file, string);
     	fremove(file);
     	return 1;
	}
 	if(strcmp(cmd, "/iro", true)==0)
    {
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /irobjeto [ id ]");
			return 1;
		}
        if(PlayerInfo[playerid][pAdmin] < 3000)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Não Autorizado!");
			return 1;
		}
		new obid;
		obid = strval(tmp);
		new Float:oX, Float:oY, Float:oZ;
		GetDynamicObjectPos(obid, oX, oY, oZ);
		SetPlayerPos(playerid, oX, oY, oZ+5);
		SendClientMessage(playerid, COLOR_GRAD2, "Você foi até o objeto");
		return 1;
	}
	if(strcmp(cmd,"/mudarnick",true)==0)
    {
		if(IsPlayerConnected(playerid))
	    {
	     	if(MudarNickAceito[playerid] == 0)
	     	{
				SendClientMessage(playerid, COLOR_GRAD1, "Você precisa pedir permissão para um admin mudar seu nick, use /relatorio");
	     		return 1;
	     	}
  			new x_Nick[64],strstr[100];
	     	x_Nick = strtok(cmdtext, idx);
	     	if(!strlen(x_Nick))
			{
				format(strtheus,sizeof(strtheus),"{33FF99}O Admin Autorizou a mudança de Nick!\n{FF0000}Agora digite seu nick.\n{FFA8FF}O Nick deverá Seguir o Padão RPG Abaixo.\n{33FF99}Ex:{80FFFF} Nome_SobreNome");
				ShowPlayerDialog(playerid, 1234, DIALOG_STYLE_INPUT,"Mudar Nick",strtheus,"Confirmar","");
				//SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /mudarnick [nome]");
				return 1;
			}
            if(strfind(x_Nick, "_", true) == -1 || strfind(x_Nick, "[", true) != -1 || strfind(x_Nick, "]", true) != -1 || strfind(x_Nick, "lixo", true) != -1 || strfind(x_Nick, "//_//", true) != -1 || strfind(x_Nick, "caralho", true) != -1 || strfind(x_Nick, "[", true) != -1 || strfind(x_Nick, "server", true) != -1
            || strfind(x_Nick, "servidor", true) != -1 || strfind(x_Nick, "crash", true) != -1 || strfind(x_Nick, "bpl", true) != -1 || strfind(x_Nick, "'", true) != -1 || strfind(x_Nick, "[", true) != -1 || strfind(x_Nick, "189", true) != -1 || strfind(x_Nick, "201", true) != -1 || strfind(x_Nick, "200", true) != -1 || strfind(x_Nick, ".", true) != -1
            || strfind(x_Nick, "*", true) != -1 || strfind(x_Nick, "(", true) != -1|| strfind(x_Nick, "/", true) != -1 || strfind(x_Nick, ")", true) != -1 || strfind(x_Nick, "@", true) != -1 || strfind(x_Nick, "amx", true) != -1 || strfind(x_Nick, "prn", true) != -1 || strfind(x_Nick, "__", true) != -1)
            {
            	format(strtheus,sizeof(strtheus),"{33FF99}O Admin Autorizou a mudança de Nick!\n{FF0000}Agora digite seu nick.\n{FFA8FF}O Nick deverá Seguir o Padão RPG Abaixo.\n{33FF99}Ex:{80FFFF} Nome_SobreNome");
				ShowPlayerDialog(playerid, 1234, DIALOG_STYLE_INPUT,"Mudar Nick",strtheus,"Confirmar","");
            	SendClientMessage(playerid, COLOR_WHITE, "ERRO: Não adicione Símbolos (Ex: ,.'[]{}/?><,)(*-+&$%!@#¬= )");
            	SendClientMessage(playerid, COLOR_WHITE, "ERRO: O Nick Deverá Seguir o Padrão RPG (Ex: Nome_Sobrenome) e não Conter Palavrões!");
            	return true;
            }
			format(string, sizeof(string), OpenAccPlayer, x_Nick);
			if(dini_Exists(string))
			{
                SendClientMessage(playerid, COLOR_GREY,"Este nick ja está sendo usado!");
				return 1;
			}
			if(mudandonick[playerid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY,"Espere terminar de mudar seu nick!");
				return 1;
			}
            if(ConviteFamy[playerid] != 0)
            {
                if(ConviteFamy[playerid] == 1)
                {
                    if(strfind(x_Nick, "StrondaH", true) != -1) { }
                    else
                    {
                    	SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
					 }
                }
                if(ConviteFamy[playerid] == 2)
                {
                    if(strfind(x_Nick, "DestroyeR", true) != -1) { }
                    else
                    {
                    	SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
					 }
                }
                if(ConviteFamy[playerid] == 3)
                {
                    if(strfind(x_Nick, "OwnZ", true) != -1) { }
                    else
                    {
                    	SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
					 }
                }
                if(ConviteFamy[playerid] == 4)
                {
                    if(strfind(x_Nick, "Insane", true) != -1) { }
                    else
                    {
                    	SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
					 }
                }
                if(ConviteFamy[playerid] == 5)
                {
                    if(strfind(x_Nick, "Dorgados", true) != -1) { }
                    else
                    {
                    	SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
					 }
                }
                if(ConviteFamy[playerid] == 6)
                {
                    if(strfind(x_Nick, "Start", true) != -1) { }
                    else
                    {
                    	SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu nick não pode ser trocado, pois escolheu um nome diferente de sua família!");
                        SendClientMessage(playerid, 0xFF8080AA,"[BPF]{FFDFFF} Seu convite foi Cancelado, se quiser entrar Novamente, Fale com o Líder.");
                        mudandonick[playerid] = 0;
                        MudarNickAceito[playerid] = 0;
                        PlayerInfo[playerid][pFamyMember] = 0;
                        PlayerInfo[playerid][pFamyLider] = 0;
                        ConviteFamy[playerid] = 0;
                        return 1;
					 }
                }
            }
			mudandonick[playerid] = 1;
   			GetPlayerName(playerid,playername,sizeof(playername));
   			format(string, sizeof(string), OpenAccPlayer, playername);
			format(strstr, sizeof(strstr), OpenAccPlayer, x_Nick);
            frename(string, strstr);
            for(new i = 0; i < sizeof(Carro); i++)
			{
	        	if(strcmp(playername,Carro[i][Dono],true)==0)
	        	{
	        	    strmid(Carro[i][Dono], x_Nick, 0, strlen(x_Nick), 255);
	        	}
			}
   			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
	        	if(strcmp(playername,BizzInfo[i][bOwner],true)==0)
	        	{
	        	    strmid(BizzInfo[i][bOwner], x_Nick, 0, strlen(x_Nick), 255);
	        	}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
	        	if(strcmp(playername,SBizzInfo[i][sbOwner],true)==0)
	        	{
	        	    strmid(SBizzInfo[i][sbOwner], x_Nick, 0, strlen(x_Nick), 255);
	        	}
			}
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
	        	if(strcmp(playername,HouseInfo[h][hOwner],true)==0)
	        	{
	        	    strmid(HouseInfo[h][hOwner], x_Nick, 0, strlen(x_Nick), 255);
	        	}
			}
			for(new i = 0; i < sizeof(AdmInfo); i++)
	    	{
	        	if(strcmp(playername,AdmInfo[i][gMembro],true)==0)
				{
	        	    strmid(AdmInfo[i][gMembro], x_Nick, 0, strlen(x_Nick), 255);
		        }
 			}
			for(new i = 0; i < sizeof(VipInfo); i++)
	    	{
	        	if(strcmp(PlayerName(playerid),VipInfo[i][vNick],true)==0)
				{
	        	    strmid(VipInfo[i][vNick], x_Nick, 0, strlen(x_Nick), 255);
		        }
 			}
            for(new i = 0; i < sizeof(HelpInfo); i++)
	    	{
	        	if(strcmp(playername,HelpInfo[i][gMembro],true)==0)
				{
	        	    strmid(HelpInfo[i][gMembro], x_Nick, 0, strlen(x_Nick), 255);
		        }
 			}
	        if(GetPlayerOrg(playerid) != 0)
	        {
	            new arquivo[64];
				format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",GetPlayerOrg(playerid));
	        	for(new i = 1; i < sizeof(InfoOrg); i++)
				{
	    			if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
		    		{
		    			if(strcmp(playername,InfoOrg[i][Lider],true)==0)
		    			{
		    	    		strmid(InfoOrg[i][Lider], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
							dini_Set(arquivo,"Lider",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][SubLider],true)==0)
		    			{
		    				strmid(InfoOrg[i][SubLider], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
       	    				dini_Set(arquivo,"SubLider",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro1],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro1], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro1",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro2],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro2], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro2",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro3],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro3], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro3",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro4],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro4], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro4",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro5],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro5], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro5",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro6],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro6], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro6",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro7],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro7], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro7",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro8],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro8], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro8",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro9],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro9], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro9",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro10],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro10], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro10",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro11],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro11], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro11",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro12],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro12], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro12",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro13],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro13], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro13",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro14],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro14], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro14",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro15],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro15], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro15",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro16],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro16], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro16",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro17],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro17], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro17",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro18],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro18], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro18",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro19],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro19], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro19",x_Nick);
		    			}
		    			if(strcmp(playername,InfoOrg[i][Membro20],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro20], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro20",x_Nick);
		    			}
                        if(strcmp(playername,InfoOrg[i][Membro21],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro21], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro21",x_Nick);
		    			}
                        if(strcmp(playername,InfoOrg[i][Membro22],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro22], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro22",x_Nick);
		    			}
                        if(strcmp(playername,InfoOrg[i][Membro23],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro23], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro23",x_Nick);
		    			}
                        if(strcmp(playername,InfoOrg[i][Membro24],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro24], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro24",x_Nick);
		    			}
                        if(strcmp(playername,InfoOrg[i][Membro25],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro25], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
                        	dini_Set(arquivo,"Membro25",x_Nick);
		    			}
                        if(strcmp(playername,InfoOrg[i][Membro26],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro26], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro26",x_Nick);
		    			}
                        if(strcmp(playername,InfoOrg[i][Membro27],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro27], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro27",x_Nick);
		    			}
                        if(strcmp(playername,InfoOrg[i][Membro28],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro28], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro28",x_Nick);
		    			}
                        if(strcmp(playername,InfoOrg[i][Membro29],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro29], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro29",x_Nick);
		    			}
                        if(strcmp(playername,InfoOrg[i][Membro30],true)==0)
		    			{
	    					strmid(InfoOrg[i][Membro30], x_Nick, 0, strlen(x_Nick), MAX_PLAYER_NAME);
        					dini_Set(arquivo,"Membro30",x_Nick);
		    			}
					}
				}
	        }
			getdate(year, month, day);
			gettime(hour,minute);
   			format(string, sizeof(string), "%s Mudou o Nick para %s ( %d/%d/%d - %d:%d)",playername,x_Nick, day, month, year,hour, minute);
            NicksLog(string);
   			ABroadCast(COLOR_YELLOW,string,1);
      		SetPlayerName(playerid,x_Nick);
   			format(string, sizeof(string), "Você mudou seu nick para %s",x_Nick );
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
   			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Tire uma SS apertando F8 para não esquecer seu novo nick!");
            SendClientMessage(playerid, 0xFF00FFAA,"Tire uma SS apertando F8 para não esquecer seu novo nick!");
            SendClientMessage(playerid, 0xFF0000AA,"Tire uma SS apertando F8 para não esquecer seu novo nick!");
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
            MudarNickAceito[playerid] = 0;
   			OnPropUpdate();
            ConviteFamy[playerid] = 0;
      		mudandonick[playerid] = 0;
            SalvarPlayer(playerid);
   			return 1;
        }
		return 1;
	}
	if(strcmp(cmd,"/amudarnick",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /amudarnick [ id ]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						MudarNickAceito[playa] = 1;
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
		        		format(string, sizeof(string), "ADMIN CMD: %s autorizou %s a mudar o nick !",sendername,giveplayer);
						ABroadCast(COLOR_LIGHTRED,string,1);
						format(strtheus,sizeof(strtheus),"{33FF99}O Admin %s Autorizou a mudança de Nick!\nAgora digite seu nick abaixo.\n{FFA8FF}O Nick deverá Seguir o Padão RPG Abaixo.\n{33FF99}Ex:{80FFFF} Nome_SobreNome",sendername);
						ShowPlayerDialog(playa, 1234, DIALOG_STYLE_INPUT,"Mudança de Nick",strtheus,"Confirmar","");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd,"/amudarsenha",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /amudarsenha [ id ]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3000)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						MudarSenhaAceito[playa] = 1;
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
		         		format(string, sizeof(string), "Admin %s: Autorizou você a mudar a senha, digite /mudarsenha [ senha ].", sendername);
		        		SendClientMessage(playa, COLOR_LIGHTBLUE, string);
		        		format(string, sizeof(string), "ADMIN CMD: %s autorizou %s a mudar a Senha !",sendername,giveplayer);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	if(!strcmp(cmdtext, "/mercadorials", true))
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você não é um caminhoneiro");
			return 1;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve esperar 5 minutos pra entregar mais mercadorias");
			return 1;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve entregar a mercadoria primeiro");
			return 1;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você precisa estar na HQ pra pegar mercadoria");
			return 1;
	    }
	    SetPlayerCheckpoint(playerid, 1756.1359,-2064.8230,13.2708, 8.0);
        TruckMission[playerid] = 1;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return 1;
	}
	if(!strcmp(cmdtext, "/mercadorialv", true))
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você não é um caminhoneiro");
			return 1;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve esperar o tempo de recarga pra entregar mais mercadorias");
			return 1;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve entregar a mercadoria primeiro");
			return 1;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você precisa estar na HQ pra pegar mercadoria");
			return 1;
	    }
	    SetPlayerCheckpoint(playerid, 2054.3250,1919.5562,11.8507, 8.0);
        TruckMission[playerid] = 3;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return 1;
	}
	if(!strcmp(cmdtext, "/mercadoriasf", true))
	{
	    if(PlayerInfo[playerid][pEmprego] != 11)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você não é um caminhoneiro");
			return 1;
	    }
	    if(var1[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve esperar o tempo de recarga pra entregar mais mercadorias");
			return 1;
	    }
	    if(TruckMission[playerid] != 0)
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você deve entregar a mercadoria primeiro");
			return 1;
	    }
	    if(!PlayerToPoint(60.0 ,playerid, -71.5407,-1123.4725,1.6677))
	    {
			SendClientMessage(playerid, COLOR_GREY, "Você precisa estar na HQ pra pegar mercadoria");
			return 1;
	    }
	    SetPlayerCheckpoint(playerid, -1729.3041,-123.8946,3.2335, 8.0);
        TruckMission[playerid] = 2;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Entregue a mercadoria no checkpoint marcado no mapa.");
	    return 1;
	}
	if(!strcmp(cmdtext, "/votacao", true, 8))
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
		    if(!votacao[iniciada])
		    {
				if(!cmdtext[9])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /votacao [pergunta]");
					return 1;
				}
                format(string, sizeof string, "[BPF]{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {C78FFF}Votação:{FFFFFF} %s ?", cmdtext[9]);
				SendClientMessageToAll(CORS, string);
				SendClientMessageToAll(0xFFF000AA, "{FFA1A1}[BPF] {FFB973}Se você concorda digite: {70EEFF}/sim");
				SendClientMessageToAll(0xFFF000AA, "{FFA1A1}[BPF] {FFB973}Se você discorda digite: {70EEFF}/nao");
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    format(string, sizeof(string), "~g~~h~~h~]]~b~~h~ Play~r~~h~Start ~y~Votacao Iniciada~g~~h~~h~]]");
                GameTextForAll(string, 5000, 3);
                votacao[iniciada] = true;
				votacao[sim] = 0;
				votacao[nao] = 0;
				for(new i; i < MaiorID; i++)
				{	votou[i] = false; }
			} else {
				SendClientMessage(playerid, COLOR_GREY,"Já existe uma votação em andamento!");
			}
		} else {
			SendClientMessage(playerid, COLOR_GREY,"Você não tem permissão para usar este comando!");
		}
		return 1;
	}
	if(!strcmp(cmdtext, "/sim", true))
	{
		if(votacao[iniciada] && !votou[playerid])
		{
			SendClientMessage(playerid, CORS, "Seu voto foi computado com sucesso!");
			votacao[sim]++;
			votou[playerid] = true;
			return 1;
		}
		return 0;
	}
	if(!strcmp(cmdtext, "/nao", true))
	{
		if(votacao[iniciada] && !votou[playerid])
		{
			SendClientMessage(playerid, CORS, "Seu voto foi computado com sucesso!");
			votacao[nao]++;
			votou[playerid] = true;
			return 1;
		}
		return 0;
	}
	if(!strcmp(cmdtext, "/encerrar", true))
	{
		if(PlayerInfo[playerid][pAdmin] >= 3)
		{
			if(votacao[iniciada])
			{
                SendClientMessageToAll(0xFF0000AA, "[BPF] {FF0000}Votação encerrada.");
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			    format(string, sizeof(string), "~g~~h~~h~]]~b~~h~ Play~r~~h~Start ~y~Votacao Encerrada~g~~h~~h~]]");
                GameTextForAll(string, 5000, 3);
                format(string, sizeof string, "{FFA1A1}[BPF] {FFFFFF}%d pessoas responderam:{70EEFF} Sim.", votacao[sim]);
				SendClientMessageToAll(0xFFF000AA,string);
				format(string, sizeof string, "{FFA1A1}[BPF] {FFFFFF}%d pessoas responderam:{70EEFF} Não.", votacao[nao]);
				SendClientMessageToAll(0xFFF000FF, string);
				if(votacao[sim] == votacao[nao])
				{
					SendClientMessageToAll(0xFF0000AA, "{FFA1A1}[BPF] {FFFFFF}Votação Empatada");
				} else if(votacao[sim] > votacao[nao])
				{
					SendClientMessageToAll(0xFF0000AA, "{FFA1A1}[BPF] {80E3FF} A maioria CONCORDA com a  pergunta.");
				} else if(votacao[sim] < votacao[nao])
				{
					SendClientMessageToAll(0xFF0000AA, "{FFA1A1}[BPF] {FFB973} A maioria DISCORDA da  pergunta.");
				}
				votacao[iniciada] = false;
				votacao[sim] = 0;
				votacao[nao] = 0;
				for(new i; i < MaiorID; i++)
					votou[i] = false;
			} else {
				SendClientMessage(playerid, 0xFFFFFFAA, "Nenhuma votação criada!");
			}
		} else {
			SendClientMessage(playerid, 0xFFFFFFAA, "Você não tem permissão para usar este comando!");
		}
		return 1;
	}
	if(strcmp(cmd,"/terminais",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new Veh = GetPlayerVehicleID(playerid);
	        if(!IsAOniCar(Veh))
	        {
			    SendClientMessage(playerid, COLOR_GREY, "   Voce não está em um ônibus!");
			    return 1;
	        }
			if(PlayerInfo[playerid][pEmprego] == 9)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* Voce está de folga e recebeu $%d.", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GranaTheus(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
					return 1;
				}
				else
				{
			    	BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid] = 400;
   					format(string, sizeof(string), "Motorista de onibus %s está em serviço, Corrida: $400 - Vá para o terminal mais próximo", PlayerName(playerid));
   					OOCNews(TEAM_GROVE_COLOR,string);
			    	SendClientMessage(playerid, COLOR_RED,"Você começou o circuito, siga os checkpoints até finalizar a viajem");
			    	SendClientMessage(playerid, COLOR_RED,"Você receberá R$300 a cada checkpoint que passar.");
			    	SendClientMessage(playerid, COLOR_RED,"[INFO] Use: /terminais novamente para parar o serviço");
			    	SetPlayerCheckpoint(playerid, 1369.0927,-1736.0730,13.4787,8.0);
					gPlayerTerminal[playerid] = 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY,"Você não é um motorista de ônibus.");
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/online", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 3)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Você não tem permissão para usar esse comando.");
			return 1;
	    }
	    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
			return 1;
		}
		format(gstring, sizeof(gstring), "[BPF] {FFFFFF}Brasil PlayStart Total de Players Online:{80E3FF} >> {80FF80}%d {80E3FF}<<", ContarJogadores());
		SendClientMessageToAll(0x00FFFFFF, gstring);
		format(gstring,sizeof(gstring), "ADMAVISO: %s ID[%d] usou o comando /online", PlayerName(playerid), playerid);
		ABroadCast(COLOR_GRAD1, gstring, 1);
		return 1;
	}
	if(strcmp(cmd,"/stopani",true)==0 || strcmp(cmd,"/pararanim",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        ClearAnimations(playerid);
	    }
	    return 1;
	}
    if(strcmp(cmd, "/pontos", true) == 0)
    {
        if(TendoGuerra == 0)
        {
            SendClientMessage(playerid, COLOR_GREY, " Não está tendo guerra!");
  			return 1;
        }
        if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
        {
            if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//exercito ownou
 			{
        		format(string, sizeof(string), "Você e o Exército estão ganhando a guerra. Já morreram %d membros do Taliban e %d membros da Al'qaeda e %d membros do Exercito!",Territorio[talmortos], Territorio[almortos], Territorio[exemortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//al'qaeda ownou
 			{
      			format(string, sizeof(string), "Vocês estão perdendo a guerra para a Al'qaeda. Já morreram %d membros seus, %d membros do Taliban e %d membros da Al'Qaeda!",Territorio[exemortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//taliban ownou
 			{
 	  			format(string, sizeof(string), "Vocês estão perdendo a guerra para o Taliban. Já morreram %d membros seus, %d membros da Al'qaeda e %d membros do Taliban!",Territorio[exemortos], Territorio[almortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return 1;
 			}
 			else
 			{
 			    format(string, sizeof(string), "Está Havendo Algum Empate na Guerra. Já morreram %d membros seus, %d membros da Al'qaeda, %d membros do Taliban e %d membros da Americano!",Territorio[exemortos], Territorio[almortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COLOR_EXE, string);
       			return 1;
 			}
        }
        else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
        {
            if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//exercito ownou
 			{
        		format(string, sizeof(string), "Vocês estão perdendo a guerra para o Exército. Já morreram %d membros seus, %d membros da Al'qaeda e %d membros do Exército!",Territorio[talmortos], Territorio[almortos], Territorio[exemortos]);
       			SendClientMessage(playerid, COR_TAL, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//al'qaeda ownou
 			{
      			format(string, sizeof(string), "Vocês estão perdendo a guerra para a Al'qaeda. Já morreram %d membros seus, %d membros do Exército e %d membros da Al'Qaeda!",Territorio[talmortos], Territorio[exemortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_TAL, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//taliban ownou
 			{
 	  			format(string, sizeof(string), "Você e o Taliban estão ganhando a guerra. Já morreram %d membros do Exército e %d membros da Al'qaeda e vocês morreram %d vezes!",Territorio[exemortos], Territorio[almortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COR_TAL, string);
       			return 1;
 			}
 			else
 			{
      			format(string, sizeof(string), "Está Havendo Algum Empate na Guerra. Já morreram %d membros seus, %d membros do Exército, %d membros da Al'Qaeda e %d membros da Americano!",Territorio[talmortos], Territorio[exemortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_TAL, string);
       			return 1;
 			}
        }
        else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
        {
            if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//exercito ownou
 			{
        		format(string, sizeof(string), "Vocês estão perdendo a guerra para o Exército. Já morreram %d membros seus, %d membros do Taliban e %d membros do Exército!",Territorio[almortos], Territorio[talmortos], Territorio[exemortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//taliban ownou
 			{
      			format(string, sizeof(string), "Vocês estão perdendo a guerra para o Taliban. Já morreram %d membros seus, %d membros do Exército e %d membros do Taliban!",Territorio[almortos], Territorio[exemortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//al'qaeda ownou
 			{
 	  			format(string, sizeof(string), "Você e a Al'qaeda estão ganhando a guerra. Já morreram %d membros do Exército, %d membros do Taliban e %d membros da Al'qaeda!",Territorio[exemortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
 			else
 			{
 				format(string, sizeof(string), "Está Havendo Algum Empate na Guerra. Já morreram %d membros seus, %d membros do Exército, %d membros do Taliban e %d membros da Americano!",Territorio[almortos], Territorio[exemortos], Territorio[talmortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
        }
        /*else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
        {
            if(Territorio[famortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//exercito ownou
 			{
        		format(string, sizeof(string), "Vocês estão perdendo a guerra para o Exército. Já morreram %d membros seus, %d membros do Taliban e %d membros do Exército, %d membros da Al'qaeda!",Territorio[famortos], Territorio[talmortos], Territorio[exemortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[famortos] > Territorio[talmortos])//taliban ownou
 			{
      			format(string, sizeof(string), "Vocês estão perdendo a guerra para o Taliban. Já morreram %d membros seus, %d membros do Exército, %d membros do Taliban e %d membros da Al'qaeda!",Territorio[famortos], Territorio[exemortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[famortos] > Territorio[almortos])//al'qaeda ownou
 			{
      			format(string, sizeof(string), "Vocês estão perdendo a guerra para a Al'qaeda. Já morreram %d membros seus, %d membros do Taliban, %d membros do Exército e %d membros da Al'Qaeda!",Territorio[talmortos], Territorio[exemortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_TAL, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//FARC ownou
 			{
 	  			format(string, sizeof(string), "Você e a FARC estão ganhando a guerra. Já morreram %d membros do Exército, %d membros do Taliban e %d membros da Al'qaeda!",Territorio[exemortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
 			else
 			{
 				format(string, sizeof(string), "Está Havendo Algum Empate na Guerra. Já morreram %d membros seus, %d membros do Exército, %d membros do Taliban, %d membros da Al'qaeda e %d membros da Americano!",Territorio[famortos], Territorio[famortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
        }*/
        else if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
        {
            if(Territorio[famortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//exercito ownou
 			{
        		format(string, sizeof(string), "Vocês estão perdendo a guerra para o Exército. Já morreram %d membros seus, %d membros do Taliban e %d membros do Exército, %d membros da Al'qaeda!",Territorio[famortos], Territorio[talmortos], Territorio[exemortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[famortos] > Territorio[talmortos])//taliban ownou
 			{
      			format(string, sizeof(string), "Vocês estão perdendo a guerra para o Taliban. Já morreram %d membros seus, %d membros do Exército, %d membros do Taliban e %d membros da Al'qaeda!",Territorio[famortos], Territorio[exemortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[almortos] && Territorio[famortos] > Territorio[almortos])//al'qaeda ownou
 			{
      			format(string, sizeof(string), "Vocês estão perdendo a guerra para a Al'qaeda. Já morreram %d membros seus, %d membros do Taliban, %d membros do Exército e %d membros da Al'Qaeda!",Territorio[talmortos], Territorio[exemortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_TAL, string);
       			return 1;
 			}
 			else if(Territorio[exemortos] > Territorio[famortos] && Territorio[talmortos] > Territorio[famortos] && Territorio[almortos] > Territorio[famortos] && Territorio[bramortos] > Territorio[famortos])//FARC ownou
 			{
 	  			format(string, sizeof(string), "Você e a FARC estão ganhando a guerra. Já morreram %d membros do Exército, %d membros do Taliban e %d membros da Al'qaeda!",Territorio[exemortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
 			else
 			{
 				format(string, sizeof(string), "Está Havendo Algum Empate na Guerra. Já morreram %d membros seus, %d membros do Exército, %d membros do Taliban, %d membros da Al'qaeda e %d membros da Americano!",Territorio[famortos], Territorio[famortos], Territorio[talmortos], Territorio[almortos]);
       			SendClientMessage(playerid, COR_AL, string);
       			return 1;
 			}
        }
        else
        {
            SendClientMessage(playerid, COLOR_GREY, "  Sua Organização não possui nenhuma guerra");
        }
		return 1;
	}
	//Sistema de Veículo!
	if(strcmp(cmd, "/cveiculo", true) == 0 || strcmp(cmd, "/carro", true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			ShowPlayerDialog(playerid, DIALOG_RANGE, DIALOG_STYLE_LIST,"{00FF00}Brasil {FFD700}Play {1E90FF}Start {FFFFFF}- Veículo","\nLigar/Desligar Farol\nAbrir/Fechar Capô\nAbrir/Fechar Porta-Malas","Ok","Sair");
		}
		return true;
    }
    if (strcmp("/ligarmotorcar", cmdtext, true, 10) == 0)
    {
        new mot, lu, alar, por, cap, porma, ob;
        new carro = GetPlayerVehicleID(playerid);
        if(carro != INVALID_VEHICLE_ID)
        {
                if(motor[playerid] == 0)
                {
                    GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                    SetVehicleParamsEx(carro, VEHICLE_PARAMS_ON, lu, alar, por, cap, porma, ob);
                    motor[playerid] = 1;
                    SendClientMessage(playerid, 0xFFFFFFAA, "Veículo Ligado");
                }
				else if(motor[playerid] == 1)
                {
                    GetVehicleParamsEx(carro, mot, lu, alar, por, cap, porma, ob);
                    SetVehicleParamsEx(carro, VEHICLE_PARAMS_OFF, lu, alar, por, cap, porma, ob);
                    motor[playerid] = 0;
                    SendClientMessage(playerid, 0xFFFFFFAA, "Veículo Desligado");
                }
            }
    }
    if(!strcmp(cmdtext, "/menuacessorios", true))
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3000 && PlayerInfo[playerid][pVIP] < 1)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Você precisa ser VIP para usar acessórios!");
				return 1;
	    	}
            for(new x;x<MAX_PLAYER_ATTACHED_OBJECTS;x++)
            {
            	if(IsPlayerAttachedObjectSlotUsed(playerid, x)) format(string, sizeof(string), "%s%d (OCUPADO)\n", string, x);
            	else format(string, sizeof(string), "%s%d\n", string, x);
        	}
        	ShowPlayerDialog(playerid, DIALOG_ATTACH_INDEX_SELECTION, DIALOG_STYLE_LIST, \
        	"{FF0000}Acessórios {FFFFFF}- Você entrou no menu de acessorios!", string, "Select", "Cancel");
        	return 1;
        }
    }
	if(strcmp(cmd, "/creditos", true) == 0)
    {
        SendClientMessage(playerid, COLOR_WHITE, "|~~~~~~~~~~~~~~~~~~~~~~~~~~~~[Créditos]~~~~~~~~~~~~~~~~~~~~~~~~~~~~|");
        SendClientMessage(playerid, COLOR_YELLOW, "GameMode GodFather, criado por: Denver & Vinny_Wesker");
        SendClientMessage(playerid, COLOR_YELLOW, "GameMode Editado por: Theus_Crazzy");
        SendClientMessage(playerid, COLOR_YELLOW, "Skype do Editor: theuscrazzy");
        SendClientMessage(playerid, COLOR_WHITE, "|~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~|");
        PlayerPlaySound(playerid, 1077, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som1", true) == 0)
    {
        PlayerPlaySound(playerid, 2200, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som2", true) == 0)
    {
        PlayerPlaySound(playerid, 2214, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som3", true) == 0)
    {
        PlayerPlaySound(playerid, 2400, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som4", true) == 0)
    {
        PlayerPlaySound(playerid, 2404, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som5", true) == 0)
    {
        PlayerPlaySound(playerid, 2600, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som6", true) == 0)
    {
        PlayerPlaySound(playerid, 2608, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som7", true) == 0)
    {
        PlayerPlaySound(playerid, 2800, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som8", true) == 0)
    {
        PlayerPlaySound(playerid, 2813, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som9", true) == 0)
    {
        PlayerPlaySound(playerid, 3000, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som10", true) == 0)
    {
        PlayerPlaySound(playerid, 3057, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som11", true) == 0)
    {
        PlayerPlaySound(playerid, 3045, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som12", true) == 0)
    {
        PlayerPlaySound(playerid, 2802, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som13", true) == 0)
    {
        PlayerPlaySound(playerid, 2804, 0.0, 0.0, 0.0);
        return 1;
    }
    if(strcmp(cmd, "/som14", true) == 0)
    {
        PlayerPlaySound(playerid, 2809, 0.0, 0.0, 0.0);
        return 1;
    }
//=====================================[INFOORG]================================//
  if(strcmp(cmd, "/limparvaga", true) == 0 || strcmp(cmd, "/lvaga", true) == 0)
	{
		if(PlayerInfo[playerid][pLider] < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Somente Líderes podem usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /limparvaga [Vaga]");
			return 1;
		}
        new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
		  idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
    		result[idx - offset] = cmdtext[idx];
    		idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
    		SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /limparvaga [ID da Vaga] [Motivo]");
    		return 1;
		}
		new Vaga2 = strval(tmp);
		new org = GetPlayerOrg(playerid);
		new arquivo[128], id, str[64];
		format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",org);
		if(strcmp(tmp,"sub",true)==0)
		{
            if(IsPlayerOnline(InfoOrg[org][SubLider]))
  			{
  			    id=GetPlayerID(InfoOrg[org][SubLider]);
		  		Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
 			}
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][SubLider]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
		    strmid(InfoOrg[org][SubLider], "Ninguem", 0, strlen("Ninguem"), 255);
		    dini_Set(arquivo,"SubLider","Ninguem");
            format(string, sizeof(string), "* Você Limpou a Vaga de Sub-Lider Motivo: %s",result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    return 1;
		}
        if(Vaga2 == 1)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro1]);
		    if(IsPlayerOnline(InfoOrg[org][Membro1]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro1]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro1], "Ninguem", 0, strlen("Ninguem"), 255);
		   	dini_Set(arquivo,"Membro1","Ninguem");
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 1");
		   	return 1;
		}
		if(Vaga2 == 2)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro2]);
            if(IsPlayerOnline(InfoOrg[org][Membro2]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro2]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
  			strmid(InfoOrg[org][Membro2], "Ninguem", 0, strlen("Ninguem"), 255);
 			dini_Set(arquivo,"Membro2","Ninguem");
 			SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 2");
		}
		if(Vaga2 == 3)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro3]);
            if(IsPlayerOnline(InfoOrg[org][Membro3]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro3]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro3], "Ninguem", 0, strlen("Ninguem"), 255);
		   	dini_Set(arquivo,"Membro3","Ninguem");
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 3");
		}
		if(Vaga2 == 4)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro4]);
            if(IsPlayerOnline(InfoOrg[org][Membro4]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro4]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro4], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro4","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 4");
		}
		if(Vaga2 == 5)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro5]);
            if(IsPlayerOnline(InfoOrg[org][Membro5]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro5]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro5], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro5","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 5");
		}
		if(Vaga2 == 6)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro6]);
            if(IsPlayerOnline(InfoOrg[org][Membro6]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro6]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro6], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro6","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 6");
		}
		if(Vaga2 == 7)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro7]);
            if(IsPlayerOnline(InfoOrg[org][Membro7]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro7]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro7], "Ninguem", 0, strlen("Ninguem"), 255);
		   	dini_Set(arquivo,"Membro7","Ninguem");
		   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 7");
		}
		if(Vaga2 == 8)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro8]);
            if(IsPlayerOnline(InfoOrg[org][Membro8]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro8]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro8], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro8","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 8");
		}
		if(Vaga2 == 9)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro9]);
            if(IsPlayerOnline(InfoOrg[org][Membro9]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro9]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro9], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro9","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 9");
		}
		if(Vaga2 == 10)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro10]);
            if(IsPlayerOnline(InfoOrg[org][Membro10]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro10]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro10], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro10","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 10");
		}
		if(Vaga2 == 11)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro11]);
            if(IsPlayerOnline(InfoOrg[org][Membro11]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro11]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro11], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro11","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 11");
		}
		if(Vaga2 == 12)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro12]);
            if(IsPlayerOnline(InfoOrg[org][Membro12]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro12]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro12], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro12","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 12");
		}
		if(Vaga2 == 13)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro13]);
            if(IsPlayerOnline(InfoOrg[org][Membro13]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro13]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro13], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro13","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 13");
		}
		if(Vaga2 == 14)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro14]);
            if(IsPlayerOnline(InfoOrg[org][Membro14]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro14]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro14], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro14","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 14");
		}
		if(Vaga2 == 15)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro15]);
            if(IsPlayerOnline(InfoOrg[org][Membro15]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro15]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro15], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro15","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 15");
		}
		if(Vaga2 == 16)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro16]);
            if(IsPlayerOnline(InfoOrg[org][Membro16]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro16]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro16], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro16","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 16");
		}
		if(Vaga2 == 17)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro17]);
            if(IsPlayerOnline(InfoOrg[org][Membro17]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro17]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro17], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro17","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 17");
		}
		if(Vaga2 == 18)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro18]);
            if(IsPlayerOnline(InfoOrg[org][Membro18]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro18]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro18], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro18","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 18");
		}
		if(Vaga2 == 19)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro19]);
            if(IsPlayerOnline(InfoOrg[org][Membro19]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro19]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro19], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro19","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 19");
		}
        if(Vaga2 == 20)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro20]);
            if(IsPlayerOnline(InfoOrg[org][Membro20]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro20]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro20], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro20","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 20");
		}
		if(Vaga2 == 21)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro21]);
            if(IsPlayerOnline(InfoOrg[org][Membro21]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro21]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro21], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro21","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 21");
		}
        if(Vaga2 == 22)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro22]);
            if(IsPlayerOnline(InfoOrg[org][Membro22]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro22]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro22], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro22","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 22");
		}
        if(Vaga2 == 23)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro23]);
            if(IsPlayerOnline(InfoOrg[org][Membro23]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro23]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro23], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro23","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 23");
		}
        if(Vaga2 == 24)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro24]);
            if(IsPlayerOnline(InfoOrg[org][Membro24]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro24]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro24], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro24","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 24");
		}
        if(Vaga2 == 25)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro25]);
            if(IsPlayerOnline(InfoOrg[org][Membro25]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro25]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro25], "Ninguem", 0, strlen("Ninguem"), 255);
        	dini_Set(arquivo,"Membro25","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 25");
		}
        if(Vaga2 == 26)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro26]);
            if(IsPlayerOnline(InfoOrg[org][Membro26]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro26]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro26], "Ninguem", 0, strlen("Ninguem"), 265);
        	dini_Set(arquivo,"Membro26","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 26");
		}
        if(Vaga2 == 27)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro27]);
            if(IsPlayerOnline(InfoOrg[org][Membro27]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro27]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro27], "Ninguem", 0, strlen("Ninguem"), 275);
        	dini_Set(arquivo,"Membro27","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 27");
		}
        if(Vaga2 == 28)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro28]);
            if(IsPlayerOnline(InfoOrg[org][Membro28]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro28]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro28], "Ninguem", 0, strlen("Ninguem"), 285);
        	dini_Set(arquivo,"Membro28","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 28");
		}
        if(Vaga2 == 29)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro29]);
            if(IsPlayerOnline(InfoOrg[org][Membro29]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro29]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro29], "Ninguem", 0, strlen("Ninguem"), 295);
        	dini_Set(arquivo,"Membro29","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 29");
		}
        if(Vaga2 == 30)// id da vaga
		{
		    id=GetPlayerID(InfoOrg[org][Membro30]);
            if(IsPlayerOnline(InfoOrg[org][Membro30]))
            {
                Demitir(playerid, id);
                format(string, sizeof(string), "* Você Foi Demitido Motivo: %s",result);
                SendClientMessage(id, COLOR_LIGHTBLUE, string);
            }
            else
            {
                format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[org][Membro30]);
                dini_Create(str);
                dini_Set(str,"Nome",PlayerName(playerid));
                dini_IntSet(str,"Org",GetPlayerOrg(playerid));
                dini_Set(str,"Motivo",result);
            }
            format(string, sizeof(string), "* Você Limpou a Vaga %d Motivo: %s",Vaga2, result);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    strmid(InfoOrg[org][Membro30], "Ninguem", 0, strlen("Ninguem"), 305);
        	dini_Set(arquivo,"Membro30","Ninguem");
        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você Limpou a Vaga 30");
		}
		//else{ SendClientMessage(playerid, COLOR_GRAD2," Vaga mínima 1, máxima 15"); }
	    return 1;
	}
	/*if(strcmp(cmd, "/infoorg", true) ==0 || strcmp(cmd, "/infoorganizacao", true) ==0)
    {
        if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
      		{
		        new org = GetPlayerOrg(playerid);
		        new arquivo[128];
                SendClientMessage(playerid, COLOR_WHITE, "|______________ Vagas da Organização ______________|");
				format(strtheus,sizeof(strtheus),"Líder:{FFFFFF} %s",InfoOrg[org][Lider]);
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][SubLider]);
                format(strtheus,sizeof(strtheus),"Sub-Líder:{FFFFFF}  %s {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][SubLider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro1]);
				format(strtheus,sizeof(strtheus),"Vaga 1:{FFFFFF} %s {1E90FF}- Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro1],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro2]);
				format(strtheus,sizeof(strtheus),"Vaga 2:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro2],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro3]);
				format(strtheus,sizeof(strtheus),"Vaga 3:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro3],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro4]);
				format(strtheus,sizeof(strtheus),"Vaga 4:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro4],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro5]);
				format(strtheus,sizeof(strtheus),"Vaga 5:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro5],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro6]);
				format(strtheus,sizeof(strtheus),"Vaga 6:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro6],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro7]);
				format(strtheus,sizeof(strtheus),"Vaga 7:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro7],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro8]);
				format(strtheus,sizeof(strtheus),"Vaga 8:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro8],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro9]);
				format(strtheus,sizeof(strtheus),"Vaga 9:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro9],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro10]);
				format(strtheus,sizeof(strtheus),"Vaga 10:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro10],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro11]);
				format(strtheus,sizeof(strtheus),"Vaga 11:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro11],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro12]);
				format(strtheus,sizeof(strtheus),"Vaga 12:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro12],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro13]);
				format(strtheus,sizeof(strtheus),"Vaga 13:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro13],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro14]);
				format(strtheus,sizeof(strtheus),"Vaga 14:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro14],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro15]);
				format(strtheus,sizeof(strtheus),"Vaga 15:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro15],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro16]);
				format(strtheus,sizeof(strtheus),"Vaga 16:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro16],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro17]);
				format(strtheus,sizeof(strtheus),"Vaga 17:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro17],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro18]);
				format(strtheus,sizeof(strtheus),"Vaga 18:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro18],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro19]);
				format(strtheus,sizeof(strtheus),"Vaga 19:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro19],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro20]);
				format(strtheus,sizeof(strtheus),"Vaga 20:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro20],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro21]);
				format(strtheus,sizeof(strtheus),"Vaga 21:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro21],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro22]);
				format(strtheus,sizeof(strtheus),"Vaga 22:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro22],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro23]);
				format(strtheus,sizeof(strtheus),"Vaga 23:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro23],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro24]);
				format(strtheus,sizeof(strtheus),"Vaga 24:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro24],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro25]);
				format(strtheus,sizeof(strtheus),"Vaga 25:{FFFFFF} %s{1E90FF} - Cargo:{FFFFFF} %d {1E90FF}- Data:{FFFFFF} %d/%d/%d {1E90FF}- Hora:{FFFFFF} %d:%d:%d",InfoOrg[org][Membro25],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,0x1E90FFFF,strtheus);
				return 1;
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY," Você não faz parte de uma organização!");
		        return 1;
		    }
		}
        return 1;
    }   */
    if(strcmp(cmd, "/infoorg", true) ==0 || strcmp(cmd, "/infoorganizacao", true) ==0)
    {
        if(IsPlayerConnected(playerid))
		{
            if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0)
      		{
                new org = GetPlayerOrg(playerid), arquivo[64], DialogTheus[2600], strdialog[94];
                format(strdialog,sizeof(strdialog),"{69B4FF}Líder: %s\n",InfoOrg[org][Lider]);
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][SubLider]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Sub-Líder:  %s - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][SubLider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro1]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 1: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro1],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro2]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 2: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro2],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro3]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 3: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro3],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro4]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 4: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro4],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro5]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 5: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro5],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro6]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 6: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro6],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro7]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 7: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro7],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro8]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 8: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro8],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro9]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 9: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro9],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro10]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 10: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro10],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro11]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 11: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro11],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro12]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 12: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro12],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro13]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 13: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro13],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro14]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 14: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro14],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro15]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 15: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro15],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro16]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 16: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro16],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro17]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 17: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro17],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro18]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 18: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro18],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro19]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 19: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro19],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro20]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 20: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro20],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro21]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 21: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro21],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro22]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 22: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro22],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro23]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 23: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro23],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro24]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 24: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro24],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro25]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 25: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro25],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro26]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 26: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro26],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro27]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 27: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro27],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro28]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 28: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro28],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro29]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 29: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro29],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro30]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 30: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n\n",InfoOrg[org][Membro30],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                if(PlayerInfo[playerid][pLider] != 0 || PlayerInfo[playerid][pLider] == 5) ShowPlayerDialog(playerid, 14697, DIALOG_STYLE_MSGBOX, "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF}- Informações da Organização", DialogTheus, "Fechar", "Gerenciar");
                else ShowPlayerDialog(playerid, 14697, DIALOG_STYLE_MSGBOX, "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF}- Informações da Organização", DialogTheus, "Fechar", "");
                return 1;
		    }
		    else
		    {
                SendClientMessage(playerid, COLOR_GREY," Você não faz parte de uma organização!");
		        return 1;
		    }
		}
        return 1;
    }
    if(strcmp(cmd, "/gorg", true) ==0 || strcmp(cmd, "/gerenciarorg", true) ==0 || strcmp(cmd, "/gerenciarorganizacao", true) ==0)
    {
        if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pLider] > 0)
      		{
                new org = GetPlayerOrg(playerid), arquivo[64], DialogTheus[2600], strdialog[94];
                format(strdialog,sizeof(strdialog),"{69B4FF}Líder: %s\n",InfoOrg[org][Lider]);
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][SubLider]);
                format(strdialog,sizeof(strdialog),"{80DBFF}Sub-Líder:  %s - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][SubLider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro1]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 1: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro1],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro2]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 2: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro2],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro3]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 3: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro3],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro4]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 4: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro4],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro5]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 5: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro5],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro6]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 6: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro6],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro7]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 7: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro7],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro8]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 8: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro8],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro9]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 9: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro9],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro10]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 10: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro10],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro11]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 11: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro11],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro12]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 12: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro12],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro13]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 13: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro13],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro14]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 14: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro14],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
            	format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro15]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 15: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro15],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro16]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 16: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro16],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro17]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 17: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro17],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro18]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 18: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro18],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro19]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 19: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro19],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro20]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 20: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro20],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro21]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 21: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro21],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro22]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 22: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro22],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro23]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 23: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro23],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro24]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 24: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro24],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro25]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 25: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro25],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro26]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 26: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro26],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro27]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 27: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro27],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro28]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 28: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro28],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro29]);
            	format(strdialog,sizeof(strdialog),"{69B4FF}Vaga 29: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro29],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[org][Membro30]);
            	format(strdialog,sizeof(strdialog),"{80DBFF}Vaga 30: %s - Cargo: %d - Data: %d/%d/%d - Hora: %d:%d:%d\n",InfoOrg[org][Membro30],dini_Int(arquivo,"Rank"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
                strcat(DialogTheus,strdialog);
                ShowPlayerDialog(playerid, 14657, DIALOG_STYLE_LIST, "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF}- Clique na Vaga para Gerenciar", DialogTheus, "Demitir", "Fechar");
                return 1;
		    }
		    /*else
		    {
		        SendClientMessage(playerid, COLOR_GREY," Comando Permitido Apenas para líderes!");
		        return 1;
		    }*/
		}
        return 1;
    }
//COMANDOS PARA ADMIN DONO RIARARIARAIRIARIAIRAIRIAIRAIRIARIA
	if(strcmp(cmd, "/coordenadas", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1340)
	{
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);
		format(gstring,sizeof(gstring),"Coordenadas, X:%f Y:%f Z:%f",X,Y,Z);
		SendClientMessage(playerid,0xFFFFFFAA,gstring);
		return 1;
	}
	if(strcmp(cmd, "/ferrar", true) == 0 && PlayerInfo[playerid][pAdmin] >= 3000)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		{
  			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ferrar [id]");
		    return 1;
		}
		giveplayerid = ReturnUser(tmp);
		CrashPlayer(giveplayerid);
		format(gstring,sizeof(gstring),"Você fez o player %s ferrar",PlayerName(giveplayerid));
		return SendClientMessage(playerid, COLOR_YELLOW, gstring);
	}
	if (strcmp("/infolider", cmdtext, true, 10) == 0 || strcmp(cmd, "/orgs", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			new DialogTheus[3000];
			format(string,sizeof(string), "{1E90FF}1 - Polícia Mílitar:{FFFFFF} %s\n", InfoOrg[1][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{696969}2 - R.O.T.A:{FFFFFF} %s\n", InfoOrg[2][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{6B8E23}3 - Exército:{FFFFFF} %s\n", InfoOrg[3][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{F08080}4 - S.A.M.U:{FFFFFF} %s\n", InfoOrg[4][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{0000FF}5 - Los Aztecas:{FFFFFF} %s\n", InfoOrg[5][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{5F9EA0}6 - Taliban:{FFFFFF} %s\n", InfoOrg[6][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{87CEFA}7 - Prefeitura: {FFFFFF}%s\n", InfoOrg[7][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{9C9C9C}8 - Hitmans:{FFFFFF} %s\n", InfoOrg[8][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{FFA54F}9 - Reporteres:{FFFFFF} %s\n", InfoOrg[9][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{FFFF00}10 - Taxistas:{FFFFFF} %s\n", InfoOrg[10][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{CD853F}11 - Policia Federal:{FFFFFF} %s\n", InfoOrg[11][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{00CED1}12 - Máfia Cosa Nostra:{FFFFFF} %s\n", InfoOrg[12][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{473C8B}13 - Máfia Yakuza:{FFFFFF} %s\n", InfoOrg[13][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{00FF00}14 - Groove Street:{FFFFFF} %s\n", InfoOrg[14][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{EEDD82}15 - Al'qaeda:{FFFFFF} %s\n", InfoOrg[15][Lider]);
            strcat(DialogTheus,string);
    		format(string,sizeof(string), "{ADD618}16 - Policia Rodoviaria: {FFFFFF}%s\n", InfoOrg[16][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{A020F0}17 - Ballas: {FFFFFF}%s\n", InfoOrg[17][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{FFD700}18 - Los Vagos:{FFFFFF} %s\n", InfoOrg[18][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{FF0000}19 - Comando Vermelho:{FFFFFF} %s\n", InfoOrg[19][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{CAFF70}20 - PCC: {FFFFFF}%s\n", InfoOrg[20][Lider]);
            strcat(DialogTheus,string);
        	format(string,sizeof(string), "{8B3A3A}21 - Hells Angels:{FFFFFF} %s\n", InfoOrg[21][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{2E8B57}22 - Mongols:{FFFFFF} %s\n", InfoOrg[22][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{00868B}23 - Sons Of Anarchy:{FFFFFF} %s\n", InfoOrg[23][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{00C5CD}24 - Triads:{FFFFFF} %s\n", InfoOrg[24][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{FFA500}25 - Drifters:{FFFFFF} %s\n", InfoOrg[25][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{458B74}26 - OwnZ:{FFFFFF} %s\n", InfoOrg[26][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{8B4726}27 - Motoqueiros:{FFFFFF} %s\n", InfoOrg[27][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{104E8B}28 - Policia Florestal:{FFFFFF} %s\n", InfoOrg[28][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{00FFFF}29 - Amigo dos Amigos:{FFFFFF} %s\n", InfoOrg[29][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{363636}30 - B.O.P.E:{FFFFFF} %s\n", InfoOrg[30][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{EE7942}31 - yStiflerS:{FFFFFF} %s\n\n", InfoOrg[31][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{228B22}32 - Exército Americano:{FFFFFF} %s\n\n", InfoOrg[32][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{FF1493}33 - F.A.R.C:{FFFFFF} %s\n\n", InfoOrg[33][Lider]);
            strcat(DialogTheus,string);
            format(string,sizeof(string), "{6495ED}34 - Policia Cívil:{FFFFFF} %s\n\n", InfoOrg[34][Lider]);
            strcat(DialogTheus,string);
            ShowPlayerDialog(playerid, 8723, DIALOG_STYLE_LIST, "{FFFFFF}Lista de Líderes das Organizações", DialogTheus, "Fechar", "");
        }
		return true;
   	}
   	if (strcmp("/limparlider", cmdtext, true, 10) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1337)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Somente admins master ou dono podem usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /limparlider [organização]");
			return 1;
		}
        new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
		  idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
    		result[idx - offset] = cmdtext[idx];
    		idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
    		SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /limparvaga [ID da Vaga] [Motivo]");
    		return 1;
		}
		new Vaga2 = strval(tmp);
		if(Vaga2 < 1 || Vaga2 > 35) { SendClientMessage(playerid, COLOR_GREY, "Vaga mínima 1 máximo 31!"); return 1; }
		new id=GetPlayerID(InfoOrg[Vaga2][Lider]), str[64];
		if(IsPlayerOnline(InfoOrg[Vaga2][Lider]))
        {
            DemitirLider(id);
            format(string, sizeof(string), "* Você Foi Tirado de Líder Motivo: %s",result);
            SendClientMessage(id, COLOR_LIGHTBLUE, string);
        }
        else
        {
            format(str, sizeof(str), "Agendados/ORG%s.ini",InfoOrg[Vaga2][Lider]);
            dini_Create(str);
            dini_Set(str,"Nome",PlayerName(playerid));
            dini_IntSet(str,"Org",Vaga2);
            dini_Set(str,"Motivo",result);
        }
		strmid(InfoOrg[Vaga2][Lider], "Ninguem", 0, strlen("Ninguem"), 255);
		format(gstring,sizeof(gstring), "InfoOrg/Org%d.cfg", Vaga2);
       	dini_Set(gstring,"Lider","Ninguem");
		format(string, sizeof(string), "Você limpou o líder da organização Nº %d, Motivo: %s",Vaga2,result);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        Text3DTheus();
		//LabelOrg();
        return 1;
	}
	if(strcmp(cmd, "/carid", true) == 0 && PlayerInfo[playerid][pAdmin] == 3000)
	{
		new vehicle;
		vehicle = GetPlayerVehicleID(playerid);
		format(string,sizeof(string), "Carro ID: %d", vehicle);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	if(strcmp(cmd,"/setpos",true)==0 && PlayerInfo[playerid][pAdmin] == 3000)
	{
		new plid,Float:setpos[3];
		tmp = strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COR_PM, "[INFO] Use: /setpos [id] [X] [Y] [Z]");
		plid = strval(tmp);
		for(new x=0;x<3;x++)
		{
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp)) return SendClientMessage(playerid, COR_PM, "[INFO] Use: /setpos [id] [X] [Y] [Z]");
			setpos[x] = floatstr(tmp);
		}
		SetPlayerPos(plid,setpos[0],setpos[1],setpos[2]);
		SendClientMessage(playerid, COR_PM, "Posição setada!");
		return 1;
	}
	if(strcmp(cmd,"/irxiter",true)==0 && PlayerInfo[playerid][pAdmin] == 3000)
	{
        if(IsPlayerConnected(playerid))
		{
			SetPlayerPos(playerid ,xpoz, ypoz, zpoz);
			SendClientMessage(playerid, COR_PM, "Você Foi puxado para o Local do Xiter");
			return 1;
		}
	}
    if(strcmp(cmd, "/daradmin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3000 && ServerOwner[playerid] != 1)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /daradmin [id] [Nivel]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /daradmin [id] [Nivel]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "   Você foi promovido para level  %d de Admin - Por %s", level, sendername);
			SendClientMessage(para1, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "   Você promoveu o(a) %s Para o level %d de Admin.", giveplayer,level);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
                    if(ServerOwner[para1] == 1)
                    {
                        strmid(AdmInfo[0][gMembro], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                        PlayerInfo[para1][pAdmin] = level;
                        AdmInfo[0][AdminAtivo] = 1;
                        //SaveAdm();
                        return 1;
                    }
					for(new i = 0; i < sizeof(AdmInfo); i++)
    				{
						if(PlayerInfo[para1][pAdmin] > 0)
						{
                            if(level == 0)
                            {
                                if(strcmp(AdmInfo[i][gMembro],PlayerName(para1),true) == 0)
                                {
                            		strmid(AdmInfo[i][gMembro], "Vazio", 0, strlen("Vazio"), 255);
                                    AdmInfo[i][AdminAtivo] = 0;
                                    admtrampando[para1] = 0;
                                    PlayerInfo[para1][pAdmin] = 0;
                                    ModoTrabalho(para1, 2);
                                    break;
								}
                                else
                                {
                                    PlayerInfo[para1][pAdmin] = 0;
                                    ModoTrabalho(para1, 2);
                                    break;
								}
							}
							else if(strcmp(AdmInfo[i][gMembro],PlayerName(playerid),true) == 0)
                            {
                                PlayerInfo[para1][pAdmin] = level;
                                break;
                            }
						}
                        else if(PlayerInfo[para1][pAdmin] == 0)
						{
                            AdmsVaga();
	    	            	if(VagaSobrando == 0) { SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /limparadm primeiro."); return 1; }
                            if(strcmp(AdmInfo[i][gMembro],"Vazio",true) == 0)
                            {
								PlayerInfo[para1][pAdmin] = level;
								AdmInfo[i][gMembro] = giveplayer;
								AdmInfo[i][AdminAtivo] = 1;
                                ModoTrabalho(para1, 1);
	                            break;
							}
						}
					}
				}
			}
		}
        //SaveAdm();
		return 1;
	}
    if (strcmp("/infoadm", cmdtext, true, 10) == 0 || strcmp("/infoadmin", cmdtext, true, 10) == 0 || strcmp("/infoadmins", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 1342)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
			return 1;
	    }
	    new lol = 0;
	    new arquivo[64];
        SendClientMessage(playerid, 0x0000FFAA, "~~>{00FFFF} Brasil PlayStart Administração {0000FF}<~~");
	    while (lol < sizeof(AdmInfo))
		{
			if(lol == 0)
			{
			    format(string, sizeof(string), "Dono/Scripter: %s", AdmInfo[0][gMembro]);
				SendClientMessage(playerid, 0xFF80FFFF, string);
			}
			else
			{
				format(arquivo, sizeof(arquivo), OpenAccPlayer,AdmInfo[lol][gMembro]);
		    	format(string, sizeof(string), "Admin %d: %s, Nivel: %d - Data: %d/%d/%d - Hora: %d:%d:%d", lol, AdmInfo[lol][gMembro],dini_Int(arquivo,"AdminLevel"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid, 0xFF80FFFF, string);
			}
			lol++;
		}
		return 1;
   	}
   	if (strcmp(cmd, "/limpartodosadmins", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 3000)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
			return 1;
	    }
	    new lol = 0;
		SendClientMessage(playerid, 0x0000FFAA, "~~>{00FFFF} Brasil PlayStart Administração {0000FF}<~~");
	    while (lol < sizeof(AdmInfo))
		{
			strmid(AdmInfo[lol][gMembro], "Vazio", 0, strlen("Vazio"), 255);
            AdmInfo[lol][AdminAtivo] = 0;
			format(string, sizeof(string), "Vaga Admin ID: %d, Limpa com Sucesso!", lol);
			SendClientMessage(playerid, 0xFF80FFFF, string);
			lol++;
		}
		//SaveAdm();
		return 1;
   	}
    if(strcmp(cmd, "/limparadmin", true) == 0 || strcmp(cmd, "/limparadm", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1342)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Você não está autorizado a usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /limparadm [ Vaga ]");
			return 1;
		}
        new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
		  idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
    		result[idx - offset] = cmdtext[idx];
    		idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
    		SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /limparadmin [ID da Vaga] [Motivo]");
    		return 1;
		}
		new Vagao = strval(tmp), idpl, str[64];
		if(Vagao < 1 || Vagao > 35) { SendClientMessage(playerid, COLOR_GREY, "Vaga mínima 1 máximo 35!"); return 1; }
		if(IsPlayerOnline(AdmInfo[Vagao][gMembro]))
		{
		    idpl=GetPlayerID(AdmInfo[Vagao][gMembro]);
            ModoTrabalho(idpl, 2);
            PlayerInfo[idpl][pAdmin] = 0;
            format(string, sizeof(string), "[BPF SERVER]:{FF0000} Você Foi Retirado da Staff Motivo: %s",result);
            SendClientMessage(idpl, 0x0000FFAA, string);
        }
        else
        {
            format(str, sizeof(str), "Agendados/ADM%s.ini",AdmInfo[Vagao][gMembro]);
            dini_Create(str);
            dini_Set(str,"Nome",PlayerName(playerid));
            dini_Set(str,"Motivo",result);
        }
		strmid(AdmInfo[Vagao][gMembro], "Vazio", 0, strlen("Vazio"), 255);
        AdmInfo[Vagao][AdminAtivo] = 0;
		//SaveAdm();
	    format(string, sizeof(string), "Você Limpou A Vaga Nº %d, Motivo: %s ",Vagao,result);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return 1;
	}
    if(strcmp(cmd, "/criarhelper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1338)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /CriarHelper [id] [Nivel]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
            format(string, sizeof(string), "   Você foi promovido para level  %d de Helper - Por %s", level, sendername);
			SendClientMessage(para1, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "   Você promoveu o(a) %s Para o level %d de Helper.", giveplayer,level);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					for(new i = 1; i <= sizeof(HelpInfo); i++)
    				{
						if(PlayerInfo[para1][pHelper] > 0)
						{
                            if(strcmp(HelpInfo[i][gMembro],PlayerName(para1),true) == 0)
                            {
                                PlayerInfo[para1][pHelper] = level;
                                break;
                            }
                            else if(level == 0)
                            {
                                if(strcmp(HelpInfo[i][gMembro],PlayerName(para1),true) == 0)
                                {
                            		strmid(HelpInfo[i][gMembro], "Vazio", 0, strlen("Vazio"), 255);
                                    PlayerInfo[para1][pHelper] = 0;
                                    HelpInfo[i][HelperAtivo] = 0;
                                    break;
								}
								PlayerInfo[para1][pHelper] = level;
							}
							//SaveHelp();
							return 1;
						}
                        else if(PlayerInfo[para1][pHelper] == 0)
						{
                            HelpsVaga();
							if(VagaSobrando == 0) { SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /limparhelper primeiro."); return 1; }
							if(strcmp(HelpInfo[i][gMembro],"Vazio",true) == 0)
						    {
	                            PlayerInfo[para1][pHelper] = level;
							    HelpInfo[i][HelperAtivo] = 1;
								HelpInfo[i][gMembro] = giveplayer;
								//SaveHelp();
	                            break;
                            }
						}
					}
				}
			}
		}
		return 1;
	}
    if (strcmp("/infohelp", cmdtext, true, 10) == 0 || strcmp("/infoHelper", cmdtext, true, 10) == 0 || strcmp("/infoHelpers", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 1337)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
			return 1;
	    }
	    new lol = 0;
	    new arquivo[64];
        SendClientMessage(playerid, 0x0000FFAA, "~~>{00FFFF} Brasil PlayStart Helpers {0000FF}<~~");
	    while (lol < sizeof(HelpInfo))
		{
			format(arquivo, sizeof(arquivo), OpenAccPlayer,HelpInfo[lol][gMembro]);
		    format(string, sizeof(string), "Helper %d: %s, Nivel: %d - Data: %d/%d/%d - Hora: %d:%d:%d", lol, HelpInfo[lol][gMembro],dini_Int(arquivo,"HelpLevel"),dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			SendClientMessage(playerid, COR_HELPER, string);
			lol++;
		}
		return 1;
   	}
   	if (strcmp(cmd, "/limpartodoshelpers", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 3000)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
			return 1;
	    }
	    new lol = 0;
		SendClientMessage(playerid, 0x0000FFAA, "~~>{00FFFF} Brasil PlayStart Helpers {0000FF}<~~");
	    while (lol < sizeof(HelpInfo))
		{
			strmid(HelpInfo[lol][gMembro], "Vazio", 0, strlen("Vazio"), 255);
            format(string, sizeof(string), "Vaga Helper ID: %d, Limpa com Sucesso!", lol);
			SendClientMessage(playerid, 0xFF80FFFF, string);
            HelpInfo[lol][HelperAtivo] = 0;
			lol++;
		}
		//SaveHelp();
		return 1;
   	}
    if(strcmp(cmd, "/limparHelper", true) == 0 || strcmp(cmd, "/limparhelp", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1339)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Você não está autorizado a usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /limparhelper [ Vaga ]");
			return 1;
		}
		new length = strlen(cmdtext);
		while ((idx < length) && (cmdtext[idx] <= ' '))
		{
		  idx++;
		}
		new offset = idx;
		new result[64];
		while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
		{
    		result[idx - offset] = cmdtext[idx];
    		idx++;
		}
		result[idx - offset] = EOS;
		if(!strlen(result))
		{
    		SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /limparhelper [ID da Vaga] [Motivo]");
    		return 1;
		}
		new Vagao = strval(tmp), idpl, str[64];
		if(Vagao < 1 || Vagao > 15) { SendClientMessage(playerid, COLOR_GREY, "Vaga mínima 1 máximo 15!"); return 1; }
		if(IsPlayerOnline(HelpInfo[Vagao][gMembro]))
		{
		    idpl=GetPlayerID(HelpInfo[Vagao][gMembro]);
            PlayerInfo[idpl][pHelper] = 0;
            format(string, sizeof(string), "[BPF SERVER]:{FF0000} Você Foi Retirado os Helpers Motivo: %s",result);
            SendClientMessage(idpl, 0x0000FFAA, string);
        }
        else
        {
            format(str, sizeof(str), "Agendados/HELP%s.ini",HelpInfo[Vagao][gMembro]);
            dini_Create(str);
            dini_Set(str,"Nome",PlayerName(playerid));
            dini_Set(str,"Motivo",result);
        }
		HelpInfo[Vagao][HelperAtivo] = 1;
		strmid(HelpInfo[Vagao][gMembro], "Vazio", 0, strlen("Vazio"), 255);
	    //SaveHelp();
	    format(string, sizeof(string), "Você Limpou A Vaga Nº %d de Helper, Motivo: %s",Vagao, result);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return 1;
	}
   	if (strcmp("/infovip", cmdtext, true, 10) == 0 || strcmp("/infovips", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] < 1)
	    {
			SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
			return 1;
	    }
        new arquivo[64];
        SendClientMessage(playerid, 0x0000FFFF, "~~>{00FFFF} Brasil PlayStart Vips {0000FF}<~~");
        new RankVip[34];
        for(new x=0; x<sizeof(VipInfo); x++)
		{
            if(strcmp(VipInfo[x][vNick],"Ninguem",true) != 0)
			{
                format(arquivo, sizeof(arquivo), OpenAccPlayer,VipInfo[x][vNick]);
                new NivelVip = dini_Int(arquivo,"DonateRank");
		        if(NivelVip == 0) { RankVip = "Gratis"; }
		        else if(NivelVip == 1) { RankVip = "VIP"; }
		        else if(NivelVip == 2) { RankVip = "VIP Premium"; }
                else if(NivelVip == 3) { RankVip = "Sócio"; }
                format(string, sizeof(string), "Vip Vaga ID:[%d] %s Tipo: %s, Vencimento Data: %d/%d/%d, Horário: %d:%d:%d", x, VipInfo[x][vNick], RankVip, VipInfo[x][vDia], VipInfo[x][vMes], VipInfo[x][vAno], VipInfo[x][vHora], VipInfo[x][vMinuto], VipInfo[x][vSegundo]);
				SendClientMessage(playerid, 0x95FFDFFF, string);
			}
		}
		return 1;
   	}
    if(strcmp(cmd, "/darvip", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1342)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
				return 1;
	    	}
	    	VipVaga();
	    	if(VagaSobrando == 0)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /limparvip primeiro.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /darvip [id] [Nivel]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /darvip [id] [Nivel]");
				return 1;
			}
			level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					format(string, sizeof string, "Você deu VIP Nível %d para %s", level, giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					getdate(year, month, day);
					gettime(hour,minute,second);
					PlayerInfo[para1][pVIP] = level;
					new var03 = 0;
                    new Anov,Mesv,Diav,Horav,Minutov,SegV;
                    getdate(Anov, Mesv, Diav);
                    gettime(Horav, Minutov, SegV);
                    if(Mesv == 12 && Anov == 2012) { Mesv = 1; Anov++;} else { Mesv++; }
                    if(level == 1)
                    {
                        new VipGrana = 5000000;
                        new VipNivel = 2;
                        /*format(gstring, sizeof(gstring), "VipInfo: {80E3FF}%s {E84F33} Recebeu R$ %d de Dinheiro na Conta do Banco.",PlayerName(para1) ,VipGrana);
    	                SendClientMessage(COLOR_LIGHTRED,gstring);
                        format(gstring, sizeof(gstring), "VipInfo: {80E3FF}%s {E84F33} Recebeu mais %d de Nivel em Sua Conta.",PlayerName(para1) ,VipGrana);
    	                SendClientMessage(COLOR_LIGHTRED,gstring); */
                        //SendClientMessage(playerid, 0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Recebimento Vip{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
                        PlayerPlaySound(para1, 1084, 0.0, 0.0, 0.0);
                        SendClientMessage(para1, 0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Liberação de Vantagens Vips |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
                        PlayerInfo[para1][pConta] += VipGrana;
                        PlayerInfo[para1][pLevel] += VipNivel;
                        format(string, sizeof string, "Você ganhou VIP Nível %d do admin %s", level, sendername);
					    SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                        format(gstring, sizeof(gstring), "** Você Recebeu R$ %d na conta do Banco!", VipGrana);
						SendClientMessage(para1, COLOR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "** Você Recebeu mais %d de Nivel Em Sua conta!", VipNivel);
						SendClientMessage(para1, COLOR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "** Seu Vip Termina Dia %d/%d/%d, Hora %d:%d:%d!", Diav,Mesv,Anov,Horav,Minutov,SegV);
						SendClientMessage(para1, 0x77EEA1FF, gstring);
                        SendClientMessage(para1, 0x95FFDFAA,"** Conta Vip Normal Ativada, Obrigado por nos Ajudar, Bom Jogo!");
                    }
                    else if(level == 2)
                    {
                        new VipGrana = 10000000;
                        new VipNivel = 4;
                        /*format(gstring, sizeof(gstring), "VipInfo: {80E3FF}%s {E84F33} Recebeu R$ %d de Dinheiro na Conta do Banco.",PlayerName(para1) ,VipGrana);
    	                ABroadCast(COLOR_LIGHTRED,gstring,1);
                        format(gstring, sizeof(gstring), "VipInfo: {80E3FF}%s {E84F33} Recebeu mais %d de Nivel em Sua Conta.",PlayerName(para1) ,VipGrana);
    	                ABroadCast(COLOR_LIGHTRED,gstring,1);*/
                        //SendClientMessage(playerid, 0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Recebimento Vip{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
                        PlayerPlaySound(para1, 1084, 0.0, 0.0, 0.0);
                        SendClientMessage(para1, 0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Liberação de Vantagens Vips |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
                        format(string, sizeof string, "Você ganhou VIP Nível %d do admin %s", level, sendername);
				    	SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                        PlayerInfo[para1][pConta] += VipGrana;
                        PlayerInfo[para1][pLevel] += VipNivel;
                        format(gstring, sizeof(gstring), "** Você Recebeu R$ %d na conta do Banco!", VipGrana);
						SendClientMessage(para1, COLOR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "** Você Recebeu mais %d de Nivel Em Sua conta!", VipNivel);
						SendClientMessage(para1, COLOR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "** Seu Vip Termina Dia %d/%d/%d, Hora %d:%d:%d!", Diav,Mesv,Anov,Horav,Minutov,SegV);
						SendClientMessage(para1, 0x77EEA1FF, gstring);
                        SendClientMessage(para1, 0x95FFDFAA,"** Conta Vip Premium Ativada, Obrigado por nos Ajudar, Bom Jogo!");
                    }
                    else if(level == 3)
                    {
                        new VipGrana = 20000000;
                        new VipNivel = 6;
                        /*format(gstring, sizeof(gstring), "VipInfo: {80E3FF}%s {E84F33} Recebeu R$ %d de Dinheiro na Conta do Banco.",PlayerName(para1) ,VipGrana);
    	                ABroadCast(COLOR_LIGHTRED,gstring,1);
                        format(gstring, sizeof(gstring), "VipInfo: {80E3FF}%s {E84F33} Recebeu mais %d de Nivel em Sua Conta.",PlayerName(para1) ,VipGrana);
    	                ABroadCast(COLOR_LIGHTRED,gstring,1);*/
                        //SendClientMessage(playerid, 0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Recebimento Vip{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
                        PlayerPlaySound(para1, 1084, 0.0, 0.0, 0.0);
                        SendClientMessage(para1, 0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Liberação de Vantagens Vips |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
                        format(string, sizeof string, "Você ganhou VIP Nível %d do admin %s", level, sendername);
					    SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                        PlayerInfo[para1][pConta] += VipGrana;
                        PlayerInfo[para1][pLevel] += VipNivel;
                        format(gstring, sizeof(gstring), "** Você Recebeu R$ %d na conta do Banco!", VipGrana);
						SendClientMessage(para1, COLOR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "** Você Recebeu mais %d de Nivel Em Sua conta!", VipNivel);
						SendClientMessage(para1, COLOR_LIGHTBLUE, gstring);
                        format(gstring, sizeof(gstring), "** Seu Vip Termina Dia %d/%d/%d, Hora %d:%d:%d!", Diav,Mesv,Anov,Horav,Minutov,SegV);
						SendClientMessage(para1, 0x77EEA1FF, gstring);
                        SendClientMessage(para1, 0x95FFDFAA,"** Conta Vip Sócio Ativada, Obrigado por nos Ajudar, Bom Jogo!");
                    }
                    ScoreLevel(para1);
					for(new i = 0; i < sizeof(VipInfo); i++)
				    {
				        if(strcmp(PlayerName(para1),VipInfo[i][vNick],true)==0)
				        {
                            VipInfo[i][vDia] = Diav;
                            VipInfo[i][vMes] = Mesv;
                            VipInfo[i][vAno] = Anov;
                            VipInfo[i][vHora] = Horav;
                            VipInfo[i][vMinuto] = Minutov;
                            VipInfo[i][vSegundo] = SegV;
				            SaveVip();
				            var03 = 1;
				            break;
				        }
					}
					if(var03 == 0)
					{
					    for(new i = 0; i < sizeof(VipInfo); i++)
				    	{
				        	if(strcmp("Ninguem",VipInfo[i][vNick],true)==0)
					        {
		    	    		    strmid(VipInfo[i][vNick], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                                VipInfo[i][vDia] = Diav;
                                VipInfo[i][vMes] = Mesv;
                                VipInfo[i][vAno] = Anov;
                                VipInfo[i][vHora] = Horav;
                                VipInfo[i][vMinuto] = Minutov;
                                VipInfo[i][vSegundo] = SegV;
					            break;
							}
						}
					}
					SalvarPlayer(para1);
					SaveVip();
				}
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/dvip", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 3000)
	    	{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para usar esse comando.");
				return 1;
	    	}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
    SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /dvip [id] [Vaga] [Vip Nivel]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
								tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /dvip [id] [Vaga] [Vip Nivel]");
						return 1;
					}
					new vaga;
					vaga = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
      SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /dvip [id] [Vaga] [Vip Nivel]");
						return 1;
					}
					new level;
					level = strval(tmp);
			GetPlayerName(para1, giveplayer, sizeof(giveplayer));
			GetPlayerName(playerid, sendername, sizeof(sendername));
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					format(string, sizeof string, "Você Desbugou o  VIP Nível %d para %s", level, giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					PlayerInfo[para1][pVIP] = level;
					strmid(VipInfo[vaga][vNick], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
					SalvarPlayer(para1);
					SaveVip();
				}
			}
		}
		return 1;
	}
	if (strcmp("/limparvip", cmdtext, true, 10) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 1342)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Você não está autorizado a usar este comando!");
			return 1;
		}
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /limparvip [Vaga]");
			return 1;
		}
		new Vagao = strval(tmp),strvip[100];
		if(Vagao < 0 || Vagao > 20) { SendClientMessage(playerid, COLOR_GREY, "Vaga mínima 0 máximo 50!"); return 1; }
        if(IsPlayerOnline(VipInfo[Vagao][vNick]))
  		{
		    new id=GetPlayerID(VipInfo[Vagao][vNick]);
		    PlayerInfo[id][pVIP] = 0;
			SendClientMessage(id, COLOR_YELLOW, "Você perdeu seu VIP, renove-o e receba seus benefícios de volta");
		}
		getdate(year, month, day);
		gettime(hour,minute,second);
        format(strvip, sizeof(strvip), "Data: 00/00/00, Hora 00:00:00");
		strmid(VipInfo[Vagao][vNick], "Ninguem", 0, strlen("Ninguem"), 255);
        VipInfo[Vagao][vDia] = 0;
        VipInfo[Vagao][vMes] = 0;
        VipInfo[Vagao][vAno] = 0;
        VipInfo[Vagao][vHora] = 0;
  		VipInfo[Vagao][vMinuto] = 0;
  		VipInfo[Vagao][vSegundo] = 0;
	    SaveVip();
	    format(string, sizeof(string), "Você Limpou A Vaga VIP Nº %d",Vagao);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    return 1;
	}
	if (strcmp("/enterorg", cmdtext, true, 10) == 0 || strcmp("/entrarorg", cmdtext, true, 10) == 0)
	{
	    tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /entrarorg [ORG], ID`s das orgs em '/orgs'");
			return 1;
		}
		new orgid = strval(tmp);
		new NomedaOrg[64];
  		OrgName(orgid, NomedaOrg, 64);
  		if(IsPlayerConnected(playerid))
		{
            if (PlayerInfo[playerid][pVIP] >= 3)
		    {
		        if (PlayerInfo[playerid][pLider] == 0)
		    	{
                    if(orgid > 25 || orgid < 1) { SendClientMessage(playerid, COLOR_GREY, "Org de 1 a 23 (/orgs)"); return 1; }
					if(TemVaga(orgid) == 0)
		    		{
						SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas nesta ORG, escolha outra!");
						return 1;
		    		}
					if(GetPlayerOrg(playerid) != 0)
	                {
	                    DemitirInfoOrg(PlayerName(playerid));
	                }
	                if(orgid >= 1)
	                {
	    				TogglePlayerControllable(playerid, 0);
	    				SelectChar[playerid] = 255;
	    				SelectCharID[playerid] = orgid;
	    				SelectCharPlace[playerid] = 1;
	    				PlayerInfo[playerid][pSkin] = 101;
	    				PlayerInfo[playerid][pMembro] = orgid;
                        gTeam[playerid] = 3;
	    				SendClientMessage(playerid, COLOR_LIGHTRED, "* Use 'Proximo' para selecionar o skin de sua vontade.");
	    				SendClientMessage(playerid, COLOR_LIGHTRED, "* Se Quizer utilizar esta skin ->, Digite 'Confirma'.");
						ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"Mudança de Skin","{00FFFF}Você foi Movido para a Organização\n{FF8000}Escolha o seu skin preferido\n{0080FF}Se você gostar desse Aperte em '{00FFFF}Pronto{0080FF}'\n{0080FF}Se não gostar use '{00FFFF}Próximo{0080FF}'","Próximo","Pronto");
	                    ConviteInfoOrg(PlayerName(playerid), orgid, 1);
                        PlayerInfo[playerid][pCargo] = 1;

                        	if(PlayerInfo[playerid][pMembro] == 1) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2;}
					        else if(PlayerInfo[playerid][pMembro] == 2) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2;}
					        else if(PlayerInfo[playerid][pMembro] == 3) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2;}
					        else if(PlayerInfo[playerid][pMembro] == 4) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1;}
					        else if(PlayerInfo[playerid][pMembro] == 5) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5;}
					        else if(PlayerInfo[playerid][pMembro] == 6) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5;}
					        else if(PlayerInfo[playerid][pMembro] == 7) { PlayerInfo[playerid][pTeam] = 7; gTeam[playerid] = 7;}
					        else if(PlayerInfo[playerid][pMembro] == 8) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12;}
					        else if(PlayerInfo[playerid][pMembro] == 9) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12;}
					        else if(PlayerInfo[playerid][pMembro] == 10) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12;}
	                        else if(PlayerInfo[playerid][pMembro] == 11) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2;}
	                        else if(PlayerInfo[playerid][pMembro] == 12) { PlayerInfo[playerid][pTeam] = 22; gTeam[playerid] = 12;}
	                        else if(PlayerInfo[playerid][pMembro] == 13) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}
							else if(PlayerInfo[playerid][pMembro] == 14) { PlayerInfo[playerid][pTeam] = 15; gTeam[playerid] = 12;}
					        else if(PlayerInfo[playerid][pMembro] == 15) { PlayerInfo[playerid][pTeam] = 16; gTeam[playerid] = 17;}
					        else if(PlayerInfo[playerid][pMembro] == 16) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2;}
					        else if(PlayerInfo[playerid][pMembro] == 17) { PlayerInfo[playerid][pTeam] = 18; gTeam[playerid] = 12;}
					        else if(PlayerInfo[playerid][pMembro] == 18) { PlayerInfo[playerid][pTeam] = 19; gTeam[playerid] = 12;}
					        else if(PlayerInfo[playerid][pMembro] == 19) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}
					        else if(PlayerInfo[playerid][pMembro] == 20) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}
					        else if(PlayerInfo[playerid][pMembro] == 21) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}
	                        else if(PlayerInfo[playerid][pMembro] == 22) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12;}
	                        else if(PlayerInfo[playerid][pMembro] == 23) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5;}
	                        else if(PlayerInfo[playerid][pMembro] == 24) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12;}
	                        else if(PlayerInfo[playerid][pMembro] == 25) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12;}
                            else if(PlayerInfo[playerid][pMembro] == 26) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}
                            else if(PlayerInfo[playerid][pMembro] == 28) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}
                            else if(PlayerInfo[playerid][pMembro] == 29) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}
                            else if(PlayerInfo[playerid][pMembro] == 30) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}
                            else if(PlayerInfo[playerid][pMembro] == 31) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}
                            else if(PlayerInfo[playerid][pMembro] == 33) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}
                            else if(PlayerInfo[playerid][pMembro] == 34) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12;}

	                    format(string, sizeof(string), "VIP Sócio: %s Entrou para a Organização: %s", PlayerName(playerid), NomedaOrg);
	    			    SendClientMessageToAll(COLOR_LIGHTBLUE, string);
	                    SendClientMessage(playerid, COLOR_GRAD1, "** VIP: Você agora Receberá Ordens do líder de sua Organização Escolida.");
	                }
	                else
	                {
	                    DemitirInfoOrg(PlayerName(playerid));
	                    gTeam[playerid] = 3;
						PlayerInfo[playerid][pTeam] = 3;
						PlayerInfo[playerid][pMembro] = 0;
						PlayerInfo[playerid][pCargo] = 0;
						if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
	            		SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
						Hospital[playerid] = 1;
						SpawnPlayer(playerid);
	                    SendClientMessage(playerid, COLOR_GRAD1, "** VIP Sócio: Você Agora será um Civil.");
	                }
				}
		    }
        }
	    return 1;
	}
	if (strcmp("/mudarluta", cmdtext, true) == 0)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.2192,-3.9873,1000.7203))
		{
		    TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, "BPF Estilos De Luta", "Cotoveladas\nBoxe\nRua\nKickBoxing\nKarate\nNormal", "Confirma", "Cancela");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, " Voce não está no ginásio de luta de LS.");
		}
		return 1;
	}
	if(strcmp(cmd,"/assaltar",true)==0)
	{
		if(PlayerInfo[playerid][pJailed] != 0 || PlayerPaintballing[playerid] != 0)
    	{
		   SendClientMessage(playerid,COLOR_YELLOW," Você não assaltar agora!");
		   return 1;
	    }
		if(PlayerInfo[playerid][pMembro] != 5 && PlayerInfo[playerid][pLider] != 5 && PlayerInfo[playerid][pMembro] != 14 && PlayerInfo[playerid][pLider] != 14
		&& PlayerInfo[playerid][pMembro] != 17 && PlayerInfo[playerid][pLider] != 17 && PlayerInfo[playerid][pMembro] != 18 && PlayerInfo[playerid][pLider] != 18
		&& PlayerInfo[playerid][pMembro] != 19 && PlayerInfo[playerid][pLider] != 19 && PlayerInfo[playerid][pMembro] != 20 && PlayerInfo[playerid][pLider] != 20
		&& PlayerInfo[playerid][pMembro] != 21 && PlayerInfo[playerid][pLider] != 21 && PlayerInfo[playerid][pMembro] == 22 && PlayerInfo[playerid][pLider] == 22
        && PlayerInfo[playerid][pMembro] == 23 && PlayerInfo[playerid][pLider] == 23 && PlayerInfo[playerid][pMembro] == 25 && PlayerInfo[playerid][pLider] == 25)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Você não pode usar esse comando!" );
   			return 1;
        }
		if(IsPlayerConnected(playerid))
    	{
 			if(UsouComando[playerid] == 1) return SendClientMessage(playerid, COLOR_GREY, "Você já usou esse comando uma vez, espere mais 5 minutos!");
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /assaltar [id] [Quantia]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /assaltar [id] [Quantia]");
				return 1;
			}
			new money = strval(tmp);
			if(money < 1000 || money > 50000) { SendClientMessage(playerid, COLOR_GREY, " O Preço Tem que ser entre R$ 1000 e R$ 50000!"); return 1; }
			if (IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[giveplayerid][pLevel] == 2)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não pode assaltar novatos!");
						return 1;
					}
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
				   		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você está assaltando $%d de %s.", money, giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s: Isso é um assalto,pague $%d! não seja Ant-RPG.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "/aceitar assalto para aceitar");
	                    format(string, sizeof(string), "*%s está assaltando %s!", sendername,giveplayer);
				        ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				        OfAssalto[giveplayerid] = playerid;
						precoassalto[giveplayerid] = money;
						SetPlayerCriminal(playerid,255, "Tentativa de Assalto");
				        UsouComando[playerid] = 1;
						SetTimerEx("UsarNovamente",300000,0,"d",playerid);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Esse jogador não está perto de você!");
					}
	    		}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ID/Nome Invalido !");
				    return 1;
				}
			}
	    }
		return 1;
	}
	if(strcmp(cmd, "/localizar", true) == 0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		{
  			SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /localizar [id]");
		    return 1;
		}
		new Nome[MAX_PLAYER_NAME];
		giveplayerid = ReturnUser(tmp);
		GetPlayerName(giveplayerid, Nome, sizeof(Nome));
		new location[MAX_ZONE_NAME];
		GetPlayer2DZone(giveplayerid, location, MAX_ZONE_NAME);
        format(string, sizeof(string), "%s foi visto perto de %s", Nome,location);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		return 1;
	}
//=======================[NOVO ROUBAR]========================
	if(strcmp(cmd,"/roubar",true)==0)
	{
	    if(PlayerInfo[playerid][pMembro] != 5 && PlayerInfo[playerid][pLider] != 5
	    && PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6
	    && PlayerInfo[playerid][pMembro] != 8 && PlayerInfo[playerid][pLider] != 8
        && PlayerInfo[playerid][pMembro] != 12 && PlayerInfo[playerid][pLider] != 12
        && PlayerInfo[playerid][pMembro] != 13 && PlayerInfo[playerid][pLider] != 13
		&& PlayerInfo[playerid][pMembro] != 14 && PlayerInfo[playerid][pLider] != 14
		&& PlayerInfo[playerid][pMembro] != 15 && PlayerInfo[playerid][pLider] != 15
		&& PlayerInfo[playerid][pMembro] != 17 && PlayerInfo[playerid][pLider] != 17
		&& PlayerInfo[playerid][pMembro] != 18 && PlayerInfo[playerid][pLider] != 18
		&& PlayerInfo[playerid][pMembro] != 19 && PlayerInfo[playerid][pLider] != 20
		&& PlayerInfo[playerid][pMembro] != 21 && PlayerInfo[playerid][pLider] != 21
        && PlayerInfo[playerid][pMembro] != 22 && PlayerInfo[playerid][pLider] != 22
        && PlayerInfo[playerid][pMembro] != 23 && PlayerInfo[playerid][pLider] != 23
        && PlayerInfo[playerid][pMembro] != 24 && PlayerInfo[playerid][pLider] != 24
        && PlayerInfo[playerid][pMembro] != 25 && PlayerInfo[playerid][pLider] != 25
        && PlayerInfo[playerid][pMembro] != 26 && PlayerInfo[playerid][pLider] != 26
        && PlayerInfo[playerid][pMembro] != 27 && PlayerInfo[playerid][pLider] != 27
        && PlayerInfo[playerid][pMembro] != 29 && PlayerInfo[playerid][pLider] != 29
        && PlayerInfo[playerid][pMembro] != 31 && PlayerInfo[playerid][pLider] != 31
        && PlayerInfo[playerid][pMembro] != 33 && PlayerInfo[playerid][pLider] != 33
		&& GetPlayerOrg(playerid) != 6 && GetPlayerOrg(playerid) != 12
		&& GetPlayerOrg(playerid) != 13	&& GetPlayerOrg(playerid) != 15)
	    {
			SendClientMessage(playerid,COLOR_GREY,"Você não pode assaltar um Banco/Loterica/Loja de Armas 1, 2");
            return 1;
		}
		if(roubando[playerid] == 1)
	    {
	   		SendClientMessage(playerid, COLOR_GRAD5, "Você ja está roubando algum lugar.");
	    	return 1;
    	}
		if(PlayerToPoint(1.0,playerid, 2306.5127,-6.1166,26.7422))
		{
	    	if(roubobanco == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");
	    		return 1;
	    	}
	    	if(temporoubobanco == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Já roubaram o cofre do banco espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s e os %s estão tentando roubar o cofre banco! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
			PlayerPlaySound(playerid, 1142, x, y, z);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar o banco.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo ao Banco");
            roubando[playerid] = 1;
            ProvocoBanco[playerid] = 1;
            roubobanco = 1;
            temporoubobanco = 1;
            SetTimer("Aroubo", 220000, 0);
        	tempobanco = SetTimerEx("RouboBanco", 40000, 0, "i", playerid);
        	return 1;
		}
		else if(PlayerToPoint(1.0,playerid,820.6042,8.3990,1004.1962))
		{
	    	if(roubolot == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");
	    		return 1;
	    	}
	    	if(temporoubolot == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Já roubaram o cofre da Lotérica espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
			format(string, sizeof(string), "%s e os %s estão tentando roubar o cofre da Lotérica! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
			PlayerPlaySound(playerid, 1142, x, y, z);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a Lotérica.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Lotérica");
            roubando[playerid] = 1;
            ProvocoLot[playerid] = 1;
            roubolot = 1;
            temporoubolot = 1;
            SetTimer("Aroubo2", 220000, 0);
        	tempolot = SetTimerEx("RouboLot", 40000, 0, "i", playerid);
        	return 1;
		}
        else if(PlayerToPoint(3.0,playerid,381.5648,-188.1646,1000.6328))
		{
	    	if(rouboposto == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo nesse cofre.");
	    		return 1;
	    	}
	    	if(temporouboposto == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Já roubaram o cofre do Posto espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
			format(string, sizeof(string), "%s e os %s estão tentando roubar o cofre do Posto de Gasolina Abandonado! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
			PlayerPlaySound(playerid, 1142, x, y, z);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar o Posto de Gasolina.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo ao Posto");
            roubando[playerid] = 1;
            ProvocoPostoGas[playerid] = 1;
            rouboposto = 1;
            temporouboposto = 1;
            SetTimer("Aroubo6", 220000, 0);
        	tempoposto = SetTimerEx("RouboPosto", 40000, 0, "i", playerid);
        	return 1;
		}
		else if(PlayerToPoint(1.0,playerid,2169.1516,1589.9265,999.9713))
		{
	    	if(rouboloja1 == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo nessa loja.");
	    		return 1;
	    	}
	    	if(temporouboloja1 == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Já roubaram a Loja de Armas 1 espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
			format(string, sizeof(string), "%s e os %s estão tentando roubar a Loja de Armas 1! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
			PlayerPlaySound(playerid, 1142, x, y, z);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a Loja de Armas 1.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Armas 1");
            roubando[playerid] = 1;
            ProvocoLoja1[playerid] = 1;
            rouboloja1 = 1;
            temporouboloja1 = 1;
            SetTimer("Aroubo3", 220000, 0);
        	tempoloja1 = SetTimerEx("RouboLoja1", 40000, 0, "i", playerid);
        	return 1;
		}
		else if(PlayerToPoint(1.0,playerid,451.3090,-79.8603,999.5547))
		{
	    	if(rouboloja2 == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo nessa loja.");
	    		return 1;
	    	}
	    	if(temporouboloja2 == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Já roubaram a Loja de Armas 2 espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
			format(string, sizeof(string), "%s e os %s estão tentando roubar a Loja de Armas 2! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
			PlayerPlaySound(playerid, 1142, x, y, z);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a Loja de Armas 2.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a Loja de Armas 2");
            roubando[playerid] = 1;
            ProvocoLoja2[playerid] = 1;
            rouboloja2 = 1;
            temporouboloja2 = 1;
            SetTimer("Aroubo4", 220000, 0);
        	tempoloja2 = SetTimerEx("RouboLoja2", 40000, 0, "i", playerid);
        	return 1;
		}
		else if(PlayerToPoint(1.0,playerid,354.6608,172.0170,1008.3802))
		{
	    	if(rouboprefe == 1)
	    	{
	   			SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma tentativa de roubo na prefeitura.");
	    		return 1;
	    	}
	    	if(temporouboprefe == 1)
	    	{
	   			SendClientMessage(playerid,COLOR_GREY,"Já roubaram a Prefeitura espere 3 minutos para roubar de novo !");
	    		return 1;
	    	}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
			format(string, sizeof(string), "%s e os %s estão tentando roubar a Prefeitura! ID:[%d]", playername, NomeORG(playerid) , playerid);
			SendClientMessageToAll(GetPlayerColor(playerid), string);
			new Float:x,Float:y,Float:z;
	    	GetPlayerPos(playerid,x,y,z);
			PlayerPlaySound(playerid, 1142, x, y, z);
			SendClientMessage(playerid, COLOR_GRAD5, "Espere 40 segundos para terminar de roubar a prefeitura.");
			SetPlayerCriminal(playerid,255, "Tentativa de Roubo a prefeitura");
			roubando[playerid] = 1;
            ProvocoPrefe[playerid] = 1;
            rouboprefe = 1;
            temporouboprefe = 1;
            SetTimer("Aroubo5", 220000, 0);
        	tempoprefe = SetTimerEx("RouboPrefe", 40000, 0, "i", playerid);
        	return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não esta em um Banco/Loterica/Loja de Armas 1, 2 !");
			return 1;
		}
		//return 1;
	}
    //CREEEEEEEEEEEEEEEEEEEEEUUUUUUUUUUUUUUUUUU
    if(strcmp(cmd, "/creu", true) == 0 || strcmp(cmd, "/créu", true) == 0)
    {
        GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "* %s está dançando o Créu BPF !.", sendername);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        ApplyAnimation(playerid,"CHOPPA","CHOPPA_back",4.1,1,1,1,1,1);
        SendClientMessage(playerid, COLOR_DBLUE, "ÉÉÉÉ Crééééééu BPF OWNA xD!");
        return 1;
    }
// praia
	if (strcmp("/praia", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 229.359,-1807.635,4.141); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,229.359,-1807.635,4.141);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/irtunning", cmdtext, true, 10) == 0 || strcmp("/tunning", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2692.8701,211.2929,4.3281); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2692.8701,211.2929,4.3281);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/fim", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2415.3999,2219.0083,4.9844); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2415.3999,2219.0083,4.9844);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/Morro", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2200.8242,-987.0011,67.3281); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,2200.8242,-987.0011,67.3281);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/Pedreira", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2200.8242,-987.0011,67.3281); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,2200.8242,-987.0011,67.3281);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/irposto", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -91.4212,-1169.1992,2.4298); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-91.4212,-1169.1992,2.4298);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/prefeitura", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 370.1895,187.5482,1008.3893); LinkVehicleToInterior(tmpcar, 0);
					LinkVehicleToInterior(tmpcar, 3);
				}
				else
				{
					SetPlayerInterior(playerid,3);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,370.1895,187.5482,1008.3893);
					SetPlayerFacingAngle(playerid,2.2534);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/spawn", cmdtext, true, 10) == 0 || strcmp("/nascimento", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
			    if(admtrampando[playerid] < 1 && helptrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando! (/ajudar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2405.0625,-1376.5313,24.3273); LinkVehicleToInterior(tmpcar, 0);
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,2405.0625,-1376.5313,24.3273);
					SetPlayerFacingAngle(playerid,2.7415);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/descricao", true) == 0 && PlayerInfo[playerid][pAdmin] == 3000)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Editar ______________|");
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /descricao [nome] (Use para casas e empresas)");
				return 1;
			}
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "Descrição da Casa: %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(HouseInfo[i][hDiscription], tmp, 0, strlen(tmp), 255);
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Descrição da Empresa(Empresa com interior): %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(BizzInfo[i][bMessage], tmp, 0, strlen(tmp), 255);
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "Descrição da Empresa(Empresa sem interior): %d mudada para %s", i, tmp);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					strmid(SBizzInfo[i][sbMessage], tmp, 0, strlen(tmp), 255);
				}
			}
			Text3DTheus();
			OnPropUpdate();
		}
		return 1;
	}
    if(strcmp(cmd,"/mudarcasa",true)==0)
	{
	    new House = PlayerInfo[playerid][pPHousekey];
		GetPlayerName(playerid, playername, sizeof(playername));
		if (House != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
		{
		    tmp = strtok(cmdtext, idx);
	    	if(HouseEntered[playerid] != 255)
   			{
   				SendClientMessage(playerid,COLOR_GREY,"Você não pode usar esse comando dentro de uma casa");
	        	return 1;
	    	}
	    	if(GetGranaTheus(playerid) < 10000)
			{
				SendClientMessage(playerid, COLOR_GRAD5, "Você não tem dinheiro suficiente R$10000");
				return 1;
			}
			if(!strlen(tmp))
	    	{
	        	SendClientMessage(playerid,COLOR_GREY,"[INFO] Use: /mudarcasa [1 a 10]");
	        	return 1;
	    	}
			new idcasa = strval(tmp);
	    	switch (idcasa)
			{
				case 1:
				{
					HouseInfo[House][hExitx] = 2467.4951;
					HouseInfo[House][hExity] = -1698.4037;
					HouseInfo[House][hExitz] = 1013.5078;
					HouseInfo[House][hInt] = 2;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 1.");
				}
	    		case 2:
				{
				    HouseInfo[House][hExitx] = 318.564971;
					HouseInfo[House][hExity] = 1118.209960;
					HouseInfo[House][hExitz] = 1083.882812;
					HouseInfo[House][hInt] = 5;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 2.");
				}
				case 3:
				{
				    HouseInfo[House][hExitx] = 2324.419921;
					HouseInfo[House][hExity] = -1145.568359;
					HouseInfo[House][hExitz] = 1050.710083;
					HouseInfo[House][hInt] = 12;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 3.");
				}
				case 4:
				{
				    HouseInfo[House][hExitx] = 235.508994;
					HouseInfo[House][hExity] = 1189.169897;
					HouseInfo[House][hExitz] = 1080.339966;
					HouseInfo[House][hInt] = 3;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 4.");
				}
				case 5:
				{
				    HouseInfo[House][hExitx] = 225.756989;
					HouseInfo[House][hExity] = 1240.000000;
					HouseInfo[House][hExitz] = 1082.149902;
					HouseInfo[House][hInt] = 2;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 5.");
				}
				case 6:
				{
				    HouseInfo[House][hExitx] = 223.043991;
					HouseInfo[House][hExity] = 1289.259888;
					HouseInfo[House][hExitz] = 1082.199951;
					HouseInfo[House][hInt] = 1;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 6.");
				}
				case 7:
				{
				    HouseInfo[House][hExitx] = 225.630997;
					HouseInfo[House][hExity] = 1022.479980;
					HouseInfo[House][hExitz] = 1084.069946;
					HouseInfo[House][hInt] = 7;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 7.");
				}
				case 8:
				{
				    HouseInfo[House][hExitx] = 328.493988;
					HouseInfo[House][hExity] = 1480.589966;
					HouseInfo[House][hExitz] = 1084.449951;
					HouseInfo[House][hInt] = 15;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 8.");
				}
				case 9:
				{
				    HouseInfo[House][hExitx] = 234.0843;
					HouseInfo[House][hExity] = 1064.6896;
					HouseInfo[House][hExitz] = 1084.2108;
					HouseInfo[House][hInt] = 6;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 9.");
				}
				case 10:
				{
				    HouseInfo[House][hExitx] = 260.4075;
					HouseInfo[House][hExity] = 1238.6646;
					HouseInfo[House][hExitz] = 1084.2578;
					HouseInfo[House][hInt] = 9;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Interior setado para id 10.");
				}

			}
			GranaTheus(playerid,-10000);
			SBizzInfo[13][sbTill] += 10000;
			ExtortionSBiz(13, 10000);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			OnPropUpdate();
			return 1;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma casa");
			return 1;
		}
	}
//predio
	if (strcmp("/predio", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1547.6465,-1355.1556,329.4779); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,1547.6465,-1355.1556,329.4779);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!!");
			}
		}
		return 1;
	}
//aeroporto los santos
	if (strcmp("/aerols", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 2038.5096,-2628.2659,13.5469); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,2038.5096,-2628.2659,13.5469);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/aerolv", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1482.3693,1794.4214,10.8125); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,1482.3693,1794.4214,10.8125);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
//||||||||||||||||||||||||||| fim dos teleportes ||||||||||||||||||||||||
  	if (strcmp(cmd, "/autorizacao", true) == 0)
	{
		if(PlayerInfo[playerid][pEmprego] == 2)
		{
			new name[MAX_PLAYER_NAME];
			GetPlayerName(playerid, name, sizeof(name));
		    if(PlayerToPoint(2.0, playerid, 256.0320,84.5082,1002.4453) || PlayerToPoint(2.0, playerid, 202.5491,179.1493,1003.0323) || PlayerToPoint(2.0, playerid, 323.7303,308.9208,999.1484) || PlayerToPoint(2.0, playerid, 214.9535,118.0954,999.0156))
		    {
		    	if(playerid != INVALID_PLAYER_ID)
		        {
		        	SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você comprou uma licença para liberar um preso -R$5000.");
	  				GranaTheus(playerid, -5000);
                    DepositarGranaOrg(7,5000);
					ApprovedAdvogado[playerid] = 1;
				}
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Você não é um Advogado");
		}
		return 1;
	}
// ||||||||||||||||||||||||||||||||||ELEVADORES ORGS/GANGS/MAFIAS||||||||||||||||||||||||||||||||||
	if (strcmp(cmd, "/eROTA", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
		{
		    if(PlayerToPoint(2.0, playerid, 346.8519,-1494.9565,36.0391))
			{
	    		SetPlayerPos(playerid, 345.1602,-1482.8597,76.5391);
    		}
		    if(PlayerToPoint(2.0, playerid, 345.1602,-1482.8597,76.5391))
		    {
		        SetPlayerPos(playerid, 346.8519,-1494.9565,36.0391);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/eslayers", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
		{
		    if(PlayerToPoint(2.0, playerid, 1661.3975,-1342.8632,160.0281))
			{
	    		SetPlayerPos(playerid, 1650.1752,-1351.0350,17.4305);
    		}
		    if(PlayerToPoint(2.0, playerid, 1650.1752,-1351.0350,17.4305))
		    {
		        SetPlayerPos(playerid, 1661.3975,-1342.8632,160.0281);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/eBOPE", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
		{
		    if(PlayerToPoint(2.0, playerid, 1227.5879,-1774.2657,33.6573))
			{
	    		SetPlayerPos(playerid, 1213.4347,-1818.5790,13.5987);
    		}
		    if(PlayerToPoint(2.0, playerid, 1213.4347,-1818.5790,13.5987))
		    {
		        SetPlayerPos(playerid, 1227.5879,-1774.2657,33.6573);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/etaxi", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
		{
		    if(PlayerToPoint(2.0, playerid, 964.0209,-1465.8312,13.4589))
			{
	    		SetPlayerPos(playerid, 965.7349,-1465.6044,21.3783);
    		}
		    if(PlayerToPoint(2.0, playerid, 965.7349,-1465.6044,21.3783))
		    {
		        SetPlayerPos(playerid, 964.0209,-1465.8312,13.4589);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/emc", false) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
		{
		    if(PlayerToPoint(2.0, playerid, 374.3401,-2055.2114,8.0156))
			{
	    		SetPlayerPos(playerid, 368.7828,-2054.5476,15.4066);
    		}
		    if(PlayerToPoint(2.0, playerid, 368.7828,-2054.5476,15.4066))
		    {
		        SetPlayerPos(playerid, 374.3401,-2055.2114,8.0156);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/hqpf", true) == 0)
	{
	    if(PlayerToPoint(2.0, playerid, 1059.6041,-345.1531,73.9922))
		{
            SetPlayerInterior(playerid, 0);
    		SetPlayerPos(playerid, 2122.5610,-2270.5774,20.6719);
    		PlayerInfo[playerid][pInt] = 0;
   		}
	    if(PlayerToPoint(2.0, playerid, 2122.5610,-2270.5774,20.6719))
	    {
		    SetPlayerInterior(playerid, 0);
	        SetPlayerPos(playerid, 1059.6041,-345.1531,73.9922);
	        PlayerInfo[playerid][pInt] = 0;
	    }
		return 1;
	}
	if (strcmp(cmd, "/epcc", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
		{
		    if(PlayerToPoint(2.0, playerid, 1327.1804,-884.2955,39.5781))
			{
	    		SetPlayerPos(playerid, 1324.3936,-890.1075,45.2266);
    		}
		    if(PlayerToPoint(2.0, playerid, 1324.3936,-890.1075,45.2266))
		    {
		        SetPlayerPos(playerid, 1327.1804,-884.2955,39.5781);
		    }
		}
		return 1;
	}
// ||||||||||||||||||||||||||||||||||||||FIM ELEVADORES|||||||||||||||||||||||||||
	if (strcmp("/Track", cmdtext, true, 10) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 1337)
	    {
		    SetPlayerInterior(playerid, 7);
			SetPlayerPos(playerid,-1398.065307,-217.028900,1051.115844);
			PlayerInfo[playerid][pInt] = 7;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Você não tem permissão para isto.");
			return 1;
		}
	}
	if (strcmp("/monte", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2233.7336,-1736.8186,480.8216); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2233.7336,-1736.8186,480.8216);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/arenax1", cmdtext, true, 10) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -2326.8809,-1636.9822,483.7031); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerInterior(playerid,0);
					SetPlayerVirtualWorld(playerid,0);
					SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
					SetPlayerFacingAngle(playerid,226.0);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}
	if (strcmp("/bate-bate", cmdtext, true, 10) == 0 || strcmp("/derby", cmdtext, true, 10) == 0)
	{
	    if(admtrampando[playerid] == 1 || PlayerInfo[playerid][pAdmin] == 3000)
	    {
		    if(PlayerInfo[playerid][pAdmin] >= 1)
		    {
                SetPlayerVirtualWorld(playerid,0);
				SetPlayerPos(playerid,2739.1577,-1745.2816,43.7656);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Me desculpe mais você não tem permissão para isto.");
				return 1;
   			}
		}
	}
	if(strcmp(cmd, "/cvip", true) == 0 || strcmp(cmd, "/v", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pVIP] >= 1)
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /v [Chat Vip]");
				return 1;
			}
			format(string, sizeof(string), "** VIP %s: %s", sendername, result);
			SendVIPMessage(0xFFCCFFAA,string);
			printf("VIP %s: %s", sendername, result);
		}
		return 1;
	}
    //-------------------------------[Pay]--------------------------------------------------------------------------
	if(strcmp(cmd, "/pagar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /pagar [id] [quantidade]");
				return 1;
			}
	        giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /pagar [id] [quantidade]");
				return 1;
			}
			if(admtrampando[giveplayerid] != 0 && PlayerInfo[giveplayerid][pAdmin] >= 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar para admins em trabalho!");
			    return 1;
			}
			moneys = strval(tmp);
			if(moneys > 1000 && PlayerInfo[playerid][pLevel] < 3)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você precisa ser nível 3 ou mais para pagar mais que R$ 1000");
				return 1;
			}
			if(moneys < 1 || moneys > 100000)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Pagamento mínimo 1, máximo 100000 por vez");
			    return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pLocal] == 106)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar este comando neste local");
						return 1;
					}
					if (ProxDetectorS(5.0, playerid, giveplayerid))
					{
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						playerdinheiro = GetGranaTheus(playerid);
						if (playerdinheiro >= moneys)
						{
						    ConsumingMoney[giveplayerid] = 1;
							GranaTheus(playerid, (0 - moneys));
							GranaTheus(giveplayerid, moneys);
							format(string, sizeof(string), "   Você pagou %s(Para: %d), R$%d.", giveplayer,giveplayerid, moneys);
							PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_GRAD1, string);
							format(string, sizeof(string), "   Você recebeu R$%d de %s(ID: %d).", moneys, sendername, playerid);
							SendClientMessage(giveplayerid, COLOR_GRAD1, string);
							if(moneys >= 1000000)
							{
								ABroadCast(COLOR_YELLOW,string,1);
							}
                            PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "* %s deu alguma grana para %s.", sendername ,giveplayer);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "   Você não está com essa grana no bolso.");
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Jogador está longe.");
					}
				}//invalid id
			}
			else
			{
				format(string, sizeof(string), "   %d não é um jogador ativo.", giveplayerid);
				SendClientMessage(playerid, COLOR_GRAD1, string);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/caridade", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /caridade [quantidade]");
				return 1;
			}
			if(PlayerInfo[playerid][pLocal] == 106)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não pode usar este comando neste local");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Mínimo R$ 1");
				return 1;
			}
			if(GetGranaTheus(playerid) < moneys)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Você não está com essa grana no bolso.");
				return 1;
			}
			GranaTheus(playerid, -moneys);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s obrigado pela sua doação de R$%d.",sendername, moneys);
			printf("%s", string);
			Tax += moneys;
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
		return 1;
	}
//-------------------------------[Stats]--------------------------------------------------------------------------
    if (strcmp(cmd, "/rg", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				ShowStats(playerid,playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está logado !");
			}
		}
		return 1;
	}
    if (strcmp(cmd, "/mostrarrg", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /mostrarrg [ID/Nome]");
				return 1;
			}
	        giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
                if(admtrampando[giveplayerid] >= 1 || helptrampando[giveplayerid] >= 1)
	            {
                    SendClientMessage(playerid, COLOR_GRAD1, "Você não pode mostrar o rg para um Admin ou Helper em modo de trabalho!");
                    return 1;
		        }
				if(giveplayerid != INVALID_PLAYER_ID)
				{
                    if (!ProxDetectorS(5.0, playerid, giveplayerid)) return SendClientMessage(playerid, 0xFFFFFFFF, "* O jogador está Longe!");
                    ShowStats(giveplayerid,playerid);
					format(string, sizeof(string), "* %s Está mostrando o seu rg Para %s.",PlayerName(playerid),PlayerName(giveplayerid));
			        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
		    }
		}
		return 1;
	}
    if (strcmp(cmd, "/passararma", true) == 0 || strcmp(cmd, "/entregararma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /passararma [ID/Nome]");
				return 1;
			}
	        giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if(IsPlayerInMorro(playerid) || IsPlayerInShop(playerid) || IsPlayerInPark(playerid) || IsPlayerInCemiterio(playerid) || IsPlayerInEvento(playerid)
		            || IsPlayerInPosto(playerid) || IsPlayerInShop(playerid) || IsPlayerInEstacao(playerid) || IsPlayerInCasarao(playerid) || IsPlayerInPedreira(playerid))
		            {
		                return SendClientMessage(playerid, COLOR_GRAD1, "Você não pode Passar arma neste Local.");
		            }
                    if(!ProxDetectorS(4.7, playerid, giveplayerid)) return SendClientMessage(playerid, 0xFFFFFFFF, "* O jogador está Longe!");
                    if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_GREY, "Você não passar uma arma para você mesmo.");
                    if(GetPlayerWeapon(playerid) == 0) return SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Selecione Alguma arma Para Passar!");
                    new ArmaTeste[32];
					GetWeaponName(GetPlayerWeapon(playerid),ArmaTeste,sizeof(ArmaTeste));
                    strmid(NomeArma[giveplayerid], ArmaTeste, 0, strlen(ArmaTeste), 255);
                    PassArmaID[giveplayerid] = GetPlayerWeapon(playerid);
                    QuantMun[giveplayerid] = GetPlayerAmmo(playerid);
                    format(strtheus,sizeof(strtheus),"{FF8000}Player:{00FFFF} %s {FF8000}Esta te Passando uma Arma.\nNome: {00FFFF}%s{FF8000}, Munições:{00FFFF} %d{FF8000}\nCaso queira Pegar a Arma, Aperte em '{00FFFF}Aceitar{FF8000}'!\nCaso contrário aperte em '{00FFFF}Recusar{FF8000}'!",PlayerName(playerid),NomeArma[giveplayerid],GetPlayerAmmo(playerid));
                    ShowPlayerDialog(giveplayerid,2245,DIALOG_STYLE_MSGBOX,"Sistema de Armas Brasil PlayStart",strtheus,"Aceitar","Recusar");
                    format(string, sizeof(string), "* Você Esta tentando Passar uma: %s, com %d Munições, para: %s, Aguardando resposta do Player.", NomeArma[giveplayerid],GetPlayerAmmo(playerid),PlayerName(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    IDpassouArma[giveplayerid] = playerid;
                }
		    }
		}
		return 1;
	}
 	if (strcmp(cmd, "/getemprego", true) == 0)
	{
    	if(PlayerInfo[playerid][pEmprego] != 0)
    	{
		   SendClientMessage(playerid,COLOR_YELLOW," Você já tem emprego,digite /sairdoemprego !");
		   return 1;
    	}
		if (PlayerToPoint(2.0, playerid, 361.8300,173.5202,1008.3828))
		{
			TogglePlayerControllable(playerid, 0);
    		ShowPlayerDialog(playerid,2569,DIALOG_STYLE_LIST,"Empregos","Detetive\nAdvogado\nProfissional do sexo\nVendedor de Drogas\nMecanico\nSeguranca\nVendedor de Armas\nBoxeador\nMotorista de Onibus\nMendigo\nCaminhoneiro","Aceitar","Cancelar");
			EmDialog[playerid] = 1;
		}
		return 1;
	}
	if (strcmp(cmd, "/licencas", true) == 0)
	{
		if (PlayerToPoint(2.0, playerid, 1490.2411,1307.2179,1093.2891))
		{
    		TogglePlayerControllable(playerid, 0);
    		ShowPlayerDialog(playerid,2571,DIALOG_STYLE_LIST,"Licencas","~ Motorista - 2000\n~ Voo - 2500\n~ Navegacao - 2000\n~ Pesca Legal - 1000\n~ Porte Armas - 2500","Ok","Cancelar");
    	}
		return 1;
	}
	if (strcmp(cmd, "/gps", true) == 0)
	{
		TogglePlayerControllable(playerid, 0);
    	ShowPlayerDialog(playerid,2568,DIALOG_STYLE_LIST,"GPS","~ Locais em Geral\n~ Head Quarters\n~ Territorios\n{FF0000}~ Desligar","Aceitar","Cancelar");
    	EmDialog[playerid] = 1;
		return 1;
	}
//Subir e descer LV
  	if (strcmp(cmd, "/evagos", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
		{
		    if(PlayerToPoint(2.0, playerid, 2808.0322,-1176.3846,25.3794))
			{
	    		SetPlayerPos(playerid, 2807.4321,-1174.6454,32.6688);
    		}
		    if(PlayerToPoint(2.0, playerid, 2807.4321,-1174.6454,32.6688))
		    {
		        SetPlayerPos(playerid, 2808.0322,-1176.3846,25.3794);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/eGE", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
		{
		    if(PlayerToPoint(2.0, playerid, 1263.2212,-1675.5933,13.5469))
			{
	    		SetPlayerPos(playerid, 1273.8400,-1640.5203,27.3750);
    		}
		    if(PlayerToPoint(2.0, playerid, 1273.8400,-1640.5203,27.3750))
		    {
		        SetPlayerPos(playerid, 1263.2212,-1675.5933,13.5469);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/ecl", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
		{
		    if(PlayerToPoint(2.0, playerid, 1651.2622,-1351.5291,17.4279))
			{
	    		SetPlayerPos(playerid, 1675.53125,-1342.0123291016,160.02812194824);
    		}
		    if(PlayerToPoint(2.0, playerid, 1675.53125,-1342.0123291016,160.02812194824))
		    {
		        SetPlayerPos(playerid, 1651.2622,-1351.5291,17.4279);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/esamu", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
		{
		    if(PlayerToPoint(2.0, playerid, 1173.4185,-1361.2090,13.9694))
			{
	    		SetPlayerPos(playerid, 1169.0085,-1329.3441,31.4640);
    		}
		    if(PlayerToPoint(2.0, playerid, 1169.0085,-1329.3441,31.4640))
		    {
		        SetPlayerPos(playerid, 1173.4185,-1361.2090,13.9694);
		    }
		}
		return 1;
	}
	if (strcmp(cmd, "/egroove", true) == 0)
	{
	    if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
		{
		    if(PlayerToPoint(2.0, playerid, 2522.9346,-1679.4137,15.4970))
			{
	    		SetPlayerPos(playerid, 2524.4297,-1681.8153,19.9302);
    		}
		    if(PlayerToPoint(2.0, playerid, 2524.4297,-1681.8153,19.9302))
		    {
		        SetPlayerPos(playerid, 2522.9346,-1679.4137,15.4970);
		    }
		}
		return 1;
	}
//-----------------------------------------------------------------
	if(strcmp(cmd, "/dn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return 1;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz-2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/up", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return 1;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/voar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return 1;
    			}
				new Float:px, Float:py, Float:pz, Float:pa;
				GetPlayerFacingAngle(playerid,pa);
				if(pa >= 0.0 && pa <= 22.5) //n1
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				else if(pa >= 332.5 && pa < 0.0) //n2
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py+30, pz+5);
				}
				else if(pa >= 22.5 && pa <= 67.5) //nw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py+15, pz+5);
				}
				else if(pa >= 67.5 && pa <= 112.5) //w
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-30, py, pz+5);
				}
				else if(pa >= 112.5 && pa <= 157.5) //sw
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px-15, py-15, pz+5);
				}
				else if(pa >= 157.5 && pa <= 202.5) //s
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px, py-30, pz+5);
				}
				else if(pa >= 202.5 && pa <= 247.5)//se
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py-15, pz+5);
				}
				else if(pa >= 247.5 && pa <= 292.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+30, py, pz+5);
				}
				else if(pa >= 292.5 && pa <= 332.5)//e
				{
					GetPlayerPos(playerid, px, py, pz);
					SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
				else
				{
				    GetPlayerPos(playerid, px, py, pz);
				    SetPlayerPos(playerid, px+15, py+15, pz+5);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não e admin !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/lt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return 1;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly+2, slz);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rt", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(PlayerInfo[playerid][pJailed] != 0)
    			{
	   				SendClientMessage(playerid,COLOR_YELLOW," Você não pode usar esse comando na cadeia!");
					return 1;
    			}
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly-2, slz-2);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !! !");
			}
		}
		return 1;
	}
//-------------------------------[Check]--------------------------------------------------------------------------
	if (strcmp(cmd, "/ver", true) == 0 || strcmp(cmd, "/verificar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /ver [id]");
					return 1;
				}
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				//giveplayerid = strval(tmp);
	            giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						ShowStats(playerid,giveplayerid);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   Este Jogador não está ativo!");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não é admin !");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/agenda", true) == 0 || strcmp(cmd, "/telefone", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pPhoneBook] == 1)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /agenda [id]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						format(string,sizeof(string), "Nick: %s ~ Numero: %d",sendername,PlayerInfo[giveplayerid][pPnumber]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "   ID Inválido !");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você não tem uma agenda! digite /gps 24-7 !");
			}
		}
		return 1;
	}
//-------------------------------[BuyLevel]--------------------------------------------------------------------------
	if (strcmp(cmd, "/comprarnivel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] != 0)
			{
				PlayerInfo[playerid][pCash] = GetGranaTheus(playerid);
				if(PlayerInfo[playerid][pLevel] >= 0)
				{
					new nxtlevel = PlayerInfo[playerid][pLevel]+1;
					new costlevel = nxtlevel*levelcost;//10k for testing purposes
                    new expquantidade = nxtlevel*levelexp;
					if(GetGranaTheus(playerid) < costlevel)
					{
						format(gstring,sizeof(gstring), "   Você não tem: (R$%d) !",costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, gstring);
						return 1;
					}
					else if (PlayerInfo[playerid][pExp] < expquantidade)
					{
						format(gstring,sizeof(gstring), "   Você precisa de %d pontos de respeito, Você tem: [%d] !",expquantidade,PlayerInfo[playerid][pExp]);
						SendClientMessage(playerid, COLOR_GRAD1, gstring);
						return 1;
					}
					else
					{
						format(gstring, sizeof(gstring), "~g~Comprou Nivel~n~~w~Agora seu Nivel e %d", nxtlevel);
						/*PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerPlayMusic(playerid);*/
						GranaTheus(playerid, (-costlevel));
						PlayerInfo[playerid][pLevel]++;
						ScoreLevel(playerid);
						PlayerInfo[playerid][pExp] = 0;
						PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
						GameTextForPlayer(playerid, gstring, 5000, 1);
						format(gstring,sizeof(gstring), "   Você comprou o nivel %d por (R$%d) Digite /melhorar", nxtlevel, costlevel);
						SendClientMessage(playerid, COLOR_GRAD1, gstring);
						format(gstring,sizeof(gstring), "   Você tem %d pontos de melhora",PlayerInfo[playerid][gPupgrade]);
						SendClientMessage(playerid, COLOR_GRAD2, gstring);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está logado !");
			}
		}
		return 1;
	}
//-------------------------------[UPGRADE]--------------------------------------------------------------------------
	if (strcmp(cmd, "/pintarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD3,"(R$5000) [INFO] Use: /pintarcarro [COR 1 ou 2] [COR ID]");
					return 1;
				}
				new COLORnum = strval(tmp);
				if(COLORnum > 2 || COLORnum < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Cor 1(Principal) ou 2(Secundária)");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD3,"(R$5000) [INFO] Use: /pintarcarro [COR 1 ou 2] [COR ID]");
				}
				new COLOR = strval(tmp);
				if(COLOR > 126)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Máximo é 126");
					return 1;
				}
				if (GetGranaTheus(playerid) < 5000)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Você não tem (R$5000)");
				}
				if(COLORnum == 1)
				{
					HouseInfo[House][hVcol1] = COLOR;
					format(string, sizeof(string), "Cor 1 Trocada Para %d -R$5000",COLOR);
					SendClientMessage(playerid, COLOR_GRAD3,string);
				}
				else
				{
					HouseInfo[House][hVcol2] = COLOR;
					format(string, sizeof(string), "Cor 2 Trocada Para %d -R$5000",COLOR);
					SendClientMessage(playerid, COLOR_GRAD3,string);
				}
				SendClientMessage(playerid, COLOR_GRAD6, "Espere 24hrs para que ela chegue -R$5000");
				GranaTheus(playerid,-5000);
				SBizzInfo[5][sbTill] += 5000;
				ExtortionSBiz(5, 5000);
				PlayerPlaySound(giveplayerid, 1134, 0.0, 0.0, 0.0);
				OnPropUpdate();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma casa");
				return 1;
			}
		}
		return 1;
	}
    if (strcmp(cmd, "/comprarcarro", true) == 0 || strcmp(cmd, "/trocarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				new gunid[16];
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________ Novos Carros,Preço R$100000 ______________|");
					SendClientMessage(playerid, COLOR_GRAD2,"[INFO] Use: /comprarcarro [nomedocarro]");
					SendClientMessage(playerid, 0xFFFF66F, "Carros: | blistac | clover | elegant | emperor | glendale | greenwood | stafford | mountainbike |");
					SendClientMessage(playerid, 0xFFFF66F, "Carros: | huntley | jester | landstalker | merit | nebula | sabre | stratum | hornet | bike |");
					SendClientMessage(playerid, 0xFFFF66F, "Carros: | sunrise | tahoma | uranus | blade | flash | buffalo | phoenix | sultan | bf-injection |");
					SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | limozine | elegy | hotknife | bandito | nrg500 | zr350 | premier |");
					SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | bullet | turismo | infernus | cheetah | savanna | comet |");
					return 1;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				if (GetGranaTheus(playerid) > 100000)
				{
				    new carid = PlayerInfo[playerid][pPHousekey]+1;
					if(strcmp(gunid, "limozine", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Limozine");
						HouseInfo[House][hVec] = 409;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					if(strcmp(gunid, "premier", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Premier");
						HouseInfo[House][hVec] = 426;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "hotknife", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Hotknife");
						HouseInfo[House][hVec] = 434;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "comet", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para Comet");
						HouseInfo[House][hVec] = 480;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "zr350", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o ZR-350");
						HouseInfo[House][hVec] = 477;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "nrg500", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para a moto nrg500");
						HouseInfo[House][hVec] = 522;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bandito", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Bandito");
						HouseInfo[House][hVec] = 568;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "elegy", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Elegy");
						HouseInfo[House][hVec] = 562;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bullet", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Bullet");
						HouseInfo[House][hVec] = 541;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "turismo", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Turismo");
						HouseInfo[House][hVec] = 451;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "infernus", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Infernus");
						HouseInfo[House][hVec] = 411;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "cheetah", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Cheetah");
						HouseInfo[House][hVec] = 415;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "savanna", true, strlen(gunid)) == 0)
					{
					    if(PlayerInfo[playerid][pVIP] < 1)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não é membro vip !");
					        return 1;
					    }
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Savanna");
						HouseInfo[House][hVec] = 567;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "blistac", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Blista Compact");
						HouseInfo[House][hVec] = 496;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "stafford", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Stafford");
						HouseInfo[House][hVec] = 580;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "clover", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Clover");
						HouseInfo[House][hVec] = 542;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "sultan", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Sultan");
						HouseInfo[House][hVec] = 560;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "elegant", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Elegant");
						HouseInfo[House][hVec] = 507;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "hornet", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Hornet");
						HouseInfo[House][hVec] = 521;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "phoenix", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Phoenix");
						HouseInfo[House][hVec] = 603;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "emperor", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Emperor");
						HouseInfo[House][hVec] = 585;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "glendale", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Glendale");
						HouseInfo[House][hVec] = 466;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "greenwood", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Greenwood");
						HouseInfo[House][hVec] = 492;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "huntley", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Huntley");
						HouseInfo[House][hVec] = 579;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "jester", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Jester");
						HouseInfo[House][hVec] = 559;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "landstalker", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Landstalker");
						HouseInfo[House][hVec] = 400;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "merit", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Merit");
						HouseInfo[House][hVec] = 551;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "nebula", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Nebula");
						HouseInfo[House][hVec] = 516;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "sabre", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Sabre");
						HouseInfo[House][hVec] = 475;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "stratum", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Stratum");
						HouseInfo[House][hVec] = 561;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "sunrise", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Sunrise");
						HouseInfo[House][hVec] = 550;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "tahoma", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Tahoma");
						HouseInfo[House][hVec] = 566;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "uranus", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Uranus");
						HouseInfo[House][hVec] = 558;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "blade", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Blade");
						HouseInfo[House][hVec] = 536;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "flash", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Flash");
						HouseInfo[House][hVec] = 565;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "buffalo", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o Buffalo");
						HouseInfo[House][hVec] = 402;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bf-injection", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para o BF Injection");
						HouseInfo[House][hVec] = 424;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "bike", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para uma Bike");
						HouseInfo[House][hVec] = 509;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else if(strcmp(gunid, "montainbike", true, strlen(gunid)) == 0)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "Atualização: Você trocou o carro da sua casa para uma Montain Bike");
						HouseInfo[House][hVec] = 510;
						DestroyVehicle(carid);
						CreateVehicle(HouseInfo[House][hVec], HouseCarSpawns[House][0], HouseCarSpawns[House][1], HouseCarSpawns[House][2], HouseCarSpawns[House][3], HouseInfo[House][hVcol1], HouseInfo[House][hVcol2], 6000000);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GRAD2,"[INFO] Use: /comprarcarro [nomedocarro]");
						SendClientMessage(playerid, 0xFFFF66F, "Carros: | blistac | clover | elegant | emperor | glendale | greenwood | stafford | mountainbike |");
						SendClientMessage(playerid, 0xFFFF66F, "Carros: | huntley | jester | landstalker | merit | nebula | sabre | stratum | hornet | bike |");
						SendClientMessage(playerid, 0xFFFF66F, "Carros: | sunrise | tahoma | uranus | blade | flash | buffalo | phoenix | sultan | bf-injection |");
						SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | limozine | elegy | hotknife | bandito | nrg500 | zr350 | premier |");
						SendClientMessage(playerid, 0x33FF00FF, "Carros VIP's: | bullet | turismo | infernus | cheetah | savanna | comet |");
						return 1;
					}
					SendClientMessage(playerid, COLOR_GRAD6, "Você pagou R$100000, ele já está na sua casa!");
					OnPropUpdate();
					GranaTheus(playerid,-100000);
					SBizzInfo[5][sbTill] += 100000;
					ExtortionSBiz(5, 100000);
					PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem (R$100000)");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma casa");
				return 1;
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/resetarmelhorias", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (gPlayerLogged[playerid] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está logado !");
				return 1;
			}
			if (GetGranaTheus(playerid) < 100000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   O reset custa R$100000 !");
				return 1;
			}
			if (PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você deve ter no mínimo nível 2 !");
				return 1;
			}
			PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel]-1)*2;
			PlayerInfo[playerid][pSHealth] = 0.0;
			PlayerInfo[playerid][pAlcoholPerk] = 0;
			PlayerInfo[playerid][pDrugPerk] = 0;
			PlayerInfo[playerid][pMiserPerk] = 0;
			PlayerInfo[playerid][pPainPerk] = 0;
			PlayerInfo[playerid][pTraderPerk] = 0;
			GranaTheus(playerid,-100000);
			PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			format(string,sizeof(string), "   Você tem %d pontos de melhoria !",PlayerInfo[playerid][gPupgrade]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
		return 1;
	}
	if (strcmp(cmd, "/comprararma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(GetGranaTheus(playerid) < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não tem todo esse dinheiro!!");
			    return 1;
			}
			new gun;
			new gunid[16];
			new guncharge;
			new ammocharge;
			new location = PlayerInfo[playerid][pLocal];
			if(location == 99 || location == 100 || location == 102)
			{
				new mod = 100;
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________ Armas ______________|");
					SendClientMessage(playerid, COLOR_GRAD2,"[INFO] Use: /comprararma [arma] [munição]");
					format(gstring,sizeof(gstring), "Armas: parachute (R$%d) golfclub (R$%d) nightstick (R$%d) baseballbat (R$%d) shovel (R$%d) poolcue (R$%d)",
					GunPrice[0][0]/100*mod,GunPrice[1][0]/100*mod,GunPrice[2][0]/100*mod,GunPrice[3][0]/100*mod,GunPrice[4][0]/100*mod,GunPrice[5][0]/100*mod,GunPrice[6][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring,sizeof(gstring), "Armas: purpledildo (R$%d) whitedildo (R$%d) longwhitedildo (R$%d) whitedildo2 (R$%d) flowers (R$%d) cane",
					GunPrice[7][0]/100*mod,GunPrice[8][0]/100*mod,GunPrice[9][0]/100*mod,GunPrice[10][0]/100*mod,GunPrice[11][0]/100*mod,GunPrice[12][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring,sizeof(gstring), "Armas: eagle (R$%d) pistola (R$%d) mp5 (R$%d)",
					GunPrice[13][0]/100*mod,GunPrice[14][0]/100*mod,GunPrice[15][0]/100*mod,GunPrice[16][0]/100*mod,GunPrice[17][0]/100*mod,GunPrice[18][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring,sizeof(gstring), "Armas: shotgun (R$%d) ak47 (R$%d) m4 (R$%d) rifle (R$%d)",
					GunPrice[19][0]/100*mod,GunPrice[20][0]/100*mod,GunPrice[21][0]/100*mod,GunPrice[22][0]/100*mod,GunPrice[23][0]/100*mod,GunPrice[24][0]/100*mod);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					format(gstring,sizeof(gstring), "Armas: pistolammo (R$%d) shotgunammo (R$%d) smgammo (R$%d) assaultammo (R$%d) rifleammo (R$%d)",
					GunPrice[25][0],GunPrice[26][0],GunPrice[27][0],GunPrice[28][0],GunPrice[29][0]);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					return 1;
				}
				strmid(gunid, tmp, 0, strlen(cmdtext), 255);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /comprararma [arma] [munição]");
					return 1;
				}
				new ammo = strval(tmp);
				if(ammo < 1 || ammo > 999) { SendClientMessage(playerid, COLOR_GREY, "   Munição tem que ser entre 1 e 999 !"); return 1; }
				if (strcmp(gunid, "parachute", true, strlen(gunid)) == 0)
				{
					gun = 46;
					guncharge = GunPrice[0][0]/100*mod;
					ammocharge = 0;
				}
				else if (strcmp(gunid, "golfclub", true, strlen(gunid)) == 0)
				{
					gun = 2; guncharge = GunPrice[1][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "nightstick", true, strlen(gunid)) == 0)
				{
					gun = 3; guncharge = GunPrice[2][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "baseballbat", true, strlen(gunid)) == 0)
				{
					gun = 5; guncharge = GunPrice[4][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "shovel", true, strlen(gunid)) == 0)
				{
					gun = 6; guncharge = GunPrice[5][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "poolcue", true, strlen(gunid)) == 0)
				{
					gun = 7; guncharge = GunPrice[6][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "purpledildo", true, strlen(gunid)) == 0)
				{
					gun = 10; guncharge = GunPrice[7][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "whitedildo", true, strlen(gunid)) == 0)
				{
					gun = 11; guncharge = GunPrice[8][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "longwhitedildo", true, strlen(gunid)) == 0)
				{
					gun = 12; guncharge = GunPrice[9][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "whitedildo2", true, strlen(gunid)) == 0)
				{
					gun = 13; guncharge = GunPrice[10][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "flowers", true, strlen(gunid)) == 0)
				{
					gun = 14; guncharge = GunPrice[11][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "cane", true, strlen(gunid)) == 0)
				{
					gun = 15; guncharge = GunPrice[12][0]/100*mod; ammocharge = 0;
				}
				else if (strcmp(gunid, "eagle", true, strlen(gunid)) == 0)
				{
					gun = 24; guncharge = GunPrice[15][0]/100*mod; ammocharge = GunPrice[25][0]*ammo;
				}
				else if (strcmp(gunid, "mp5", true, strlen(gunid)) == 0)
				{
					gun = 29; guncharge = GunPrice[18][0]/100*mod; ammocharge = GunPrice[27][0]*ammo;
				}
				else if (strcmp(gunid, "shotgun", true, strlen(gunid)) == 0)
				{
					gun = 25; guncharge = GunPrice[19][0]/100*mod; ammocharge = GunPrice[26][0]*ammo;
				}
				else if (strcmp(gunid, "ak47", true, strlen(gunid)) == 0)
				{
					gun = 30; guncharge = GunPrice[22][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
				}
				else if (strcmp(gunid, "m4", true, strlen(gunid)) == 0)
				{
					gun = 31; guncharge = GunPrice[23][0]/100*mod; ammocharge = GunPrice[28][0]*ammo;
				}
				else if (strcmp(gunid, "rifle", true, strlen(gunid)) == 0)
				{
					gun = 33; guncharge = GunPrice[24][0]/100*mod; ammocharge = GunPrice[29][0]*ammo;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "Vendedor: Nunca ouvi falar dessa arma.");
					return 1;
				}
				if((guncharge+ammocharge) > GetGranaTheus(playerid))
				{
					format(gstring,sizeof(gstring), "   Você não tem R$%d para pagar !",guncharge+ammocharge);
					SendClientMessage(playerid, COLOR_GRAD3, gstring);
					return 1;
				}
				new payout = guncharge + ammocharge;
				format(gstring,sizeof(gstring), "Você comprou um(a) %s com %d bala(s) por R$%d",gunid,ammo,payout);
				SendClientMessage(playerid, COLOR_GRAD3, gstring);
				if(location == 102 && IsACop(playerid)) { }
				else { GranaTheus(playerid, - payout); }
				BizzInfo[location-99][bTill] += payout;
				ExtortionBiz(location-99, payout);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerWeapon(playerid, gun, ammo);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(gstring, sizeof(gstring), "%s comprou armas por R$%d na empresa %d", sendername, payout, location-99);
				printf("%s", gstring);
				//PayLog(gstring);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE,"Você não está em uma loja de armas.");
				return 1;
			}
		}
		return 1;
	}
 //MudarNomeSim?
	if (strcmp(cmd, "/melhorar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new gunid[16];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				format(gstring, sizeof(gstring), "[INFO] Use: /melhorar [pontos] (Você tem %d pontos de melhora)",PlayerInfo[playerid][gPupgrade]);
				SendClientMessage(playerid, COLOR_WHITE, "|______________ UPGRADES ______________|");
				SendClientMessage(playerid, COLOR_GRAD2,gstring);
				if(PlayerInfo[playerid][pLevel] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nível 2 Melhorias: Alcool, Drogas");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nível 3 Melhorias: Alcool, Drogas, Comercio");
				}
				else if(PlayerInfo[playerid][pLevel] == 3)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nível 4 Melhorias: Alcool, Drogas, Avareza, Comercio");
				}
				else if(PlayerInfo[playerid][pLevel] >= 5)
				{
					SendClientMessage(playerid, COLOR_GRAD3, "Nível 5 Melhorias: Alcool, Drogas, Avareza, Comercio, PainKillers");
				}
				SendClientMessage(playerid, COLOR_GRAD5, "Extra: Vida");
				return 1;
			}
			strmid(gunid, tmp, 0, strlen(cmdtext), 255);
			if (PlayerInfo[playerid][gPupgrade] >= 1)
			{
				if (PlayerInfo[playerid][pLevel] >= 1 && (strcmp(gunid, "Vida", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pSHealth] < 50)
					{
						PlayerInfo[playerid][pSHealth] = PlayerInfo[playerid][pSHealth]+5.0;
						format(gstring,sizeof(gstring), "Atualização: você vai nascer com %.2f de vida (+5)",PlayerInfo[playerid][pSHealth]+50);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Você já está no máximo de vida");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "Alcool", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pAlcoholPerk] < 3)
					{
						PlayerInfo[playerid][pAlcoholPerk] += 1;
						format(gstring,sizeof(gstring), "Nova Atualização: Agora seu nível de alcool é %d.",PlayerInfo[playerid][pAlcoholPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Seu nível de alcool já está no máximo !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 2 && (strcmp(gunid, "Drogas", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pDrugPerk] < 3)
					{
						PlayerInfo[playerid][pDrugPerk] += 1;
						format(gstring,sizeof(gstring), "Nova Atualização: Agora seu nível de drogas é %d.",PlayerInfo[playerid][pDrugPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Seu nível de drogas já está no máximo !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 3 && (strcmp(gunid, "Avareza", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pMiserPerk] < 3)
					{
						PlayerInfo[playerid][pMiserPerk] += 1;
						format(gstring,sizeof(gstring), "Nova Atualização: Agora sua avareza é nível %d.",PlayerInfo[playerid][pMiserPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualização de Avareza está no máximo !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 4 && (strcmp(gunid, "Comercio", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pTraderPerk] < 3)
					{
						PlayerInfo[playerid][pTraderPerk] += 1;
						format(gstring,sizeof(gstring), "Nova Atualização: Agora seu Comércio é nível %d.",PlayerInfo[playerid][pTraderPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualização de comércio está no máximo !");
						return 1;
					}
				}
				else if (PlayerInfo[playerid][pLevel] >= 5 && (strcmp(gunid, "painkillers", true, strlen(gunid)) == 0))
				{
					if (PlayerInfo[playerid][pPainPerk] < 3)
					{
						PlayerInfo[playerid][pPainPerk] += 1;
						format(gstring,sizeof(gstring), "Nova Atualização: Seu nível de Pain agora é %d.",PlayerInfo[playerid][pPainPerk]);
						PlayerInfo[playerid][gPupgrade]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   Sua atualização de Pain já está no máximo !");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Atualização desconhecida");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD6, "   Você tem 0 Pontos de Melhoria");
				return 1;
			}
			SendClientMessage(playerid, COLOR_GRAD6, gstring);
			PlayerInfo[playerid][gPupgrade]--;
		}
		return 1;
	}
//MudeSenha
	if (strcmp(cmd,"/MudarSenha",true) ==0  || strcmp(cmd,"/changepassword",false) ==0 )
	{
	    if(IsPlayerConnected(playerid))
	 	{
            if(MudarSenhaAceito[playerid] == 0)
	     	{
				SendClientMessage(playerid, COLOR_GRAD1, "Você precisa pedir permissão para um admin mudar senha, use /relatorio");
	     		return 1;
	     	}
  			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid,CINZA1,"[INFO] Use: /mudarsenha [Nova Senha]");
				SendClientMessage(playerid,CINZA1,"Guarde a senha ou tire SS da tela apertando F8 para não esquecer!");
				return 1;
			}
			strmid(PlayerInfo[playerid][pKey], result, 0, strlen(result), 255);
			/*getdate(year, month, day);
			format(gstring, sizeof(gstring), "AdmCmd: %s Trocou Sua Senha (%d-%d-%d), Senha: %s", PlayerName(playerid),day,month,year,StrPasswrd[playerid]);
			RegistroLog(gstring);*/
            format(gstring, sizeof(gstring), "SERVER: Você trocou sua Senha para: %s, Salve uma PRINT para não esquecer!!!", PlayerInfo[playerid][pKey]);
            SendClientMessage(playerid,CINZA1,gstring);
            SendClientMessage(playerid,CINZA1,gstring);
            SendClientMessage(playerid,CINZA1,gstring);
			//Encrypt(PlayerInfo[playerid][pKey]);
            SalvarPlayer(playerid);
            MudarSenhaAceito[playerid] = 0;
			return 1;
		}
	}
	if(strcmp(cmd,"/An",true) == 0 || strcmp(cmd,"/anuncio",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {

			if(PlayerInfo[playerid][pConnectTime] < 4)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você precisa jogar pelo menos 4 horas para mandar anúncios!");
				return 1;
			}
			GetPlayerName(playerid,sendername,sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid,COLOR_GRAD2,"[INFO] Use: (/An)uncio [Texto do Anuncio]");
				return 1;
			}
			new praVoce = idx * 25;
			if(GetGranaTheus(playerid) < praVoce)
	        {
	            format(string,sizeof(string),"* Você usou %d caracteres que custam R$%d,Você não tem esse dinheiro.",offset,praVoce);
	            SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
	            return 1;
	        }
	        if(panuncio == 1)
	        {
	        SendClientMessage(playerid,COLOR_GRAD2,"Espere um minuto para poder anunciar novamente!");
	        return 1;
	        }
	        if(TentouDivulgar(result))
            {
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            }
            GranaTheus(playerid,- praVoce);
			SBizzInfo[7][sbTill] += 30;
			ExtortionSBiz(7,30);
            format(strtheus,sizeof(strtheus),"Anuncio:{46FFA7} %s{00FF00} Contato:{46FFA7} %s {00FF00}ID:[%d] - Celular: %d", result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
			OOCNews(0x00FF00AA,strtheus);
			print(strtheus);
			format(string,sizeof(string),"~r~Pagou R$%d ~n~~w~Mensagem continha %d Caracteres",praVoce,idx);
			GameTextForPlayer(playerid,string,5000,5);
			panuncio = 1;
			TempoAn = SetTimer("Anuncio", 60000, 0);
		}
		return 1;
	}
//===============================[anuncios das orgs]===================================//
	if(strcmp(cmd, "/alqaeda", true) == 0 || strcmp(cmd, "/alq", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 15)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/alq)aeda [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panuncioalqaeda == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Terroristas |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_AL, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panuncioalqaeda = 1;
				TempoAnAlqaeda = SetTimer("AnuncioAlqaeda", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/taliban", true) == 0 || strcmp(cmd, "/tal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 6)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/tal)iban [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panunciotaliban == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Terroristas |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_TAL, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciotaliban = 1;
				SetTimer("AnuncioFamilia", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anfarc", true) == 0 || strcmp(cmd, "/farc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 33)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/alq)aeda [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panuncioalqaeda == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_FARC, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panuncioalqaeda = 1;
				TempoAnAlqaeda = SetTimer("AnuncioAlqaeda", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anunciogang", true) == 0 || strcmp(cmd, "/ang", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 5 || GetPlayerOrg(playerid) == 14 || GetPlayerOrg(playerid) == 17 || GetPlayerOrg(playerid) == 18 || GetPlayerOrg(playerid) == 19 || GetPlayerOrg(playerid) == 20 || GetPlayerOrg(playerid) == 26 || GetPlayerOrg(playerid) == 29 || GetPlayerOrg(playerid) == 31)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/ang) ou (/anunciogang) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi kickado por tentar divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panunciogang == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Gangsters |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				if(GetPlayerOrg(playerid) == 5) SendClientMessageToAll(COR_AZTECAS, string);
				else if(GetPlayerOrg(playerid) == 14) SendClientMessageToAll(COR_GRO, string);
				else if(GetPlayerOrg(playerid) == 17) SendClientMessageToAll(COR_BALLAS, string);
				else if(GetPlayerOrg(playerid) == 18) SendClientMessageToAll(COR_VAGOS, string);
				else if(GetPlayerOrg(playerid) == 19) SendClientMessageToAll(0xF6000000, string);
				else if(GetPlayerOrg(playerid) == 20) SendClientMessageToAll(0xCCFF99FF, string);
				else if(GetPlayerOrg(playerid) == 26) SendClientMessageToAll(COLOR_SK, string);
				else if(GetPlayerOrg(playerid) == 29) SendClientMessageToAll(COR_AmigodosAmigos, string);
				else if(GetPlayerOrg(playerid) == 31) SendClientMessageToAll(COR_YSTIFLERS, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciogang = 1;
				TempoAnGang = SetTimer("AnuncioGang", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anunciomafia", true) == 0 || strcmp(cmd, "/anmafia", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 12 || GetPlayerOrg(playerid) == 13)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/anmafia) ou (/anunciomafia) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panunciomafia == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Mafiosos |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				if(GetPlayerOrg(playerid) == 12) SendClientMessageToAll(COR_COSA, string);
				else if(GetPlayerOrg(playerid) == 13) SendClientMessageToAll(COR_YAK, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciomafia = 1;
				TempoAnMafia = SetTimer("AnuncioMafia", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anuncioassassinos", true) == 0 || strcmp(cmd, "/anas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 24)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/anas) ou (/anuncioassassinos) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panunciohitmans == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Hitimans |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                if(GetPlayerOrg(playerid) == 8) { SendClientMessageToAll(COR_HITMAN, string); } else { SendClientMessageToAll(COR_TRIAD, string); }
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciohitmans = 1;
				TempoAnHitmans = SetTimer("AnuncioHitmans", 60000, 0);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/anfamilia", true) == 0 || strcmp(cmd, "/anf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerFamy(playerid) != 0)
			{
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/anas) ou (/anuncioassassinos) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panunciofamilia == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Hitimans |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[Família %s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeFamy(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
                SendClientMessageToAll(0xFFDDFFFF, string);
                panunciofamilia = 1;
				SetTimer("AnuncioFamilia", 60000, 0);
				print(string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anhells", true) == 0 || strcmp(cmd, "/anhells angels", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 21)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/anhells)");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panuncioMc == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Hells Angels |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)", NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_HELLS, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panuncioMc = 1;
				TempoAnmerce = SetTimer("AnuncioMc", 60000, 0);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/anab", true) == 0 || strcmp(cmd, "/anMotoqueiros", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 27)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/anMotoqueiros)");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panuncioMc == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Hells Angels |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)", NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(GetPlayerColor(playerid), string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panuncioMc = 1;
				TempoAnmerce = SetTimer("AnuncioMc", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anmon", true) == 0 || strcmp(cmd, "/anmongols", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 22)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/anmon)");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panuncioMc == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Mongols |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)", NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_MONGOLS, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panuncioMc = 1;
				TempoAnmerce = SetTimer("AnuncioMc", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ansons", true) == 0 || strcmp(cmd, "/sonsofanarchy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 23)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/ansons)");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panuncioMc == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Sons Of Anarchy |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_SONS, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panuncioMc = 1;
				TempoAnmerce = SetTimer("AnuncioMc", 60000, 0);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/andrifters", true) == 0 || strcmp(cmd, "/anunciodrifters", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 25)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/andrifters)");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panuncioMc == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Sons Of Anarchy |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid), result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_DRIFT, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panuncioMc = 1;
				TempoAnmerce = SetTimer("AnuncioMc", 60000, 0);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/anunciotaxi", true) == 0 || strcmp(cmd, "/antaxi", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(GetPlayerOrg(playerid) == 10)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
			    	SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelo menos cargo 4 para usar este comando!");
			    	return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/antaxi) ou (/anunciotaxi) [texto]");
					return 1;
				}
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
				if(panunciotaxi == 1)
	        	{
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 60 segundos para poder anunciar novamente!");
	        		return 1;
	        	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
				//SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Anúncio Dos Taxistas |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
				format(string,sizeof(string),"[%s] %s, Nome: %s - ID [%d] - Telefone (%d)",NomeORG(playerid),result,sendername,playerid,PlayerInfo[playerid][pPnumber]);
				SendClientMessageToAll(COR_TAXI, string);
				print(string);
				SBizzInfo[7][sbTill] += 30;
		    	ExtortionSBiz(7, 30);
				panunciotaxi = 1;
				TempoAnTaxi = SetTimer("AnuncioTaxi", 60000, 0);
			}
		}
		return 1;
	}
//----------------------------------[government]-----------------------------------------------
	if(strcmp(cmd, "/governo", true) == 0 || strcmp(cmd, "/gov", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        new org = GetPlayerOrg(playerid);
            if(gTeam[playerid] == 2  || IsACop(playerid) || org == 4 || org == 7 || org == 32 || org == 34)
			{
				if(PlayerInfo[playerid][pCargo] < 4)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Voce precisa ter pelomenos cargo 4 para usar este comando!");
				    return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/gov)erno [texto]");
					return 1;
				}
				if(panunciogov == 1)
	            {
	        		SendClientMessage(playerid,COLOR_GRAD2,"Espere 1 minuto para mandar outro Anúncio Governamental!");
	            	return 1;
	            }
				if(TentouDivulgar(result))
            	{
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            	}
	        	GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
	            if(org == 1)
	            {
				    SendClientMessageToAll(COR_PM,"-");
					SendClientMessageToAll(COR_PM,"[AVISO GOVERNAMENTAL - Polícia Mílitar]");
					format(string, sizeof(string), "Oficial %s: %s", sendername, result);
					SendClientMessageToAll(COR_PM, string);
					SendClientMessageToAll(COR_PM,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
                else if(org == 2)
	            {
				    SendClientMessageToAll(COR_ROTA,"-");
					SendClientMessageToAll(COR_ROTA,"[AVISO GOVERNAMENTAL - R.O.T.A]");
					format(string, sizeof(string), "Oficial %s: %s", sendername, result);
					SendClientMessageToAll(COR_ROTA, string);
					SendClientMessageToAll(COR_ROTA,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
                else if(org == 3)
	            {
				    SendClientMessageToAll(COR_EXE,"-");
					SendClientMessageToAll(COR_EXE,"[AVISO GOVERNAMENTAL - EXERCITO]");
					format(string, sizeof(string), "Oficial %s: %s", sendername, result);
					SendClientMessageToAll(COR_EXE, string);
					SendClientMessageToAll(COR_EXE,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
                else if(org == 11)
	            {
				    SendClientMessageToAll(COR_PF,"-");
					SendClientMessageToAll(COR_PF,"[AVISO GOVERNAMENTAL - POLÍCIA FEDERAL]");
					format(string, sizeof(string), "Oficial %s: %s", sendername, result);
					SendClientMessageToAll(COR_PF, string);
					SendClientMessageToAll(COR_PF,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
                else if(org == 16)
	            {
				    SendClientMessageToAll(COR_PRF,"-");
					SendClientMessageToAll(COR_PRF,"[AVISO GOVERNAMENTAL - POLÍCIA RODOVIÁRIA]");
					format(string, sizeof(string), "Oficial %s: %s", sendername, result);
					SendClientMessageToAll(COR_PRF, string);
					SendClientMessageToAll(COR_PRF,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
                else if(org == 4)
				{
				    SendClientMessageToAll(COR_SAMU,"-");
					SendClientMessageToAll(COR_SAMU,"[AVISO GOVERNAMENTAL - S.A.M.U]");
					format(string, sizeof(string), "Médico %s: %s", sendername, result);
					SendClientMessageToAll(COR_SAMU, string);
					SendClientMessageToAll(COR_SAMU,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
                else if(org == 7)
				{
				    SendClientMessageToAll(COR_ROTAE,"-");
					SendClientMessageToAll(COR_ROTAE,"[AVISO GOVERNAMENTAL - PREFEITURA]");
					format(string, sizeof(string), "Político %s: %s", sendername, result);
					SendClientMessageToAll(COR_ROTAE, string);
					SendClientMessageToAll(COR_ROTAE,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
				else if(org == 28)
				{
				    SendClientMessageToAll(COR_ROOXY,"-");
					SendClientMessageToAll(COR_ROOXY,"[AVISO GOVERNAMENTAL - Policia Florestal]");
					format(string, sizeof(string), "Policial %s: %s", sendername, result);
					SendClientMessageToAll(COR_ROOXY, string);
					SendClientMessageToAll(COR_ROOXY,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
				else if(org == 30)
				{
				    SendClientMessageToAll(COR_BOPE,"-");
					SendClientMessageToAll(COR_BOPE,"[AVISO GOVERNAMENTAL - B.O.P.E]");
					format(string, sizeof(string), "Policial %s: %s", sendername, result);
					SendClientMessageToAll(COR_BOPE, string);
					SendClientMessageToAll(COR_BOPE,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
				else if(org == 32)
				{
				    SendClientMessageToAll(COR_AMERICANOS,"-");
					SendClientMessageToAll(COR_AMERICANOS,"[AVISO GOVERNAMENTAL - Americano]");
					format(string, sizeof(string), "Policial %s: %s", sendername, result);
					SendClientMessageToAll(COR_AMERICANOS, string);
					SendClientMessageToAll(COR_AMERICANOS,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
				else if(org == 34)
				{
				    SendClientMessageToAll(COR_RPP,"-");
					SendClientMessageToAll(COR_RPP,"[AVISO GOVERNAMENTAL - Policia Cívil]");
					format(string, sizeof(string), "Policial %s: %s", sendername, result);
					SendClientMessageToAll(COR_RPP, string);
					SendClientMessageToAll(COR_RPP,"-");
					SBizzInfo[7][sbTill] += 30;
			    	ExtortionSBiz(7, 30);
				}
				panunciogov = 1;
			    TempoAnGov = SetTimer("AnuncioGov", 60000, 0);
				print(string);
			}
		}
		return 1;
	}
//----------------------------------[to]-----------------------------------------------
    if(strcmp(cmd, "/desativar", true) == 0)
	{
		if(gPlayerLogged[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GRAD3, "    Você não fez o login");
			return 1;
		}
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|______________ Desabilitar ______________|");
			SendClientMessage(playerid, COLOR_WHITE,"/desativar [nome]");
			SendClientMessage(playerid, COLOR_GREY,"Nomes Disponíveis: org, celular");
			return 1;
		}
	    /*if(strcmp(tmp, "noticias", true) == 0)
	    {
			if (!gNews[playerid])
			{
				gNews[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat de notícias desativado !");
			}
			else if (gNews[playerid])
			{
				gNews[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat de notícias ativado !");
			}
		}*/
	    else if(strcmp(tmp, "org", true) == 0)
	    {
			if (!gFam[playerid])
			{
				gFam[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat da organização desativado !");
			}
			else if (gFam[playerid])
			{
				gFam[playerid] = 0;
				SendClientMessage(playerid, COLOR_GRAD2, "   Chat da organização ativado !");
			}
		}
	    else if(strcmp(tmp, "celular", true) == 0)
	    {
	        if(PlayerInfo[playerid][pVIP] > 0 || PlayerInfo[playerid][pAdmin] > 1)
	        {
				if (!PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 1;
					SendClientMessage(playerid, COLOR_GRAD2, "   Você desligou seu celular (não receberá ligações nem SMS) !");
					CellTime[playerid] = 0;
					Mobile[playerid] = 255;
					new pSpecialAction = GetPlayerSpecialAction(playerid);
					if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
					{
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
					}
				}
				else if (PhoneOnline[playerid])
				{
					PhoneOnline[playerid] = 0;
					SendClientMessage(playerid, COLOR_GRAD2, "   Você ligou seu celular !");
				}
			}
		}
		else
		{
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Desabilitar ______________|");
			SendClientMessage(playerid, COLOR_WHITE,"/desativar [nome]");
			SendClientMessage(playerid, COLOR_GREY,"Nomes Disponíveis: org, noticias, celular");
		}
		return 1;
	}
//----------------------------------[Emote]-----------------------------------------------
	if(strcmp(cmd, "/eu", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não está logado !");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /eu [action]");
				return 1;
			}
			if(TentouDivulgar(result))
  	        {
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
   	        }
			if(PlayerInfo[playerid][pMaskuse] == 1)
			{
			    format(string, sizeof(string), "* Mascara %s", result);
			}
			else
			{
				format(string, sizeof(string), "* %s %s", sendername, result);
			}
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			printf("%s", string);
		}
		return 1;
	}
//----------------------------------[Local]-----------------------------------------------
	if(strcmp(cmd, "/sussurro", true) == 0 || strcmp(cmd, "/s", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode sussurrar da cadeia!");
		   return 1;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não logou ainda !");
	            return 1;
	        }
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /(s)ussurro [Para falar pra quem está perto]");
				return 1;
			}
			format(string, sizeof(string), "%s Sussurra: %s", sendername, result);
			ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			printf("%s", string);
		}
		return 1;
	}
//----------------------------------[Short]-----------------------------------------------
 	if(strcmp(cmd,"/Gritar",true) == 0 || strcmp(cmd,"/g",true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode gritar na cadeia!");
		   return 1;
	    }
	    if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid,CINZA,"Você não está logado/registrado!");
	            return 1;
	        }
	        if(Rouco[playerid] > 5)
	        {
		        SendClientMessage(playerid,CINZA,"Você está Rouco, aguarde 5 segundos para gritar novamente!");
		        SetTimerEx("NRouco", 5000, 0, "d", playerid);
		        return 1;
	        }
			GetPlayerName(playerid,sendername,sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid,CINZA2,"[INFO] Use: (/G)ritar [Texto]");
				return 1;
			}
			if(TentouDivulgar(result))
            {
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            }
			format(string,sizeof(string),"%s Grita: %s!!!",sendername,result);
			ProxDetector(30.0,playerid,string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE);
			ApplyAnimation(playerid,"RIOT", "RIOT_shout",4.0,0,1,0,0,0);
			Rouco[playerid]++;
			printf("%s",string);
		}
		return 1;
	}
//----------------------------------[Short]-----------------------------------------------
	if(strcmp(cmd, "/megafone", true) == 0 || strcmp(cmd, "/m", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/m)egafone [megaphone chat]");
				return 1;
			}
			if(TentouDivulgar(result))
            {
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            }
			if(gTeam[playerid] == 2 || IsACop(playerid))
			{
				if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
				{
					format(string, sizeof(string), "Polícia Mílitar %s:o< %s", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
				{
					format(string, sizeof(string), "R.O.T.A %s:o< %s", sendername, result);
					ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
				{
				    format(string, sizeof(string), "Exército %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(IsAGOV(playerid))
				{
				    format(string, sizeof(string), "Governo %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
				{
				    format(string, sizeof(string), "Policia Rodoviaria %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
				{
				    format(string, sizeof(string), "Policia Federal %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)
				{
				    format(string, sizeof(string), "Policia Florestal %s: %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
				{
				    format(string, sizeof(string), "B.O.P.E %s: %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
				{
				    format(string, sizeof(string), "Americano %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				else if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
				{
				    format(string, sizeof(string), "Policia Cívil %s:o< %s", sendername, result);
				    ProxDetector(60.0, playerid, string,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
				}
				printf("%s", string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "   Você não faz parte de nenhuma equipe !");
				return 1;
			}
		}
		return 1;
	}
//
	if(strcmp(cmd, "/megafoneadmin", true) == 0 || strcmp(cmd, "/ma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || strcmp(sendername,"Theus_Crazzy",true)==0 && PlayerInfo[playerid][pAdmin] <= 5000)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USO: /av <texto>");
					return 1;
				}
				if(PlayerInfo[playerid][pAdmin] > 1)
				{
				    format(string, sizeof(string), "( ~ Administrador: %s: %s ~ )", sendername, result);
				    ProxDetector(60.0, playerid, string,0xEE3A8CFF,0xEE3A8CFF,0xEE3A8CFF,0xEE3A8CFF,0xEE3A8CFF);
				}
                else if(PlayerInfo[playerid][pAdmin] > 5000)
				{
				    format(string, sizeof(string), "( ~ Fundador: %s: %s ~ )", sendername, result);
				    ProxDetector(60.0, playerid, string,0xEE3A8CFF,0xEE3A8CFF,0xEE3A8CFF,0xEE3A8CFF,0xEE3A8CFF);
                }
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não pode usar esse comando!");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[Team]-----------------------------------------------
	if(strcmp(cmd, "/radio", true) == 0 || strcmp(cmd, "/r", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
        if(admtrampando[playerid] == 1) { return SendClientMessage(playerid, COLOR_GRAD2, "Você não pode Falar no Rádio da Org estando em modo Trabalho!"); }
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_R, "[INFO] Use: (/r)adio [radio chat]");
				return 1;
			}
			if(TentouDivulgar(result))
            {
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            }
			if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1
            || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2
            || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3
            || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32
            || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11
            || PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34
            || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16
			|| PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7
			|| PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28
			|| PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30
			|| PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
				format(string, sizeof(string), "** %s %s: %s, over. **",OrgCargo(playerid), sendername, result);
				SendFamilyMessage(GetPlayerOrg(playerid),COLOR_R,string);
				//printf("%s", strtheus);
				format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é de nenhuma equipe !");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[offduty]-----------------------------------------------
	if(strcmp(cmd, "/batercartao", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode batercartao na cadeia!");
			return 1;
	    }
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			if(IsACop(playerid))
			{
				if (PlayerToPoint(2, playerid,255.1110,76.0224,1003.6406) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234) || PlayerToPoint(2, playerid,240.7396,112.9709,1003.2188) || PlayerToPoint(2, playerid,1530.3945,-1664.0377,6.2187) || PlayerToPoint(2, playerid,302.7606,-1529.7537,24.9219) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027)
				|| PlayerToPoint(2, playerid,326.4911,307.0710,999.1484) || PlayerToPoint(2, playerid,289.0175,2001.1622,17.6406) || PlayerToPoint(2, playerid,1218.5258,-1818.0236,13.5996) || PlayerInfo[playerid][pLocal] != 255)
				{
					if(OnDuty[playerid]==0)
			        {
                        if(BateuCartao[playerid] == 0)
			            {
                            format(string, sizeof(string), "%s: Oficial %s Colocou sua Farda.",NomeORG(playerid), PlayerName(playerid));
    						OOCNews(0xFF8080AA,string);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Está em Serviço, Pegue seu equipamento com /equipar!");
    						SetPlayerArmour(playerid, 100);
    						SetPlayerHealth(playerid, 100);
    						OnDuty[playerid] = 1;
    						EmpregoDuty[playerid] = 2;
                            BateuCartao[playerid] = 1;
                            SetTimerEx("BaterNovamente", 20000, 0, "d", playerid);
                        }
                        else
                        {
                            SendClientMessage(playerid,0xB0B0B0AA," Espere Alguns segundos para Bater Cartão novamente!");
                        }
					}
					else if(OnDuty[playerid]==1)
					{
                            format(string, sizeof(string), "%s: Oficial %s Retirou sua Farda.",NomeORG(playerid), PlayerName(playerid));
    						OOCNews(0xFF8080AA,string);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Retirou sua Farda, e Não receberá Chamados!");
    						OnDuty[playerid] = 0;
    						EmpregoDuty[playerid] = 0;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você não está em um vestiário !");
					return 1;
				}
			}
            else if(PlayerToPoint(3.0, playerid,1712.3607,1177.3903,34.8259))
            {
				if(PlayerInfo[playerid][pMembro] == 4||PlayerInfo[playerid][pLider] == 4)
				{
				    if(EmpregoDuty[playerid] == 1)
				    {
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Está De Folga, e não receberá chamados!");
				        EmpregoDuty[playerid] = 0;
				        Medics -= 1;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora você está de plantão com o seu trabalho e irá receber chamadas de pessoas que precisam.");
				        EmpregoDuty[playerid] = 1;
				        //format(string, sizeof(string), "[Anuncio] O Médico %s está em servico, /servico medico.", sendername);
		    			//OOCNews(0x2993EDAA,string);
				        Medics += 1;
				    }
				}
			}
			else if(PlayerInfo[playerid][pEmprego] == 5)
			{
			    if(EmpregoDuty[playerid] == 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Está De Folga, e não receberá chamados!");
			        EmpregoDuty[playerid] = 0;
			        Mechanics -= 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora você está de plantão como mecânico e irá receber chamadas de pessoas que precisam.");
			        EmpregoDuty[playerid] = 1;
			        //format(string, sizeof(string), "[Anuncio] O Mecanico %s está em servico, /servico mecanico.", sendername);
	    			//OOCNews(0x2993EDAA,string);
			        Mechanics += 1;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não é Um Oficial/Médico/Mecânico ou Não está no local!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/kitsocio", true) == 0)
	{
        if(PlayerInfo[playerid][pVIP] == 3)
		{
		    if(PlayerPaintballing[playerid] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY,"[SÓCIO]Você não pode usar seu kit no evento!");
	   			return 1;
    		}
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY,"[SÓCIO]Você não pode usar seu kit preso!");
	   			return 1;
    		}
            if(IsPlayerInMorro(playerid) || IsPlayerInShop(playerid) || IsPlayerInPark(playerid) || IsPlayerInCemiterio(playerid) || IsPlayerInEvento(playerid)
            || IsPlayerInPosto(playerid) || IsPlayerInShop(playerid) || IsPlayerInEstacao(playerid) || IsPlayerInCasarao(playerid) || IsPlayerInPref(playerid)
			|| IsPlayerInPedreira(playerid))
            {
                return SendClientMessage(playerid, COLOR_GRAD1, "VIP BPF: Você não pode Equipar neste Local.");
            }
			GivePlayerWeapon(playerid, 46, 1);
			GivePlayerWeapon(playerid, 24, 399);
			GivePlayerWeapon(playerid, 31, 999);
			GivePlayerWeapon(playerid, 29, 999);
			GivePlayerWeapon(playerid, 26, 999);
			GivePlayerWeapon(playerid, 8, 1);
			GivePlayerWeapon(playerid, 34, 999);
			GivePlayerWeapon(playerid, 16, 12);
			//GivePlayerWeapon(playerid, 16, 12);
			//GivePlayerWeapon(playerid, 42, 1999);
			SetPlayerArmour(playerid, 100);
			SetPlayerHealth(playerid, 100);
			SendClientMessage(playerid,COLOR_GREEN,"[SÓCIO]Você será punido se usar o kit em batalha!");
            SendClientMessage(playerid,COLOR_GREEN,"[SÓCIO]Você pegou seu kit sócio!");
            format(string, sizeof(string), "** VIP SÓCIO: %s Pegou seu Kit Sócio",PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            {
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está em uma loja de armas.");
		}
		return 1;
		}
		return 1;
	}
    if(strcmp(cmd, "/jetpack", true) == 0)
	{
        if(PlayerInfo[playerid][pVIP] == 3 || PlayerInfo[playerid][pAdmin] == 3000)
		{
		    if(PlayerPaintballing[playerid] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY,"[SÓCIO]Você não pode usar seu jetpack no evento!");
	   			return 1;
    		}
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY,"[SÓCIO]Você não pode usar seu jetpack preso!");
	   			return 1;
    		}
            if(IsPlayerInMorro(playerid) || IsPlayerInShop(playerid) || IsPlayerInPark(playerid) || IsPlayerInCemiterio(playerid) || IsPlayerInEvento(playerid)
            || IsPlayerInPosto(playerid) || IsPlayerInShop(playerid) || IsPlayerInEstacao(playerid) || IsPlayerInCasarao(playerid) || IsPlayerInPref(playerid)
			|| IsPlayerInPedreira(playerid))
            {
                return SendClientMessage(playerid, COLOR_GRAD1, "VIP BPF: Você não pode Equipar neste Local.");
            }
            SetPlayerSpecialAction(playerid, 2);
			SendClientMessage(playerid,COLOR_GREEN,"[SÓCIO] Você será punido se usar o jetpack em batalha!");
            SendClientMessage(playerid,COLOR_GREEN,"[SÓCIO] Você pegou sua mochila a Jato!");
            format(string, sizeof(string), "**VIP SÓCIO: %s Pegou seu Jetpack VIP",PlayerName(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}
	if(strcmp(cmd, "/kitpremium", true) == 0)
	{
		if(PlayerInfo[playerid][pVIP] == 2)
		{
		    if(PlayerPaintballing[playerid] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você não pode usar seu kit no evento!");
	   			return 1;
    		}
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você não pode usar seu kit preso!");
	   			return 1;
    		}
            if(IsPlayerInMorro(playerid) || IsPlayerInShop(playerid) || IsPlayerInPark(playerid) || IsPlayerInCemiterio(playerid) || IsPlayerInEvento(playerid)
            || IsPlayerInPosto(playerid) || IsPlayerInShop(playerid) || IsPlayerInEstacao(playerid) || IsPlayerInCasarao(playerid) || IsPlayerInPref(playerid)
			|| IsPlayerInPedreira(playerid))
            {
                return SendClientMessage(playerid, COLOR_GRAD1, "VIP BPF: Você não pode Equipar neste Local.");
            }
	   		format(string, sizeof(string), "* %s Pegou Seu Kit VIP Premium.", PlayerName(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ResetPlayerWeapons(playerid);
    		GivePlayerWeapon(playerid, 24, 2500);
	    	GivePlayerWeapon(playerid, 31, 2500);
		   	GivePlayerWeapon(playerid, 29, 2500);
		   	GivePlayerWeapon(playerid, 25, 2500);
		   	GivePlayerWeapon(playerid, 4, 1);
		   	GivePlayerWeapon(playerid, 1, 1);
		   	GivePlayerWeapon(playerid, 34, 2500);
		   	GivePlayerWeapon(playerid, 39, 2500);
		   	GivePlayerWeapon(playerid, 40, 2500);
			SetPlayerArmour(playerid, 100);
			SetPlayerHealth(playerid, 100);
			SendClientMessage(playerid,COLOR_GREEN,"Você pegou o seu Kit VIP Premium!");
			SendClientMessage(playerid,COLOR_GREEN,"Você será punido se usar o kit em batalha!");
		   	return 1;
		}
	    else
	    {
			SendClientMessage(playerid,COLOR_GREEN,"Você não é um jogador VIP Premium!");
		   	return 1;
	    }
	}
    if(!strcmp(cmdtext,"/escudo",true))
	{
	    if(PlayerToPoint(2, playerid,255.1110,76.0224,1003.6406) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234) || PlayerToPoint(2, playerid,240.7396,112.9709,1003.2188) || PlayerToPoint(2, playerid,1530.3945,-1664.0377,6.2187) || PlayerToPoint(2, playerid,302.7606,-1529.7537,24.9219) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027)
		|| PlayerToPoint(2, playerid,326.4911,307.0710,999.1484) || PlayerToPoint(2, playerid,289.0175,2001.1622,17.6406))
		{
		    SetPlayerAttachedObject(playerid,1,18637,13,0.35,0.0,0.0,0.0,0.0,180.0);
		    SetPlayerAttachedObject(playerid,2,18642,7,0.1,0.0,-0.11,0.0,-90.0,90.0);
            SendClientMessage(playerid,COLOR_GREY," Para retirar o escudo digite /tirarescudo!");
			return 1;
		}
		else
		{
			SendClientMessage(playerid,COLOR_GREY," Você só pode pegar escudo no local de equipar!");
		}
	}
	if(!strcmp(cmdtext,"/tirarescudo",true))
	{
	    RemovePlayerAttachedObject(playerid,1);
	    RemovePlayerAttachedObject(playerid,2);
	    return 1;
	}
	if(strcmp(cmd, "/equipar", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_GREY," Você não pode equipar na cadeia!");
	   		return 1;
    	}
    	if (IsACop(playerid))
     	{
     	    new tmpcar = GetPlayerVehicleID(playerid);
     	    GetPlayerName(playerid, sendername, MAX_PLAYER_NAME);
	    	if(IsAEnforcerCar(tmpcar) || PlayerToPoint(2, playerid,255.1110,76.0224,1003.6406) || PlayerToPoint(2,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(2,playerid,230.1107,165.2237,1003.0234) || PlayerToPoint(2, playerid,240.7396,112.9709,1003.2188) || PlayerToPoint(2, playerid,1530.3945,-1664.0377,6.2187) || PlayerToPoint(2, playerid,302.7606,-1529.7537,24.9219) || PlayerToPoint(2, playerid,-1345.8823,492.5301,11.2027)
			|| PlayerToPoint(2, playerid,326.4911,307.0710,999.1484) || PlayerToPoint(2, playerid,289.0175,2001.1622,17.6406))
			{
			    ResetPlayerWeapons(playerid);
				SetPlayerArmour(playerid, 100.0);
				SetPlayerHealth(playerid, 100.0);
				if (PlayerInfo[playerid][pLider] == 1)
				{
	   				format(string, sizeof(string), "* Polícia Mílitar %s pega seus equipamentos de líder.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 25, 500);
					GivePlayerWeapon(playerid, 24, 500);
					GivePlayerWeapon(playerid, 4, 0);
					GivePlayerWeapon(playerid, 31, 300);
					GivePlayerWeapon(playerid, 29, 300);
					GivePlayerWeapon(playerid, 17, 10);
					GivePlayerWeapon(playerid, 34, 100);
					return 1;
				}
				if(PlayerInfo[playerid][pLider] == 2)
				{
					format(string, sizeof(string), "* Policial %s pega seus equipamentos de líder.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 25, 500);
					GivePlayerWeapon(playerid, 24, 500);
					GivePlayerWeapon(playerid, 4, 0);
					GivePlayerWeapon(playerid, 31, 600);
					GivePlayerWeapon(playerid, 29, 600);
					GivePlayerWeapon(playerid, 17, 10);
					GivePlayerWeapon(playerid, 34, 100);
					return 1;
				}
				if(PlayerInfo[playerid][pLider] == 3)
    			{
	    			format(string, sizeof(string), "* Exército %s pega seus equipamentos de líder.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 25, 500);
					GivePlayerWeapon(playerid, 24, 500);
					GivePlayerWeapon(playerid, 4, 0);
					GivePlayerWeapon(playerid, 31, 600);
					GivePlayerWeapon(playerid, 29, 600);
					GivePlayerWeapon(playerid, 17, 10);
					GivePlayerWeapon(playerid, 34, 100);
					return 1;
				}
				if (PlayerInfo[playerid][pLider] == 16)
				{
					format(string, sizeof(string), "* Policial Rodoviário %s pega seus equipamentos de líder.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 25, 500);
					GivePlayerWeapon(playerid, 24, 500);
					GivePlayerWeapon(playerid, 4, 0);
					GivePlayerWeapon(playerid, 31, 600);
					GivePlayerWeapon(playerid, 29, 600);
					GivePlayerWeapon(playerid, 17, 10);
					GivePlayerWeapon(playerid, 34, 100);
					return 1;
				}
				if(PlayerInfo[playerid][pLider] == 11)
    			{
	    			format(string, sizeof(string), "* Policial Federal %s pega seus equipamentos de líder.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 25, 500);
					GivePlayerWeapon(playerid, 24, 500);
					GivePlayerWeapon(playerid, 4, 0);
					GivePlayerWeapon(playerid, 31, 600);
					GivePlayerWeapon(playerid, 29, 600);
					GivePlayerWeapon(playerid, 17, 10);
					GivePlayerWeapon(playerid, 34, 100);
					return 1;
				}
				if(PlayerInfo[playerid][pLider] == 34)
    			{
	    			format(string, sizeof(string), "* Policia Cívil %s pega seus equipamentos de líder.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 25, 500);
					GivePlayerWeapon(playerid, 24, 500);
					GivePlayerWeapon(playerid, 4, 0);
					GivePlayerWeapon(playerid, 31, 600);
					GivePlayerWeapon(playerid, 29, 600);
					GivePlayerWeapon(playerid, 17, 10);
					GivePlayerWeapon(playerid, 34, 100);
					return 1;
				}
				if(PlayerInfo[playerid][pLider] == 28)
				{
					format(string, sizeof(string), "* Policia Florestal %s pega seus equipamentos de líder.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 25, 500);
					GivePlayerWeapon(playerid, 24, 500);
					GivePlayerWeapon(playerid, 4, 0);
					GivePlayerWeapon(playerid, 31, 600);
					GivePlayerWeapon(playerid, 29, 600);
					GivePlayerWeapon(playerid, 17, 10);
					GivePlayerWeapon(playerid, 34, 100);
					return 1;
				}
				if(PlayerInfo[playerid][pLider] == 30)
				{
					format(string, sizeof(string), "* B.O.P.E %s pega seus equipamentos de líder.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 25, 500);
					GivePlayerWeapon(playerid, 24, 500);
					GivePlayerWeapon(playerid, 4, 0);
					GivePlayerWeapon(playerid, 31, 600);
					GivePlayerWeapon(playerid, 29, 600);
					GivePlayerWeapon(playerid, 17, 10);
					GivePlayerWeapon(playerid, 34, 100);
					return 1;
				}
				if(PlayerInfo[playerid][pLider] == 32)
    			{
	    			format(string, sizeof(string), "* Americano %s pega seus equipamentos de líder.", sendername);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(playerid, 25, 500);
					GivePlayerWeapon(playerid, 24, 500);
					GivePlayerWeapon(playerid, 4, 0);
					GivePlayerWeapon(playerid, 31, 600);
					GivePlayerWeapon(playerid, 29, 600);
					GivePlayerWeapon(playerid, 17, 10);
					GivePlayerWeapon(playerid, 34, 100);
					return 1;
				}
     	    	if (PlayerInfo[playerid][pMembro] == 1) // Polícia Mílitar
          		{
					if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(string, sizeof(string), "* Polícia Mílitar %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 80);
						GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 29, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 10);
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* Polícia Mílitar %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 31, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 20);
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 3)
					{
		   				format(string, sizeof(string), "* Polícia Mílitar %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 190);
						GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 29, 450);
						GivePlayerWeapon(playerid, 31, 550);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 30);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
                    }
	  				if (PlayerInfo[playerid][pCargo] == 4)
					{
   						format(string, sizeof(string), "* Polícia Mílitar %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 360);
						GivePlayerWeapon(playerid, 29, 490);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 400);
						GivePlayerWeapon(playerid, 34, 50);
						GivePlayerWeapon(playerid, 17, 40);
						GivePlayerWeapon(playerid, 41, 400);
						return 1;
					}
			 		if (PlayerInfo[playerid][pCargo] == 5)
					{
			   			format(string, sizeof(string), "* Polícia Mílitar %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 140);
						GivePlayerWeapon(playerid, 24, 170);
						GivePlayerWeapon(playerid, 29, 510);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 34, 80);
						GivePlayerWeapon(playerid, 17, 50);
						//GivePlayerWeapon(playerid, 41, 500);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
	    		}
				if(PlayerInfo[playerid][pMembro] == 2)//R.O.T.A
				{
					if(PlayerInfo[playerid][pCargo] == 1)
					{
						format(string, sizeof(string), "* Policial %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 80);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 29, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 10);
						return 1;
					}
		      		if(PlayerInfo[playerid][pCargo] == 2)
					{
						format(string, sizeof(string), "* Policial %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 150);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 31, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 20);
						return 1;
					}
		      		if(PlayerInfo[playerid][pCargo] == 3)
					{
						format(string, sizeof(string), "* Policial %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 190);
						GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 29, 450);
						GivePlayerWeapon(playerid, 31, 550);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 30);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
					if(PlayerInfo[playerid][pCargo] == 4)
     				{
			    		format(string, sizeof(string), "* Policial %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 360);
						GivePlayerWeapon(playerid, 29, 490);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 400);
						GivePlayerWeapon(playerid, 34, 50);
						GivePlayerWeapon(playerid, 17, 40);
						//GivePlayerWeapon(playerid, 41, 300);
						return 1;
					}
					if(PlayerInfo[playerid][pCargo] == 5)
     				{
			    		format(string, sizeof(string), "* Policial %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 140);
						GivePlayerWeapon(playerid, 24, 170);
						GivePlayerWeapon(playerid, 29, 510);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 34, 80);
						GivePlayerWeapon(playerid, 17, 50);
						GivePlayerWeapon(playerid, 41, 400);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
				}
   				if(PlayerInfo[playerid][pMembro] == 11)//PF
	        	{
		            if(PlayerInfo[playerid][pCargo] == 1)
		            {
			    		format(string, sizeof(string), "* Policial Federal %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 80);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 29, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 10);
						return 1;
					}
   					if(PlayerInfo[playerid][pCargo] == 2)
		            {
			    		format(string, sizeof(string), "* Policial Federal %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 150);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 29, 400);
						GivePlayerWeapon(playerid, 31, 400);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 20);
						return 1;
					}
  					if(PlayerInfo[playerid][pCargo] == 3)
		            {
			    		format(string, sizeof(string), "* Policial Federal %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 190);
						GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 29, 450);
						GivePlayerWeapon(playerid, 31, 550);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 30);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
					if(PlayerInfo[playerid][pCargo] == 4)
		            {
			    		format(string, sizeof(string), "* Policial Federal %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 360);
						GivePlayerWeapon(playerid, 29, 490);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 400);
						GivePlayerWeapon(playerid, 34, 50);
						GivePlayerWeapon(playerid, 17, 40);
						//GivePlayerWeapon(playerid, 41, 300);
						return 1;
					}
					if(PlayerInfo[playerid][pCargo] == 5)
		            {
			    		format(string, sizeof(string), "* Policial Federal %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        GivePlayerWeapon(playerid, 25, 140);
						GivePlayerWeapon(playerid, 24, 170);
						GivePlayerWeapon(playerid, 29, 510);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 34, 80);
						GivePlayerWeapon(playerid, 17, 50);
						//GivePlayerWeapon(playerid, 41, 300);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
   				}
   				if(PlayerInfo[playerid][pMembro] == 34)//Policia Cívil
	        	{
		            if(PlayerInfo[playerid][pCargo] == 1)
		            {
			    		format(string, sizeof(string), "* Policia Cívil %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 80);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 29, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 10);
						return 1;
					}
   					if(PlayerInfo[playerid][pCargo] == 2)
		            {
			    		format(string, sizeof(string), "* Policia Cívil %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 150);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 29, 400);
						GivePlayerWeapon(playerid, 31, 400);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 20);
						return 1;
					}
  					if(PlayerInfo[playerid][pCargo] == 3)
		            {
			    		format(string, sizeof(string), "* Policia Cívil %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 190);
						GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 29, 450);
						GivePlayerWeapon(playerid, 31, 550);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 30);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
					if(PlayerInfo[playerid][pCargo] == 4)
		            {
			    		format(string, sizeof(string), "* Policia Cívil %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 360);
						GivePlayerWeapon(playerid, 29, 490);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 400);
						GivePlayerWeapon(playerid, 34, 50);
						GivePlayerWeapon(playerid, 17, 40);
						//GivePlayerWeapon(playerid, 41, 300);
						return 1;
					}
					if(PlayerInfo[playerid][pCargo] == 5)
		            {
			    		format(string, sizeof(string), "* Policia Cívil %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        GivePlayerWeapon(playerid, 25, 140);
						GivePlayerWeapon(playerid, 24, 170);
						GivePlayerWeapon(playerid, 29, 510);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 34, 80);
						GivePlayerWeapon(playerid, 17, 50);
						//GivePlayerWeapon(playerid, 41, 300);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
   				}
				if(PlayerInfo[playerid][pMembro] == 3)//Exército
	       		{
		            if(PlayerInfo[playerid][pCargo] == 1)
		            {
			    		format(string, sizeof(string), "* Exército %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 80);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 29, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 10);
						return 1;
					}
	      			if(PlayerInfo[playerid][pCargo] == 2)
				    {
				   		format(string, sizeof(string), "* Exército %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 150);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 31, 400);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 20);
						return 1;
					}
	      			if(PlayerInfo[playerid][pCargo] == 3)
				    {
				   		format(string, sizeof(string), "* Exército %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 190);
						GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 29, 450);
						GivePlayerWeapon(playerid, 31, 550);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 30);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
					if(PlayerInfo[playerid][pCargo] == 4)
		            {
			    		format(string, sizeof(string), "* Exército %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 360);
						GivePlayerWeapon(playerid, 29, 490);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 400);
						GivePlayerWeapon(playerid, 34, 50);
						GivePlayerWeapon(playerid, 17, 40);
						//GivePlayerWeapon(playerid, 41, 300);
						return 1;
					}
	 				if(PlayerInfo[playerid][pCargo] == 5)
		            {
			    		format(string, sizeof(string), "* Exército %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 140);
						GivePlayerWeapon(playerid, 24, 170);
						GivePlayerWeapon(playerid, 29, 510);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 34, 80);
						GivePlayerWeapon(playerid, 17, 50);
						//GivePlayerWeapon(playerid, 41, 300);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
				}
				if(PlayerInfo[playerid][pMembro] == 32)//Americano
	       		{
		            if(PlayerInfo[playerid][pCargo] == 1)
		            {
			    		format(string, sizeof(string), "* Americano %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 80);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 29, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 10);
						return 1;
					}
	      			if(PlayerInfo[playerid][pCargo] == 2)
				    {
				   		format(string, sizeof(string), "* Americano %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 150);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 29, 300);
						GivePlayerWeapon(playerid, 31, 400);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 20);
						return 1;
					}
	      			if(PlayerInfo[playerid][pCargo] == 3)
				    {
				   		format(string, sizeof(string), "* Americano %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 190);
						GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 29, 450);
						GivePlayerWeapon(playerid, 31, 550);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 30);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
					if(PlayerInfo[playerid][pCargo] == 4)
		            {
			    		format(string, sizeof(string), "* Americano %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 360);
						GivePlayerWeapon(playerid, 29, 490);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 400);
						GivePlayerWeapon(playerid, 34, 50);
						GivePlayerWeapon(playerid, 17, 40);
						//GivePlayerWeapon(playerid, 41, 300);
						return 1;
					}
	 				if(PlayerInfo[playerid][pCargo] == 5)
		            {
			    		format(string, sizeof(string), "* Americano %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 140);
						GivePlayerWeapon(playerid, 24, 170);
						GivePlayerWeapon(playerid, 29, 510);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 34, 80);
						GivePlayerWeapon(playerid, 17, 50);
						//GivePlayerWeapon(playerid, 41, 300);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
				}
				if(PlayerInfo[playerid][pMembro] == 16)// Policia Rodoviaria
				{
					if (PlayerInfo[playerid][pCargo] == 1)
					{
						format(string, sizeof(string), "* Policial Rodoviário %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 80);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 29, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 10);
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* Policial Rodoviário %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 150);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 29, 400);
						GivePlayerWeapon(playerid, 31, 400);
						//GivePlayerWeapon(playerid, 41, 400);
						GivePlayerWeapon(playerid, 17, 20);
						return 1;
					}
 					if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(string, sizeof(string), "* Policial Rodoviário %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 190);
						GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 29, 450);
						GivePlayerWeapon(playerid, 31, 450);
						//GivePlayerWeapon(playerid, 41, 400);
						GivePlayerWeapon(playerid, 17, 30);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
	  				if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(string, sizeof(string), "* Policial Rodoviário %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 360);
						GivePlayerWeapon(playerid, 29, 500);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 500);
						GivePlayerWeapon(playerid, 34, 50);
						GivePlayerWeapon(playerid, 17, 40);
						//GivePlayerWeapon(playerid, 41, 200);
						GivePlayerWeapon(playerid, 34, 200);
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(string, sizeof(string), "* Policial Rodoviário %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 140);
						GivePlayerWeapon(playerid, 24, 170);
						GivePlayerWeapon(playerid, 29, 550);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 34, 80);
						GivePlayerWeapon(playerid, 17, 50);
						//GivePlayerWeapon(playerid, 41, 400);
						GivePlayerWeapon(playerid, 34, 400);
                        GivePlayerWeapon(playerid, 4, 0);
	                    return 1;
					}
				}
				if(PlayerInfo[playerid][pMembro] == 28)// Policia Florestal
				{
					if (PlayerInfo[playerid][pCargo] == 1)
					{
						format(string, sizeof(string), "* Policia Florestal %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 80);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 29, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 10);
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* Policia Florestal %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 150);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 29, 400);
						GivePlayerWeapon(playerid, 31, 400);
						//GivePlayerWeapon(playerid, 41, 400);
						GivePlayerWeapon(playerid, 17, 20);
						return 1;
					}
 					if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(string, sizeof(string), "* Policia Florestal %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 190);
						GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 29, 450);
						GivePlayerWeapon(playerid, 31, 450);
						//GivePlayerWeapon(playerid, 41, 400);
						GivePlayerWeapon(playerid, 17, 30);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
	  				if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(string, sizeof(string), "* Policia Florestal %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 360);
						GivePlayerWeapon(playerid, 29, 500);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 500);
						GivePlayerWeapon(playerid, 34, 50);
						GivePlayerWeapon(playerid, 17, 40);
						//GivePlayerWeapon(playerid, 41, 200);
						GivePlayerWeapon(playerid, 34, 200);
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(string, sizeof(string), "* Policia Florestal %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 140);
						GivePlayerWeapon(playerid, 24, 170);
						GivePlayerWeapon(playerid, 29, 550);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 34, 80);
						GivePlayerWeapon(playerid, 17, 50);
						//GivePlayerWeapon(playerid, 41, 400);
						GivePlayerWeapon(playerid, 34, 400);
                        GivePlayerWeapon(playerid, 4, 0);
	                    return 1;
					}
                }
                if(PlayerInfo[playerid][pMembro] == 30)// B.O.P.E
				{
					if (PlayerInfo[playerid][pCargo] == 1)
					{
						format(string, sizeof(string), "* B.O.P.E %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 80);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 300);
						GivePlayerWeapon(playerid, 29, 300);
						//GivePlayerWeapon(playerid, 41, 300);
						GivePlayerWeapon(playerid, 17, 10);
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* B.O.P.E %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 80);
						GivePlayerWeapon(playerid, 24, 150);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 29, 400);
						GivePlayerWeapon(playerid, 31, 400);
						//GivePlayerWeapon(playerid, 41, 400);
						GivePlayerWeapon(playerid, 17, 20);
						return 1;
					}
 					if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(string, sizeof(string), "* B.O.P.E %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 190);
						GivePlayerWeapon(playerid, 24, 150);
						GivePlayerWeapon(playerid, 29, 450);
						GivePlayerWeapon(playerid, 31, 450);
						//GivePlayerWeapon(playerid, 41, 400);
						GivePlayerWeapon(playerid, 17, 30);
                        GivePlayerWeapon(playerid, 4, 0);
						return 1;
					}
	  				if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(string, sizeof(string), "* B.O.P.E %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 360);
						GivePlayerWeapon(playerid, 29, 500);
                        GivePlayerWeapon(playerid, 4, 0);
						GivePlayerWeapon(playerid, 31, 500);
						GivePlayerWeapon(playerid, 34, 50);
						GivePlayerWeapon(playerid, 17, 40);
						//GivePlayerWeapon(playerid, 41, 200);
						GivePlayerWeapon(playerid, 34, 200);
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(string, sizeof(string), "* B.O.P.E %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GivePlayerWeapon(playerid, 25, 140);
						GivePlayerWeapon(playerid, 24, 170);
						GivePlayerWeapon(playerid, 29, 550);
						GivePlayerWeapon(playerid, 31, 550);
						GivePlayerWeapon(playerid, 34, 80);
						GivePlayerWeapon(playerid, 17, 50);
						//GivePlayerWeapon(playerid, 41, 400);
						GivePlayerWeapon(playerid, 34, 400);
                        GivePlayerWeapon(playerid, 4, 0);
	                    return 1;
					}
                }
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está no Vestiário ou em Um Enforcer.");
				return 1;
			}
		}
		if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
		{
		    if(PlayerToPoint(10.0, playerid,414.5280,2531.5229,19.1648) || PlayerToPoint(10.0, playerid,2743.6855,-2453.9363,13.8623) || PlayerToPoint(10.0, playerid,-308.9262,1762.3976,43.6406))
			{
			    if(PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pLider] == 33)//AL'QAEDA Armas
				{
					format(string, sizeof(string), "* Terrorista %s Pegou Seu Equipamento Líder de Terrorismo.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ResetPlayerWeapons(playerid);
   					GivePlayerWeapon(playerid, 24, 399);
	    			GivePlayerWeapon(playerid, 30, 999);
		    		GivePlayerWeapon(playerid, 29, 999);
		    		GivePlayerWeapon(playerid, 4, 1);
		    		GivePlayerWeapon(playerid, 34, 199);
		    		GivePlayerWeapon(playerid, 39, 10);
		    		GivePlayerWeapon(playerid, 40, 1);
		    		SetPlayerArmour(playerid, 100);
					SetPlayerHealth(playerid, 100);
				}
				else
				{
					format(string, sizeof(string), "* Terrorista %s Pegou Seu Equipamento de Terrorismo.", PlayerName(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ResetPlayerWeapons(playerid);
   					GivePlayerWeapon(playerid, 24, 399);
	    			GivePlayerWeapon(playerid, 30, 999);
		    		GivePlayerWeapon(playerid, 29, 999);
		    		GivePlayerWeapon(playerid, 4, 1);
		    		GivePlayerWeapon(playerid, 34, 199);
		    		GivePlayerWeapon(playerid, 17, 2);
		    		SetPlayerArmour(playerid, 100);
					SetPlayerHealth(playerid, 100);
					return 1;
                }
			}
			else
			{
		    	SendClientMessage(playerid, COLOR_GREY, "Você não está no lugar de equipar de sua HQ.");
		    	return 1;
		    }
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Você não possui esse comando.");
		    return 1;
		}
    }

//Cartorio
//
	if(strcmp(cmd, "/mudarsexo", true) == 0)
	{
	    if(PlayerToPoint(3, playerid,360.5766, 164.2014, 1008.3828))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			new x_sexo[32];
			x_sexo = strtok(cmdtext, idx);
			if(!strlen(x_sexo))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Cartório ______________|");
				SendClientMessage(playerid, COLOR_WHITE, "|[INFO] Use: /mudarsexo [Numero]");
				SendClientMessage(playerid, COLOR_GREY, "| 1 - Homem");
				SendClientMessage(playerid, COLOR_GREY, "| 2 - Mulher");
				return 1;
			}
            if(strcmp(x_sexo,"1",true) == 0)
			{
			 	GranaTheus(playerid,-500);
				format(string, sizeof(string), "* Jogador %s mudou seu sexo para masculino.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[playerid][pSex] = 1;
				SendClientMessage(playerid,COLOR_GREEN,"Você mudou seu sexo para masculino!");
		   	 	return 1;
			}
            if(strcmp(x_sexo,"2",true) == 0)
			{
			    GranaTheus(playerid,-500);
		   		format(string, sizeof(string), "* Jogador %s mudou seu sexo para feminino.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
   				PlayerInfo[playerid][pSex] = 2;
				SendClientMessage(playerid,COLOR_GREEN,"Você trocou seu sexo para feminino!");
		   		return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está na igreja de LS.");
		}
	}
 	if(strcmp(cmd, "/separacao", true) == 0)
	{
		if(PlayerToPoint(10, playerid,2233.8225,-1333.2725,23.9816))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
   			if(IsPlayerConnected(playerid))
			{
      			new x_separar[32];
				x_separar = strtok(cmdtext, idx);
				if(!strlen(x_separar))
				{
					SendClientMessage(playerid, COLOR_WHITE, "|______________ Cartório ______________|");
					SendClientMessage(playerid, COLOR_WHITE, "|[INFO] Use: /separacao [Numero]");
					SendClientMessage(playerid, COLOR_GREY, "| 1 - Sim");
					SendClientMessage(playerid, COLOR_GREY, "| 2 - Não");
					return 1;
				}
                if(strcmp(x_separar,"1",true) == 0)
				{
				    if(PlayerInfo[playerid][pMarried] > 0)
					{
			   	 		GranaTheus(playerid,-500);
						format(string, sizeof(string), "* Jogador %s se divorciou!", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SendClientMessage(playerid,COLOR_GREY,"Você se divorciou!");
						ClearMarriage(playerid);
			   	 		return 1;
			   	 	}
			   	 	SendClientMessage(playerid,COLOR_GREEN,"Você não é casado(a)!");
				}
                if(strcmp(x_separar,"2",true) == 0)
				{
				    if(PlayerInfo[playerid][pMarried] > 0)
					{
						SendClientMessage(playerid,COLOR_GREEN,"Você continuou casado(a)!");
			   	 		return 1;
					}
				}
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está na igreja de LS!");
		}
	}
    if(strcmp(cmd, "/kitvip", true) == 0 || strcmp(cmd, "/kitivip", true) == 0)
	{
	    new location = PlayerInfo[playerid][pLocal];
	    if(location == 99 || location == 100 || location == 102)
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pVIP] >= 1)
			{
	   	 		format(string, sizeof(string), "* %s Pegou Seu Kit VIP.", sendername);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				ResetPlayerWeapons(playerid);
				GivePlayerWeapon(playerid, 8, 1);
				GivePlayerWeapon(playerid, 17, 20);
				GivePlayerWeapon(playerid, 24, 999);
    			GivePlayerWeapon(playerid, 25, 500);
    			GivePlayerWeapon(playerid, 30, 500);
    			GivePlayerWeapon(playerid, 34, 500);
    			GivePlayerWeapon(playerid, 4, 1);
				SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				SendClientMessage(playerid,COLOR_GREEN,"Você pegou o seu Kit VIP!");
			   	return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é VIP");
			    return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está em uma loja de armas.");
		}
		return 1;
	}
//SISTEMA DE DROGAS BY Theus
    if(strcmp(cmd,"/pegar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			if(Morro[Dono] == 2)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Os policiais estão no controle do morro não tem drogas a venda!");
				return 1;
			}
			new x_job[64];
			x_job = strtok(cmdtext, idx);
			if(!strlen(x_job))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Pegar __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /pegar [Nome] [quantia]");
		  		SendClientMessage(playerid, COLOR_GREY, "Nomes Disponiveis: Maconha, Crack, Cocaina, Combustivel");
				SendClientMessage(playerid, COLOR_GREEN, "|_________________________________________|");
				return 1;
			}
		    if(strcmp(x_job,"maconha",true) == 0)
			{
		        if(PlayerInfo[playerid][pDrogas] > 15)
		        {
		            format(string, sizeof(string), "  Você ainda tem %d Gramas de Maconha com você, gaste-as primeiro!", PlayerInfo[playerid][pDrogas]);
					SendClientMessage(playerid, COLOR_GREY, string);
		            return 1;
		        }
		        new tel;
			    new price;
			    new ammount;
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /pegar maconha [Quantia]");
					return 1;
				}
				new level = PlayerInfo[playerid][pDrogasSkill];
				ammount = strval(tmp);
				if(level >= 0 && level <= 50)
				{ tel = 200; if(ammount < 1 || ammount > 99) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 99 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ tel = 150; if(ammount < 1 || ammount > 150) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 150 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ tel = 100; if(ammount < 1 || ammount > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 200 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ tel = 50; if(ammount < 1 || ammount > 250) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 250 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 401)
				{ tel = 10; if(ammount < 1 || ammount > 300) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 300 em seu Nivel de Drogas!"); return 1; } }
			    if (PlayerToPoint(4.0, playerid, 2152.4727,-1014.0005,62.8375))
				{
				    price = ammount * tel;
	     			if(Morro[Dono] != GetPlayerOrg(playerid) || Morro[Dono] == 0 || PlayerInfo[playerid][pEmprego] == 4 && Morro[Dono] != GetPlayerOrg(playerid))
					{
  						if(GetGranaTheus(playerid) < price)
				   	 	{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não tem esse dinheiro!");
							return 1;
						}
				        format(string, sizeof(string), "* Você comprou %d gramas de Maconha, por: R$%d.", ammount, price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        GranaTheus(playerid, -price);
						PlayerInfo[playerid][pDrogas] = ammount;
					}
    				if(Morro[Dono] == GetPlayerOrg(playerid) && Morro[Dono] != 0)
					{
				        format(string, sizeof(string), "* Você pegou %d gramas de Maconha, Gratuitamente porque sua gang controla o Trafico da Cidade.", ammount);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pDrogas] = ammount;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não e um vendedor de Drogas ou não esta em um local de pegar drogas!");
				    return 1;
				}
			}
		    if(strcmp(x_job,"crack",true) == 0)
			{
		        if(PlayerInfo[playerid][pDrogas3] > 15)
		        {
		            format(string, sizeof(string), "  Você ainda tem %d Gramas de Crack com você, gaste-as primeiro!", PlayerInfo[playerid][pDrogas2]);
					SendClientMessage(playerid, COLOR_GREY, string);
		            return 1;
		        }
		        new tel;
			    new price;
			    new ammount;
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /pegar crack [Quantia]");
					return 1;
				}
				new level = PlayerInfo[playerid][pDrogasSkill];
				ammount = strval(tmp);
				if(level >= 0 && level <= 50)
				{ tel = 200; if(ammount < 1 || ammount > 99) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 99 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ tel = 150; if(ammount < 1 || ammount > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 100 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ tel = 100; if(ammount < 1 || ammount > 150) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 150 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ tel = 50; if(ammount < 1 || ammount > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 200 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 401)
				{ tel = 10; if(ammount < 1 || ammount > 250) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 250 em seu Nivel de Drogas!"); return 1; } }
                if (PlayerToPoint(4.0, playerid, 2152.4727,-1014.0005,62.8375))
				{
				    price = ammount * tel;
                    if(Morro[Dono] != GetPlayerOrg(playerid) || Morro[Dono] == 0 || PlayerInfo[playerid][pEmprego] == 4 && Morro[Dono] != GetPlayerOrg(playerid))
					{
		    			if(GetGranaTheus(playerid) < price)
				   	 	{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não tem esse dinheiro!");
							return 1;
						}
				        format(string, sizeof(string), "* Você comprou %d gramas de Crack, por: R$%d.", ammount, price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        GranaTheus(playerid, -price);
						PlayerInfo[playerid][pDrogas3] = ammount;
					}
    				if(Morro[Dono] == GetPlayerOrg(playerid) && Morro[Dono] != 0)
					{
				        format(string, sizeof(string), "* Você pegou %d gramas de Crack, Gratuitamente porque sua gang controla o Trafico da Cidade.", ammount);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pDrogas3] = ammount;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não e um vendedor de Drogas ou não esta em um local de pegar drogas!");
				    return 1;
				}
			}
		    if(strcmp(x_job,"cocaina",true) == 0)
			{
		        if(PlayerInfo[playerid][pDrogas2] > 15)
		        {
		            format(string, sizeof(string), "  Você ainda tem %d Gramas de Cocaina com você, gaste-as primeiro!", PlayerInfo[playerid][pDrogas3]);
					SendClientMessage(playerid, COLOR_GREY, string);
		            return 1;
		        }
		        new tel;
			    new price;
			    new ammount;
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /pegar cocaina [Quantia]");
					return 1;
				}
				new level = PlayerInfo[playerid][pDrogasSkill];
				ammount = strval(tmp);
				if(level >= 0 && level <= 50)
				{ tel = 200; if(ammount < 1 || ammount > 99) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 99 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 51 && level <= 100)
				{ tel = 150; if(ammount < 1 || ammount > 100) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 100 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 101 && level <= 200)
				{ tel = 100; if(ammount < 1 || ammount > 150) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 150 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 201 && level <= 400)
				{ tel = 50; if(ammount < 1 || ammount > 200) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 200 em seu Nivel de Drogas!"); return 1; } }
				else if(level >= 401)
				{ tel = 10; if(ammount < 1 || ammount > 250) { SendClientMessage(playerid, COLOR_GREY, "   Você pode pegar no Minimo 1 e no Maximo 250 em seu Nivel de Drogas!"); return 1; } }
                if (PlayerToPoint(4.0, playerid, 2152.4727,-1014.0005,62.8375))
				{
				    price = ammount * tel;
                    if(Morro[Dono] != GetPlayerOrg(playerid) || Morro[Dono] == 0 || PlayerInfo[playerid][pEmprego] == 4 && Morro[Dono] != GetPlayerOrg(playerid))
					{
	  					if(GetGranaTheus(playerid) < price)
		   	 			{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não tem esse dinheiro!");
							return 1;
						}
				        format(string, sizeof(string), "* Você comprou %d gramas de Cocaina, por: R$%d.", ammount, price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        GranaTheus(playerid, -price);
						PlayerInfo[playerid][pDrogas2] = ammount;
 					}
     				if(Morro[Dono] == GetPlayerOrg(playerid) && Morro[Dono] != 0)
					{
				        format(string, sizeof(string), "* Você pegou %d gramas de Cocaina, Gratuitamente porque sua gang controla o Trafico da Cidade.", ammount);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pDrogas2] = ammount;
				    }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não e um vendedor de Drogas ou não esta em um local de pegar drogas!");
				    return 1;
				}
			}
			else
			{
				return 1;
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/Usedrogas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE, "|______________ Use Drogas ______________|");
		    SendClientMessage(playerid, COLOR_GRAD1,"BPF > [INFO] Use: /usemaconha");
            SendClientMessage(playerid, COLOR_GRAD1,"BPF > [INFO] Use: /usecocaina");
            SendClientMessage(playerid, COLOR_GRAD1,"BPF > [INFO] Use: /usecrack");
			}
		return 1;
	}
	if(strcmp(cmd, "/venderdrogas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE, "|______________ Vender ______________|");
            SendClientMessage(playerid, COLOR_GRAD1,"BPF > [INFO] Use: /vendermaconha");
            SendClientMessage(playerid, COLOR_GRAD1,"BPF > [INFO] Use: /vendercocaina");
            SendClientMessage(playerid, COLOR_GRAD1,"BPF > [INFO] Use: /vendercrack");
			}
		return 1;
	}
	if(strcmp(cmd, "/sistemadedrogas", true) == 0 || strcmp(cmd, "/sistemadrogas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|______________ Sistema de Drogas ______________|");
		    SendClientMessage(playerid, COLOR_GRAD1,"BPF > /usemaconha /usecocaina /usecrack");
		    SendClientMessage(playerid, COLOR_GRAD1,"BPF > /vendermaconha /vendercocaina /vendercrack");
		    SendClientMessage(playerid, COLOR_GRAD1,"BPF > Para pegar ou esconder drogas vá a um territorio");
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"GPS Territorios: /GPS e selecione territorios");
		}
		return 1;
	}
	if(strcmp(cmd, "/guerrainfo", true) == 0 || strcmp(cmd, "/guerraBPF", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, 0x0000FFAA, "|_______|{00FF00}B{F9FE23}.P.{FF0000}F{0000FF}| Horários da Guerra de Pontos |{00FF00}B{F9FE23}.P.{FF0000}F{0000FF}|_______|");
			SendClientMessage(playerid, 0xFF8080AA,"[Guerra do Morro Horários]");
			SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA MANHÃ] {808080}> {00EAEA}Dás 10 Horas até às 11 Horas.");
		    SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA TARDE] {808080}> {00EAEA}Dás 14 Horas até às 15 Horas.");
		    SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA TARDE] {808080}> {00EAEA}Dás 17 Horas até às 18 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA NOITE] {808080}> {00EAEA}Dás 21 Horas até às 22 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA MADRUGADA] {808080}> {00EAEA}Dás 0 Horas até às 1 Hora.");
            SendClientMessage(playerid, 0xFF8080AA,"[Guerra da Pedreira Horários]");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA MANHÃ] {808080}> {00EAEA}Dás 8 Horas até às 9 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA TARDE] {808080}> {00EAEA}Dás 12 Horas até às 13 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA TARDE] {808080}> {00EAEA}Dás 16 Horas até às 17 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA NOITE] {808080}> {00EAEA}Dás 19 Horas até às 20 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA DA MADRUGADA] {808080}> {00EAEA}Dás 23 Horas até às 0 Horas.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA AJUDA] {808080}> {8080FF}CASO TENHA DÚVIDAS SOBRE O QUE É A GUERRA DIGITE /ajudaguerra!!!");
		}
		return 1;
	}
    if(strcmp(cmd, "/ajudafamilia", true) == 0 || strcmp(cmd, "/familiaajuda", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, 0x0000FFAA, "|_______|{00FF00}B{F9FE23}.P.{FF0000}F{0000FF}| Sistema de Famílias |{00FF00}B{F9FE23}.P.{FF0000}F{0000FF}|_______|");
		    SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/Tirarf [ID] [MOTIVO] = Retirar um membro.");
		    SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/Convidarf [ID] = Convidar um Membro.");
		    SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/FamyLider [ID] = Promove um Player a líder.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/fa [TEXTO] = Chat da Família.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/Membrosf = Mostrar os membros da Família.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/Sairdafamilia = Sai de membro/lider da família atual.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/AnF [TEXTO] = Anúncio Geral da Família.");
            SendClientMessage(playerid, 0xFF8080AA,"[COMANDO] {808080}> {00EAEA}/lideresf = Exibir todos Os líderes de Famílias Online.");
            SendClientMessage(playerid, 0x8080FFAA,"CASO TENHA DÚVIDAS OU HÁ ALGUM BUG NO SISTEMA DE FAMILIAS, AVISE UM ADMINISTRADOR!!!");
		}
		return 1;
	}
	if(strcmp(cmd, "/ajudaguerra", true) == 0 || strcmp(cmd, "/guerraBPFajuda", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, 0x0000FFAA, "|_______|{00FF00}B{F9FE23}.P.{FF0000}F{0000FF}| Ajuda Guerra de Pontos |{00FF00}B{F9FE23}.P.{FF0000}F{0000FF}|_______|");
		    SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}A guerra de pontos é uma competição entre Gangues e policiais que ocorre no MORRO!");
		    SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}Cujo o objetivo das Gangs é ganhar a guerra para obter drogas gratis para os membros!");
		    SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}Os Policiais tem o objetivo de impedir o trafico na cidade ganhando a guerra!");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}Para ganhar pontos basta chamar os membros da sua Gang e ir até o local (MORRO)!");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}Os pontos serão mostrados no canto Direito do seu Monitor.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}Você ganha pontos matando os inimigos ou simplesmente tomando a posição no MORRO!");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}A Guerra tem duração de 1 Hora e apenas Gangs e Policiais participam, sem civis no local.");
            SendClientMessage(playerid, 0xFF8080AA,"[GUERRA] {808080}A guerra inicia automaticamente, para saber os Horários digite /guerrainfo.");
		}
		return 1;
	}
 	if(strcmp(cmd, "/cartorio", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    SendClientMessage(playerid, COLOR_WHITE, "|______________ Cartorio BPF ______________|");
		    SendClientMessage(playerid, COLOR_GRAD1,"BPF > [INFO] Use: /mudarsexo");
            SendClientMessage(playerid, COLOR_GRAD1,"BPF > [INFO] Use: /separacao");
            SendClientMessage(playerid, COLOR_GRAD1,"BPF > [INFO] Use: /loteria");
			}
		return 1;
	}
//----------------------------------[departments]-----------------------------------------------
	if(strcmp(cmd, "/departamento", true) == 0 || strcmp(cmd, "/d", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_DEPARTAMENTO, "[INFO] Use: (/d)epartamento [Texto]");
				return 1;
			}
            if(admtrampando[playerid] == 1) { return SendClientMessage(playerid, COLOR_GRAD2, "Você não pode Falar no Rádio da Gang estando em modo Trabalho!"); }
            if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1
            || PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2
            || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3
            || PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32
            || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11
            || PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34
            || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16
			|| PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4
			|| PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28
			|| PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30
			|| PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32
			|| PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{

				format(string, sizeof(string), "** %s %s %s: %s, câmbio. **",NomeORG(playerid), OrgCargo(playerid), sendername, result);
                SendFamilyMessage(2, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(1, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(3, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(16, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(7, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(11, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(28, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(30, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(32, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(34, COLOR_DEPARTAMENTO, string);
				SendFamilyMessage(4, COLOR_DEPARTAMENTO, string);
                format(string, sizeof(string), "* %s falou algo no rádio.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				//printf("%s", strtheus);
				return 1;
            }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é um Policial/Médico!");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[mdc]-----------------------------------------------
	if(strcmp(cmd, "/ficha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return 1;
			}
			new tmpcar = GetPlayerVehicleID(playerid);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ficha [id]");
				return 1;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsACopCar(tmpcar)||PlayerToPoint(60.0, playerid,232.8069,164.0555,1003.0234)||PlayerToPoint(60.0, playerid,232.2051,117.3912,1003.2188)||PlayerToPoint(20.0, playerid,322.4880,309.1409,999.1484)||PlayerToPoint(40.0, playerid,246.1936,69.8609,1003.6406))
			{
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
						SendClientMessage(playerid, COLOR_WHITE, "|______________ Ficha Na Policia ______________|");
						format(string, sizeof(string), "Nome: %s", sendername);
						SendClientMessage(playerid, COLOR_WHITE,string);
						format(string, sizeof(string), "Crime: %s", PlayerCrime[giveplayerid][pAccusing]);
						SendClientMessage(playerid, COLOR_GRAD2,string);
						format(string, sizeof(string), "Relato: %s", PlayerCrime[giveplayerid][pVictim]);
						SendClientMessage(playerid, COLOR_GRAD3,string);
						format(string, sizeof(string), "Acusado: %s", PlayerCrime[giveplayerid][pBplayer]);
						SendClientMessage(playerid, COLOR_GRAD5,string);
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "  Você tem que estar em um carro da policia ou em alguma HQ da policia!");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[SetCrim]-----------------------------------------------
	if(strcmp(cmd, "/suspeito", true) == 0 || strcmp(cmd, "/su", true) == 0)
	{

	    if(IsPlayerConnected(playerid))
	    {
 	        if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/su)speito [id] [Descrição do Crime]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsACop(playerid))
			{
            	if(IsPlayerConnected(giveplayerid))
				{
 					if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar su em Policiais!");
						return 1;
					}
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
							GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/su)speito [id] [Descrição do Crime]");
								return 1;
							}
							if(PlayerInfo[giveplayerid][pJailed] == 2)
							{
								return SendClientMessage(playerid, COLOR_GRAD2, "Você não Pode dar /Su um Player Preso pelo Administrador!");
							}
							SetPlayerCriminal(giveplayerid,playerid, result);
							return 1;
					}
				}
				else
				{
						SendClientMessage(playerid, COLOR_GRAD1, "  Esse jogador não está conectado.");
						return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é um Policial !");
			}
		}
		return 1;
 }
//---------------------------------[/su2]----------------------------------------------

//----------------------------------[LOCK]-----------------------------------------------
	if(strcmp(cmd, "/trancar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new carid;
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
	   			return 1;
    		}
            if (gTeam[playerid] == 2 || gTeam[playerid] == 1)
			{
				if(gLastCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um carro de casa/alugado.");
					return 1;
				}
				else if(gLastCar[playerid] != 0 && gLastCar[playerid] != PlayerInfo[playerid][pPHousekey])
				{
					if (HireCar[playerid] != gLastCar[playerid] && HireCar[playerid] > 0)
					{
						gLastDriver[HireCar[playerid]] = 300;
						VTrancado[HireCar[playerid]] = 0;
						UnLockCar(HireCar[playerid]);
					}
					HireCar[playerid] = gLastCar[playerid];
				}
			}
			if (PlayerInfo[playerid][pPHousekey] == 255)
			{
				if(HireCar[playerid] == 0)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro.");
					return 1;
				}
			}
			carid = PlayerInfo[playerid][pPHousekey]+1;
			if(HireCar[playerid] > 0 && !SwitchKey[playerid])
			{
				carid = HireCar[playerid];
			}
			new lockstatus = VTrancado[carid];
			new Float:cx,Float:cy,Float:cz;
			GetVehiclePos(carid, cx, cy, cz);
			switch (lockstatus)
			{
				case 0:
				{
					if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro");
						return 1;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Veiculo Alugado~r~Fechado", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 1;
						LockCar(carid);
					}
					else if(PlayerInfo[playerid][pPHouseCarkey] == carid)
					{
						GameTextForPlayer(playerid, "~w~Veiculo da Casa ~r~Fechado", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 1;
						LockCar(carid);
						return 1;
					}
				}
				case 1:
				{
					if(HireCar[playerid] == 0 && PlayerInfo[playerid][pPHousekey] == 255)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro");
						return 1;
					}
					if(HireCar[playerid] == carid && !SwitchKey[playerid])
					{
						GameTextForPlayer(playerid, "~w~Veiculo Alugado~g~Aberto", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 0;
						UnLockCar(carid);
						SetPlayerVirtualWorld(playerid, 0);
						SetPlayerInterior(playerid, 0);
					}
					if (PlayerInfo[playerid][pPHouseCarkey] == carid)
					{
						GameTextForPlayer(playerid, "~w~Veiculo da Casa ~g~Aberto", 5000, 6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						VTrancado[carid] = 0;
						UnLockCar(carid);
                        SetPlayerVirtualWorld(playerid, 0);
                        SetPlayerInterior(playerid, 0);
						return 1;
					}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Erro");
				}
			}
			if(carid == 256)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce não tem um carro!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/chave", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]) || PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(PlayerInfo[playerid][pPHousekey] == i)
					{
						if(HouseInfo[i][hLock] == 1)
						{
							HouseInfo[i][hLock] = 0;
							GameTextForPlayer(playerid, "~w~Porta ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(HouseInfo[i][hLock] == 0)
						{
							HouseInfo[i][hLock] = 1;
							GameTextForPlayer(playerid, "~w~Porta ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~ Você não tem essa chave", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]) || PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i)
					{
						if(BizzInfo[i][bLocked] == 1)
						{
							BizzInfo[i][bLocked] = 0;
							GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(BizzInfo[i][bLocked] == 0)
						{
							BizzInfo[i][bLocked] = 1;
							GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Você não tem essa chave", 5000, 6);
						return 1;
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i+100)
					{
						if(SBizzInfo[i][sbLocked] == 1)
						{
       						SBizzInfo[i][sbLocked] = 0;
							GameTextForPlayer(playerid, "~w~Empresa ~g~Aberta", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
						if(SBizzInfo[i][sbLocked] == 0)
						{
							SBizzInfo[i][sbLocked] = 1;
							GameTextForPlayer(playerid, "~w~Empresa ~r~Fechada", 5000, 6);
							PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
							return 1;
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Você não tem essa chave", 5000, 6);
						return 1;
					}
				}
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/dado", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new dice = random(6)+1;
			if (gDice[playerid] == 1)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string, sizeof(string), "* %s jogou um dado e caiu no numero: %d", sendername,dice);
				ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem um dado, compre em uma 24/7, Dica: use /gps");
				return 1;
			}
		}
		return 1;
	}
	if (strcmp("/banco", cmdtext, true) == 0)
	{
	    if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
		|| PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234) || PlayerToPoint(1.5,playerid,241.0845,115.2740,1003.2188) || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987))
		{
		    TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
		}
		else
		{
            SendClientMessage(playerid, COLOR_GREY, " Você não está em um banco.");
		}
		return 1;
	}
	if(strcmp(cmd, "/comprar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (!PlayerToPoint(100, playerid,-30.875, -88.9609, 1004.53) && !PlayerToPoint(3, playerid,1508.4419,-1703.4607,14.0469))//centerpoint 24-7
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não esta em uma 24-7 ou Mercado, Vá até uma /gps!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /comprar [Numero do item]");
				SendClientMessage(playerid, COLOR_WHITE, "|______________ 24-7 ______________|");
				SendClientMessage(playerid, COLOR_GRAD1, "| 1: Celular 	   R$500		2: Agenda 	   R$5000");
				SendClientMessage(playerid, COLOR_GRAD2, "| 3: Dados 	   R$500		4: Camisinha   R$50");
				SendClientMessage(playerid, COLOR_GRAD4, "| 5: CD-Player   R$2500		6: Frango 	   R$10");
				SendClientMessage(playerid, COLOR_GRAD5, "| 7: Hamburger   R$10			8: Pizza 	   R$10");
				//SendClientMessage(playerid, COLOR_GRAD5, "| 9: 20 Creditos R$2000      10: 50 Creditos R$5000");
				return 1;
			}
			new item = strval(tmp);
			if (item == 1 && GetGranaTheus(playerid) >= 500)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 500 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 500 - price;
			        format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
					GranaTheus(playerid,- payout);
					BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
			    }
			    else
			    {
			        format(string, sizeof(string), "~r~-R$%d", 500);
					GameTextForPlayer(playerid, string, 5000, 1);
					GranaTheus(playerid,-500);
					BizzInfo[3][bTill] += 500;
                    ExtortionBiz(3, 500);
			    }
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				new randphone = 1000 + random(8999);//minimo 1000  maximo 14999
				PlayerInfo[playerid][pPnumber] = randphone;
				format(string, sizeof(string), "Seu novo número de celular é %d", randphone);
				SendClientMessage(playerid, COLOR_GRAD4, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Dê uma olhada nos seus documentos /rg");
				SendClientMessage(playerid, COLOR_WHITE, "Dica: Digite /ajudacelular em caso de dúvidas");
				return 1;
			}
			else if (item == 2 && GetGranaTheus(playerid) >= 5000)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 5000 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 5000 - price;
					GranaTheus(playerid,- payout);
					BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GranaTheus(playerid,-5000);
					BizzInfo[3][bTill] += 5000;
                    ExtortionBiz(3, 5000);
					format(string, sizeof(string), "~r~-R$%d", 5000);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                PlayerInfo[playerid][pPhoneBook] = 1;
				SendClientMessage(playerid, COLOR_GRAD4, "   Nova agenda telefônica comprada!");
				SendClientMessage(playerid, COLOR_MSG, "[BPF]: Digite /agenda <id/nome>.");
				return 1;
			}
			else if (item == 3 && GetGranaTheus(playerid) >= 500)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
			    {
					new skill = 500 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 500 - price;
					GranaTheus(playerid,- payout);
					BizzInfo[3][bTill] += payout;
                    ExtortionBiz(3, payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GranaTheus(playerid,-500);
					BizzInfo[3][bTill] += 500;
                    ExtortionBiz(3, 500);
					format(string, sizeof(string), "~r~-R$%d", 500);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				gDice[playerid] = 1;
				SendClientMessage(playerid, COLOR_GRAD4, "   Você comprou um dado! Aproveite.");
				SendClientMessage(playerid, COLOR_MSG, "[BPF]: Digite /dado");
				return 1;
			}
			else if (item == 4 && GetGranaTheus(playerid) >= 50)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 50 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 50 - price;
					GranaTheus(playerid,- payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GranaTheus(playerid,-50);
					format(string, sizeof(string), "~r~-R$%d", 50);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				Condom[playerid] ++;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Camisinha comprada.");
				SendClientMessage(playerid, COLOR_WHITE, "Agora você pode fazer sexo com segurança.");
				return 1;
			}
			else if (item == 5 && GetGranaTheus(playerid) >= 2500)
			{
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 2500 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 2500 - price;
					GranaTheus(playerid, - payout);
					format(string, sizeof(string), "~r~-$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GranaTheus(playerid, - 2500);
					format(string, sizeof(string), "~r~-$%d", 2500);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "CD-Player comprado.");
				SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /musica");
				PlayerInfo[playerid][pCDPlayer] = 1;
				return 1;
			}
			else if (item == 6 && GetGranaTheus(playerid) >= 10)
			{
			    if(Groceries[playerid][pChickens] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você tem muitos frangos, coma alguns antes de comprar mais !");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GranaTheus(playerid, - payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GranaTheus(playerid, - 10);
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
			    GranaTheus(playerid, - 10);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Frango comprado.");
				format(string, sizeof(string), "~r~-R$%d", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
				new rand = random(15);
				Groceries[playerid][pChickens] += 1;
				Groceries[playerid][pChicken] += rand;
				return 1;
			}
			else if (item == 7 && GetGranaTheus(playerid) >= 10)
			{
			    if(Groceries[playerid][pHamburgers] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você tem muitos Hamburgers, coma alguns antes de comprar mais!");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GranaTheus(playerid, - payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GranaTheus(playerid, - 10);
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
			    GranaTheus(playerid, - 10);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Hamburger Comprado.");
				format(string, sizeof(string), "~r~-R$%d", 10);
				GameTextForPlayer(playerid, string, 5000, 1);
				new rand = random(15);
				Groceries[playerid][pHamburgers] += 1;
				Groceries[playerid][pHamburger] += rand;
				return 1;
			}
			else if (item == 8 && GetGranaTheus(playerid) >= 10)
			{
			    if(Groceries[playerid][pPizzas] >= 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você tem muitas pizzas, coma algumas antes de comprar mais!");
			        return 1;
			    }
			    if(PlayerInfo[playerid][pTraderPerk] > 0)
		    	{
					new skill = 10 / 100;
					new price = (skill)*(PlayerInfo[playerid][pTraderPerk]);
					new payout = 10 - price;
					GranaTheus(playerid, - payout);
					format(string, sizeof(string), "~r~-R$%d", payout);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				else
				{
				    GranaTheus(playerid, - 10);
					format(string, sizeof(string), "~r~-R$%d", 10);
					GameTextForPlayer(playerid, string, 5000, 1);
				}
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD4, "Pizza Comprado.");
				new rand = random(15);
				Groceries[playerid][pPizzas] += 1;
				Groceries[playerid][pPizza] += rand;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não tem dinheiro o suficiente.");
			}
		}
		return 1;
	}
    if(strcmp(cmdtext, "/oculos", true) == 0 || strcmp(cmdtext, "/colocaroculos", true) == 0)
 	{
 	    new Float:X, Float:Y, Float:Z;
		TogglePlayerControllable(playerid, false);
		GetPlayerPos(playerid, X, Y, Z);
		SetPlayerCameraPos(playerid, X+0.1, Y+1, Z+0.6);
		SetPlayerCameraLookAt(playerid, X, Y, Z+0.6);
		SetPlayerFacingAngle(playerid, 0);
		PondoOculos[playerid] = true;
		TOculos = TextDrawCreate(220.000000, 339.000000, "~b~~h~~h~SHIFT~w~ para ver o proximo");
		TOculos2 = TextDrawCreate(220.000000, 360.000000, "~g~~h~~h~ESPACO~w~ escolhe o oculos");
		TextDrawUseBox(TOculos, true);
		TextDrawUseBox(TOculos2, true);
		TextDrawFont(TOculos, 1);
		TextDrawFont(TOculos2, 1);
		TextDrawLetterSize(TOculos, 0.739999, 1.800000);
		TextDrawLetterSize(TOculos2, 0.739999, 1.800000);
		TextDrawSetOutline(TOculos, 2);
		TextDrawSetOutline(TOculos2, 2);
		TextDrawShowForPlayer(playerid, TOculos);
		TextDrawShowForPlayer(playerid, TOculos2);
		return 1;
	}
	if(strcmp(cmdtext, "/toculos", true) == 0 || strcmp(cmdtext, "/tiraroculos", true) == 0)
	{
	    RemovePlayerAttachedObject(playerid, MAX_PLAYER_ATTACHED_OBJECTS-1);
	    SendClientMessage(playerid, 0xFFFFFFFF, "Você retirou seu oculos");
	    return 1;
	}
    if(strcmp(cmd,"/bone",true)==0 || strcmp(cmd,"/colocarbone",true)==0)
    {
    	tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
    	{
    		SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /bone [1 - 9]");
    		return 1;
    	}
    	new skin, id = strval(tmp), cap, slot = GetEmptySlot(playerid), count;
    	if(id != 1 && id != 2 && id != 3 && id != 4 && id != 5 && id != 6 && id != 7 && id != 8 && id != 9) return SendClientMessage(playerid, 0xFFFFFFAA, "Boné Inválido, [INFO] Use: /bone [1 - 9]");
        skin = (GetPlayerSkin(playerid) - 1);
    	switch(id)
    	{
    	    case 1:    cap = 18926;
    		case 2..9: cap = 18926 + id;
    	}
    	do
    	{
    	    if(skin == invalidskins[count]) return SendClientMessage(playerid, 0xFFFFFFAA, "[PlayStart] Sua skin Não Tem Suporte para Bonés");
    	    count++;
    	}
    	while(count < sizeof invalidskins);
    	if(skin < 0) skin = 0;
    	if(slot == -1) return SendClientMessage(playerid, 0xFFFFFFAA, "[PlayStart] Você Ja está Usando o Máximo de Objetos Possivel.");
        SendClientMessage(playerid, 0xFFFFFFAA, "[PlayStart] Boné Colocado Com sucesso, Para Retirar Digite /rbone.");
        SetPlayerAttachedObjectEx(playerid, slot, cap, 2, SkinBone[skin][0], SkinBone[skin][1], SkinBone[skin][2], SkinBone[skin][3], SkinBone[skin][4], SkinBone[skin][5]);
    	return 1;
    }
    if (strcmp(cmd, "/rbone", true) == 0 || strcmp(cmd, "/retirarbone", true) == 0 || strcmp(cmd, "/tirarbone", true) == 0)
    {
    	if(HaveCap(playerid))
    	{
    		RemovePlayerAttachedObject(playerid, pObject[playerid][oslot]);
    		pObject[playerid][oslot] = -1;
    		pObject[playerid][slotreserved] = false;
            SendClientMessage(playerid, 0xFFFFFFAA, "[PlayStart] Boné Removido Com Sucesso.");
    		return 1;
    	}
        return SendClientMessage(playerid, 0xFFFFFFAA, "[PlayStart] Você não Está usando Nenhum Boné.");
    }
	if(strcmp(cmdtext, "/comprararara", true) == 0)
	{
		if(Infoa[playerid][Grande] >= 5) return SendClientMessage(playerid, VERMELHO, "Sua Arara Está Grande e Pronta para ser vendida, Para vender digite /VenderArara !");
		if(GetGranaTheus(playerid)<2000)return SendClientMessage(playerid, BRANCO,"Você não tem R$2000!");
		if(Infoa[playerid][Arara]) return SendClientMessage(playerid, BRANCO, "Você já tem uma Arara!");
		SendClientMessage(playerid, BRANCO, "Você Comprou uma Arara!");
		SendClientMessage(playerid, BRANCO, "Ela irá crescer de Cinco a Cinco Minutos!");
		SendClientMessage(playerid, BRANCO, "Não se esqueça de Alimenta-lá! /Racão!");
		SetPlayerAttachedObject(playerid,0, 19079, 1, 0.319503, -0.089340, -0.185576, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000 );
		GranaTheus(playerid, -2000);
		Infoa[playerid][Arara] = true;
		Infoa[playerid][Tempo] = SetTimerEx("Crescimento", 300000, true, "i", playerid);
		return 1;
	}
	if(strcmp(cmdtext, "/alimentada", true) == 0)
	{
		if(Infoa[playerid][Grande] >= 5) return SendClientMessage(playerid, VERMELHO, "Sua Arara Está Grande e Pronta para ser vendida, Para vender digite /VenderArara !");
		if(!Infoa[playerid][Arara]) return SendClientMessage(playerid, VERMELHO, "Você não tem uma arara.");
		if(Infoa[playerid][Racao]) { SendClientMessage(playerid, BRANCO, "Arara Alimentada: {008000}Sim"); }
		else { SendClientMessage(playerid, BRANCO, "Arara Alimentada: {FF0000}Não"); }
		return 1;
	}
	if(strcmp(cmdtext, "/racao", true) == 0)
	{
		if(Infoa[playerid][Grande] >= 5) return SendClientMessage(playerid, VERMELHO, "Sua Arara Está Grande e Pronta para ser vendida, Para vender digite /VenderArara !");
		if(!Infoa[playerid][Arara]) return SendClientMessage(playerid, VERMELHO, "Você não tem uma arara.");
		if(Infoa[playerid][Racao]) return SendClientMessage(playerid, BRANCO, "Você já Alimentou sua Arara!");
		SendClientMessage(playerid, BRANCO, "Você Alimentou Sua Arara! Isso lhe custou R$200");
		GranaTheus(playerid, -200);
		Infoa[playerid][Racao] = true;
		return 1;
	}
	if(strcmp(cmdtext, "/venderarara", true) == 0)
	{
		if(!Infoa[playerid][Arara]) return SendClientMessage(playerid, BRANCO,"Você Não comprou nenhuma Arara!");
		if(Infoa[playerid][Grande] < 5) return SendClientMessage(playerid, BRANCO,"Sua Arara ainda não está grande!");
		Infoa[playerid][Grande] = 0;
		Infoa[playerid][Arara] = false;
		RemovePlayerAttachedObject(playerid, 0);
		GranaTheus(playerid, 10000);
		SendClientMessage(playerid, BRANCO, "Você Vendeu Sua Arara e ganhou R$10000!");
		return 1;
	}
	if(!strcmp("/tiraroculos",cmd,true))
	{
	    StopPlayerHoldingObject(playerid);
	    return 1;
	}
	if(strcmp(cmd, "/comprarcasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new Float:oldposx, Float:oldposy, Float:oldposz;
            new curdate = getdate();
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
					{
						format(string, sizeof(string), "   Você precisa ter nivel %d Para comprar! !", HouseInfo[h][hLevel]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Você tem uma casa para vender digite /vendercasa, você receberá o mesmo valor que foi pago!");
						return 1;
					}
					if(GetGranaTheus(playerid) > HouseInfo[h][hValue])
					{
						PlayerInfo[playerid][pPHousekey] = h;
	        	    	PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+1;
						HouseInfo[h][hOwned] = 1;
					    HouseInfo[h][hExitx] = 234.0843;
						HouseInfo[h][hExity] = 1064.6896;
						HouseInfo[h][hExitz] = 1084.2108;
						HouseInfo[h][hInt] = 6;
					    HouseInfo[h][hRentabil] = 1;
					    HouseInfo[h][hRent] = 200;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
                        HouseInfo[h][hDate] = curdate;
						GranaTheus(playerid,-HouseInfo[h][hValue]);
						/*PlayerPlayMusic(playerid);
						PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);*/
						GameTextForPlayer(playerid, "~w~Parabens pela compra ~n~~b~Para entrar digite /entrar", 5000, 3);
						SendClientMessage(playerid, COLOR_WHITE, "Parabéns pela sua nova casa!");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudacasa Em caso de duvidas!");
						PlayerInfo[playerid][pSpawn] = 1;
                        Text3DTheus();
						OnPropUpdate();
                        SalvarPlayer(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Você não tem dinheiro o suficiente. !");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/alugarquarto", true) == 0 || strcmp(cmd, "/alugar", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			for(new h = 0; h < sizeof(HouseInfo); h++)
			{
				if(PlayerToPoint(2.0, playerid, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]) && HouseInfo[h][hOwned] == 1 &&  HouseInfo[h][hRentabil] == 1)
				{
					if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Você tem uma casa, para vender digite /vendercasa, você receberá o mesmo valor que foi pago!");
						return 1;
					}
					if(GetGranaTheus(playerid) > HouseInfo[h][hRent])
					{
						PlayerInfo[playerid][pPHousekey] = h;
						PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+1;
						GranaTheus(playerid,-HouseInfo[h][hRent]);
						HouseInfo[h][hTakings] = HouseInfo[h][hTakings]+HouseInfo[h][hRent];
						//PlayerPlayMusic(playerid);
						GameTextForPlayer(playerid, "~w~Parabens pela compra ~n~~b~Para entrar digite /entrar", 5000, 3);
						SendClientMessage(playerid, COLOR_WHITE, "Parabéns pela sua nova casa!");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaaluguel Em caso de duvidas!");
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "Você não tem dinheiro o suficiente.");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/alugarcarro", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
		    new newcar = GetPlayerVehicleID(playerid);
			if(IsAAlugCar(newcar))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetGranaTheus(playerid) <  SBizzInfo[1][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Você tem que desalugar o outro veiculo !");
                    RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
                for(new i=0; i<MaiorID; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem já alugou esse veiculo !");
				        TogglePlayerControllable(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
				GranaTheus(playerid,-SBizzInfo[1][sbEntranceCost]);
				SBizzInfo[1][sbTill] += SBizzInfo[1][sbEntranceCost];
				ExtortionSBiz(1, SBizzInfo[1][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return 1;
			}
			else if(IsAVipCar(newcar))
			{
				new hirefee = HireCost(GetPlayerVehicleID(playerid));
				if (GetGranaTheus (playerid) <  SBizzInfo[23][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Você tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
                for(new i=0; i<MaiorID; i++)
				{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem já alugou esse veiculo !");
				        TogglePlayerControllable(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				}
				GranaTheus(playerid,-SBizzInfo[22][sbEntranceCost]);
				SBizzInfo[22][sbTill] += SBizzInfo[22][sbEntranceCost];
				ExtortionSBiz(22, SBizzInfo[22][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarcarro~n~~g~ou /trancar ~w~ para trancar o carro.",hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/alugarheli", true) == 0)
	{
        if(IsPlayerConnected(playerid))
		{
            new hirefee = HireCost(GetPlayerVehicleID(playerid));
            if(IsAAlugHeli(GetPlayerVehicleID(playerid)))
			{
				if (GetGranaTheus (playerid) <  SBizzInfo[19][sbEntranceCost])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não tem esse dinheiro !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
				if(HireCar[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "Você tem que desalugar o outro veiculo !");
					RemovePlayerFromVehicleEx(playerid);
					return 1;
				}
                for(new i=0; i<MaiorID; i++)
				{
				    if(IsPlayerConnected(i))
					{
				    if(HireCar[i] == GetPlayerVehicleID(playerid))
				    {
				        SendClientMessage(playerid, COLOR_GREY, "Alguem já alugou esse veiculo !");
				        TogglePlayerControllable(playerid, 1);
				        RemovePlayerFromVehicleEx(playerid);
				        return 1;
				    }
				    }
				}
				GranaTheus(playerid,-SBizzInfo[18][sbEntranceCost]);
				SBizzInfo[18][sbTill] += SBizzInfo[18][sbEntranceCost];
				ExtortionSBiz(18, SBizzInfo[18][sbEntranceCost]);
				HireCar[playerid] = GetPlayerVehicleID(playerid);
				OnPropUpdate();
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce pode ~r~/desalugarheli~n~~g~ou /trancar ~w~ para trancar o heli.",hirefee);
				TogglePlayerControllable(playerid, 1);
				GameTextForPlayer(playerid, string, 5000, 3);
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desalugarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    new idcar = GetPlayerVehicleID(playerid);
			    if(idcar == HireCar[playerid])
			    {
			        TogglePlayerControllable(playerid, 1);
			    }
			    SetVehicleToRespawn(HireCar[playerid]);
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce desalugou o carro", 5000, 3);
				RemovePlayerFromVehicleEx(playerid);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desalugarheli", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
			    new idcar = GetPlayerVehicleID(playerid);
			    if(idcar == HireCar[playerid])
			    {
			        TogglePlayerControllable(playerid, 1);
			    }
			    SetVehicleToRespawn(HireCar[playerid]);
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce desalugou o heli", 5000, 3);
				RemovePlayerFromVehicleEx(playerid);
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/trocarchave", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(!SwitchKey[playerid])
			{
				if(HireCar[playerid] != 299)
				{
					SwitchKey[playerid] = 1;
					GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro de casa", 5000, 6);
				}
				else
				{
					GameTextForPlayer(playerid, "~w~Voce nao possui uma chave de carro", 5000, 6);
				}
				return 1;
			}
			else
			{
				SwitchKey[playerid] = 0;
				GameTextForPlayer(playerid, "~w~Voce controla a chave do seu carro alugado", 5000, 6);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/darchaves", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			new car;
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /darchaves [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(HireCar[playerid] == 299 && PlayerInfo[playerid][pPHousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "  Você não tem uma chave para dar");
				return 1;
			}
			else
			{
				if(HireCar[playerid] != 299 && SwitchKey[playerid] == 0)
				{
					car = HireCar[playerid];
					VTrancado[car] = 0;
					UnLockCar(car);
					HireCar[playerid] = 299;
				}
				else
				{
					car = PlayerInfo[playerid][pPHousekey];
				}
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					if(ProxDetectorS(5.0, playerid, giveplayerid))
					{
						if(HireCar[giveplayerid] != 299)
						{
							VTrancado[HireCar[giveplayerid]] = 0;
							UnLockCar(HireCar[giveplayerid]);
						}
						HireCar[giveplayerid] = car;
						HireCar[playerid] = 999;
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "   Você deu a chave do seu veiculo para %s", giveplayer);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "   Você recebeu a chave do veiuclo de %s", sendername);
						SendClientMessage(giveplayerid, COLOR_GRAD1, string);
						format(string, sizeof(string), "* %s da uma chave para %s.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desalugarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(HireCar[playerid] != 299)
			{
				VTrancado[HireCar[playerid]] = 0;
				UnLockCar(HireCar[playerid]);
				HireCar[playerid] = 299;
				GameTextForPlayer(playerid, "~w~Voce nao alugou nenhum carro", 5000, 3);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desalugar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "   Você desalugou uma casa, e agora está desabrigado!");
				PlayerInfo[playerid][pPHousekey] = 255;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, " Você não alugou nenhuma casa.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/cofrecasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			new borse = PlayerInfo[playerid][pPHousekey];
			if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /cofrecasa [quantidade]");
					format(string, sizeof(string), "  Você tem $%d em seu cofre.", HouseInfo[borse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				new cashdeposit = strval(tmp);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /cofrecasa [quantidade]");
					format(string, sizeof(string), "  Você tem $%d em seu cofre.", HouseInfo[borse][hTakings]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
					return 1;
				}
				if (cashdeposit >  HouseInfo[borse][hTakings] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem tudo isso !");
					return 1;
				}
				if (!PlayerToPoint(100, playerid,HouseInfo[borse][hExitx],HouseInfo[borse][hExity],HouseInfo[borse][hExitz]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você está longe de sua casa !");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GranaTheus(playerid,cashdeposit);
					HouseInfo[borse][hTakings]=HouseInfo[borse][hTakings]-cashdeposit;
					format(string, sizeof(string), "  Você retirou $%d de seu cofre Total: $%d ", cashdeposit,HouseInfo[borse][hTakings]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem uma casa.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/admvemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /admvemp [empresa id]");
				return 1;
			}
			new biz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				BizzInfo[biz][bLocked] = 1;
				BizzInfo[biz][bOwned] = 0;
				strmid(BizzInfo[biz][bOwner], "O estado", 0, strlen("O estado"), 255);
				strmid(BizzInfo[biz][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", biz);
				GameTextForPlayer(playerid, string, 10000, 3);
				Text3DTheus();
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/admvsemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /admvsemp [sempresa id]");
				return 1;
			}
			new sbiz = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				SBizzInfo[sbiz][sbLocked] = 1;
				SBizzInfo[sbiz][sbOwned] = 0;
				strmid(SBizzInfo[sbiz][sbOwner], "O estado", 0, strlen("O estado"), 255);
				strmid(SBizzInfo[sbiz][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", sbiz);
				GameTextForPlayer(playerid, string, 10000, 3);
				Text3DTheus();
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/admvcasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /admvcasa [Casa id]");
				return 1;
			}
			new House = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				HouseInfo[House][hHel] = 0;
				HouseInfo[House][hArm] = 0;
				HouseInfo[House][hHealthx] = 0;
				HouseInfo[House][hHealthy] = 0;
				HouseInfo[House][hHealthz] = 0;
				HouseInfo[House][hArmorrx] = 0;
				HouseInfo[House][hArmorry] = 0;
				HouseInfo[House][hArmorrz] = 0;
				HouseInfo[House][hLock] = 1;
				HouseInfo[House][hOwned] = 0;
				HouseInfo[House][hVec] = 475;
				HouseInfo[House][hVcol1] = -1;
				HouseInfo[House][hVcol2] = -1;
				strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
				GameTextForPlayer(playerid, string, 10000, 3);
				Text3DTheus();
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/admvcasasall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if (PlayerInfo[playerid][pAdmin] >= 3000)
			{
				new House = 0;
				while (House < sizeof(HouseInfo))
				{
					HouseInfo[House][hHel] = 0;
					HouseInfo[House][hArm] = 0;
					HouseInfo[House][hHealthx] = 0;
					HouseInfo[House][hHealthy] = 0;
					HouseInfo[House][hHealthz] = 0;
					HouseInfo[House][hArmorrx] = 0;
					HouseInfo[House][hArmorry] = 0;
					HouseInfo[House][hArmorrz] = 0;
					HouseInfo[House][hLock] = 1;
					HouseInfo[House][hOwned] = 0;
					HouseInfo[House][hVec] = 475;
					HouseInfo[House][hVcol1] = -1;
					HouseInfo[House][hVcol2] = -1;
					strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
					GameTextForPlayer(playerid, string, 10000, 3);
					House++;
				}
				Text3DTheus();
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/admvtudin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if (PlayerInfo[playerid][pAdmin] >= 3000)
			{
				new House = 0;
                new TheusForever = 0;
				while (House < sizeof(HouseInfo))
				{
                    format(gstring, sizeof(gstring), "Casa ID: %d, Dono: %s Vendida", House,HouseInfo[House][hOwner]);
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                    HouseInfo[House][hHel] = 0;
					HouseInfo[House][hArm] = 0;
					HouseInfo[House][hHealthx] = 0;
					HouseInfo[House][hHealthy] = 0;
					HouseInfo[House][hHealthz] = 0;
					HouseInfo[House][hArmorrx] = 0;
					HouseInfo[House][hArmorry] = 0;
					HouseInfo[House][hArmorrz] = 0;
					HouseInfo[House][hLock] = 1;
					HouseInfo[House][hOwned] = 0;
					HouseInfo[House][hVec] = 475;
					HouseInfo[House][hVcol1] = -1;
					HouseInfo[House][hVcol2] = -1;
					strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
					GameTextForPlayer(playerid, string, 10000, 3);
					House++;
                    TheusForever ++;
				}
                new biz = 0;
				while (biz < sizeof(BizzInfo))
				{
                    format(gstring, sizeof(gstring), "Empresa ID: %d, Dono: %s Vendida", biz,BizzInfo[biz][bOwner]);
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                    BizzInfo[biz][bLocked] = 1;
    				BizzInfo[biz][bOwned] = 0;
    				strmid(BizzInfo[biz][bOwner], "O estado", 0, strlen("O estado"), 255);
    				strmid(BizzInfo[biz][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
    				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
    				format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", biz);
    				GameTextForPlayer(playerid, string, 10000, 3);
                    biz ++;
                    TheusForever ++;
                }
                new sbiz = 0;
				while (sbiz < sizeof(SBizzInfo))
				{
                    format(gstring, sizeof(gstring), "Mini Empresa ID: %d, Dono: %s Vendida", sbiz,SBizzInfo[sbiz][sbOwner]);
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
                    SBizzInfo[sbiz][sbLocked] = 1;
    				SBizzInfo[sbiz][sbOwned] = 0;
    				strmid(SBizzInfo[sbiz][sbOwner], "O estado", 0, strlen("O estado"), 255);
    				strmid(SBizzInfo[sbiz][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
    				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
    				format(string, sizeof(string), "~w~Voce vendeu a empresa ID:%d", sbiz);
    				GameTextForPlayer(playerid, string, 10000, 3);
                    sbiz ++;
                    TheusForever ++;
                }
				Text3DTheus();
				OnPropUpdate();
                format(gstring, sizeof(gstring), "Ao Todo São %d Vendidos, Atualizando: Sucesso!", TheusForever);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/admvcasaid", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				for(new House = 0; House < sizeof(HouseInfo); House++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[House][hEntrancex], HouseInfo[House][hEntrancey], HouseInfo[House][hEntrancez]))
					{
						format(string, sizeof(string), "Casa: %d", House);
						SendClientMessage(playerid, COLOR_GRAD2, string);
						HouseInfo[House][hHel] = 0;
						HouseInfo[House][hArm] = 0;
						HouseInfo[House][hHealthx] = 0;
						HouseInfo[House][hHealthy] = 0;
						HouseInfo[House][hHealthz] = 0;
						HouseInfo[House][hArmorrx] = 0;
						HouseInfo[House][hArmorry] = 0;
						HouseInfo[House][hArmorrz] = 0;
						HouseInfo[House][hLock] = 1;
						HouseInfo[House][hOwned] = 0;
						HouseInfo[House][hVec] = 475;
						HouseInfo[House][hVcol1] = -1;
						HouseInfo[House][hVcol2] = -1;
						strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						format(string, sizeof(string), "~w~Voce vendeu a propriedade ID:%d", House);
						GameTextForPlayer(playerid, string, 10000, 3);
						Text3DTheus();
						OnPropUpdate();
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/vendercasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPHousekey] == 255)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Você não tem casa.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você é casado ( a ) não pode vender a casa !");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPHousekey] != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				new House = PlayerInfo[playerid][pPHousekey];
				HouseInfo[House][hHel] = 0;
				HouseInfo[House][hArm] = 0;
				HouseInfo[House][hHealthx] = 0;
				HouseInfo[House][hHealthy] = 0;
				HouseInfo[House][hHealthz] = 0;
				HouseInfo[House][hArmorrx] = 0;
				HouseInfo[House][hArmorry] = 0;
				HouseInfo[House][hArmorrz] = 0;
				HouseInfo[House][hLock] = 1;
				HouseInfo[House][hOwned] = 0;
				HouseInfo[House][hVec] = 475;
				HouseInfo[House][hVcol1] = -1;
				HouseInfo[House][hVcol2] = -1;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(HouseInfo[House][hOwner], "O estado", 0, strlen("O estado"), 255);
				ConsumingMoney[playerid] = 1;
				GranaTheus(playerid,HouseInfo[House][hValue]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu a casa por ~n~~g~R$%d", HouseInfo[House][hValue]);
				GameTextForPlayer(playerid, string, 10000, 3);
				PlayerInfo[playerid][pPHousekey] = 255;
				if(PlayerInfo[playerid][pLocal] == House)
				{
					SetPlayerInterior(playerid,0);
					SetPlayerPos(playerid,HouseInfo[House][hEntrancex],HouseInfo[House][hEntrancey],HouseInfo[House][hEntrancez]);
					PlayerInfo[playerid][pInt] = 0;
				}
				Text3DTheus();
				OnPropUpdate();
                SalvarPlayer(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem casa.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/moveis", true) == 0 || strcmp(cmd, "/mv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new House = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (House != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /moveis [Numero do iten]");
					SendClientMessage(playerid, COLOR_WHITE, "|______________ Moveis da casa ______________|");
					SendClientMessage(playerid, COLOR_GRAD2, "| 1: Vida  R$50000");
					SendClientMessage(playerid, COLOR_GRAD3, "| 2: Colete R$100000");
					return 1;
				}
				new item = strval(tmp);
				switch (item)
				{
					case 1:
					{
						if(GetGranaTheus(playerid) < 50000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "Voce não tem dinheiro suficiente ");
							return 1;
						}
						HouseInfo[House][hHel] = 1;
						GranaTheus(playerid,-50000);
						SBizzInfo[6][sbTill] += 50000;//vida buisness
						ExtortionSBiz(6, 50000);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Sua casa agora tem upgrade de vida, Digite /vida.");
					}
					case 2:
					{
					    if(!IsACop(playerid))
					    {
							SendClientMessage(playerid, COLOR_GREY, "   Você não pode comprar isso, você não é um policial !");
							return 1;
					    }
						if(GetGranaTheus(playerid) < 100000)
						{
							SendClientMessage(playerid, COLOR_GRAD5, "Voce não tem dinheiro suficiente !");
							return 1;
						}
						HouseInfo[House][hArm] = 1;
						GranaTheus(playerid,-100000);
						SBizzInfo[6][sbTill] += 100000;//vida buisness
						ExtortionSBiz(6, 100000);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_GRAD5, "Sua casa agora tem upgrade de colete, Digite /vida.");
					}
					default:
					{
						SendClientMessage(playerid, COLOR_GREY, "Número de móvel desconhecido.");
					}
				}
				OnPropUpdate();
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma casa");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/aluguel", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /aluguel [Preço]");
					return 1;
				}
				if(strval(tmp) < 1 || strval(tmp) > 99999)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Preço Mínimo R$1, Maximo R$99999.");
					return 1;
				}
				HouseInfo[borse][hRent] = strval(tmp);
				Text3DTheus();
				OnPropUpdate();
				format(string, sizeof(string), "Aluguel definido para: R$%d", HouseInfo[borse][hRent]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Voce nao tem uma casa");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/despejartodos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
    for(new i = 0; i < MaiorID; i++)
				{
					if(IsPlayerConnected(i))
					{
						if(i != playerid)
						{
							if (PlayerInfo[i][pPHousekey] == PlayerInfo[playerid][pPHousekey] )
							{
								SendClientMessage(i, COLOR_WHITE, "Você foi despejado de sua casa.");
								SendClientMessage(playerid, COLOR_WHITE, "Você expulsou todos os inquilinos de sua casa.");
								PlayerInfo[i][pPHousekey] = 255;
								return 1;
							}
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é dono de uma casa !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/despejar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /despejar [id]");
				}
				new target;
				//target = strval(tmp);
				target = ReturnUser(tmp);
				if (target == playerid)
				{
					SendClientMessage(target, COLOR_WHITE, "Você não pode despejar a si mesmo.");
					return 1;
				}
				if(IsPlayerConnected(target))
				{
				    if(target != INVALID_PLAYER_ID)
				    {
						if(PlayerInfo[target][pPHousekey] == PlayerInfo[playerid][pPHousekey])
						{
							SendClientMessage(target, COLOR_WHITE, "Você foi despejado");
							SendClientMessage(playerid, COLOR_WHITE, "Você despejou o jogador");
							PlayerInfo[target][pPHousekey] = 255;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_WHITE, "O Jogador não alugou sua casa !");
						    return 1;
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é dono de uma casa !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/alugada", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPHousekey];
			GetPlayerName(playerid, playername, sizeof(playername));
			if (borse != 255 && strcmp(playername, HouseInfo[PlayerInfo[playerid][pPHousekey]][hOwner], true) == 0)
			{
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /alugada [0 - Nao / 1 - Sim]");
				}
				HouseInfo[borse][hRentabil] = strval(tmp);
				OnPropUpdate();
				Text3DTheus();
				format(string, sizeof(string), "Status do aluguel da casa setado para - %d.", HouseInfo[borse][hRentabil]);
				SendClientMessage(playerid, COLOR_WHITE, string);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não é dono de uma casa !");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ligar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ligar [Telefone]");
				return 1;
			}
			if(PlayerInfo[playerid][pConnectTime] < 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você precisa jogar pelo menos 4 horas para fazer ligações!");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um celular");
				return 1;
			}
			/*if(PlayerInfo[playerid][pCreditos] < 2)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce não tem créditos suficientes, compre mais na 24-7!");
	            return 1;
	        }*/
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s pega o celular.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			if(phonenumb == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você está ligando para ninguém");
				return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce não pode ligar para si mesmo");
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce ja está em uma ligação...");
				return 1;
			}
			for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
                                if(helptrampando[giveplayerid] == 1)
                                {
                                    SendClientMessage(playerid, COLOR_GRAD1, "   Você Não pode ligar Para um Helper em modo Trabalho, mande /par!");
                                    return 1;
                                }
                                if(admtrampando[giveplayerid] == 1)
                                {
                                    SendClientMessage(playerid, COLOR_GRAD1, "   Você Não pode ligar Para um Administrador em modo Trabalho, mande /par!");
                                    return 1;
                                }
                                if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   O celular chamado está fora da área de cobertura ou está desligado !");
						            return 1;
						        }
								if (Mobile[giveplayerid] == 255)
								{
									format(string, sizeof(string), "Seu celular está tocando (/At) Chamando: %s", sendername);
									SendClientMessage(giveplayerid, COLOR_YELLOW, string);
									GetPlayerName(giveplayerid, sendername, sizeof(sendername));
									RingTone[giveplayerid] = 10;
									format(string, sizeof(string), "* %s's está tocando o celular.", sendername);
									PlayerPlaySound(giveplayerid, 1142, 0.0, 0.0, 0.0);
									PlayerPlaySound(playerid, 1142, 0.0, 0.0, 0.0);
									SendClientMessage(playerid, COLOR_MSG, "[BPF]: Use 'T' para falar, digite /des para desligar");
									SendClientMessage(playerid, COLOR_MSG, "[BPF]: Obs: Se Não desligar,digite /cellout !");
									ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									CellTime[playerid] = 1;
									//GameTextForPlayer(playerid,"~r~ -2 Creditos", 5000, 1);
									//PlayerInfo[playerid][pCreditos] -= 2;
								    SBizzInfo[2][sbTill] += 1000;
			                        ExtortionSBiz(2, 1000);
									return 1;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  Você acabou de ligar para um número ocupado...");
		}
		return 1;
	}
	if(strcmp(cmd, "/sms", true) == 0 || strcmp(cmd, "/t", true) == 0 || strcmp(cmd, "/sms", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
		{
		    if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce não está logado!");
	            return 1;
	        }
	        /*if(PlayerInfo[playerid][pCreditos] < 1)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Voce não tem créditos suficientes compre mais na 24-7!");
	            return 1;
	        }*/
			if(PlayerInfo[playerid][pConnectTime] < 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você precisa jogar pelo menos 4 horas para mandar sms!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] [INFO] Use: /sms [N° do Celular] [Texto] «");
				return 1;
			}
			if(PlayerInfo[playerid][pPnumber] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Você não tem um celular, compre um na 24/7 «");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s pegou o celular.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /sms [telefone] [texto]");
				return 1;
			}
			if(TentouDivulgar(result))
            {
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            }
            for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   O celular chamado está fora da área de cobertura ou está desligado !");
						            return 1;
						        }
								format(string, sizeof(string), "SMS: %s, enviou: %s (%d)", result,sendername,PlayerInfo[playerid][pPnumber]);
								GetPlayerName(giveplayerid, sendername, sizeof(sendername));
								RingTone[giveplayerid] =20;
								SendClientMessage(playerid, COLOR_WHITE, "SMS Enviado");
								SendClientMessage(giveplayerid, COLOR_YELLOW, string);
								print(string);
								SendClientMessage(playerid,  COLOR_YELLOW, string);
								//GameTextForPlayer(playerid,"~r~ -1 Credito", 5000, 1);
								//PlayerInfo[playerid][pCreditos] -= 1;
								SBizzInfo[2][sbTill] += 50;
                                ExtortionSBiz(2, 50);

					           	Mobile[playerid] = 255;
								return 1;
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, " Falha ao enviar a mensagem!");
		}
		return 1;
	}
	if(strcmp(cmd, "/equipargov", true) == 0)
	{
		if(PlayerToPoint(5.0,playerid, 346.1226,161.8205,1025.7964))
		{
		    if(PlayerInfo[playerid][pLider] == 7)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Você pegou seus Equipamentos de proteção");
			    SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				return 1;
			}
			else if(PlayerInfo[playerid][pMembro] == 7)
			{
			    SendClientMessage(playerid, COLOR_WHITE, "Você pegou seus Equipamentos");
			    ResetPlayerWeapons(playerid);
			    SetPlayerArmour(playerid, 100);
				SetPlayerHealth(playerid, 100);
				GivePlayerWeapon(playerid, 3, 1);
				GivePlayerWeapon(playerid, 24, 150);
				GivePlayerWeapon(playerid, 29, 650);
				GivePlayerWeapon(playerid, 31, 450);
				return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "Você não é um membro da prefeitura!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "Você não está no lugar de equipar em sua HQ");
        }
        return 1;
	}
//----------------------------------[Skin]-----------------------------------------------
	if(strcmp(cmd,"/meuskin",true) == 0)
	if(PlayerToPoint(10.0,playerid,205.1173,-159.3505,1000.5234) || PlayerToPoint(10.0,playerid,207.9093,-104.6899,1005.1328) || PlayerToPoint(3.0,playerid,414.1574,2536.4773,10.00008) || PlayerToPoint(50.0,playerid,162.6288,-86.3102,1001.8047))
	{
		if(PlayerInfo[playerid][pMembro] > 0 || PlayerInfo[playerid][pLider] > 0) return SendClientMessage(playerid, COLOR_GREY, " * Você possui uma profissão, só pode usar as skins dela,digite /roupas");
		new skin;
		tmp=strtok(cmdtext,idx);
		if(!strlen(tmp)) return SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /meuskin [id da skin] - Custo R$ 500");
		skin=strval(tmp);
		if(skin==3 || skin==4 || skin==5 || skin==6 || skin==12 || skin==282 || skin==288 || skin==283 || skin==281 || skin==280 || skin==72 || skin==287 || skin==115 || skin==116 || skin==173 || skin==174 || skin==175 || skin==176 || skin==41 || skin==216 || skin==121 || skin==122
	    || skin==169 || skin==179 || skin==127 || skin==165 || skin==186 || skin==93 || skin==141 || skin==105  || skin==219 || skin==269 || skin==195 || skin==271 || skin==106 || skin==107 || skin==30 || skin==47 || skin==48 || skin==285 || skin==191 || skin==73 || skin==103 || skin==104
	    || skin==109 || skin==110 || skin==21 || skin==28 || skin==29 || skin==265 || skin==267 || skin==287 || skin==228 || skin==114 || skin==120 || skin==147 || skin==294 || skin==227 || skin==61 || skin==171 || skin==123 || skin==59 || skin==102 || skin==108 || skin==117
	    || skin==171 || skin==217 || skin==203 || skin==247 || skin==248 || skin==249 || skin==254 || skin==204 || skin==118 || skin==186 || skin==13 || skin==15 || skin==19 || skin==43
	    || skin==46 || skin==153 || skin==163 || skin==164 || skin==166 || skin==298 || skin==295 || skin==299 || skin==296 || skin==181 || skin==211 || skin>=300) return SendClientMessage(playerid, COLOR_GREY, "Esta Skin é De Uma Profissão !");
		SetPlayerSkin(playerid,skin);
		PlayerInfo[playerid][pSkin] = skin;
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você comprou novo skin por R$500");
		GranaTheus(playerid,-500);
		SBizzInfo[6][sbTill] += 500;
		ExtortionSBiz(6, 500);
		return 1;
	}
//----------------------------------[pickup]-----------------------------------------------
	if(strcmp(cmd, "/atender", true) == 0 || strcmp(cmd, "/at", true) == 0)
	{
    	if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
        if(IsPlayerConnected(playerid))
		{
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você já está em uma ligação.");
				return 1;
			}
   for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(Mobile[i] == playerid)
					{
						Mobile[playerid] = i; //caller connecting
						SendClientMessage(i,  COLOR_GRAD2, "Atendeu o celular.");
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s atendeu o celular.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						SetPlayerSpecialAction(playerid,SPECIAL_ACTION_USECELLPHONE);
						RingTone[playerid] = 0;
					}

				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desligar", true) == 0 || strcmp(cmd, "/des", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  COLOR_GRAD2, "   Desligaram do outro lado da linha.");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COLOR_GRAD2, "   Você desligou seu celular.");
							Mobile[caller] = 255;
                            StopMusic(playerid);
                            StopMusic(caller);
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return 1;
					}
				}
			}
			SendClientMessage(playerid,  COLOR_GRAD2, "   Você guardou seu celular no bolso.");
			new pSpecialAction = GetPlayerSpecialAction(playerid);
			if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		return 1;
	}
//-----------------------[RONDA]--------------------
    if(strcmp(cmd,"/rondar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1 || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16 || PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11 || PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3
			|| PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32 || PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
			{
			    if(EmRondaCop[playerid] >= 1)
			    {
			    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não esta mais em serviço.");
			        EmRondaCop[playerid] = 0;
			        GetPlayerName(playerid,sendername,sizeof(sendername));
			        format(string, sizeof(string), "O Policial %s saiu de modo ronda e não atendera seus chamados.", sendername);
	    			OOCNews(COLOR_LIGHTRED,string);
                    Copsronda -= 1;
			    }
			    else
			    {
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora você está de serviço  e poderá receber chamadas de pessoas que precisam.");
			        EmRondaCop[playerid] = 1;
			        GetPlayerName(playerid,sendername,sizeof(sendername));
			        format(string, sizeof(string), "O Policial %s está rondando, /servico policia para chama-lo.", sendername);
	    			OOCNews(COLOR_LIGHTRED,string);
                    Copsronda += 1;
				}
			}
		}
		return 1;
	}
//----------------------------[ORELHAO]--------------------------------------------------
	if(strcmp(cmd, "/orelhao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerToPoint(3.0, playerid,1535.5697,-1637.5358,13.5469) || PlayerToPoint(3.0, playerid,1710.8175,-1605.0188,13.5469) || PlayerToPoint(3.0, playerid,1808.1926,-1598.6720,13.5469) || PlayerToPoint(3.0, playerid,1611.2460,-1713.0765,13.5469) || PlayerToPoint(3.0, playerid,1362.9312,-1751.3467,13.5244) || PlayerToPoint(3.0, playerid,1804.5630,-1167.7408,23.8281) || PlayerToPoint(3.0, playerid,814.5628,-1355.5433,13.5414) ||
			PlayerToPoint(3.0, playerid,839.7822,-1339.5476,7.1719) || PlayerToPoint(3.0, playerid,522.3236,-1515.9530,14.5936) || PlayerToPoint(3.0, playerid,523.9922,-1525.5927,14.7482) || PlayerToPoint(3.0, playerid,547.3288,-1498.3148,14.4988) || PlayerToPoint(3.0, playerid,637.4054,-1228.4910,17.8721) || PlayerToPoint(3.0, playerid,356.4761,-1365.3461,14.4760) ||
		    PlayerToPoint(3.0, playerid,338.9698,-1397.1982,14.2238) || PlayerToPoint(3.0, playerid,248.2463,-1448.8539,13.5899) || PlayerToPoint(3.0, playerid,2232.8149,-1165.7214,25.8906)  || PlayerToPoint(3.0, playerid,2477.8000000,-1939.7000000,13.4000000))
            {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /orelhao [Nº TELEFONE]");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s disca algum numero no telefone.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			new phonenumb = strval(tmp);
			if(phonenumb == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você está ligando para ninguém");
				return 1;
			}
			if(phonenumb == PlayerInfo[playerid][pPnumber])
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce não pode ligar para si mesmo");
				return 1;
			}
			if(Mobile[playerid] != 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Voce ja está em uma ligação...");
				return 1;
			}
   for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(PlayerInfo[i][pPnumber] == phonenumb && phonenumb != 0)
					{
						giveplayerid = i;
						Mobile[playerid] = giveplayerid; //caller connecting
						if(IsPlayerConnected(giveplayerid))
						{
						    if(giveplayerid != INVALID_PLAYER_ID)
						    {
						        if(PhoneOnline[giveplayerid] > 0)
						        {
						            SendClientMessage(playerid, COLOR_GREY, "   O celular chamado está fora da área de cobertura ou está desligado !");
						            return 1;
						        }
								if (Mobile[giveplayerid] == 255)
								{
									format(string, sizeof(string), "Seu celular está tocando (/At) Chamando: %s", sendername);
									SendClientMessage(giveplayerid, COLOR_YELLOW, string);
									GetPlayerName(giveplayerid, sendername, sizeof(sendername));
									RingTone[giveplayerid] = 10;
									format(string, sizeof(string), "* %s's está tocando o celular.", sendername);
									//PlayerPlaySound(giveplayerid, 1142, 0.0, 0.0, 0.0);
									//PlayerPlaySound(playerid, 1142, 0.0, 0.0, 0.0);
									ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
									SendClientMessage(playerid, COLOR_MSG, "[BPF]: Use 'T' para falar, digite /des para desligar");
									CellTime[playerid] = 1;
									SBizzInfo[2][sbTill] += 500;
                                    ExtortionSBiz(2, 500);
									return 1;
								}
							}
						}
					}
				}
			}
			SendClientMessage(playerid, COLOR_GRAD2, "  Você acabou de ligar para 1 número ocupado...");}
		}
		return 1;
	}
//DESLIGAR ORELHAO
 	if(strcmp(cmd, "/desligarorelhao", true) == 0 || strcmp(cmd, "/deso", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new caller = Mobile[playerid];
			if(IsPlayerConnected(caller))
			{
			    if(caller != INVALID_PLAYER_ID)
			    {
					if(caller != 255)
					{
						if(caller < 255)
						{
							SendClientMessage(caller,  COLOR_GRAD2, "Desligou.");
							CellTime[caller] = 0;
							CellTime[playerid] = 0;
							SendClientMessage(playerid,  COLOR_GRAD2, "Desligou.");
							Mobile[caller] = 255;
						}
						Mobile[playerid] = 255;
						CellTime[playerid] = 0;
						RingTone[playerid] = 0;
						return 1;
					}
				}
			}
			SendClientMessage(playerid,  COLOR_GRAD2, "Colocou o orelhão no gancho.");
			new pSpecialAction = GetPlayerSpecialAction(playerid);
			if (pSpecialAction == SPECIAL_ACTION_USECELLPHONE)
			{
				SetPlayerSpecialAction(playerid,SPECIAL_ACTION_STOPUSECELLPHONE);
			}
		}
		return 1;
	}
//----------------------------------[TIME]-----------------------------------------------
    if(strcmp(cmd, "/fixr", true) == 0)
    {
        if(IsPlayerConnected(playerid))
		{
			PlayerFixRadio(playerid);
		}
		return 1;
	}
	if(strcmp(cmd, "/horas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    new mtext[20];
			getdate(year, month, day);
			if(month == 1) { mtext = "Janeiro"; }
			else if(month == 2) { mtext = "Fevereiro"; }
			else if(month == 3) { mtext = "Marco"; }
			else if(month == 4) { mtext = "Abril"; }
			else if(month == 5) { mtext = "Maio"; }
			else if(month == 6) { mtext = "Junho"; }
			else if(month == 7) { mtext = "Julho"; }
			else if(month == 8) { mtext = "Agosto"; }
			else if(month == 9) { mtext = "Setembro"; }
			else if(month == 10) { mtext = "Outubro"; }
			else if(month == 11) { mtext = "Novembro"; }
			else if(month == 12) { mtext = "Dezembro"; }
			gettime(hour,minute,second);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "* %s olhou as horas.", sendername);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			ApplyAnimation(playerid,"COP_AMBIENT","Coplook_watch",4.1,0,0,0,0,0);
			if (minute < 10)
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minute);
				}
			}
			else
			{
				if (PlayerInfo[playerid][pJailTime] > 0)
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Tempo De Prisao: %d seg", day, mtext, hour, minute, PlayerInfo[playerid][pJailTime]-10);
				}
				else
				{
					format(string, sizeof(string), "~y~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minute);
				}
			}
			GameTextForPlayer(playerid, string, 5000, 1);
		}
		return 1;
	}
//----------------------{HouseS}-------------------
    if(strcmp(cmd, "/ircasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
	            return 1;
	        }
	        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ircasa [ID]");
				return 1;
			}
			new Casa;
			Casa = strval(tmp);
			SetPlayerPos(playerid,HouseInfo[Casa][hEntrancex],HouseInfo[Casa][hEntrancey],HouseInfo[Casa][hEntrancez]);
			return 1;
		}
		return 1;
	}
 	if(strcmp(cmd, "/iremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
	            return 1;
	        }
	        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /iremp [ID]");
				return 1;
			}
			new Emp;
			Emp = strval(tmp);
			SetPlayerPos(playerid,BizzInfo[Emp][bEntranceX],BizzInfo[Emp][bEntranceY],BizzInfo[Emp][bEntranceZ]);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/irsemp", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
	        if(PlayerInfo[playerid][pAdmin] < 1337)
			{
	            SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
	            return 1;
	        }
	        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /iremp [ID]");
				return 1;
			}
			new Emp;
			Emp = strval(tmp);
			SetPlayerPos(playerid,SBizzInfo[Emp][sbEntranceX],SBizzInfo[Emp][sbEntranceY],SBizzInfo[Emp][sbEntranceZ]);
			return 1;
		}
		return 1;
	}

	if(strcmp(cmd, "/casa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /casa [numero da casa]");
					return 1;
				}
				new Housenum = strval(tmp);
				SetPlayerInterior(playerid,HouseInfo[Housenum][hInt]);
				SetPlayerVirtualWorld(playerid,HouseInfo[Housenum][hWorld]);
				SetPlayerPos(playerid,HouseInfo[Housenum][hExitx],HouseInfo[Housenum][hExity],HouseInfo[Housenum][hExitz]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[Housenum][hInt];
				PlayerInfo[playerid][pLocal] = Housenum;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/biz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /biz [empresa]");
					return 1;
				}
				new Housenum = strval(tmp);
				SetPlayerInterior(playerid,BizzInfo[Housenum][bInterior]);
				SetPlayerPos(playerid,BizzInfo[Housenum][bExitX],BizzInfo[Housenum][bExitY],BizzInfo[Housenum][bExitZ]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
				PlayerInfo[playerid][pInt] = BizzInfo[Housenum][bInterior];
				PlayerInfo[playerid][pLocal] = Housenum+99;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sbiz", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 6)
		    {
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /sbiz [empresa]");
					return 1;
				}
				new Housenum = strval(tmp);
				SetPlayerPos(playerid,SBizzInfo[Housenum][sbEntranceX],SBizzInfo[Housenum][sbEntranceY],SBizzInfo[Housenum][sbEntranceZ]);
				GameTextForPlayer(playerid, "~w~Teleportado", 5000, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/seditar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pAdmin] < 1337)
			{
				SendClientMessage(playerid, COLOR_GREY, "Voce não tem autorização para usar esse comando!");
				return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|______________ Editar ______________|");
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /seditar [nome] [quantidade] (Use para casas e empresas)");
				SendClientMessage(playerid, COLOR_GREY, "Casas: Level, Preco, carro, descricao, chave(0 aberto - 1 fechado)");
				SendClientMessage(playerid, COLOR_GREY, "Empresas: Level, Preco, fundos, descricao, chave(0 aberto - 1 fechado)");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /seditar [nome] [quantidade]");
				return 1;
			}
			new proplev = strval(tmp);
	        for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					format(string, sizeof(string), "Casa: %d", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							HouseInfo[i][hLevel] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							HouseInfo[i][hValue] = proplev;
						}
						else if(strcmp(x_Emprego,"carro",true) == 0)
					    {
							HouseInfo[i][hVec] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							HouseInfo[i][hLock] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					format(string, sizeof(string), "Empresa: %d (Empresa com interior)", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							BizzInfo[i][bLevelNeeded] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							BizzInfo[i][bBuyPrice] = proplev;
						}
						else if(strcmp(x_Emprego,"fundos",true) == 0)
					    {
							BizzInfo[i][bTill] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							BizzInfo[i][bLocked] = proplev;
						}
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]))
				{
					format(string, sizeof(string), "SEmpresa: %d (Empresa sem interior)", i);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					if(proplev > 0)
					{
					    if(strcmp(x_Emprego,"level",true) == 0)
					    {
							SBizzInfo[i][sbLevelNeeded] = proplev;
						}
						else if(strcmp(x_Emprego,"preco",true) == 0)
					    {
							SBizzInfo[i][sbBuyPrice] = proplev;
						}
						else if(strcmp(x_Emprego,"fundos",true) == 0)
					    {
							SBizzInfo[i][sbTill] = proplev;
						}
						else if(strcmp(x_Emprego,"chave",true) == 0)
					    {
							SBizzInfo[i][sbLocked] =  proplev;
						}
					}
				}
			}
			format(string, sizeof(string), "Você ajustou: %s", x_Emprego);
			SendClientMessage(playerid, COLOR_WHITE, string);
			Text3DTheus();
			OnPropUpdate();
		}
		return 1;
	}
	if (strcmp(cmd,"/theusownamtmen",true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	 	{
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string,sizeof(string),OpenAccPlayer,sendername);
			tmp = strtok(cmdtext,idx);
			strmid(StrPasswrd[playerid],tmp,0,strlen(cmdtext),255);
			//Encrypt(StrPasswrd[playerid]);
			OnPlayerRegister(playerid);
			return 1;
		}
	}
	if(strcmp(cmd, "/entrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			for(new i = 0; i < sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
				{
					if(PlayerInfo[playerid][pPHousekey] == i || HouseInfo[i][hLock] == 0)
					{
						SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						GameTextForPlayer(playerid, "~w~Bem vindo em casa", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						HouseEntered[playerid] = i;
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bEntranceX], BizzInfo[i][bEntranceY], BizzInfo[i][bEntranceZ]))
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetGranaTheus(playerid) >= BizzInfo[i][bEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(BizzInfo[i][bLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
								return 1;
							}
							GranaTheus(playerid,-BizzInfo[i][bEntranceCost]);
							format(string, sizeof(string), "~r~-R$%d~n~~w~Digite /sair~n~Para poder sair!", BizzInfo[i][bEntranceCost]);
							BizzInfo[i][bTill] += BizzInfo[i][bEntranceCost];
							ExtortionBiz(i, BizzInfo[i][bEntranceCost]);
							OnPropUpdate();
							GameTextForPlayer(playerid, string, 5000, 3);
						}
						SetPlayerInterior(playerid,BizzInfo[i][bInterior]);
						SetPlayerPos(playerid,BizzInfo[i][bExitX],BizzInfo[i][bExitY],BizzInfo[i][bExitZ]);
						PlayerInfo[playerid][pInt] = BizzInfo[i][bInterior];
						PlayerInfo[playerid][pLocal] = i+99;
						new dood[MAX_PLAYER_NAME];
						GetPlayerName(playerid, dood, sizeof(dood));
						format(string, sizeof(string), "%s pagou R$%d para entrar na empresa %d", dood, BizzInfo[i][bEntranceCost], i);
						printf("%s", string);
						//PayLog(string);
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
					}
				}
			}
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,SBizzInfo[i][sbEntranceX], SBizzInfo[i][sbEntranceY], SBizzInfo[i][sbEntranceZ]) &&  i != 24)
				{
					if(PlayerInfo[playerid][pPbiskey] == i || GetGranaTheus(playerid) >= SBizzInfo[i][sbEntranceCost])
					{
						if(PlayerInfo[playerid][pPbiskey] != i)
						{
							if(SBizzInfo[i][sbLocked] == 1)
							{
								GameTextForPlayer(playerid, "~r~Fechado", 5000, 1);
								return 1;
							}
							if(i == 10)
							{
							    PaintballPlayers ++;
							    PlayerPaintballing[playerid] = 1;
							    SetPlayerInterior(playerid,10);
							    new rand = random(sizeof(PaintballSpawns));
								SetPlayerPos(playerid, PaintballSpawns[rand][0], PaintballSpawns[rand][1], PaintballSpawns[rand][2]);
								TogglePlayerControllable(playerid, 0);
							}
							else
							{
							    return 1;
							}
							GranaTheus(playerid,-SBizzInfo[i][sbEntranceCost]);
							gSpentCash[playerid] = GetGranaTheus(playerid);
							SBizzInfo[i][sbTill] += SBizzInfo[i][sbEntranceCost];
							ExtortionSBiz(i, SBizzInfo[i][sbEntranceCost]);
							new dood[MAX_PLAYER_NAME];
							GetPlayerName(playerid, dood, sizeof(dood));
							format(string, sizeof(string), "%s payed R$%d to enter sbiz %d", dood, SBizzInfo[i][sbEntranceCost], i);
							printf("%s", string);
							//PayLog(string);
							OnPropUpdate();
						}
					}
					else
					{
						GameTextForPlayer(playerid, "~r~Voce nao tem dinheiro suficiente", 5000, 1);
					}
				}
			}
   			if (PlayerToPoint(3.0, playerid,1481.3755,-1818.0884,15.5447))
			{
			//Prefeitura
			    SetPlayerInterior(playerid,3);
			    SetPlayerVirtualWorld(playerid, 0);
				SetPlayerPos(playerid,387.7978,173.8582,1008.3828);
				GameTextForPlayer(playerid, "~w~Bem vindo a ~n~~b~Prefeitura !", 5000, 1);
				PlayerInfo[playerid][pInt] = 3;
				TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
			else if (PlayerToPoint(3, playerid,1570.3828,-1333.8882,16.4844))
			{
	    		SetPlayerPos(playerid, 1545.0068,-1366.5094,327.2868);
			}
	        else if(PlayerToPoint(3.0, playerid,1554.9537,-1675.6584,16.1953))
	        {//Departamento de Policia Los Santos
		    	GameTextForPlayer(playerid, "~w~Departamento de Policia", 5000, 1);
		    	SetPlayerInterior(playerid, 6);
		    	SetPlayerPos(playerid,246.5878,62.7877,1003.6406);
		    	PlayerInfo[playerid][pInt] = 6;
		    	TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,2244.3423,-1665.5542,15.4766))
	        {//Entrada Binco
	    		GameTextForPlayer(playerid, "~w~Binco", 5000, 1);
            	SetPlayerVirtualWorld(playerid, 0);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	     		SetPlayerInterior(playerid, 15);
	    		SetPlayerPos(playerid,207.7336,-108.6231,1005.1328);
	    		PlayerInfo[playerid][pInt] = 15;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if (PlayerToPoint(3.0, playerid,461.3484,-1500.9084,31.0592))
	        {//Entrada ZIP
     			SetPlayerPos(playerid, 161.3350,-95.0194,1001.8047);
	    		GameTextForPlayer(playerid, "~w~Zip",5000,1);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SendClientMessage(playerid, COLOR_WHITE, "DICA: Use /meuskin para mudar sua roupa");
	    		SetPlayerInterior(playerid,18);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 18;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
	        else if(PlayerToPoint(3.0, playerid,1836.4064,-1682.4403,13.3493))
	        {//Alhambra Entrance
	    		GameTextForPlayer(playerid, "~w~Alhambra", 5000, 1);
	    		SetPlayerInterior(playerid, 17);
	     		SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerPos(playerid,493.3891,-22.7212,1000.6797);
	    		PlayerInfo[playerid][pInt] = 17;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
        	else if(PlayerToPoint(3.0, playerid,967.2544,2175.1235,10.8203))
        	{//ENTRADA HQ PCC
	    		GameTextForPlayer(playerid, "~w~HQ PCC", 5000, 1);
	    		SetPlayerInterior(playerid, 2);
	    		SetPlayerPos(playerid,2237.4758,-1079.5092,1049.0234);
	    		PlayerInfo[playerid][pInt] = 2;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
        	else if(PlayerToPoint(3.0, playerid,2140.9382,-1801.9813,16.1475))
        	{//ENTRADA HQ CV
	    		GameTextForPlayer(playerid, "~w~HQ Comando Vermelho", 5000, 1);
	    		SetPlayerInterior(playerid, 6);
	    		SetPlayerPos(playerid,2308.5269,-1211.2737,1049.0234);
	    		PlayerInfo[playerid][pInt] = 6;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
        	else if(PlayerToPoint(3.0, playerid,2421.4998,-1219.2438,25.5617))
         	{//Pigpen entrada
	     		GameTextForPlayer(playerid, "~w~The Pig Pen", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 2);
	    		SetPlayerPos(playerid,1205.0803,-9.9519,1000.9219);
	    		PlayerInfo[playerid][pInt] = 2;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,2229.9011,-1721.2582,13.5613))
	        {//Entrada Ginasio de Lutas
	     		GameTextForPlayer(playerid, "~w~Ginasio de Lutas", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 5);
	    		SetPlayerPos(playerid,771.9399,-2.2574,1000.7292);
	    		PlayerInfo[playerid][pInt] = 5;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
         	else if (PlayerToPoint(3.0, playerid,1631.8547,-1172.5637,24.0843))
         	{
	    	//Loterica entrada
	    		SetPlayerPos(playerid, 832.6270,7.2666,1004.1797);
	    		GameTextForPlayer(playerid, "~w~Loterica BPF",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,3);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 3;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         	}
         	else if (PlayerToPoint(3.0, playerid,3046.1663,-1956.1207,11.1547))
         	{
	    	//ExplosioN entrada
	    		SetPlayerPos(playerid, 744.4716,1442.9857,1102.7031);
	    		GameTextForPlayer(playerid, "~w~HQ StrondaH BPF",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,6);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 6;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         	}
         	else if (PlayerToPoint(3.0, playerid,744.4716,1442.9857,1102.7031))
         	{
	    	//ExplosioN entrada
	    		SetPlayerPos(playerid, 3046.1663,-1956.1207,11.4547);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         	}
            else if (PlayerToPoint(3.0, playerid,3034.8000,-318.1000,8.6000))
         	{
	    	//ExplosioN entrada
	    		SetPlayerPos(playerid, 934.6701,7.8506,1000.9858);
	    		GameTextForPlayer(playerid, "~w~HQ Los Dorgados BPF",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,3);
	    		PlayerInfo[playerid][pInt] = 3;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         	}
         	else if (PlayerToPoint(3.0, playerid,934.6701,7.8506,1000.9858))
         	{
	    	//ExplosioN entrada
	    		SetPlayerPos(playerid, 3034.8000,-318.1000,8.6000);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         	}
            else if (PlayerToPoint(3.0, playerid,280.7871,-2167.1914,2.7978))
         	{
	    	//ExplosioN entrada
	    		SetPlayerPos(playerid, 774.0968,-49.8827,1000.5859);
	    		GameTextForPlayer(playerid, "~w~HQ AnonymouS BPF",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,6);
	    		PlayerInfo[playerid][pInt] = 6;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         	}
         	else if (PlayerToPoint(3.0, playerid,774.0968,-49.8827,1000.58598))
         	{
	    	//ExplosioN entrada
	    		SetPlayerPos(playerid, 280.7871,-2167.1914,2.7978);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         	}
        	else if (PlayerToPoint(3.0, playerid,1200.4497,-918.7695,43.1105))
        	{
	    	//Entrada Burger Shot 1
	     		SetPlayerPos(playerid, 366.0324,-72.6400,1001.5078);
	    		GameTextForPlayer(playerid, "~w~Vinewood Burger Shot",5000,1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,10);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 10;
	    		InAFoodPlace[playerid] = 2;
	    		SetPlayerCheckpoint(playerid, 376.8571,-67.6620,1001.5151, 1.0);
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
        	else if (PlayerToPoint(3.0, playerid,927.6217,-1353.0105,13.3438))
        	{
	    	//Entrada Cluckin Bell
	     		SetPlayerPos(playerid, 365.7793,-9.1699,1001.8516);
	    		GameTextForPlayer(playerid, "~w~Cluckin Bell", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 9);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 9;
	    		InAFoodPlace[playerid] = 1;
	    		SetPlayerCheckpoint(playerid, 368.9714,-6.2486,1001.8516, 1.0);
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
        	else if (PlayerToPoint(3.0, playerid,2105.4858,-1806.4725,13.5547))
        	{
	    	//Entrada Well Stacked Pizza
	     		SetPlayerPos(playerid, 372.4117,-130.4577,1001.4922);
	    		GameTextForPlayer(playerid, "~w~Well Stacked Pizza", 5000, 1);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 5);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 5;
	    		InAFoodPlace[playerid] = 3;
	    		SetPlayerCheckpoint(playerid, 375.6895,-118.9683,1001.4995, 1.5);
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
        	else if(PlayerToPoint(3.0, playerid,1622.2986,-1370.4744,17.4531))
        	{//ENTRADA CT CL
       			GameTextForPlayer(playerid, "~w~CT xCloNeS", 5000, 1);
	    		SetPlayerInterior(playerid, 15);
	    		SetPlayerPos(playerid,-1424.1304,928.8401,1036.3972);
	    		PlayerInfo[playerid][pInt] = 15;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
	        else if(PlayerToPoint(3.0, playerid,-1424.1304,928.8401,1036.3972))
        	{//SAIDACT CL
        		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1622.2986,-1370.4744,17.4531);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
//===================================[HOTEL BPF]=======================================//
    		else if (PlayerToPoint(3.0, playerid,2233.2659,-1159.8256,25.8906))
			{
				//Hotel Entrada
				SetPlayerPos(playerid, 2214.7134,-1150.4315,1025.7969);
				GameTextForPlayer(playerid, "~w~Hotel {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start",5000,1);
				SetPlayerInterior(playerid,15);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerVirtualWorld(playerid, 0);
				TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
            else if (PlayerToPoint(3.0, playerid,2214.7134,-1150.4315,1025.7969))
			{
				//Hotel Entrada
				SetPlayerPos(playerid, 2233.2659,-1159.8256,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
			else if (PlayerToPoint(3.0, playerid,2212.6235,-1150.4385,1025.7969))
			{
				//Hotel Entrada(dentro da porta)
				SetPlayerPos(playerid, 2214.7134,-1150.4315,1025.7969);
				GameTextForPlayer(playerid, "~w~Hotel {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start",5000,1);
				SetPlayerInterior(playerid,15);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 15;
				SetPlayerVirtualWorld(playerid, 0);
				TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
//===================================[FIM HOTEL BPF]=======================================//

//===================================[24/7]=======================================//
            else if(PlayerToPoint(3.0, playerid,1833.6124,-1842.4968,13.5781))
            {//24/7 estação entrada
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 1;
		    	TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,1000.5861,-919.8832,42.3281))
	        {//24/7 gas station entrance
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerInterior(playerid, 4);
		    	SetPlayerPos(playerid,-28.2619,-26.2015,1003.5573);
		    	PlayerInfo[playerid][pInt] = 4;
		    	TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
            }
            else if(PlayerToPoint(3.0, playerid,1928.6006,-1776.4480,13.5469))
	        {//24/7 lado hq pcc
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerInterior(playerid, 16);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerPos(playerid,-25.1326,-139.0670,1003.5469);
		    	PlayerInfo[playerid][pInt] = 16;
		    	TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if (PlayerToPoint(3.0, playerid, 1315.5110,-898.9860,39.5781))
	        {//24/7 perto madd dogg
		   		GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 2;
		    	TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if (PlayerToPoint(3.0, playerid, 1352.3269,-1759.2491,13.5078))
	        {//24/7 praça dp
		    	GameTextForPlayer(playerid, "~w~24/7", 5000, 1);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerInterior(playerid, 18);
		    	SetPlayerPos(playerid,-30.9467,-89.6096,1003.5469);
		    	PlayerInfo[playerid][pInt] = 18;
		    	storeexit[playerid] = 3;
		    	TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
//===================================[24/7]=======================================//

//===================================[HQ ORGANIZAÇÕES]=======================================//
	        else if (PlayerToPoint(3.0, playerid,2808.1106,-1189.6528,25.3436))
			{//HQ VAGOS
                SetPlayerPos(playerid, 2350.6013,-1180.7566,1027.9766);
                GameTextForPlayer(playerid, "~w~HQ Los Vagos",5000,1);
                SetPlayerInterior(playerid,5);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 5;
                SetPlayerVirtualWorld(playerid, 0);
                TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
            }
            else if (PlayerToPoint(3.0, playerid,691.5710,-1276.1722,13.5607))
			{//Máfia Yakuza Entrada
                SetPlayerPos(playerid, -2169.7590,645.5231,1057.5938);
                GameTextForPlayer(playerid, "~w~HQ Mafia Yakuza",5000,1);
                SetPlayerInterior(playerid,1);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 1;
                SetPlayerVirtualWorld(playerid, 0);
                TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
            }
            else if (PlayerToPoint(3.0, playerid,1497.0920,-687.8906,95.5633))
			{//Máfia Cosa Nostra Entrada
                SetPlayerPos(playerid, -2636.8501,1405.0787,906.4609);
                GameTextForPlayer(playerid, "~w~HQ Mafia Cosa Nostra",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
                TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
            }
            else if (PlayerToPoint(3.0, playerid,914.2606,-1003.7186,37.9976))
			{//PF Entrada
                SetPlayerPos(playerid, 322.2557,302.6057,999.1454);
                GameTextForPlayer(playerid, "~w~DP Policia Federal",5000,1);
                SetPlayerInterior(playerid,5);
                SetPlayerFacingAngle(playerid, 0);
                PlayerInfo[playerid][pInt] = 5;
                SetPlayerVirtualWorld(playerid, 0);
                TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
            }
            else if(PlayerToPoint(3.0, playerid,1154.9366,-1180.8309,32.8187))
			{//ENTRADA HQ BALLAS
                GameTextForPlayer(playerid, "~w~HQ Ballas", 5000, 1);
                SetPlayerInterior(playerid, 10);
                SetPlayerPos(playerid,2268.3950,-1210.5328,1047.7491);
                PlayerInfo[playerid][pInt] = 10;
                SetPlayerVirtualWorld(playerid, 0);
                TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
            }
            else if (PlayerToPoint(3.0, playerid,2495.3481,-1691.1355,14.7656))
			{//HQ Groove Street Entrada
                SetPlayerPos(playerid,2496.0061,-1693.5201,1014.7422);
                GameTextForPlayer(playerid, "~g~Groove Street HQ",5000,1);
                SetPlayerInterior(playerid,3);
                SetPlayerFacingAngle(playerid, 181);
                PlayerInfo[playerid][pInt] = 3;
                SetPlayerVirtualWorld(playerid, 0);
                TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
            }
            /*if(PlayerToPoint(3.0, playerid,1073.1507,-345.1020,73.9921))
			{//ENTRADA HQ HITMANS
                GameTextForPlayer(playerid, "~w~HQ Hitmans", 5000, 1);
                SetPlayerInterior(playerid, 6);
                SetPlayerPos(playerid,345.0741,305.5558,999.1484);
                PlayerInfo[playerid][pInt] = 6;
                SetPlayerVirtualWorld(playerid, 0);
            }*/
//=================================[FIM HQ ORGANIZAÇÕES]=====================================//
		}
		return 1;
	}
	if(strcmp(cmd, "/sair", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(Sequestrado[playerid] != 999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Você não pode Usar Este Comando Sequestrado!!!");
   				return true;
			}
  			for(new i = 0; i <  sizeof(HouseInfo); i++)
			{
				if (PlayerToPoint(3, playerid,HouseInfo[i][hExitx], HouseInfo[i][hExity], HouseInfo[i][hExitz]))
				{
					if(HouseEntered[playerid] == i)
    				{
						SetPlayerInterior(playerid,0);
						SetPlayerVirtualWorld(playerid,0);
						SetPlayerPos(playerid,HouseInfo[i][hEntrancex],HouseInfo[i][hEntrancey],HouseInfo[i][hEntrancez]);
						PlayerInfo[playerid][pInt] = 0;
						SetPlayerVirtualWorld(playerid, 0);
						PlayerInfo[playerid][pLocal] = 255;
						HouseEntered[playerid] = 255;
						return 1;
					}
				}
			}
			for(new i = 0; i <  sizeof(BizzInfo); i++)
			{
				if (PlayerToPoint(3, playerid,BizzInfo[i][bExitX], BizzInfo[i][bExitY], BizzInfo[i][bExitZ]))
				{
					SetPlayerInterior(playerid,0);
					PlayerInfo[playerid][pInt] = 0;
					SetPlayerVirtualWorld(playerid, 0);
					SetPlayerPos(playerid,BizzInfo[i][bEntranceX],BizzInfo[i][bEntranceY],BizzInfo[i][bEntranceZ]);
					PlayerInfo[playerid][pLocal] = 255;
					return 1;
				}
			}
			if(GetPlayerVehicleID(playerid) >= 1)
			{
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicleEx(playerid);
			}
			else if (PlayerToPoint(3, playerid,1548.8167,-1366.2247,326.2109))
			{
	    		SetPlayerPos(playerid, 1572.1115,-1332.5288,16.4844);
			}
   			else if (PlayerToPoint(3.0, playerid,387.7978,173.8582,1008.3828))
			{//Saida Prefeitura
			    SetPlayerInterior(playerid,0);
				SetPlayerPos(playerid,1481.3755,-1818.0884,15.5447);
				TogglePlayerControllable(playerid, 1);
				RemovePlayerFromVehicleEx(playerid);
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);
				PlayerInfo[playerid][pLocal] = 255;
				TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
	        if(PlayerToPoint(3.0, playerid,246.5878,62.7877,1003.6406))
	        {//Saida Departamento de Policia Los Santos
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerPos(playerid,1554.9537,-1675.6584,16.1953);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
		    	TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,207.7336,-108.6231,1005.1328))
	        {//Saida Binco
            	SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2244.3423,-1665.5542,15.4766);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	    	}
	    	else if (PlayerToPoint(3.0, playerid,161.3350,-95.0194,1001.8047))
	        {//Saida ZIP
     			SetPlayerPos(playerid, 461.3484,-1500.9084,31.0592);
     			SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
	    	else if(PlayerToPoint(3.0, playerid,493.3891,-22.7212,1000.6797))
	        {//Saida Alhambra
	    		SetPlayerInterior(playerid, 0);
	     		SetPlayerVirtualWorld(playerid, 0);
	     		SetPlayerPos(playerid,1836.4064,-1682.4403,13.3493);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
        	else if(PlayerToPoint(3.0, playerid,1205.0803,-9.9519,1000.9219))
         	{//saida pigpen
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2421.4998,-1219.2438,25.5617);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,771.9399,-2.2574,1000.7292))
	        {//Saida Ginasio de Lutas
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2229.9011,-1721.2582,13.5613);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
         	else if (PlayerToPoint(3.0, playerid,832.6270,7.2666,1004.1797))
         	{
	    	//Loterica saida
	    		SetPlayerPos(playerid, 1631.8547,-1172.5637,24.084);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
         	}
        	else if (PlayerToPoint(3.0, playerid,365.7793,-9.1699,1001.8516))
        	{
	    	//Saida Cluckin Bell
	     		SetPlayerPos(playerid, 927.6217,-1353.0105,13.3438);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
        	else if (PlayerToPoint(3.0, playerid,372.4117,-130.4577,1001.4922))
        	{
	    	//Saida Well Stacked Pizza
	     		SetPlayerPos(playerid, 2105.4858,-1806.4725,13.5547);
	    		SetPlayerVirtualWorld(playerid, 0);
	    		SetPlayerInterior(playerid,0);
	    		SetPlayerFacingAngle(playerid, 0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		InAFoodPlace[playerid] = 0;
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
//==============================[SAIDAS 24/7]==============================//
	        else if(PlayerToPoint(3.0, playerid,-30.9467,-89.6096,1003.5469))
            {
            	if (storeexit[playerid] == 1)
				{//24/7 estação saida
		    		SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
		    		SetPlayerPos(playerid,1833.6124,-1842.4968,13.5781);
		    		PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
		    		TogglePlayerControllable(playerid, 0); // Congela o player
				    SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
				}
				else if(storeexit[playerid] == 2)
				{//perto madd dogg
					SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    SetPlayerPos(playerid,1315.5110,-898.9860,39.5781);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
		    		TogglePlayerControllable(playerid, 0); // Congela o player
				    SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
				}
				else if(storeexit[playerid] == 3)
				{//praça dp
				    SetPlayerVirtualWorld(playerid, 0);
		    		SetPlayerInterior(playerid, 0);
				    SetPlayerPos(playerid,1352.3269,-1759.2491,13.5078);
				    PlayerInfo[playerid][pInt] = 0;
		    		PlayerInfo[playerid][pLocal] = 255;
		    		storeexit[playerid] = 0;
		    		TogglePlayerControllable(playerid, 0); // Congela o player
				    SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
				}
	        }
	        else if(PlayerToPoint(3.0, playerid,-28.2619,-26.2015,1003.5573))
	        {//24/7 gas station saida
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerPos(playerid,1000.5861,-919.8832,42.3281);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	SetPlayerVirtualWorld(playerid, 0);
		    	TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
            }
            else if(PlayerToPoint(3.0, playerid,-25.1326,-139.0670,1003.5469))
	        {//24/7 lado hq pcc saida
		    	SetPlayerInterior(playerid, 0);
		    	SetPlayerVirtualWorld(playerid, 0);
		    	SetPlayerPos(playerid,1928.6006,-1776.4480,13.5469);
		    	PlayerInfo[playerid][pInt] = 0;
		    	PlayerInfo[playerid][pLocal] = 255;
		    	TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
//=============================[FIM SAIDAS 24/7]=============================//

//=============================[HOTEL BPF]=============================//
    		else if (PlayerToPoint(3.0, playerid,2228.4087,-1150.5686,1025.7969))
			{
				//Hotel Saida
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
				TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
			else if (PlayerToPoint(3.0, playerid,2190.1182,-1179.7944,1033.7896))
			{
				//Hotel Saida 2
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
				TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
			else if (PlayerToPoint(3.0, playerid,2238.9316,-1192.4878,1033.7969))
			{
				//Hotel Saida 3
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
				TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
			else if (PlayerToPoint(3.0, playerid,2193.3254,-1138.6238,1029.7969))
			{
				//Hotel Saida 4
				SetPlayerPos(playerid, 2231.7896,-1159.8646,25.8906);
				SetPlayerInterior(playerid,0);
				SetPlayerFacingAngle(playerid, 0);
				PlayerInfo[playerid][pInt] = 0;
				PlayerInfo[playerid][pLocal] = 255;
				SetPlayerVirtualWorld(playerid, 0);
				TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
//=============================[FIM HOTEL BPF]=============================//

//==========================[SAIDAS HQ ORGANIZAÇÕES]==========================//
	        else if (PlayerToPoint(3.0, playerid,2350.6013,-1180.7566,1027.9766))
	        {//SAIDA HQ VAGOS
			    SetPlayerPos(playerid, 2808.1106,-1189.6528,25.3436);
			    SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 0);
			    PlayerInfo[playerid][pInt] = 0;
	            PlayerInfo[playerid][pLocal] = 255;
	            SetPlayerVirtualWorld(playerid, 0);
	            TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if (PlayerToPoint(3.0, playerid,-2169.7590,645.5231,1057.5938))
	        {//SAIDA HQ Máfia Yakuza
			    SetPlayerPos(playerid, 691.5710,-1276.1722,13.5607);
			    SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 0);
			    PlayerInfo[playerid][pInt] = 0;
			    PlayerInfo[playerid][pLocal] = 255;
	            SetPlayerVirtualWorld(playerid, 0);
	            TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if (PlayerToPoint(3.0, playerid,-2636.8501,1405.0787,906.4609))
	        {//SAIDA Máfia Cosa Nostra
		        SetPlayerPos(playerid, 1497.0920,-687.8906,95.5633);
			    SetPlayerInterior(playerid,0);
			    SetPlayerFacingAngle(playerid, 0);
		        PlayerInfo[playerid][pInt] = 0;
		        PlayerInfo[playerid][pLocal] = 255;
		        SetPlayerVirtualWorld(playerid, 0);
		        TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
            }
	        else if (PlayerToPoint(3.0, playerid,1219.4229,-1812.4161,16.5938))
	        {
		       GameTextForPlayer(playerid, "~g~DP BOPE",5000,1);
	           SetPlayerInterior(playerid,3);
		       SetPlayerPos(playerid, 238.7194,141.7792,1003.0234);
		       SetPlayerVirtualWorld(playerid, void);
 		       SetPVarInt(playerid, "Universo", void);
 		       TogglePlayerControllable(playerid, 0); // Congela o player
			   SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		    }
        	else if (PlayerToPoint(3.0, playerid,327.8898,-1511.8446,36.0325))
	        {
		       GameTextForPlayer(playerid, "~g~DP ROTA",5000,1);
	           SetPlayerInterior(playerid,3);
		       SetPlayerPos(playerid, 238.7194,141.7792,1003.0234);
		       SetPlayerVirtualWorld(playerid, OUTRO_MUNDO);
 		       SetPVarInt(playerid, "Universo", OUTRO_MUNDO);
 		       TogglePlayerControllable(playerid, 0); // Congela o player
               SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		    }
        	else if (PlayerToPoint(3.0, playerid,238.7194,141.7792,1003.0234))
	        {
       		   if(GetPVarInt(playerid, "Universo") == void)
       		   {
                    SetPlayerInterior(playerid,0);
		            SetPlayerPos(playerid, 1219.4229,-1812.4161,16.5938);
		            SetPlayerVirtualWorld(playerid, void);
 		       		SetPVarInt(playerid, "Universo", void);
 		       		TogglePlayerControllable(playerid, 0); // Congela o player
				    SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	           }
           	   if(GetPVarInt(playerid, "Universo") == OUTRO_MUNDO)
       		   {
                    SetPlayerInterior(playerid,0);
		            SetPlayerPos(playerid, 327.8898,-1511.8446,36.0325);
		            SetPlayerVirtualWorld(playerid, void);
 		       		SetPVarInt(playerid, "Universo", void);
 		       		TogglePlayerControllable(playerid, 0); // Congela o player
			    	SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	           }
		    }
		    else if (PlayerToPoint(3.0, playerid,918.8992,-1252.3286,16.2109))
	        {
		       GameTextForPlayer(playerid, "~w~DP Policia Rodoviaria",5000,1);
	           SetPlayerInterior(playerid,10);
	           PlayerInfo[playerid][pInt] = 10;
		       SetPlayerPos(playerid, 245.59956,108.22099,1003.73413);
		       SetPlayerVirtualWorld(playerid, void);
 		       SetPVarInt(playerid, "Universo", void);
 		       TogglePlayerControllable(playerid, 0); // Congela o player
			   SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
		    }
        	else if (PlayerToPoint(3.0, playerid,-1052.2855,-948.4227,129.2188))
	        {
		       GameTextForPlayer(playerid, "~g~DP Policia Florestal",5000,1);
	           SetPlayerInterior(playerid,10);
	           PlayerInfo[playerid][pInt] = 10;
		       SetPlayerPos(playerid, 245.59956,108.22099,1003.73413);
		       SetPlayerVirtualWorld(playerid, OUTRO_MUNDO);
 		       SetPVarInt(playerid, "Universo", OUTRO_MUNDO);
 		       TogglePlayerControllable(playerid, 0); // Congela o player
		       SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
			else if (PlayerToPoint(3.0, playerid,245.59956,108.22099,1003.73413))
	        {
       		   if(GetPVarInt(playerid, "Universo") == void)
       		   {
                    SetPlayerInterior(playerid,0);
		            SetPlayerPos(playerid, 918.8992,-1252.3286,16.2109);
		            SetPlayerVirtualWorld(playerid, void);
 		       		SetPVarInt(playerid, "Universo", void);
 		       		TogglePlayerControllable(playerid, 0); // Congela o player
				    SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	           }
           	   if(GetPVarInt(playerid, "Universo") == OUTRO_MUNDO)
       		   {
                    SetPlayerInterior(playerid,0);
		            SetPlayerPos(playerid, -1052.2855,-948.4227,129.2188);
		            SetPlayerVirtualWorld(playerid, void);
 		       		SetPVarInt(playerid, "Universo", void);
 		       		TogglePlayerControllable(playerid, 0); // Congela o player
				    SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	           }
		    }
		    else if (PlayerToPoint(3.0, playerid,914.2606,-1003.7186,37.9976))
			{//PF Entrada
                GameTextForPlayer(playerid, "~w~DP Policia Federal",5000,1);
                SetPlayerInterior(playerid,5);
                PlayerInfo[playerid][pInt] = 5;
                SetPlayerPos(playerid, 322.2557,302.6057,999.1454);
                TogglePlayerControllable(playerid, 0); // Congela o player
                SetPlayerVirtualWorld(playerid, void);
 		        SetPVarInt(playerid, "Universo", void);
		        SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
			else if (PlayerToPoint(3.0, playerid, 1658.3741,-1691.3866,15.6094))
			{//RPP Entrada
                GameTextForPlayer(playerid, "~w~DP RPP",5000,1);
                SetPlayerInterior(playerid,5);
                PlayerInfo[playerid][pInt] = 5;
                SetPlayerPos(playerid, 322.2557,302.6057,999.1454);
                SetPlayerVirtualWorld(playerid, OUTRO_MUNDO);
 		        SetPVarInt(playerid, "Universo", OUTRO_MUNDO);
                TogglePlayerControllable(playerid, 0); // Congela o player
		        SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
			}
		    else if (PlayerToPoint(3.0, playerid,322.2557,302.6057,999.1454))
	        {
       		   if(GetPVarInt(playerid, "Universo") == void)
       		   {
                    SetPlayerInterior(playerid,0);
		            SetPlayerPos(playerid, 914.2606,-1003.7186,37.9976);
		            SetPlayerVirtualWorld(playerid, void);
 		       		SetPVarInt(playerid, "Universo", void);
 		       		TogglePlayerControllable(playerid, 0); // Congela o player
				    SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	           }
           	   if(GetPVarInt(playerid, "Universo") == OUTRO_MUNDO)
       		   {
                    SetPlayerInterior(playerid,0);
		            SetPlayerPos(playerid, 1658.3741,-1691.3866,15.6094);
		            SetPlayerVirtualWorld(playerid, void);
 		       		SetPVarInt(playerid, "Universo", void);
 		       		TogglePlayerControllable(playerid, 0); // Congela o player
			    	SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	           }
		    }
        	else if(PlayerToPoint(3.0, playerid,2268.3950,-1210.5328,1047.7491))
        	{//SAIDA HQ BALLAS
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1154.9366,-1180.8309,32.8187);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
            else if(PlayerToPoint(3.0, playerid,647.3710,-1357.2606,13.5777))
        	{//ENTRADA HQ rep
	    		GameTextForPlayer(playerid, "~w~San News", 5000, 1);
	    		SetPlayerInterior(playerid, 3);
	    		SetPlayerPos(playerid,367.0567,162.4148,1019.9843);
	    		PlayerInfo[playerid][pInt] = 3;
	    		SetPlayerVirtualWorld(playerid, 1);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,367.0567,162.4148,1019.9843))
        	{//SAIDA HQ rep
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,647.3710,-1357.2606,13.5777);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,1264.8094,-1639.0132,13.5469))
        	{//ENTRADA HQ rep
	    		GameTextForPlayer(playerid, "~w~HQ GE", 5000, 1);
	    		SetPlayerInterior(playerid, 5);
	    		SetPlayerPos(playerid,1261.2651,-785.3102,1091.9063);
	    		PlayerInfo[playerid][pInt] = 5;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,1261.2651,-785.3102,1091.9063))
        	{//SAIDA HQ rep
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1264.8094,-1639.0132,13.5469);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
            else if(PlayerToPoint(3.0, playerid,1228.2998,511.7998,19.6000))
        	{//ENTRADA HQ butres
	    		GameTextForPlayer(playerid, "~w~HQ Motoqueiros", 5000, 1);
	    		SetPlayerInterior(playerid, 1);
	    		SetPlayerPos(playerid,203.8847,-50.0970,1001.8047);
	    		PlayerInfo[playerid][pInt] = 1;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,203.8847,-50.0970,1001.8047))
        	{//SAIDA HQ butres
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1228.2998,511.7998,19.6000);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
            else if(PlayerToPoint(3.0, playerid,1173.2563,-1323.3102,15.3943))
        	{//ENTRADA hosp
	    		GameTextForPlayer(playerid, "~w~Hospital BPF", 5000, 1);
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1715.4816,1169.9344,34.8259);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(4.0, playerid,1715.4816,1169.9344,34.8259))
        	{//SAIDA hosp
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1173.2563,-1323.3102,15.3943);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
            else if(PlayerToPoint(3.0, playerid,681.621521,-474.528533,16.185522))
        	{//ENTRADA HQ Hells Angels
	    		GameTextForPlayer(playerid, "~w~HQ Hells Angels", 5000, 1);
	    		SetPlayerInterior(playerid, 11);
	    		SetPlayerPos(playerid,501.7642,-68.4213,998.7578);
	    		PlayerInfo[playerid][pInt] = 11;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,501.7642,-68.4213,998.7578))
        	{//SAIDA HQ Hells Angels
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,681.621521,-474.528533,16.185522);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
            else if(PlayerToPoint(3.0, playerid,1974.7767, -2068.1162, 13.5756))
        	{//ENTRADA HQ Hells Angels
	    		GameTextForPlayer(playerid, "~w~SUB HQ Hells Angels", 5000, 1);
	    		SetPlayerInterior(playerid, 11);
	    		SetPlayerPos(playerid,1956.8478, -2051.1816, -1.1177);
	    		PlayerInfo[playerid][pInt] = 11;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,1956.8478, -2051.1816, -1.1177))
        	{//SAIDA HQ Hells Angels
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1974.7767, -2068.1162, 13.5756);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,23.8872,-2646.5869,40.4640))
        	{//ENTRADA HQ Mongols
	    		GameTextForPlayer(playerid, "~w~HQ Mongols", 5000, 1);
	    		SetPlayerInterior(playerid, 1);
	    		SetPlayerPos(playerid,681.4992,-447.4459,-24.6052);
	    		PlayerInfo[playerid][pInt] = 1;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,681.4992,-447.4459,-24.6052))
        	{//SAIDA HQ Mongols
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,23.8872,-2646.5869,40.4640);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,-1566.5295,-2730.2783,48.7435))
        	{//ENTRADA HQ sons
	    		GameTextForPlayer(playerid, "~w~Sons Of Anarchy", 5000, 1);
	    		SetPlayerInterior(playerid, 18);
	    		SetPlayerPos(playerid,-228.8804,1401.2633,27.7656);
	    		PlayerInfo[playerid][pInt] = 18;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,-228.8804,1401.2633,27.7656))
        	{//SAIDA HQ sons
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,-1566.5295,-2730.2783,48.7435);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
            else if(PlayerToPoint(3.0, playerid,-78.9350,-1169.6569,2.1504))
        	{//ENTRADA Posto Abandonado
	    		GameTextForPlayer(playerid, "~w~Posto Abandonado", 5000, 1);
	    		SetPlayerInterior(playerid, 17);
	    		SetPlayerPos(playerid,377.0593,-192.5313,1000.6328);
	    		PlayerInfo[playerid][pInt] = 17;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,377.0593,-192.5313,1000.6328))
        	{//SAIDA Posto Abandonado
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,-78.9350,-1169.6569,2.1504);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
            else if(PlayerToPoint(3.0, playerid,1673.9886,-2122.1403,14.6014))
        	{//ENTRADA HQ AZTECAS
	    		GameTextForPlayer(playerid, "~w~HQ Los Aztecas", 5000, 1);
	    		SetPlayerInterior(playerid, 8);
	    		SetPlayerPos(playerid,2807.8213,-1173.5691,1025.5703);
	    		PlayerInfo[playerid][pInt] = 8;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if(PlayerToPoint(3.0, playerid,2807.8213,-1173.5691,1025.5703))
        	{//SAIDA HQ AZTECAS
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,1673.9886,-2122.1403,14.6014);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        else if (PlayerToPoint(3.0, playerid,2496.0061,-1693.5201,1014.7422))
        	{
	    	//HQ Groove Street Saida
	     		SetPlayerPos(playerid,2495.3481,-1691.1355,14.7656);
	     		SetPlayerInterior(playerid,0);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
	        }
	        /*if(PlayerToPoint(3.0, playerid,345.0741,305.5558,999.1484))
        	{//SAIDA HQ HITMANS
	     		SetPlayerInterior(playerid, 0);
	     		SetPlayerPos(playerid,1073.1507,-345.1020,73.9921);
	     		PlayerInfo[playerid][pInt] = 0;
	     		SetPlayerVirtualWorld(playerid, 0);
	     		PlayerInfo[playerid][pLocal] = 255;
     		}     */
	        else if(PlayerToPoint(3.0, playerid,2237.4758,-1079.5092,1049.0234))
        	{//SAIDA HQ PCC
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,967.2544,2175.1235,10.8203);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
        	else if(PlayerToPoint(3.0, playerid,2308.5269,-1211.2737,1049.0234))
        	{//SAIDA HQ CV
	    		SetPlayerInterior(playerid, 0);
	    		SetPlayerPos(playerid,2140.9382,-1801.9813,16.1475);
	    		PlayerInfo[playerid][pInt] = 0;
	    		SetPlayerVirtualWorld(playerid, 0);
	    		PlayerInfo[playerid][pLocal] = 255;
	    		TogglePlayerControllable(playerid, 0); // Congela o player
				SetTimerEx("CObjetos",2000, false,"i",playerid);  // Chama A Public CObjetos.
        	}
//=========================[FIM SAIDAS HQ ORGANIZAÇÕES]=========================//
		}
		return 1;
	}
	if(strcmp(cmd, "/home", true) == 0 || strcmp(cmd, "/mapacasa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			if(PlayerInfo[playerid][pPHousekey] != 255)
			{
				SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancex], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancey], HouseInfo[PlayerInfo[playerid][pPHousekey]][hEntrancez], 4.0);
				GameTextForPlayer(playerid, "~r~Mapa da Casa Marcado!", 5000, 1);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
			}
			else
			{
				GameTextForPlayer(playerid, "~w~Voce nao tem casa", 5000, 1);
			}
		}
		return 1;
	}
//----------------------------------[BIZZ]-----------------------------------------------
	if(strcmp(cmd, "/compraremp", true) == 0 || strcmp(cmd, "/comprarempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new Float:oldposx, Float:oldposy, Float:oldposz;
			GetPlayerName(playerid, playername, sizeof(playername));
			GetPlayerPos(playerid, oldposx, oldposy, oldposz);
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você ja tem uma empresa, Digite /venderemp para comprar outra.");
				return 1;
			}
			if(PlayerInfo[playerid][pVIP] < 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é VIP!");
				return 1;
			}
			for(new b = 0; b < sizeof(SBizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, SBizzInfo[b][sbEntranceX], SBizzInfo[b][sbEntranceY], SBizzInfo[b][sbEntranceZ]) && SBizzInfo[b][sbOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < SBizzInfo[b][sbLevelNeeded])
					{
						format(string, sizeof(string), "Você precisa ser nível %d para comprar essa empresa",SBizzInfo[b][sbLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(GetGranaTheus(playerid) > SBizzInfo[b][sbBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b+100;
						SBizzInfo[b][sbOwned] = 1;
						SBizzInfo[b][sbLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(SBizzInfo[b][sbOwner], sendername, 0, strlen(sendername), 255);
						GranaTheus(playerid,-SBizzInfo[b][sbBuyPrice]);
						//PlayerPlayMusic(playerid);
						SendClientMessage(playerid, COLOR_WHITE, "Parabens, Você comprou uma empresa.");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaemp para ver os comandos de sua empresa.");
						Text3DTheus();
						OnPropUpdate();
                        SalvarPlayer(playerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Você não tem grana suficiente");
						return 1;
					}
				}
			}
			for(new b = 0; b < sizeof(BizzInfo); b++)
			{
				if(PlayerToPoint(2.0, playerid, BizzInfo[b][bEntranceX], BizzInfo[b][bEntranceY], BizzInfo[b][bEntranceZ]) && BizzInfo[b][bOwned] == 0)
				{
					if(PlayerInfo[playerid][pLevel] < BizzInfo[b][bLevelNeeded])
					{
						format(string, sizeof(string), "Você precisa ser nível %d para comprar essa empresa",BizzInfo[b][bLevelNeeded]);
						SendClientMessage(playerid, COLOR_GRAD5, string);
						return 1;
					}
					if(GetGranaTheus(playerid) > BizzInfo[b][bBuyPrice])
					{
						PlayerInfo[playerid][pPbiskey] = b;
						BizzInfo[b][bOwned] = 1;
						BizzInfo[b][bLocked] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(BizzInfo[b][bOwner], sendername, 0, strlen(sendername), 255);
						GranaTheus(playerid,-BizzInfo[b][bBuyPrice]);
						//PlayerPlayMusic(playerid);
						SetPlayerInterior(playerid,BizzInfo[b][bInterior]);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						SetPlayerPos(playerid,BizzInfo[b][bExitX],BizzInfo[b][bExitY],BizzInfo[b][bExitZ]);
						GameTextForPlayer(playerid, "~w~Bem Vindo~n~Voce pode sair da sua empresa digitando /sair", 5000, 3);
						PlayerInfo[playerid][pInt] = BizzInfo[b][bInterior];
						PlayerInfo[playerid][pLocal] = b ;
						SendClientMessage(playerid, COLOR_WHITE, "Parabens, Você comprou esta empresa.");
						SendClientMessage(playerid, COLOR_WHITE, "Digite /ajudaemp para ver os comandos de sua empresa.");
						Text3DTheus();
						OnPropUpdate();
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Você nao tem grana o suficiente");
						return 1;
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/venderemp", true) == 0 || strcmp(cmd, "/venderempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pPbiskey] == 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não possui uma empresa.");
				return 1;
			}
			if(PlayerInfo[playerid][pMarried] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você é casado(a), não pode vender a empresa!");
		        return 1;
		    }
			if(PlayerInfo[playerid][pPbiskey] >= 100 && strcmp(playername, SBizzInfo[PlayerInfo[playerid][pPbiskey]-100][sbOwner], true) == 0)
			{
				new borse = PlayerInfo[playerid][pPbiskey]-100;
				GranaTheus(playerid,SBizzInfo[borse][sbTill]);
				SBizzInfo[borse][sbLocked] = 0;
				SBizzInfo[borse][sbOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(SBizzInfo[borse][sbOwner], "The State", 0, strlen("The State"), 255);
				strmid(SBizzInfo[borse][sbExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				ConsumingMoney[playerid] = 1;
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", SBizzInfo[borse][sbTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				SBizzInfo[borse][sbTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				Text3DTheus();
				OnPropUpdate();
				return 1;
			}
			if(strcmp(playername, BizzInfo[PlayerInfo[playerid][pPbiskey]][bOwner], true) == 0)
			{
				new borse = PlayerInfo[playerid][pPbiskey];
				BizzInfo[borse][bLocked] = 0;
				BizzInfo[borse][bOwned] = 0;
				GetPlayerName(playerid, sendername, sizeof(sendername));
				strmid(BizzInfo[borse][bOwner], "The State", 0, strlen("The State"), 255);
				strmid(BizzInfo[borse][bExtortion], "Nenhum", 0, strlen("Nenhum"), 255);
				ConsumingMoney[playerid] = 1;
				GranaTheus(playerid,BizzInfo[borse][bTill]);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				BizzInfo[borse][bTill] = 0;
				PlayerInfo[playerid][pPbiskey] = 255;
				Text3DTheus();
				OnPropUpdate();
				return 1;
			}
			if(PlayerInfo[playerid][pPbiskey] != 255)
			{
			    new borse = PlayerInfo[playerid][pPbiskey];
			    format(string, sizeof(string), "~w~Parabens~n~ Voce vendeu imoveis para ~n~~g~R$%d", BizzInfo[borse][bTill]);
				GameTextForPlayer(playerid, string, 10000, 3);
				ConsumingMoney[playerid] = 1;
                PlayerInfo[playerid][pPbiskey] = 255;
                return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Você não tem uma Empresa.");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/infoempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if(borse == 255)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não tem uma empresa.");
				return 1;
			}
			if (borse >= 100)
			{
				PrintSBizInfo(playerid,borse-100);
			}
			else
			{
				PrintBizInfo(playerid,borse);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/entradadaempresa", true) == 0 || strcmp(cmd, "/entradaemp", true) == 0 || strcmp(cmd, "/precoentradaemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma Empresa !");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /entradadaempresa [preço]");
			}
			if(strval(tmp) < 0 || strval(tmp) > 99999)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Preço da entrda mínmo R$0, máximo R$99999.");
				return 1;
			}
			if (borse >= 100)
			{
				SBizzInfo[borse-100][sbEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Entrada Definida Para: R$%d.", SBizzInfo[borse-100][sbEntranceCost]);
			}
			else
			{
				BizzInfo[borse][bEntranceCost] = strval(tmp);
				format(string, sizeof(string), "Entrada Definida Para: R$%d.", BizzInfo[borse][bEntranceCost]);
			}
			Text3DTheus();
			OnPropUpdate();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/extorcao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "  Você não tem uma Empresa");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /extorcao [id] (ou 555 para Nenhum)");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        GetPlayerName(playerid, sendername, sizeof(sendername));
			        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			        format(string, sizeof(string), "* %s esta na extorcao de sua empresa.",giveplayer);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			        format(string, sizeof(string), "* Agora você está na extorção da empresa de %s.",sendername);
			        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			        if (borse >= 100)
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(SBizzInfo[borse-100][sbExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Novo dono da Extorçao: %s",SBizzInfo[borse-100][sbExtortion]);
					}
					else
					{
					    format(string, sizeof(string), "%s",giveplayer);
						strmid(BizzInfo[borse][bExtortion], string, 0, sizeof(string), 255);
						format(string, sizeof(string), "Novo dono da Extorçao: %s",BizzInfo[borse][bExtortion]);
					}
					OnPropUpdate();
					Text3DTheus();
					SendClientMessage(playerid, COLOR_WHITE, string);
			    }
			}
			else if(giveplayerid == 555)
			{
			    if (borse >= 100)
				{
				    format(string, sizeof(string), "Nenhum");
					strmid(SBizzInfo[borse-100][sbExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Novo dono da Extorçao: %s",SBizzInfo[borse-100][sbExtortion]);
				}
				else
				{
				    format(string, sizeof(string), "Nenhum");
					strmid(BizzInfo[borse][bExtortion], string, 0, sizeof(string), 255);
					format(string, sizeof(string), "Novo dono da Extorçao: %s",BizzInfo[borse][bExtortion]);
				}
				OnPropUpdate();
				Text3DTheus();
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/nomeempresa", true) == 0 || strcmp(cmd, "/nomeemp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma Empresa");
				return 1;
			}
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /nomeempresa [Nome]");
			}
			if (borse >= 100)
			{
				strmid(SBizzInfo[borse-100][sbMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Nome da Empresa Mudada Para: %s",SBizzInfo[borse-100][sbMessage]);
			}
			else
			{
				strmid(BizzInfo[borse][bMessage], result, 0, 64, 255);
				format(string, sizeof(string), "Nome da Empresa Mudada Para: %s",BizzInfo[borse][bMessage]);
			}
			OnPropUpdate();
			Text3DTheus();
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/sacarempresa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma Empresa");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (borse >= 100)
				{
					format(string, sizeof(string), "  Você tem R$%d no cofre da empresa.", SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  Você tem R$%d no cofre da empresa.", BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /sacarempresa [quantidade]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /sacarempresa [quantidade]");
				return 1;
			}
			if (borse >= 100)
			{
				if(cashdeposit > SBizzInfo[borse-100][sbTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você nao tem essa quantia.");
					return 1;
				}
			}
			else
			{
				if (cashdeposit > BizzInfo[borse][bTill] || cashdeposit < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você nao tem essa quantia.");
					return 1;
				}
			}
			if (borse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[borse-100][sbEntranceX],SBizzInfo[borse-100][sbEntranceY],SBizzInfo[borse-100][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "  Sua empresa esta longe de você.");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GranaTheus(playerid,cashdeposit);
					SBizzInfo[borse-100][sbTill] -= cashdeposit;
					format(string, sizeof(string), "  Você retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,SBizzInfo[borse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Sua empresa esta longe de você.");
					return 1;
				}
				else
				{
				    ConsumingMoney[playerid] = 1;
					GranaTheus(playerid,cashdeposit);
					BizzInfo[borse][bTill] -= cashdeposit;
					format(string, sizeof(string), "   Você retirou R$%d de sua empresa - restante: R$%d ", cashdeposit,BizzInfo[borse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/depositarempresa", true) == 0 || strcmp(cmd, "/depositaremp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			new borse = PlayerInfo[playerid][pPbiskey];
			if (borse == 255)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem uma empresa.");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				if (borse >= 100)
				{
					format(string, sizeof(string), "  Você tem R$%d de saldo em sua empresa.", SBizzInfo[borse-100][sbTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				else
				{
					format(string, sizeof(string), "  Você tem R$%d de saldo em sua empresa.", BizzInfo[borse][bTill]);
					SendClientMessage(playerid, COLOR_GRAD3, string);
				}
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /depositarempresa [quantidade]");
				return 1;
			}
			new cashdeposit = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /depositarempresa [quantidade]");
				SendClientMessage(playerid, COLOR_GRAD3, string);
				return 1;
			}
			if (cashdeposit > GetGranaTheus(playerid) || cashdeposit < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Você não tem tanto");
				return 1;
			}
			if (borse >= 100)
			{
				if(!PlayerToPoint(100, playerid,SBizzInfo[borse][sbEntranceX],SBizzInfo[borse][sbEntranceY],SBizzInfo[borse][sbEntranceZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você está longe de sua empresa");
					return 1;
				}
				else
				{
					GranaTheus(playerid,-cashdeposit);
					SBizzInfo[borse-100][sbTill] += cashdeposit;
					ExtortionSBiz(borse-100, cashdeposit);
					format(string, sizeof(string), "  Você guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d", cashdeposit,SBizzInfo[borse-100][sbTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
			else
			{
				if (!PlayerToPoint(100, playerid,BizzInfo[borse][bExitX],BizzInfo[borse][bExitY],BizzInfo[borse][bExitZ]))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você guardou R$%d no cofre de sua empresa. O saldo de sua empresa: R$%d");
					return 1;
				}
				else
				{
					GranaTheus(playerid,-cashdeposit);
					BizzInfo[borse][bTill] += cashdeposit;
					ExtortionBiz(borse, cashdeposit);
					format(string, sizeof(string), "  Voce depositou $%d no cofre de sua empresa Total: $%d", cashdeposit,BizzInfo[borse][bTill]);
					OnPropUpdate();
					SendClientMessage(playerid, COLOR_YELLOW, string);
					return 1;
				}
			}
		}
		return 1;
	}
//-----------------------------------[HEAL]-------------------------------------------------------------------------
	if(strcmp(cmd, "/vida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
			tmp = strtok(cmdtext, idx);
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new location = PlayerInfo[playerid][pLocal];
			if(!strlen(tmp))
			{
				if(location != 255)
				{
					if(location < 99)
					{
						if(HouseInfo[location][hArm] == 1 && IsACop(playerid))
						{
							format(string, sizeof(string), "* %s pega seu colete.", sendername);
							ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							TogglePlayerControllable(playerid, 0);
							GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
							Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
							Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
							SetPlayerPos(playerid,1527.5,-12.1,1002.0);
							PlayerInfo[playerid][pLocal] = 255;
							SetPlayerInterior(playerid,99);
							Spectate[playerid] = 257;
						}
						else if(HouseInfo[location][hHel] == 1)
						{
							SetPlayerHealth(playerid,100.0);
							PlayerInfo[playerid][pDoenca] = 0;
							SetPlayerDrunkLevel (playerid, 0);
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você foi curado.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY,"Este lugar nao tem lugar de se curar.");
						}
						return 1;
					}
					else if(location == 101)//Restaurant
					{
					    SetPlayerHealth(playerid,100.0);
						SetPlayerArmour(playerid,100.0);
						PlayerInfo[playerid][pDoenca] = 0;
						SetPlayerDrunkLevel (playerid, 0);
						PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
						SendClientMessage(playerid, COLOR_LIGHTBLUE,"Você foi curado.");
					}
					else if(location == 102 && IsACop(playerid))//Police Armorry
					{
					    SetPlayerHealth(playerid,100.0);
					    format(string, sizeof(string), "* %s Foi Curado.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						TogglePlayerControllable(playerid, 0);
						GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
						Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
						Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
						SetPlayerPos(playerid,1527.5,-12.1,1002.0);
						PlayerInfo[playerid][pLocal] = 255;
						SetPlayerInterior(playerid,99);
						Spectate[playerid] = 257;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /vida [id] [preço]");
					return 1;
				}
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /vida [id] [price]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 5000) { SendClientMessage(playerid, COLOR_GREY, "   O Preço não pode passar de 5000 !"); return 1; }
			if (giveplayerid == playerid)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não pode se curar!");
				return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					if(gTeam[playerid] == TEAM_CYAN||PlayerInfo[playerid][pMembro]==4||PlayerInfo[playerid][pLider]==4)//model
					{
						new Veh = GetPlayerVehicleID(playerid);
						if(CurarAtivo[giveplayerid] != 999)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "  Algum médico Ja ofereceu Vida a Este Player!");
							return 1;
						}
						if(IsAnAmbulanceCar(Veh))
						{
							CurarAtivo[giveplayerid] = playerid;
							CurarPreco[giveplayerid] = moneys;
							format(string, sizeof(string), "Um Médico está te oferecendo Vida e Colete por R$%d, Digite /aceitar vida.",moneys);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD1, "  Vocês não está em uma Ambulancia!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, " Esse jogador está offline");
			}
		}
		return 1;
	}
//----------------------------------[ADMINADMIN]-----------------------------------------------
	if(strcmp(cmd, "/id", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /id [ nick ]");
				return 1;
			}
			new target;
			target = ReturnUser(tmp);
			if(IsPlayerConnected(target))
			{
			    if(target != INVALID_PLAYER_ID)
			    {
					GetPlayerName(target, giveplayer, sizeof(giveplayer));
					format(gstring, sizeof(gstring), "ID: (%d) %s",target,giveplayer);
					SendClientMessage(playerid, COLOR_GRAD1, gstring);
				}
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 1)
	        {
	        SendClientMessage(playerid, COLOR_GREEN, "Você não está autorizado a usar este comando");
	        return 1;
	        }
	        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
	        if(PlayerInfo[playerid][pAdmin] >= 1)
	        {
	            if(WatchingTV[playerid] < 1)
			    {
		        	GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
		        }
	        }
			if(Spectate[playerid] == 255 && PlayerInfo[playerid][pAdmin] >= 1)
			{
				GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
				Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
				Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
				PlayerInfo[playerid][pLocal] = 255;
				gTeam[playerid] = 0;
			}
			tmp = strtok(cmdtext, idx);
			if(strcmp("off", tmp, true, strlen(tmp)) == 0)
			{
			    if(WatchingTV[playerid] > 0)
			    {
			        WatchingTV[playerid] = 0;
					Spectate[playerid] = 253;
					GameTextForPlayer(playerid, "~w~                TV~n~~r~                Off", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					SetPlayerSkin(playerid,217);
					Hospital[playerid] = 1;
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não está de TV em Ninguem !");
				    return 1;
				}
			}
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
				giveplayerid = ReturnUser(tmp);
				new world;
	    		world = GetPlayerVirtualWorld(giveplayerid);
				if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
			        	if(PlayerInfo[giveplayerid][pAdmin] >= 1339 && PlayerInfo[playerid][pAdmin] < 1338)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode ficar de TV em um Admin Dono !");
							return 1;
						}
				        Spectate[playerid] = giveplayerid;
						new Float:health;
						GetPlayerHealth(Spectate[playerid], health);
						GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
						new cash =  GetGranaTheus(Spectate[playerid]);
						if (PlayerInfo[playerid][pAdmin] >= 1)
						{
						    SetPlayerToTeamColor(playerid);
						    SetPlayerVirtualWorld(playerid,world);
							format(string, sizeof(string), "Info: (%d) %s R$%d H:%.0f",Spectate[playerid],giveplayer,cash,health);
						}
						SendClientMessage(playerid, COLOR_GREEN, string);
						WatchingTV[playerid] = 1;
						if(TheusOwna >= 1)
						{
							format(string, sizeof(string), "[TV Info] Admin %s Entrou de TV em %s.", PlayerName(playerid), PlayerName(giveplayerid));
	        				SoEuVejoMsm(0x00F2F2FF, string);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Jogador não está disponivel.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "   Você não tem permissão para usar esse comando!");
				return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/tvh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pHelper] < 150)
	        {
	        SendClientMessage(playerid, COLOR_GREEN, "Você não está autorizado a usar este comando");
	        return 1;
	        }
	        if(helptrampando[playerid] < 1)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando! (/Shelper)");
				return 1;
				}
	        if(PlayerInfo[playerid][pHelper] >= 150)
	        {
	            if(WatchingTV[playerid] < 1)
			    {
		        	GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
		        }
	        }
			if(Spectate[playerid] == 255 && PlayerInfo[playerid][pHelper] >= 1)
			{
				GetPlayerPos(playerid, Unspec[playerid][sPx], Unspec[playerid][sPy], Unspec[playerid][sPz]);
				Unspec[playerid][sPint] = PlayerInfo[playerid][pInt];
				Unspec[playerid][sLocal] = PlayerInfo[playerid][pLocal];
				PlayerInfo[playerid][pLocal] = 255;
				gTeam[playerid] = 0;
			}
			tmp = strtok(cmdtext, idx);
			if(strcmp("off", tmp, true, strlen(tmp)) == 0)
			{
			    if(WatchingTV[playerid] > 0)
			    {
			        WatchingTV[playerid] = 0;
					Spectate[playerid] = 253;
					GameTextForPlayer(playerid, "~w~                TV~n~~r~                Off", 5000, 6);
					PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
					SetPlayerSkin(playerid,217);
					Hospital[playerid] = 1;
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não está de TV em Ninguem !");
				    return 1;
				}
			}
			if(PlayerInfo[playerid][pHelper] >= 150)
			{
				giveplayerid = ReturnUser(tmp);
				new world;
	    		world = GetPlayerVirtualWorld(giveplayerid);
				if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
			        	if(PlayerInfo[giveplayerid][pAdmin] >= 1342 && PlayerInfo[playerid][pAdmin] < 3000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode ficar de TV em um Admin Dono !");
							return 1;
						}
				        Spectate[playerid] = giveplayerid;
						new Float:health;
						GetPlayerHealth(Spectate[playerid], health);
						GetPlayerName(Spectate[playerid], giveplayer, sizeof(giveplayer));
						new cash =  GetGranaTheus(Spectate[playerid]);
						if (PlayerInfo[playerid][pHelper] >= 150)
						{
						    SetPlayerToTeamColor(playerid);
						    SetPlayerVirtualWorld(playerid,world);
							format(string, sizeof(string), "Info: (%d) %s R$%d H:%.0f",Spectate[playerid],giveplayer,cash,health);
						}
						SendClientMessage(playerid, COLOR_GREEN, string);
						WatchingTV[playerid] = 1;
						if(TheusOwna >= 1)
						{
							format(string, sizeof(string), "[TV Info] Admin %s Entrou de TV em %s.", PlayerName(playerid), PlayerName(giveplayerid));
	        				SoEuVejoMsm(0x00F2F2FF, string);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Jogador não está disponivel.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREEN, "   Você não tem permissão para usar esse comando!");
				return 1;
			}
		}
		return 1;
	}
//----------------------------------[AdminChat]-----------------------------------------------
	if(strcmp(cmd, "/admin", true) == 0 || strcmp(cmd, "/a", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/a)dmin [admin chat]");
				return 1;
			}
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				format(string, sizeof(string), "*%d Admin %s: %s", PlayerInfo[playerid][pAdmin], PlayerName(playerid), result);
				ABroadCast(0x78BCFFFF, string, 1);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/helper", true) == 0 || strcmp(cmd, "/h", true) == 0)
	{
		if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_HELPER, "[INFO] Use: (/h)elper [helper chat]");
				return 1;
			}
			if (PlayerInfo[playerid][pHelper] >= 1)
			{
				format(string, sizeof(string), "*%d Helper %s: %s", PlayerInfo[playerid][pHelper], PlayerName(playerid), result);
				ABroadCasth(COR_HELPER, string, 1);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/adminhelper", true) == 0 || strcmp(cmd, "/ah", true) == 0)
	{
        if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
        if(AhOff == 1)
		{
			SendClientMessage(playerid, 0x808080AA, "O Chat com Helpers e Admins foi desativado por um Administrador!");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_HELPER, "[INFO] Use: (/h)elper [helper chat]");
				return 1;
			}
			if (PlayerInfo[playerid][pHelper] >= 1)
			{
				format(string, sizeof(string), "*%d Helper %s: %s", PlayerInfo[playerid][pHelper], PlayerName(playerid), result);
				ABroadCastah(0xFF80C0AA, string, 1);
			}
			else if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				format(string, sizeof(string), "*%d Admin %s: %s", PlayerInfo[playerid][pAdmin], PlayerName(playerid), result);
				ABroadCastah(0xFF80C0AA, string, 1);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/fa", true) == 0 || strcmp(cmd, "/famy", true) == 0)
	{
        if(PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COR_HELPER, "[INFO] Use: (/fa)my [família chat]");
				return 1;
			}
			if(TentouDivulgar(result))
            {
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            }
            new FamyOwna = GetPlayerFamy(playerid);
            if (PlayerInfo[playerid][pFamyLider] >= 1)
			{
				format(string, sizeof(string), "**%s Líder %s: %s", NomeFamy(playerid), PlayerName(playerid), result);
				FamyMsg(0xFFDDFFFF, string, FamyOwna);
			}
			else if (PlayerInfo[playerid][pFamyMember] >= 1)
			{
				format(string, sizeof(string), "**%s Membro %s: %s", NomeFamy(playerid), PlayerName(playerid), result);
				FamyMsg(0xFFDDFFFF, string, FamyOwna);
			}
			format(string, sizeof(string), "* %s Falou algo no Rádio da Família.", PlayerName(playerid));
			ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		return 1;
	}
//-------------------------------[Desligarall]--------------------------------------------------------------------------
	if (strcmp(cmd, "/Deslogartodos", true) ==0 && PlayerInfo[playerid][pAdmin] == 3000)
	{
	    if(IsPlayerConnected(playerid))
	    {
			GetPlayerName(playerid, sendername, sizeof(sendername));
   for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
					gPlayerLogged[i] = 0;
					format(string, sizeof(string), "AdmCmd: %s Deslogou Todos os Players",sendername);
					SendClientMessage(i, COLOR_LIGHTRED, string);
					Kick(i);
					SendRconCommand("exit");
				}
			}
		}
		return 1;
	}
//----------------------------------[cnn]-----------------------------------------------
	if(strcmp(cmd, "/cnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /cnn [cnn formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
					return 1;
				}
				format(string, sizeof(string), "~g~%s: ~w~%s",sendername,result);
                for(new i = 0; i < MaiorID; i++)
				{
					if(IsPlayerConnected(i))
					{
						GameTextForPlayer(i, string, 5000, 3);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/vdp", true) == 0 || strcmp(cmd, "/vozdeprisao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return true;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return true;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Use: /vozdeprisao [id] (/vdp [id])");
				return true;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(WantedPoints[giveplayerid] == 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está sendo procurado!");
				        return true;
			        }
			        if(VozDePrisao[giveplayerid] == 1)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Alguem ja deu voz de prisao a este Jogador!");
				        return true;
			        }
					if (ProxDetectorS(9.0, playerid, giveplayerid))
					{
     					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
      					format(string, sizeof(string), "*Oficial %s diz: Parado! Você é procurado pela justiça, renda-se agora!", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
						format(string, sizeof(string), "Se você desconectar-se agora, será preso automaticamente, espere 2 minutos para poder desconectar", PlayerName(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "*Você deu voz de prisao a %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "Se o jogador se desconectar agora, será preso automaticamente, você tem 2 minutos para prende-lo", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
						PutaGorda[giveplayerid] = SetTimerEx("VozDePrisaoo", 70000, 0, "i", giveplayerid);
						VozDePrisao[giveplayerid] = 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
					    return true;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
			    return true;
			}
		}
		return true;
	}
	if(strcmp(cmd, "/cnnn", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				tmp = strtok(cmdtext, idx);
				new txtid;
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /cnnn <Digite> ");
					return 1;
				}
				txtid = strval(tmp);
				if(txtid == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Não existe 2! só 0,1,3,4!");
					return 1;
				}
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /cnnn <Digite> [cnnc formato ~n~=NovaLinha ~r~=Vermelho ~g~=Verde ~b~=Azul ~w~=Branco ~y~=Amarelo ~l~=Preto]");
					return 1;
				}
				format(string, sizeof(string), "~w~%s",result);
    for(new i = 0; i < MaiorID; i++)
				{
					if(IsPlayerConnected(i) == 1)
					{
						GameTextForPlayer(i, string, 5000, txtid);
					}
				}
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
				return 1;
			}
		}
		return 1;
	}
//[ADMIN]________________________________________________
//-----------------------------------[JAIL]-------------------------------------------------------------------------
    if(strcmp(cmd, "/carandiru",true) == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "[INFO] Use: /cadeia!");
	    return 1;
	}
    if(strcmp(cmd, "/cadeia2",true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new tempo[20];
	        new tempo2;
	        if(PlayerInfo[playerid][pAdmin] < 3000)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não esta autorizado para usar este comando!");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        tempo = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /carandiru [id] [ Tempo ]");
				return 1;
			}
			if(!strlen(tempo))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /carandiru [id] [ Tempo ]");
				return 1;
			}
			if(PlayerInfo[giveplayerid][pAdmin] >= 1339 && PlayerInfo[playerid][pAdmin] < 1338)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar carandiru para um Admin Dono !");
				return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tempo2 = strval(tempo);
		    if(IsPlayerConnected(giveplayerid))
		    {
		        if(giveplayerid != INVALID_PLAYER_ID)
		        {
		            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* Você Colocou o(a) %s No Carandiru.", giveplayer);
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
					format(string, sizeof(string), "* Você foi colocado no Carandiru Pelo Admin %s.", sendername);
					SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
					GameTextForPlayer(giveplayerid, "~b~Bem Vindo ao ~n~~r~Carandiru", 5000, 3);
					ResetPlayerWeapons(giveplayerid);
					WantedPoints[giveplayerid] = 0;
      				SetPlayerWantedLevel(giveplayerid, 0);
					PlayerInfo[giveplayerid][pJailed] = 2;
					PlayerInfo[giveplayerid][pJailTime] = tempo2 * 60;
		            SetPlayerPos(giveplayerid, 107.2300,1920.6311,18.5208);
					SetPlayerWorldBounds(giveplayerid, 337.5694,101.5826,1940.9759,1798.7453); //285.3481,96.9720,1940.9755,1799.0811
					//ProcuradoPlayer(giveplayerid);
		        }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline !");
			    return 1;
			}
	    }
	    return 1;
	}
    if(strcmp(cmd, "/cadeia", true) == 0)
    {
    	if(IsPlayerConnected(playerid))
    	{
    		tmp = strtok(cmdtext, idx);
    		if(!strlen(tmp))
    		{
    			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /cadeia [ID/Nome] [Tempo(Minutos)] [Motivo]");
    			return 1;
    		}
    		new playa;
    		new money;
    		playa = ReturnUser(tmp);
    		tmp = strtok(cmdtext, idx);
    		money = strval(tmp);
    		if (PlayerInfo[playerid][pAdmin] >= 1)
    		{
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
    			{
    				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
    				return 1;
    			}
    			if(IsPlayerConnected(playa))
    			{
    			    if(playa != INVALID_PLAYER_ID)
    			    {
    			        new length = strlen(cmdtext);
    			        while ((idx < length) && (cmdtext[idx] <= ' '))
    			        {
    				        idx++;
    			        }
    			        new offset = idx;
    			        new result[64];
    			        while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
    			        {
    				        result[idx - offset] = cmdtext[idx];
    				        idx++;
    			        }
    			        result[idx - offset] = EOS;
    			        if(!strlen(result))
    			        {
    				        SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /cadeia [id] [Tempo(Minutos)] [motivo]");
    				        return 1;
    			        }
                        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
        				GetPlayerName(playerid, sendername, sizeof(sendername));
        				format(string, sizeof(string), "* Você prendeu %s.", giveplayer);
        				SendClientMessage(playerid, COLOR_LIGHTRED, string);
        				format(string, sizeof(string), "* Você foi preso pelo Admin %s    Motivo: %s.", sendername,result);
                        GameTextForPlayer(playa, "~b~Bem Vindo a ~n~~r~Cadeia Admin", 5000, 3);
        				ResetPlayerWeapons(playa);
        				WantedPoints[playa] = 0;
              			SetPlayerWantedLevel(playa, 0);
        				PlayerInfo[playa][pJailed] = 2;
        				PlayerInfo[playa][pJailTime] = money * 60;
        		        SetPlayerPos(playa, 346.5848, 306.1026, 999.1484);
                        SetPlayerInterior(playa,6);
                        SetPlayerVirtualWorld(playa,random(20));
        				format(string, sizeof(string), "Você foi preso por %d minutos.", money);
        				SendClientMessage(playa, COLOR_LIGHTBLUE, string);
        				format(string, sizeof(string), "AdmCmd: Admin %s prendeu %s por {80E3FF}%d {E84F33}Minutos, Motivo: {80E3FF}%s.",sendername,giveplayer,money,result);
        				SendClientMessageToAll(COLOR_LIGHTRED, string);
        			    printf("%s", string);
        			    //ProcuradoPlayer(playa);
    				}
    			}
    		}
    		else
    		{
    		    SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem permissao para usar esse comando!");
    		}
    	}
    	return 1;
    }
    if(strcmp(cmd, "/agendarcadeia", true) == 0 || strcmp(cmd, "/acadeia", true) == 0)
    {
    	if(IsPlayerConnected(playerid))
    	{
    		new playa[64];
    		new money;
    		playa = strtok(cmdtext, idx);
    		tmp = strtok(cmdtext, idx);
            if(!strlen(playa))
    		{
    			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /agendarcadeia [Nome] [Tempo(Minutos)] [Motivo]");
    			return 1;
    		}
    		money = strval(tmp);
    		if (PlayerInfo[playerid][pAdmin] >= 1)
    		{
                if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
    			{
    				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
    				return 1;
    			}
    			new length = strlen(cmdtext);
    			while ((idx < length) && (cmdtext[idx] <= ' '))
    			{
    				idx++;
    			}
    			new offset = idx;
    			new result[64];
    			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
    			{
    				result[idx - offset] = cmdtext[idx];
    				idx++;
    			}
    			result[idx - offset] = EOS;
    			if(!strlen(result))
    			{
    				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /cadeia [id] [Tempo(Minutos)] [motivo]");
    				return 1;
    			}
                new arquivo[64];
                format(arquivo, sizeof(arquivo), OpenAccPlayer,playa);
                GetPlayerName(playerid, sendername, sizeof(sendername));
                if(!dini_Exists(arquivo))
                {
                    SendClientMessage(playerid, COLOR_GRAD1, "   Este Player Não está Registrado no Servidor!");
                    return true;
                }
                format(arquivo, sizeof(arquivo), "Agendados/JAIL%s.ini",playa);
                if(dini_Exists(arquivo))
                {
                    dini_Set(arquivo,"Admin",sendername);
                    dini_Set(arquivo,"Motivo",result);
                	dini_IntSet(arquivo,"Tempo",money);
                }
                else
                {
                    dini_Create(arquivo);
                    dini_Set(arquivo,"Admin",sendername);
                    dini_Set(arquivo,"Motivo",result);
                	dini_IntSet(arquivo,"Tempo",money);
           		}
                format(gstring,sizeof(gstring), "AdmAviso: %s Agendou %s, Tempo %d Minutos, Motivo: %s", sendername,playa,money,result);
				ABroadCast(COLOR_YELLOW,gstring,1);
            }
            else
    		{
    		    SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem permissao para usar esse comando!");
    		}
    	}
    	return 1;
    }
//----------------------------------[TOD]-----------------------------------------------
	if(strcmp(cmd, "/sethora", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /sethora [hora do dia] (0-23)");
				return 1;
			}
			new hour2;
			hour2 = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            SetWorldTime(hour2);
				format(string, sizeof(string), "   Tempo Definido Para %d Horas.", hour2);
				BroadCast(COLOR_GRAD1, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/iniciarloteria", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
	            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            format(string, sizeof(string), "Loteria: Ja comecou a loteria.");
	            OOCNews(COLOR_WHITE, string);
	            new rand = random(80);
	            if(rand < 77) { rand += 3; }
	            Lotto(rand);
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não tem permissão para usar esse comando!");
	            return 1;
	        }
	    }
		return 1;
	}
//-----------------------------------editstat---------------------------------------
	if(strcmp(cmd, "/editar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new editarnome[MAX_PLAYER_NAME];
			new editarnome2[MAX_PLAYER_NAME];
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /editar [id] [STATUS] [QUANTIDADE]");
				SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 Morreu |3 Melhorar |4 Horas Jogadas ");
				SendClientMessage(playerid, COLOR_GRAD3, "|5 Conta Do Banco |6 NumeroTelefone |7 Respeito ");
				SendClientMessage(playerid, COLOR_GRAD2, "|8 ChaveCasa |9 ChaveEmpresa |10 VIP(3,4,5)");
				SendClientMessage(playerid, COLOR_GRAD2, "|12 Detetive |13 Advogado |14 Mecânico |15 Repórter |16 L.Carros |17 V.Drogas");
				SendClientMessage(playerid, COLOR_GRAD2, "|18 P.Sexo |19 Box |20 Emprego |21 Matou |24 Skill De Pesca");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
	    	{
	    	    GetPlayerName(playerid,editarnome,sizeof(editarnome));
	    	    GetPlayerName(giveplayerid,editarnome2,sizeof(editarnome2));
                /*if(giveplayerid == playerid && ServerOwner[playerid] !=1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você não pode se Editar!");
                    return 1;
                }
                if(PlayerInfo[giveplayerid][pAdmin] >= 1 && ServerOwner[playerid] != 1)
                {
                    SendClientMessage(playerid, COLOR_GREY, "Você não pode editar Um Admin!");
                    return 1;
                }*/
	    	    if(giveplayerid != INVALID_PLAYER_ID)
	    	    {
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /editar [id] [STATUS] [QUANTIDADE]");
						SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 Morreu |3 Melhorar |4 Horas Jogadas ");
						SendClientMessage(playerid, COLOR_GRAD3, "|5 Conta Do Banco |6 NumeroTelefone |7 Respeito ");
						SendClientMessage(playerid, COLOR_GRAD2, "|8 ChaveCasa |9 ChaveEmpresa |10 VIP(3,4,5)");
						SendClientMessage(playerid, COLOR_GRAD2, "|12 Detetive |13 Advogado |14 Mecânico |15 Repórter |16 L.Carros |17 V.Drogas");
						SendClientMessage(playerid, COLOR_GRAD2, "|18 P.Sexo |19 Box |20 Emprego |21 Matou |24 Skill De Pesca");
						return 1;
					}
					new stat;
					stat = strval(tmp);
					tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /editar [id] [STATUS] [QUANTIDADE]");
						SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 Morreu |3 Melhorar |4 Horas Jogadas ");
						SendClientMessage(playerid, COLOR_GRAD3, "|5 Conta Do Banco |6 NumeroTelefone |7 Respeito ");
						SendClientMessage(playerid, COLOR_GRAD2, "|8 ChaveCasa |9 ChaveEmpresa |10 VIP(3,4,5)");
						SendClientMessage(playerid, COLOR_GRAD2, "|12 Detetive |13 Advogado |14 Mecânico |15 Repórter |16 L.Carros |17 V.Drogas");
						SendClientMessage(playerid, COLOR_GRAD2, "|18 P.Sexo |19 Box |20 Emprego |21 Matou |24 Skill De Pesca");
						return 1;
					}
					new quantidade;
					quantidade = strval(tmp);
					if (PlayerInfo[playerid][pAdmin] >= 1337)
					{
					    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
							return 1;
						}
						if(giveplayerid == playerid && PlayerInfo[playerid][pAdmin] != 3000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode se editar");
							return 1;
						}
						switch (stat)
						{
							case 1:
							{
								PlayerInfo[giveplayerid][pLevel] = quantidade;
								format(string, sizeof(string), "   Você setou level %d para o jogador", quantidade);
								ScoreLevel(giveplayerid);
							}
							case 2:
							{
								PlayerInfo[giveplayerid][pDeaths] = quantidade;
								format(string, sizeof(string), "   Você setou %d vezes que ele morreu", quantidade);
							}
							case 3:
							{
								PlayerInfo[giveplayerid][gPupgrade] = quantidade;
								format(string, sizeof(string), "   Você setou %d de pontos de melhoria", quantidade);
							}
							case 4:
							{
								PlayerInfo[giveplayerid][pConnectTime] = quantidade;
								format(string, sizeof(string), "   Você setou %d horas jogadas para o jogador", quantidade);
							}
							case 5:
							{
								PlayerInfo[giveplayerid][pConta] = quantidade;
								format(string, sizeof(string), "   Você setou R$%d no banco do jogador", quantidade);
							}
							case 6:
							{
								PlayerInfo[giveplayerid][pPnumber] = quantidade;
								format(string, sizeof(string), "   Você setou o celular do jogador para %d", quantidade);
							}
							case 7:
							{
								PlayerInfo[giveplayerid][pExp] = quantidade;
								format(string, sizeof(string), "   Você setou o respeito do jogador para %d", quantidade);
							}
							case 8:
							{
								PlayerInfo[giveplayerid][pPHousekey] = quantidade;
								format(string, sizeof(string), "   Você setou a chave de casa pra %d", quantidade);
							}
							case 9:
							{
								PlayerInfo[giveplayerid][pPbiskey] = quantidade;
								format(string, sizeof(string), "   Você setou a chave da empresa %d", quantidade);
							}
							case 10:
							{
        						PlayerInfo[giveplayerid][pVIP] = quantidade;
								format(string, sizeof(string), "   Você setou VIP %d para o jogador", quantidade);
								getdate(year, month, day);
								gettime(hour,minute);
							}
							case 11:
							{
								format(string, sizeof(string), "   esse status foi retirado", quantidade);
							}
							case 12:
							{
								PlayerInfo[giveplayerid][pDetSkill] = quantidade;
								format(string, sizeof(string), "   Você setou nivel de detetive para: %d", quantidade);
							}
							case 13:
							{
								PlayerInfo[giveplayerid][pLawSkill] = quantidade;
								format(string, sizeof(string), "   Você setou nivel de advogado para: %d", quantidade);
							}
							case 14:
							{
								PlayerInfo[giveplayerid][pMechSkill] = quantidade;
								format(string, sizeof(string), "   Você setou nivel de mecanico para: %d", quantidade);
							}
							case 15:
							{
								PlayerInfo[giveplayerid][pNewsSkill] = quantidade;
								format(string, sizeof(string), "   The Player News Reporter Skill Set To %d", quantidade);
							}
							case 17:
							{
								PlayerInfo[giveplayerid][pDrogasSkill] = quantidade;
								format(string, sizeof(string), "   Você setou a Skill de Drogas para: %d", quantidade);
							}
							case 18:
							{
								PlayerInfo[giveplayerid][pSexSkill] = quantidade;
								format(string, sizeof(string), "  Você setou a Skill de P.Sexo para: %d", quantidade);
							}
							case 19:
							{
								PlayerInfo[giveplayerid][pBoxSkill] = quantidade;
								format(string, sizeof(string), "   The Player Box Skill Set To %d", quantidade);
							}
							case 21:
							{
								PlayerInfo[giveplayerid][pKills] = quantidade;
								format(string, sizeof(string), "   Você setou %d vezes que ele matou alguém", quantidade);
							}
							case 22:
							{
								PlayerInfo[giveplayerid][pContractTime] = quantidade;
								format(string, sizeof(string), "   Você setou o tempo de contrato para: %d", quantidade);
							}
							case 23:
							{
							}
							case 24:
							{
								PlayerInfo[giveplayerid][pFishSkill] = quantidade;
								format(string, sizeof(string), "   Você setou a Skill de Pescar para: %d", quantidade);
							}
							default:
							{
								format(string, sizeof(string), "   Codigo Invalido", quantidade);
							}

						}
						SendClientMessage(playerid, COLOR_GRAD1, string);
                        SalvarPlayer(playerid);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
					}
				}//not valid id
			}//not connected
		}
		return 1;
	}
//----------------------------------[SETINT]-----------------------------------------------
	if(strcmp(cmd, "/setint", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
		{
			SendClientMessage(playerid,COLOR_GREY," Você não pode trocar o interior agora!");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /setint [interiorid]");
				return 1;
			}
			new intid;
			intid = strval(tmp);
			SetPlayerInterior(playerid,intid);
			PlayerInfo[playerid][pInt] = intid;
			format(string, sizeof(string), "   Interior Mudado Para %d.", intid);
			SendClientMessage(playerid, COLOR_GRAD1, string);
		}
		return 1;
	}
//----------------------------------[INVITE]------------------------------------------------
	if(strcmp(cmd, "/convidar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /convidar [playerid/Parte-do-Nick]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLider] >= 1 || PlayerInfo[playerid][pCargo] >= 5)
			{
			    new lolz = GetPlayerOrg(playerid);
	    		if(TemVaga(lolz) == 0)
	    		{
					SendClientMessage(playerid, COLOR_GRAD1, "Não há mais vagas na lista use /limparvaga primeiro.");
					return 1;
	    		}
			    if(IsPlayerConnected(para1))
			    {
			        if(PlayerInfo[para1][pMembro] != 0 || PlayerInfo[para1][pLider] != 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "Este player já participa de Org/Gang/Mafia.");
						return 1;
					}
			        if(para1 != INVALID_PLAYER_ID)
			        {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* %s te convidou para entrar para: %s (digite /aceitar convite) para aceitar.", PlayerName(playerid), NomeORG(playerid));
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Você convidou %s para sua organização: %s.", giveplayer,NomeORG(playerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						InviteOffer[para1] = playerid;
						InviteJob[para1] = lolz;
						format(strtheus,sizeof(strtheus), "{00FFFF}Você foi Convidado para a Organização: %s!\n{FF8000}Deseja Entrar para esta Organização?\n{0080FF}Se você Quiser Entrar Aperte em '{00FFFF}Sim{0080FF}'\n{0080FF}Se não Quiser Aperte em '{00FFFF}Não{0080FF}'",NomeORG(playerid));
		        		ShowPlayerDialog(para1,642,DIALOG_STYLE_MSGBOX,"Convite",strtheus,"Sim","Nao");
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Somente líderes e Sub lideres podem usar este comando !");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/sairdafamilia", true) == 0 || strcmp(cmd, "/contasfamilia", true) == 0 || strcmp(cmd, "/sairfamilia", true) == 0)
	{
		if(PlayerInfo[playerid][pFamyMember] == 0 && PlayerInfo[playerid][pFamyLider] == 0)
    	{
	   		SendClientMessage(playerid,COLOR_GREY," Você não faz parte de nemhuma familia!");
	   		return 1;
    	}
		PlayerInfo[playerid][pFamyMember] = 0;
		PlayerInfo[playerid][pFamyLider] = 0;
		MudarNickAceito[playerid] = 1;
        SendClientMessage(playerid, COLOR_GRAD2, "Você Saiu da Família, digite /mudarnick [NICK] e volte ao seu antigo Nick!");
		return 1;
	}
	if(strcmp(cmd, "/convidarf", true) == 0 || strcmp(cmd, "/convidarfamilia", true) == 0 || strcmp(cmd, "/convidarfamy", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /convidarf [playerid/Parte-do-Nick]");
				return 1;
			}
			if(GetPlayerFamy(playerid) == FamilyBloqueada)
		{
  			SendClientMessage(playerid, COLOR_LIGHTRED, "* A sua Família Cancelada, Você foi Expulso Automaticamente.");
            PlayerInfo[playerid][pFamyLider] = 0;
			PlayerInfo[playerid][pFamyMember] = 0;
		}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pFamyLider] > 0)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(PlayerInfo[para1][pFamyMember] != 0 || PlayerInfo[para1][pFamyLider] != 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "Este player já participa de Alguma outra família.");
						return 1;
					}
			        if(para1 != INVALID_PLAYER_ID)
			        {
                        new FamyOwna = GetPlayerFamy(playerid);
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você convidou %s para sua Família: %s.", giveplayer,NomeFamy(playerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        ConviteFamy[para1] = FamyOwna;
                        format(gstring,sizeof(gstring), "{00FFFF}Você foi convidado para a Família:{FF8000} %s \n\n{00FFFF}Deseja entrar para esta Família?",NomeFamy(playerid));
    		        	ShowPlayerDialog(para1,4569,DIALOG_STYLE_MSGBOX,"Convite Família",gstring,"Sim","Nao");
                    }
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Somente líderes de famílias podem usar este comando !");
			}
		}
		return 1;
	}
//----------------------------------[UNINVITE]------------------------------------------------
	if(strcmp(cmd, "/Demitir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "/Demitir [ID/NICK] [Motivo]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pLider] > 0 || PlayerInfo[playerid][pCargo] >= 5)
			{
			    new lolz = GetPlayerOrg(playerid);
			    if(PlayerInfo[para1][pMembro] != lolz)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Você não pode demitir quem não é da sua org.");
				    return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (PlayerInfo[para1][pMembro] > 0)
					    {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /Demitir [ID/NICK] [Motivo]");
								return 1;
							}
							DemitirInfoOrg(PlayerName(para1));
							format(string, sizeof(string), "* Você foi demitido pelo líder %s Motivo: %s.", sendername, (result));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							SendClientMessage(para1, COLOR_LIGHTBLUE, "* Agora você é um civil novamente.");
				            gTeam[para1] = 3;
							PlayerInfo[para1][pTeam] = 3;
							PlayerInfo[para1][pMembro] = 0;
							PlayerInfo[para1][pCargo] = 0;
							if(PlayerInfo[para1][pSex] == 1) { PlayerInfo[para1][pSkin] = 23; } else { PlayerInfo[para1][pSkin] = 216; }
            				SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
							Hospital[para1] = 1;
							SpawnPlayer(para1);
							format(string, sizeof(string), "Você demitiu %s, Motivo: %s.", giveplayer, result);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							return 1;
						}
					}
				}
			}//not connected
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Você não é um líder!");
		}
		return 1;
	}
    if(strcmp(cmd, "/tirarf", true) == 0 || strcmp(cmd, "/tirarfamilia", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "/Tirarf [ID/NICK] [Motivo]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pFamyLider] > 0)
			{
			    new lolz = GetPlayerFamy(playerid);
			    if(PlayerInfo[para1][pFamyMember] != lolz)
				{
				    SendClientMessage(playerid, COLOR_GREY, "Você não pode tirar quem não é da sua família.");
				    return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
					    if (PlayerInfo[para1][pFamyMember] > 0)
					    {
							GetPlayerName(para1, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							new length = strlen(cmdtext);
							while ((idx < length) && (cmdtext[idx] <= ' '))
							{
								idx++;
							}
							new offset = idx;
							new result[64];
							while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
							{
								result[idx - offset] = cmdtext[idx];
								idx++;
							}
							result[idx - offset] = EOS;
							if(!strlen(result))
							{
								SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /Tirarf [ID/NICK] [Motivo]");
								return 1;
							}
							format(string, sizeof(string), "* Você foi tirado da família pelo líder %s Motivo: %s.", sendername, (result));
							SendClientMessage(para1, COLOR_LIGHTBLUE, string);
							PlayerInfo[para1][pFamyMember] = 0;
							format(string, sizeof(string), "Você tirou %s da família, Motivo: %s.", giveplayer, result);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							return 1;
						}
					}
				}
			}//not connected
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Você não é um líder!");
		}
		return 1;
	}
    if(strcmp(cmd, "/np", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
	            SendClientMessage(playerid,COLOR_DBLUE,"~~~> Brasil PlayStart <~~~> Líderes e Datas de Login <~~~");
				new arquivo[64];
		        format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[1][Lider]);
	            format(strtheus, sizeof(strtheus), "1 - Polícia Mílitar [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[1][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
	            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[2][Lider]);
	            format(strtheus, sizeof(strtheus), "2 - R.O.T.A [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[2][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
	            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[3][Lider]);
	            format(strtheus, sizeof(strtheus), "3 - Exército [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[3][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
	    	    SendClientMessage(playerid,CORS,strtheus);
		        format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[4][Lider]);
	            format(strtheus, sizeof(strtheus), "4 - Médicos [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[4][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,CORS,strtheus);
	            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[5][Lider]);
	            format(strtheus, sizeof(strtheus), "5 - Los Aztecas [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[5][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
				SendClientMessage(playerid,CORS,strtheus);
	            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[6][Lider]);
	            format(strtheus, sizeof(strtheus), "6 - Taliban [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[6][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
	            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[7][Lider]);
	            format(strtheus, sizeof(strtheus), "7 - Prefeitura [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[7][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
	            format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[8][Lider]);
	            format(strtheus, sizeof(strtheus), "8 - Hitmans [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[8][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[9][Lider]);
	            format(strtheus, sizeof(strtheus), "9 - Repórteres [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[9][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[10][Lider]);
	            format(strtheus, sizeof(strtheus), "10 - Taxistas [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[10][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[11][Lider]);
	            format(strtheus, sizeof(strtheus), "11 - Policia Federal [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[11][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[12][Lider]);
	            format(strtheus, sizeof(strtheus), "12 - Cosa Nostra [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[12][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
	    	    SendClientMessage(playerid,CORS,strtheus);
	    	    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[13][Lider]);
	            format(strtheus, sizeof(strtheus), "13 - Yakuza [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[13][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
	    	    SendClientMessage(playerid,CORS,strtheus);
	    	    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[14][Lider]);
	            format(strtheus, sizeof(strtheus), "14 - Groove Street [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[14][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
	    	    SendClientMessage(playerid,CORS,strtheus);
	    	    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[15][Lider]);
	            format(strtheus, sizeof(strtheus), "15 - Al´qaeda [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[15][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
	    	    SendClientMessage(playerid,CORS,strtheus);
	    	    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[16][Lider]);
	            format(strtheus, sizeof(strtheus), "16 - Policia Rodoviaria [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[16][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[17][Lider]);
	            format(strtheus, sizeof(strtheus), "17 - BALLAS [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[17][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[18][Lider]);
	            format(strtheus, sizeof(strtheus), "18 - Los Vagos [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[18][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[19][Lider]);
	            format(strtheus, sizeof(strtheus), "19 - Comando Vermelho [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[19][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[20][Lider]);
	            format(strtheus, sizeof(strtheus), "20 - PCC [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[20][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[21][Lider]);
	            format(strtheus, sizeof(strtheus), "21 - Hells Angels [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[21][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(arquivo, sizeof(arquivo), OpenAccPlayer,InfoOrg[22][Lider]);
	            format(strtheus, sizeof(strtheus), "22 - Mongols [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[22][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
			    format(strtheus, sizeof(strtheus), "23 - Sons Of Anarchy [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[23][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
                format(strtheus, sizeof(strtheus), "24 - Triads [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[24][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
                format(strtheus, sizeof(strtheus), "25 - Drifters [Lider: {00F0F0}%s{FF8000}] <> Data: {00F0F0}%d/%d/%d {FF8000} <> Hora: {00F0F0}%d:%d:%d",InfoOrg[25][Lider],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
			    SendClientMessage(playerid,CORS,strtheus);
		}
		return 1;
	}
//----------------------------------{Numero Emprego}-----------------------------------------------
	if(strcmp(cmd, "/empregos", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Detetive - 1");
				SendClientMessage(playerid, 0x33FF00FF, "*** Advogado - 2");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Profissional de Sexo - 3");
				SendClientMessage(playerid, 0x33FF00FF, "*** Vendedor de Drogas - 4");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Mecânico - 5");
				SendClientMessage(playerid, 0x33FF00FF, "*** Segurança - 6");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Vendedor de Armas - 7");
				SendClientMessage(playerid, 0x33FF00FF, "*** Boxer - 8");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Motorista de Onibus - 9");
				SendClientMessage(playerid, 0x33FF00FF, "*** Mendigo - 10");
				SendClientMessage(playerid, TEAM_VAGOS_COLOR, "*** Caminhoneiro - 11");
			}
		}
		return 1;
	}
//-----------------------------------{ IP }-----------------------------------------------------
	if(strcmp(cmd, "/ip", true) == 0)
	{
        if(ServerOwner[playerid] == 1)
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "[INFO] Use: /ip [ID]");
				SendClientMessage(playerid, COLOR_YELLOW, "Comando Para Ver o Ip Do Jogador.");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				new ip[64];
				GetPlayerIp(giveplayerid,ip,64);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				format(gstring, sizeof(gstring), "-| %s's IP: %s |-", giveplayer,ip);
				SendClientMessage(playerid,COLOR_LIGHTBLUE, gstring);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador Ativo.");
			}
		}
		else
 		{
 			SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando.");
	    	return 1;
  		}
	    return 1;
	}
    if(strcmp(cmd, "/irip", true) == 0)
	{
        if(ServerOwner[playerid] == 1)
		{
            new x_IP[32];
	     	x_IP = strtok(cmdtext, idx);
	     	if(!strlen(x_IP))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /irip [ip]");
				return 1;
			}
            for(new i = 0; i < MaiorID; i++)
		    {

                GetPlayerIp(i,InfoTheus[i][IrIp],32);
                if(strcmp(x_IP,InfoTheus[i][IrIp],true)==0)
				{
                    if(IsPlayerConnected(i))
    			    {
                        new Float:x,Float:y,Float:z;
                        GetPlayerPos(i, x, y, z);
                        GetPlayerName(i, giveplayer, sizeof(giveplayer));
                        SetPlayerPos(playerid,x,y,z);
                        SetPlayerInterior(playerid,GetPlayerInterior(i));
        				format(gstring, sizeof(gstring), "-| %s [ID: %d] IP: %s |- Você foi até ele ...", giveplayer,i,InfoTheus[i][IrIp]);
        				SendClientMessage(playerid,COLOR_LIGHTBLUE, gstring);
                    }
                }
            }
		}
		else
 		{
 			SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando.");
	    	return 1;
  		}
	    return 1;
	}
//----------------------/unbanip--------------
	if(strcmp(cmd,"/desbanip",true)==0 || strcmp(cmd,"/unbanip",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
		    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"[INFO] Use: /desbanip [IP DO JOGADOR]");
		        return 1;
   			}
			format(gstring,sizeof(gstring), "IPsBanidos/%s.ini", tmp);
			if(!dini_Exists(gstring))
			{
		        SendClientMessage(playerid,COLOR_GRAD1,"IP não encontrado na base de dados");
		        return 1;
			}
			else
			{
			    dini_Remove(gstring);
				GetPlayerName(playerid, sendername, sizeof(sendername));
				format(string,sizeof(string), "ADM: %s desbaniu o IP %s", sendername,tmp);
				ABroadCast(COLOR_YELLOW,string,1);
		        return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/nomedesban",true)==0 || strcmp(cmd,"/unbannome",true)==0 || strcmp(cmd,"/desbannome",true)==0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
		    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
		    tmp = strtok(cmdtext,idx);
		    if(!strlen(tmp))
		    {
		        SendClientMessage(playerid,COLOR_GRAD1,"[INFO] Use: /nomedesban [NOME DO JOGADOR]");
		        return 1;
   			}
   			new arquivo[64];
			format(arquivo, sizeof(arquivo), "Banidos/%s.ini",tmp);
			if(!dini_Exists(arquivo))
			{
		        SendClientMessage(playerid,COLOR_GRAD1,"Nick não encontrado na base de dados");
		        return 1;
			}
			else
			{
   				dini_Remove(arquivo);
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string,sizeof(string), "ADM: %s desbaniu o Nick %s", sendername,tmp);
			ABroadCast(COLOR_YELLOW,string,1);
		}
		return 1;
	}
//----------------------------------[MAKELider]------------------------------------------------
    if(strcmp(cmd, "/FamyLider", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp) && PlayerInfo[playerid][pFamyLider] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /FamyLider [id] [Numero]");
				return 1;
			}
			if(GetPlayerFamy(playerid) == FamilyBloqueada)
		{
  			SendClientMessage(playerid, COLOR_LIGHTRED, "* A sua Família Cancelada, Você foi Expulso Automaticamente.");
            PlayerInfo[playerid][pFamyLider] = 0;
			PlayerInfo[playerid][pFamyMember] = 0;
		}
            if(PlayerInfo[playerid][pAdmin] >= 3000 || PlayerInfo[playerid][pFamyLider] != 0)
            {
    			new para1,level,lolzTheus = 0;
    			para1 = ReturnUser(tmp);
    			tmp = strtok(cmdtext, idx);
    			level = strval(tmp);
                if(PlayerInfo[playerid][pFamyLider] != 0 && PlayerInfo[playerid][pAdmin] != 3000)
                {
                    level = PlayerInfo[playerid][pFamyLider];
                    lolzTheus ++;
                }
    		    if(IsPlayerConnected(para1))
    		    {
    		        if(para1 != INVALID_PLAYER_ID)
    		        {
                        GetPlayerName(para1, giveplayer, sizeof(giveplayer));
    					GetPlayerName(playerid, sendername, sizeof(sendername));
    					PlayerInfo[para1][pFamyLider] = level;
    					format(string, sizeof(string), "   Você foi Promovido a Líder de uma Família Por %s", sendername);
                        SendClientMessage(para1, COLOR_LIGHTBLUE, string);
    					SendClientMessage(para1, COLOR_LIGHTBLUE,"*** Para obter Ajuda digite /AjudaFamilia!!");
                        if(lolzTheus != 0)
                            format(string, sizeof(string), "   Você promoveu %s a Lider de Sua Família.", giveplayer);
                        else
                            format(string, sizeof(string), "   Você promoveu %s a Lider de uma Família.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        lolzTheus = 0;
                    }
    			}//not connected
            }
            else
            {
                SendClientMessage(playerid, COLOR_GRAD2, "ERRO: Você não tem mermição para Usar Este Comando");
            }
		}
		return 1;
	}
    if(strcmp(cmd, "/liderex", true) == 0 && PlayerInfo[playerid][pAdmin] >= 1342)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /liderex [id] [Numero(1-34)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 34 || level < 0) { SendClientMessage(playerid, COLOR_GREY, "Empregos de 0 a 34"); return 1; }
			if(PlayerInfo[para1][pLider] != 0 && PlayerInfo[para1][pMembro] != 0)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Este player já participa de uma organização!");
			    return 1;
			}
		    if(IsPlayerConnected(para1))
		    {
		        if(para1 != INVALID_PLAYER_ID)
		        {
					if(level == 1) { PlayerInfo[para1][pSkin] = 283; }//Polícia Mílitar
					else if(level == 2)	{ PlayerInfo[para1][pSkin] = 285; }//R.O.T.A
					else if(level == 3) { PlayerInfo[para1][pSkin] = 287; }//Exército
					else if(level == 4) { PlayerInfo[para1][pSkin] = 70; }//Fire/Ambulance
					else if(level == 5) { PlayerInfo[para1][pSkin] = 115; }//Varrios Los Aztecas
					else if(level == 6) { PlayerInfo[para1][pSkin] = 249; }//Taliban
					else if(level == 7) { PlayerInfo[para1][pSkin] = 147; }//Prefeito
					else if(level == 8) { PlayerInfo[para1][pSkin] = 294; }//Hitmans
					else if(level == 9) { PlayerInfo[para1][pSkin] = 227; }//Repórters
					else if(level == 10) { PlayerInfo[para1][pSkin] = 61; }//Taxistas
					else if(level == 11) { PlayerInfo[para1][pSkin] = 295; }//Policia Federal
					else if(level == 12) { PlayerInfo[para1][pSkin] = 113; }//Máfia Cosa Nostra
					else if(level == 13) { PlayerInfo[para1][pSkin] = 120; }//Máfia Yakuza
					else if(level == 14) { PlayerInfo[para1][pSkin] = 270; }//Groove
                    else if(level == 15) { PlayerInfo[para1][pSkin] = 123; }//ALQaeda
					else if(level == 16) { PlayerInfo[para1][pSkin] = 186; }//Policia Rodoviaria
                    else if(level == 17) { PlayerInfo[para1][pSkin] = 104; }//Ballas
                    else if(level == 18) { PlayerInfo[para1][pSkin] = 108; }//Vagos
                    else if(level == 19) { PlayerInfo[para1][pSkin] = 19; }//CV
                    else if(level == 20) { PlayerInfo[para1][pSkin] = 143; }//PCC
                    else if(level == 21) { PlayerInfo[para1][pSkin] = 247; }//Hells Angels
                    else if(level == 22) { PlayerInfo[para1][pSkin] = 181; }//Mongols
                    else if(level == 23) { PlayerInfo[para1][pSkin] = 101; }//Sons
                    else if(level == 24) { PlayerInfo[para1][pSkin] = 101; }//Sons
                    else if(level == 25) { PlayerInfo[para1][pSkin] = 29; }//Sons
                    else if(level == 26) { PlayerInfo[para1][pSkin] = 299; }//Sons
                    else if(level == 27) { PlayerInfo[para1][pSkin] = 299; }//Sons
                    GetPlayerName(para1, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					PlayerInfo[para1][pLider] = level;
					format(string, sizeof(string), "   Você foi promovido a lider pelo admin %s", sendername);
					SendClientMessage(para1, COLOR_LIGHTBLUE, string);
					SendClientMessage(para1, COLOR_LIGHTBLUE,"   Promovido Com sucesso !!");
					format(string, sizeof(string), "   Você promoveu %s a Lider.", giveplayer);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    Hospital[para1] = 1;
					gTeam[para1] = 11;
				    PlayerInfo[para1][pTeam] = 11;
				    PlayerInfo[para1][pCargo] = 6;
				    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
				    SetPlayerSpawn(para1);
				}
			}//not connected
		}
		return 1;
	}
    if(strcmp(cmd, "/votar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(EleicoesOn == 0)
			{
                SendClientMessage(playerid, COLOR_WHITE, " Ás eleições não Estão abertas!");
                return true;
            }
            if(PlayerInfo[playerid][pVotou] != 0) return SendClientMessage(playerid, COLOR_WHITE, " Você ja Votou!");
            if(PlayerToPoint(15.0, playerid, 359.4827,207.1152,1008.3828))
		    {
                tmp = strtok(cmdtext, idx);
    			if(!strlen(tmp))
    			{
                    SendClientMessage(playerid, COLOR_WHITE, " [INFO] Use: /Votar [Candidato (1 Até 3)]!");
                    format(gstring, sizeof(gstring), "Candidatos: 1 = %s, 2 = %s, 3 = %s.", CandidatoInfo[0][CandNome], CandidatoInfo[1][CandNome], CandidatoInfo[2][CandNome]/*, CandidatoInfo[3][CandNome],CandidatoInfo[4][CandNome]*/);
    			    SendClientMessage(playerid, COLOR_WHITE, gstring);
                    return 1;
    			}
                new Voto = strval(tmp);
                new ResultVoto = Voto-1;
                switch(Voto)
    	        {
                    case 1:
        	        {
                        if(strcmp(CandidatoInfo[ResultVoto][CandNome],"Ninguem", true ) == 0 )
                    {
                        SendClientMessage(playerid, COLOR_WHITE, " Não tem Nenhum candidato neste Número!");
                        format(gstring, sizeof(gstring), "Candidatos: 1 = %s, 2 = %s, 3 = %s.", CandidatoInfo[0][CandNome], CandidatoInfo[1][CandNome], CandidatoInfo[2][CandNome]/*, CandidatoInfo[3][CandNome],CandidatoInfo[4][CandNome]*/);
			    		SendClientMessage(playerid, COLOR_WHITE, gstring);
						return true;
					}
						format(string, sizeof(string), "** Você votou no Candidato: %s, Obrigado por Votar!", CandidatoInfo[ResultVoto][CandNome]);
    			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(strtheus, sizeof(strtheus), "Eleições PlayStart: %s Acabou de Votar em Algum Candidato para Prefeito, Para votar vá a Prefeitura de LS.",PlayerName(playerid));
                        SendClientMessageToAll(0x77D3EEFF,strtheus);
                        CandidatoInfo[ResultVoto][CandVotos] ++;
                        PlayerInfo[playerid][pVotou] = 1;
                    }
                    case 2:
        	        {
                        if(strcmp(CandidatoInfo[ResultVoto][CandNome],"Ninguem", true ) == 0 )
                    {
                        SendClientMessage(playerid, COLOR_WHITE, " Não tem Nenhum candidato neste Número!");
                        format(gstring, sizeof(gstring), "Candidatos: 1 = %s, 2 = %s, 3 = %s.", CandidatoInfo[0][CandNome], CandidatoInfo[1][CandNome], CandidatoInfo[2][CandNome]/*, CandidatoInfo[3][CandNome],CandidatoInfo[4][CandNome]*/);
			    		SendClientMessage(playerid, COLOR_WHITE, gstring);
						return true;
					}
						format(string, sizeof(string), "** Você votou no Candidato: %s, Obrigado por Votar!", CandidatoInfo[ResultVoto][CandNome]);
    			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(strtheus, sizeof(strtheus), "Eleições PlayStart: %s Acabou de Votar em Algum Candidato para Prefeito, Para votar vá a Prefeitura de LS.",PlayerName(playerid));
                        SendClientMessageToAll(0x77D3EEFF,strtheus);
                        CandidatoInfo[ResultVoto][CandVotos] ++;
                        PlayerInfo[playerid][pVotou] = 1;
                    }
                    case 3:
        	        {
                        if(strcmp(CandidatoInfo[ResultVoto][CandNome],"Ninguem", true ) == 0 )
                    {
                        SendClientMessage(playerid, COLOR_WHITE, " Não tem Nenhum candidato neste Número!");
                        format(gstring, sizeof(gstring), "Candidatos: 1 = %s, 2 = %s, 3 = %s.", CandidatoInfo[0][CandNome], CandidatoInfo[1][CandNome], CandidatoInfo[2][CandNome]/*, CandidatoInfo[3][CandNome],CandidatoInfo[4][CandNome]*/);
			    		SendClientMessage(playerid, COLOR_WHITE, gstring);
						return true;
					}
						format(string, sizeof(string), "** Você votou no Candidato: %s, Obrigado por Votar!", CandidatoInfo[ResultVoto][CandNome]);
    			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(strtheus, sizeof(strtheus), "Eleições PlayStart: %s Acabou de Votar em Algum Candidato para Prefeito, Para votar vá a Prefeitura de LS.",PlayerName(playerid));
                        SendClientMessageToAll(0x77D3EEFF,strtheus);
                        CandidatoInfo[ResultVoto][CandVotos] ++;
                        PlayerInfo[playerid][pVotou] = 1;
                    }
                   /* case 4:
        	        {
                        format(string, sizeof(string), "** Você votou no Candidato: %s, Obrigado por Votar!", CandidatoInfo[ResultVoto][CandNome]);
    			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(strtheus, sizeof(strtheus), "Eleições PlayStart: %s Acabou de Votar em Algum Candidato para Prefeito, Para votar vá a Prefeitura de LS.",PlayerName(playerid));
                        SendClientMessageToAll(0x77D3EEFF,strtheus);
                        CandidatoInfo[ResultVoto][CandVotos] ++;
                    }
                    case 5:
        	        {
                        format(string, sizeof(string), "** Você votou no Candidato: %s, Obrigado por Votar!", CandidatoInfo[ResultVoto][CandNome]);
    			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(strtheus, sizeof(strtheus), "Eleições PlayStart: %s Acabou de Votar em Algum Candidato para Prefeito, Para votar vá a Prefeitura de LS.",PlayerName(playerid));
                        SendClientMessageToAll(0x77D3EEFF,strtheus);
                        CandidatoInfo[ResultVoto][CandVotos] ++;
                    }     */
                }
                SaveEleicoes();
            }
            else
            {
                SendClientMessage(playerid, COLOR_WHITE, " Você não está na Sala de Votação na Prefeitura!");
                return true;
            }
		}
    	return 1;
	}
    if (strcmp(cmd, "/eleicoes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if (PlayerInfo[playerid][pAdmin] < 3000)
			{
                SendClientMessage(playerid, COLOR_WHITE, " Você não tem Autorização para Usar Este comando!");
                return true;
            }
            if (EleicoesOn == 0)
			{
                EleicoesOn = 1;
                SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Eleições Iniciadas |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string, sizeof(string), "** Admin %s Iniciou as Eleições do Brasil PlayStart", PlayerName(playerid));
                SendClientMessageToAll(0x77EEA1FF,string);
                format(string, sizeof(string), "~~> Candidato Número 1: %s.", CandidatoInfo[0][CandNome]);
				SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "~~> Candidato Número 2: %s.", CandidatoInfo[1][CandNome]);
                SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "~~> Candidato Número 3: %s.", CandidatoInfo[2][CandNome]);
                SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                SendClientMessageToAll(0x95FFDFAA,"** Para Votar vá até a Prefeitura de Los Santos, Caso não votar Pagará Multa.");
                for(new o=0; o<sizeof(CandidatoInfo); o++)
		        {
		  			CandidatoInfo[o][CandVotos] = 0;
                }
				for(new i;i<MaiorID;i++) { PlayerPlaySound(i, 1084, 0.0, 0.0, 0.0),PlayerInfo[i][pVotou] = 0; }
            }
            else
            {
                EleicoesOn = 0;
                new vencedoreleicoes = 0,partido;
                for(new o=0; o<sizeof(CandidatoInfo); o++)
		        {
                    if(CandidatoInfo[o][CandVotos] >= vencedoreleicoes)
        		    {
                        vencedoreleicoes = CandidatoInfo[o][CandVotos];
         		    }
                }
                for(new o=0; o<sizeof(CandidatoInfo); o++)
		        {
                    if(CandidatoInfo[o][CandVotos] == vencedoreleicoes)
                    {
                        partido = o;
         		    }
				}
                SendClientMessageToAll(0x95FFDFAA,"**~~*~*~*~*~*~*~*|{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}| Eleições Finalizadas |{00FF00}B{FFD700}.P.{1E90FF}F{95FFDF}|*~*~*~*~*~*~*~~**");
                format(string, sizeof(string), "** Admin %s Finalizou as Eleições do Brasil PlayStart", PlayerName(playerid));
                SendClientMessageToAll(0x77EEA1FF,string);
                format(string, sizeof(string), "~~> Candidato Número 1: %s, %d Votos.", CandidatoInfo[0][CandNome], CandidatoInfo[0][CandVotos]);
				SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "~~> Candidato Número 2: %s, %d Votos.", CandidatoInfo[1][CandNome], CandidatoInfo[1][CandVotos]);
                SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "~~> Candidato Número 3: %s, %d Votos.", CandidatoInfo[2][CandNome], CandidatoInfo[2][CandVotos]);
                SendClientMessageToAll(COLOR_LIGHTBLUE,string);
                format(string, sizeof(string), "~~> Vencedor <~~ Candidato Número %d: %s, Com %d Votos.", partido+1,CandidatoInfo[partido][CandNome], vencedoreleicoes);
                SendClientMessageToAll(0x1583F0AA,string);
                SendClientMessageToAll(0x95FFDFAA,"** Parabéns ao Novo Prefeito de Los Santos, Obrigado Por Votar.");
                for(new i;i<MaiorID;i++) { PlayerPlaySound(i, 1084, 0.0, 0.0, 0.0),PlayerInfo[i][pVotou] = 0; }
                for(new o=0; o<sizeof(CandidatoInfo); o++)
		        {
                    strmid(CandidatoInfo[o][CandNome], "Ninguem", 0, strlen("Ninguem"), 255);
		  			CandidatoInfo[o][CandVotos] = 0;
                }
				SaveEleicoes();
            }
            EleicoesOnSave();
            SaveEleicoes();
		}
		return 1;
	}
    if(strcmp(cmd, "/candidatar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
                SendClientMessage(playerid, COLOR_WHITE, " [INFO] Use: /candidatar [ID] [Id da Vaga (1 Até 3)]!");
                format(gstring, sizeof(gstring), "Candidatos: 1 = %s, 2 = %s, 3 = %s.", CandidatoInfo[0][CandNome], CandidatoInfo[1][CandNome], CandidatoInfo[2][CandNome]/*, CandidatoInfo[3][CandNome],CandidatoInfo[4][CandNome]*/);
			    SendClientMessage(playerid, COLOR_WHITE, gstring);
                return 1;
			}
            new para1;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
            new VagaPref = strval(tmp);
            new ResultVoto = VagaPref-1;
                        if (PlayerInfo[playerid][pAdmin] < 3000)
			{
            SendClientMessage(playerid, COLOR_WHITE, " Você não tem Autorização para Usar Este comando!");
             return true;
            }

            switch(VagaPref)
	        {
                case 1:
				{
					strmid(CandidatoInfo[ResultVoto][CandNome], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                    format(string, sizeof(string), "** Você Adicionou um Candidato: %s, na Vaga: %d!", CandidatoInfo[ResultVoto][CandNome],VagaPref);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "** O Admin %s te Candidatou a Prefeito de Los Santos, Faça sua campanha  e Boa Sorte!", PlayerName(playerid));
			        SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(strtheus, sizeof(strtheus), "Eleições PlayStart: %s Se Candidatou a Prefeito de Los Santos.",PlayerName(para1));
                    SendClientMessageToAll(0x77D3EEFF,strtheus);
                }
                case 2:
    	        {
					strmid(CandidatoInfo[ResultVoto][CandNome], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                    format(string, sizeof(string), "** Você Adicionou um Candidato: %s, na Vaga: %d!", CandidatoInfo[ResultVoto][CandNome],VagaPref);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "** O Admin %s te Candidatou a Prefeito de Los Santos, Faça sua campanha  e Boa Sorte!", PlayerName(playerid));
			        SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(strtheus, sizeof(strtheus), "Eleições PlayStart: %s Se Candidatou a Prefeito de Los Santos.",PlayerName(para1));
                    SendClientMessageToAll(0x77D3EEFF,strtheus);
                }
                case 3:
    	        {
					strmid(CandidatoInfo[ResultVoto][CandNome], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                    format(string, sizeof(string), "** Você Adicionou um Candidato: %s, na Vaga: %d!", CandidatoInfo[ResultVoto][CandNome],VagaPref);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "** O Admin %s te Candidatou a Prefeito de Los Santos, Faça sua campanha  e Boa Sorte!", PlayerName(playerid));
			        SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(strtheus, sizeof(strtheus), "Eleições PlayStart: %s Se Candidatou a Prefeito de Los Santos.",PlayerName(para1));
                    SendClientMessageToAll(0x77D3EEFF,strtheus);
                }
               /* case 4:
    	        {
                    strmid(CandidatoInfo[ResultVoto][CandNome], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                    format(string, sizeof(string), "** Você Adicionou um Candidato: %s, na Vaga: %d!", CandidatoInfo[ResultVoto][CandNome],VagaPref);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "** O Admin %s te Candidatou a Prefeito de Los Santos, Faça sua campanha  e Boa Sorte!", PlayerName(playerid));
			        SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(strtheus, sizeof(strtheus), "Eleições PlayStart: %s Se Candidatou a Prefeito de Los Santos.",PlayerName(para1));
                    SendClientMessageToAll(0x77D3EEFF,strtheus);
                }
                case 5:
    	        {
                    strmid(CandidatoInfo[ResultVoto][CandNome], PlayerName(para1), 0, strlen(PlayerName(para1)), 255);
                    format(string, sizeof(string), "** Você Adicionou um Candidato: %s, na Vaga: %d!", CandidatoInfo[ResultVoto][CandNome],VagaPref);
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "** O Admin %s te Candidatou a Prefeito de Los Santos, Faça sua campanha  e Boa Sorte!", PlayerName(playerid));
			        SendClientMessage(para1, COLOR_LIGHTBLUE, string);
                    format(strtheus, sizeof(strtheus), "Eleições PlayStart: %s Se Candidatou a Prefeito de Los Santos.",PlayerName(para1));
                    SendClientMessageToAll(0x77D3EEFF,strtheus);
                }   */
            }
            SaveEleicoes();
		}
    	return 1;
	}
	if(strcmp(cmd, "/lider", true) == 0 || strcmp(cmd, "/darlider", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /lider [id] [Numero(1-33)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level == 0) { SendClientMessage(playerid, COLOR_GREY, "Para tirar o lider de uma organização você deve usar /limparlider"); return 1; }

			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if(PlayerInfo[para1][pLider] != 0 || PlayerInfo[para1][pMembro] != 0)
				{
				    SendClientMessage(playerid, COLOR_GRAD1, "   Este player já participa de uma organização!");
				    return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						if(strcmp(InfoOrg[level][Lider],"Ninguem",true)==0)
						{
							ConviteInfoOrg(PlayerName(para1), level, 6);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GRAD2, "Já tem líder nessa ORG, use /limparlider antes de colocar outro lider");
						    return 1;
						}
						if(level == 1) { PlayerInfo[para1][pSkin] = 283; }//Polícia Mílitar
						else if(level == 2)	{ PlayerInfo[para1][pSkin] = 285; }//R.O.T.A
						else if(level == 3) { PlayerInfo[para1][pSkin] = 287; }//Exército
						else if(level == 4) { PlayerInfo[para1][pSkin] = 70; }//Fire/Ambulance
						else if(level == 5) { PlayerInfo[para1][pSkin] = 115; }//Varrios Los Aztecas
						else if(level == 6) { PlayerInfo[para1][pSkin] = 249; }//Taliban
						else if(level == 7) { PlayerInfo[para1][pSkin] = 147; }//Prefeito
						else if(level == 8) { PlayerInfo[para1][pSkin] = 294; }//Hitmans
						else if(level == 9) { PlayerInfo[para1][pSkin] = 227; }//Repórters
						else if(level == 10) { PlayerInfo[para1][pSkin] = 61; }//Taxistas
						else if(level == 11) { PlayerInfo[para1][pSkin] = 295; }//Policia Federal
						else if(level == 12) { PlayerInfo[para1][pSkin] = 113; }//Máfia Cosa Nostra
						else if(level == 13) { PlayerInfo[para1][pSkin] = 120; }//Máfia Yakuza
						else if(level == 14) { PlayerInfo[para1][pSkin] = 270; }//Groove
                        else if(level == 15) { PlayerInfo[para1][pSkin] = 123; }//ALQaeda
						else if(level == 16) { PlayerInfo[para1][pSkin] = 186; }//Policia Rodoviaria
                        else if(level == 17) { PlayerInfo[para1][pSkin] = 104; }//Ballas
                        else if(level == 18) { PlayerInfo[para1][pSkin] = 108; }//Vagos
                        else if(level == 19) { PlayerInfo[para1][pSkin] = 19; }//CV
                        else if(level == 20) { PlayerInfo[para1][pSkin] = 47; }//PCC
                        else if(level == 21) { PlayerInfo[para1][pSkin] = 247; }//Hells Angels
                        else if(level == 22) { PlayerInfo[para1][pSkin] = 181; }//Mongols
                        else if(level == 23) { PlayerInfo[para1][pSkin] = 101; }//son
                        else if(level == 24) { PlayerInfo[para1][pSkin] = 112; }//triads
                        else if(level == 25) { PlayerInfo[para1][pSkin] = 29; }//triads
                        else if(level == 26) { PlayerInfo[para1][pSkin] = 230; }//OwnZ
                        else if(level == 27) { PlayerInfo[para1][pSkin] = 230; }//Motoqueiros
                        else if(level == 28) { PlayerInfo[para1][pSkin] = 285; }//Policia Florestal
                        else if(level == 29) { PlayerInfo[para1][pSkin] = 177; }//GE
                        else if(level == 30) { PlayerInfo[para1][pSkin] = 285; }//B.O.P.E
                        else if(level == 31) { PlayerInfo[para1][pSkin] = 180; }//yStiflerS
                        else if(level == 32) { PlayerInfo[para1][pSkin] = 287; }//Exército Americano
                        else if(level == 33) { PlayerInfo[para1][pSkin] = 3; }//F.A.R.C
                        else if(level == 34) { PlayerInfo[para1][pSkin] = 285; }//29° BPM
                        else if(level == 35) { PlayerInfo[para1][pSkin] = 285; }//Polícia Cívil
                        else return SendClientMessage(playerid, COLOR_GREY, "Líder de 1 a 30");
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pLider] = level;
						format(string, sizeof(string), "   Você foi promovido a lider pelo admin %s", sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						SendClientMessage(para1, COLOR_LIGHTBLUE,"   Promovido Com sucesso !!");
						format(string, sizeof(string), "   Você promoveu %s a Lider.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        Hospital[para1] = 1;
						gTeam[para1] = 11;
					    PlayerInfo[para1][pTeam] = 11;
					    PlayerInfo[para1][pCargo] = 6;
						format(gstring, sizeof(gstring), "[BPF]{80E3FF} %s{FFFFFF} Novo lider da ORG: {00ECEC}%s{FFFFFF}, {FFFFFF}Pelo Admin: {00FFFF}%s", giveplayer, NomeORG(para1), sendername);// se num funfa NomeORG(GetPlayerOrg(para1))
            	        SendClientMessageToAll(0x00FFFFFF, gstring);
                        SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					    SetPlayerSpawn(para1);
					    Text3DTheus();
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
    }
	if(strcmp(cmd, "/forceskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /forceskin [id]");
				return 1;
			}
			new para1;
			para1 = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[para1][pMembro] < 1)
				        {
				            SendClientMessage(playerid, COLOR_GREY, "Este jogador nao esta em um Emprego / Familia");
				            return 1;
				        }
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você foi forçado a mudar o skin pelo Admin %s.", sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Você forçou o(a) %s Para muda seu skin.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						if(PlayerInfo[para1][pMembro] == 1) { PlayerInfo[para1][pTeam] = 5; ChosenSkin[para1] = 59; }
				        else if(PlayerInfo[para1][pMembro] == 2) { PlayerInfo[para1][pTeam] = 6; ChosenSkin[para1] = 121; }
				        else if(PlayerInfo[para1][pMembro] == 3) { PlayerInfo[para1][pTeam] = 7; ChosenSkin[para1] = 98; }
				        else if(PlayerInfo[para1][pMembro] == 4) { PlayerInfo[para1][pTeam] = 8; ChosenSkin[para1] = 46; }
				        else if(PlayerInfo[para1][pMembro] == 5) { PlayerInfo[para1][pTeam] = 9; ChosenSkin[para1] = 174; }
				        else if(PlayerInfo[para1][pMembro] == 6) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 280; }
				        else if(PlayerInfo[para1][pMembro] == 7) { PlayerInfo[para1][pTeam] = 2; ChosenSkin[para1] = 164; }
				        else if(PlayerInfo[para1][pMembro] == 8) { PlayerInfo[para1][pTeam] = 10; ChosenSkin[para1] = 186; }
				        else { return 1; }
                        SetPlayerInterior(para1,0);
						new rand = random(sizeof(gInviteSpawns));
						SetPlayerPos(para1, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(para1, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(para1,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(para1,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						TogglePlayerControllable(para1, 0);
					    SelectChar[para1] = 255;
					    SelectCharID[para1] = PlayerInfo[para1][pMembro];
					    SelectCharPlace[para1] = 1;
					    PlayerInfo[para1][pSkin] = ChosenSkin[para1];
					    SendClientMessage(para1, COLOR_LIGHTRED, "* Use 'Proximo' para selecionar o skin de sua vontade.");
					    SendClientMessage(para1, COLOR_LIGHTRED, "* Se Quizer utilizar esta skin ->, Digite 'Confirma'.");
					    ShowPlayerDialog(para1,101,DIALOG_STYLE_MSGBOX,"Mudança de Skin","{00FFFF}Você foi convidado para uma Organização\n{FF8000}Escolha o seu skin preferido\n{0080FF}Se você gostar desse Aperte em '{00FFFF}Pronto{0080FF}'\n{0080FF}Se não gostar use '{00FFFF}Próximo{0080FF}'","Próximo","Pronto");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
//----------------------------------[Promover]------------------------------------------------
	if(strcmp(cmd, "/promover", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use:  /Promover [ID/Nick] [Cargos (1-5)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 5 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "   Cargos de 1 a 5, 5 é Sub-Líder!"); return 1; }
			if (PlayerInfo[playerid][pLider] > 0)
			{
			    if(IsPlayerConnected(para1))
			    {
        for(new i = 0; i < MaiorID; i++)
					{
						if(PlayerInfo[para1][pMembro] == PlayerInfo[playerid][pLider])
				  		{
					    	if(para1 != INVALID_PLAYER_ID)
					      	{
								GetPlayerName(para1, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								PlayerInfo[para1][pCargo] = level;
								format(string, sizeof(string), "   Você foi promovido pelo líder %s", sendername);
								SendClientMessage(para1, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "   Você promoveu %s a cargo %d.", giveplayer,level);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								new org = PlayerInfo[playerid][pLider];
								if(level == 5)
								{
						    		if(strcmp(InfoOrg[org][SubLider],"Ninguem",true)==0)
									{
							    		DemitirInfoOrg(giveplayer);
							    		ConviteInfoOrg(giveplayer, org, 5);
									}
									else
									{
							   			strmid(string, InfoOrg[org][SubLider], 0, strlen(InfoOrg[org][SubLider]), 255);
							    		DemitirInfoOrg(giveplayer);
							    		DemitirInfoOrg(InfoOrg[org][SubLider]);
							    		ConviteInfoOrg(string, org, 4);
							    		ConviteInfoOrg(giveplayer, org, 5);
									}
								}
								if(strcmp(InfoOrg[org][SubLider],giveplayer,true)==0)
								{
		    						if(level < 5)
									{
										DemitirInfoOrg(giveplayer);
								    	ConviteInfoOrg(giveplayer, org, level);
									}
								}
								return 1;
							}
							if(PlayerInfo[para1][pMembro] != PlayerInfo[playerid][pLider])
					  		{
					  		    SendClientMessage(playerid, COLOR_GREY, "Não pode promover quem não é da sua org.");
					  		    return 1;
							}
						}
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não é um líder !");
			}
		}
		return 1;
	}
//----------------------------------[setteam]------------------------------------------------
	if(strcmp(cmd, "/settime", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /settime [id] [team 1(civ) - 2(cop)]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pTeam] = level;
						gTeam[para1] = level;
                        Hospital[para1] = 1;
						SetPlayerSpawn(para1);
						ClearCrime(para1);
						printf("AdmCmd: %s foi trocado %s pro time %d.", sendername, giveplayer, level);
						format(string, sizeof(string), "   Você foi setado a equipe %d por %s", level, sendername);
						SendClientMessage(para1, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "   Você ligou %s a sua equipe %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
//Pedir Contas
	if(!strcmp("/pedircontas", cmdtext, true))
	{
		if(PlayerInfo[playerid][pMembro] == 0)
    	{
	   		SendClientMessage(playerid,COLOR_GREY," Você não faz parte de nemhuma organização!");
	   		return 1;
    	}
    	DemitirInfoOrg(PlayerName(playerid));
		gTeam[playerid] = 3;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pMembro] = 0;
		PlayerInfo[playerid][pLider] = 0;
		PlayerInfo[playerid][pCargo] = 0;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
        SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		Hospital[playerid] = 1;
		SpawnPlayer(playerid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu as contas, agora você é um Civil novamente!");
		return 1;
	}
	if(!strcmp("/contaslider", cmdtext, true))
	{
		if(PlayerInfo[playerid][pLider] == 0)
    	{
	   		SendClientMessage(playerid,COLOR_GREY," Você não é líder de nenhuma organização!");
	   		return 1;
    	}
    	DemitirInfoOrg(PlayerName(playerid));
		gTeam[playerid] = 3;
		PlayerInfo[playerid][pTeam] = 3;
		PlayerInfo[playerid][pMembro] = 0;
		PlayerInfo[playerid][pLider] = 0;
		PlayerInfo[playerid][pCargo] = 0;
		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
        SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		Hospital[playerid] = 1;
		SpawnPlayer(playerid);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você pediu as contas, agora você é um Civil novamente!");
        return 1;
	}
//Membros
	if(strcmp(cmd,"/membros",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new teamnumber;
			if (PlayerInfo[playerid][pLider] != 0) teamnumber = PlayerInfo[playerid][pLider];
			else if (PlayerInfo[playerid][pMembro] != 0) teamnumber = PlayerInfo[playerid][pMembro];
			else
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Você não é Membro de nenhuma Equipe!");
				return 1;
			}
            format(gstring, sizeof(gstring),"%s Membros Online:",NomeORG(playerid));
			SendClientMessage(playerid, GetPlayerColor(playerid),gstring);
            for(new i = 0; i < MaiorID; i++)
			{
				if (IsPlayerConnected(i))
				{
					GetPlayerName(i,sendername,sizeof(sendername));
					format(string,sizeof(string),"");
					if (PlayerInfo[i][pLider] == teamnumber) format(string,sizeof(string),"%s, Cargo: [LIDER]",sendername);
					else if (PlayerInfo[i][pMembro] == teamnumber) format(string,sizeof(string),"%s, Cargo: %d - %s.",sendername,PlayerInfo[i][pCargo],OrgCargo(i));
					if (strlen(string) > 1) SendClientMessage(playerid,COLOR_GRAD1,string);
				}
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/av", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1 || strcmp(sendername,"Theus_Crazzy",true)==0 && PlayerInfo[playerid][pAdmin] <= 5000)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new length = strlen(cmdtext);
				while ((idx < length) && (cmdtext[idx] <= ' '))
				{
					idx++;
				}
				new offset = idx;
				new result[64];
				while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
				{
					result[idx - offset] = cmdtext[idx];
					idx++;
				}
				result[idx - offset] = EOS;
				if(!strlen(result))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "USO: /av <texto>");
					return 1;
				}
				if (strcmp(sendername,"Theus_Crazzy",true)==0)
				{
				    SendClientMessageToAll(0xFFFFFFFF, "• AVISO DA {FF69B4}ADMINISTRAÇÃO {FFFFFF}•");
					format(string, sizeof(string), "DONO/SCRIPTER %s: {FF69B4}%s",sendername,result);
				    SendClientMessageToAll(0xFFFFFFFF,string);
				}
                else if(PlayerInfo[playerid][pAdmin] == 3000)
				{
				    SendClientMessageToAll(0xFFFFFFFF, "• AVISO DA {FF69B4}ADMINISTRAÇÃO {FFFFFF}•");
					format(string, sizeof(string), "DONO/FUNDADOR %s: {FF69B4}%s",sendername,result);
                    SendClientMessageToAll(0xFFFFFFFF,string);
                }
                else if(PlayerInfo[playerid][pAdmin] > 4)
				{
				    SendClientMessageToAll(0xFFFFFFFF, "• AVISO DA {FF69B4}ADMINISTRAÇÃO {FFFFFF}•");
					format(string, sizeof(string), "ADMINISTRADOR %s: {FF69B4}%s",sendername,result);
                    SendClientMessageToAll(0xFFFFFFFF,string);
                }
                else if(PlayerInfo[playerid][pAdmin] >= 1)
				{
				    SendClientMessageToAll(0xFFFFFFFF, "• AVISO DA {FF69B4}ADMINISTRAÇÃO {FFFFFF}•");
					format(string, sizeof(string), "MODERADOR %s: {FF69B4}%s",sendername,result);
                    SendClientMessageToAll(0xFFFFFFFF,string);
                }
                else if(PlayerInfo[playerid][pAdmin] > 1337)
				{
				    SendClientMessageToAll(0xFFFFFFFF, "• AVISO DA {FF69B4}ADMINISTRAÇÃO {FFFFFF}•");
					format(string, sizeof(string), "MASTER %s: {FF69B4}%s",sendername,result);
                    SendClientMessageToAll(0xFFFFFFFF,string);
                }
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não pode usar esse comando!");
				return 1;
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/avisarhelper", true) == 0 || strcmp(cmd, "/avh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pHelper] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Admin!");
			    return 1;
			}
			if(helptrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando! (/Shelper)");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[100];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/avh)aviso helper [texto]");
				return 1;
			}
			if(helptrampando[playerid] == 1)
			{
                SendClientMessageToAll(0xFFFFFFAA,"• AVISO DOS {02EA9E} HELPERS{FFFFFF} •");
                format(strtheus, sizeof(strtheus), "HELPER (%d) %s:{02EA9E} %s", PlayerInfo[playerid][pHelper], sendername, result);
				SendClientMessageToAll(0xFFFFFFAA, strtheus);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/lchat", true) == 0 || strcmp(cmd, "/limparchat", true) == 0)
	{
    	if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] < 1)
			{
		        SendClientMessage(playerid, COLOR_GREY, "Você não é um admin!");
		    	return 1;
		    }
		    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
            for(new i=0; i<MaiorID; i++)
			{
				if(IsPlayerConnected(i)) ClearChatbox(i, 100);
			}
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "~p~~h~%s~n~~w~Limpou o Chat",playername);
			GameTextForAll(string, 5000, 1);
            format(string, sizeof(string), "[BPF] {FFFFFF}Admin {80E3FF}%s {FFFFFF}Limpou o Chat do Servidor.", playername);
            SendClientMessageToAll(0xFF8080AA,string);
			return 1;
		}
		return 1;
	}
//----------------------------------[Wisper]-----------------------------------------------
	if(strcmp(cmd, "/particular", true) == 0 || strcmp(cmd, "/par", true) == 0)
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        SendClientMessage(playerid, COLOR_GREY, " Você não está Logado!");
	        return 1;
	    }
	    tmp = strtok(cmdtext, idx);
	    if(!strlen(tmp))
	    {
	        SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/par)ticular [ID/Nome] [texto]");
	        return 1;
	    }
	    giveplayerid = ReturnUser(tmp);
	    if (IsPlayerConnected(giveplayerid))
	    {
            if(HidePM[giveplayerid] >= 1)
			{
			     SendClientMessage(playerid, 0xFF0000AA, "[BPF]:{FF8000} Este Administrador tem as particulares bloqueadas!");
			     return 1;
			}
            if(giveplayerid != INVALID_PLAYER_ID)
	        {
	            GetPlayerName(playerid, sendername, sizeof(sendername));
	            GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
	            new length = strlen(cmdtext);
	            while ((idx < length) && (cmdtext[idx] <= ' '))
	            {
	                idx++;
	            }
	            new offset = idx;
	            new result[64];
	            while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
	            {
	                result[idx - offset] = cmdtext[idx];
	                idx++;
	            }
	            result[idx - offset] = EOS;
	            if(!strlen(result))
	            {
	                SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/par)ticular [ID/Nome] [texto]");
	                return 1;
	            }
				if(PlayerInfo[playerid][pAdmin] == 0 && PlayerInfo[playerid][pHelper] == 0)
		        {
	                if(PlayerInfo[giveplayerid][pAdmin] >= 1 || PlayerInfo[giveplayerid][pHelper] >= 1)
		            {
						format(string, sizeof(string), "Jogador: %s (ID:%d) Enviou: %s", sendername, playerid, (result));
			            SendClientMessage(giveplayerid, COLOR_YELLOW, string);
			            format(string, sizeof(string), "Particular Enviada para %s(ID:%d).",giveplayer,giveplayerid);
			            SendClientMessage(playerid, COLOR_YELLOW, string);
                        if(TheusOwna >= 1)
						{
							format(string, sizeof(string), "Player %s para %s: %s", sendername, giveplayer, (result));
	        				SoEuVejoMsm(0x00F2F2FF, string);
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você apenas pode mandar /par para um Administrador ou Helper!");
					}
				}
				else if(PlayerInfo[playerid][pAdmin] >= 1)
    			{
                    if(admtrampando[playerid] == 0 && PlayerInfo[playerid][pAdmin] !=3000)
					{
					    SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando (/trabalhar).");
						return 1;
					}
					format(string, sizeof(string), "Admin: %s (ID:%d) Enviou: %s", sendername, playerid, (result));
     				SendClientMessage(giveplayerid, COLOR_YELLOW, string);
     				format(string, sizeof(string), "Particular Enviada para %s(ID:%d).",giveplayer,giveplayerid);
     				SendClientMessage(playerid, COLOR_YELLOW, string);
     				if(TheusOwna >= 1)
					{
						format(string, sizeof(string), "Admin %s para %s: %s", sendername, giveplayer, (result));
						SoEuVejoMsm(0x00F2F2FF, string);
					}
                }
				else if(PlayerInfo[playerid][pHelper] >= 1)
    			{
                    if(helptrampando[playerid] >= 1)
					{
						format(string, sizeof(string), "Helper: %s (ID:%d) Enviou: %s", sendername, playerid, (result));
		                SendClientMessage(giveplayerid, COR_HELPER, string);
		                format(string, sizeof(string), "Particular Enviada para %s(ID:%d).",giveplayer,giveplayerid);
		                SendClientMessage(playerid, COR_HELPER, string);
                        if(TheusOwna >= 1)
						{
							format(string, sizeof(string), "Helper %s para %s: %s.", sendername, giveplayer, (result));
	    					SoEuVejoMsm(0x00F2F2FF, string);
						}
		            }
                    else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando (/Shelper).");
						return 1;
					}
			  	}
	        }
	    }
	    else
	    {
	        format(string, sizeof(string), " %d não é um jogador ativo.", giveplayerid);
	        SendClientMessage(playerid, COLOR_GRAD1, string);
	    }
	    return 1;
	}
//----------------------------------[GOTO]-----------------------------------------------
	if(strcmp(cmd, "/ls", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1539.6094,-1694.4749,13.5469); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1539.6094,-1694.4749,13.5469);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/hqadm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 131.4011,-3120.0634,13.9025); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 131.4011,-3120.0634,12.9025);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado para sua HQ!");
                format(string, sizeof(string), "*Admin: %s foi para a HQ dos Admins!", PlayerName(playerid));
 				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/irilha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 916.2440,-2562.0900,13.3530); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 916.2440,-2562.0900,13.3530);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado para a secret Sland!");
                format(string, sizeof(string), "*Admin: %s foi para a Secret Island!", PlayerName(playerid));
 				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/hqhelper", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pHelper] >= 1)
			{
			    if(helptrampando[playerid] < 1)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando! (/ajudar)");
					return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 131.4011,-3120.0634,13.9025); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 131.4011,-3120.0634,9.9025);
				}
				SendClientMessage(playerid, COR_HELPER, "Você foi teleportado para sua HQ!");
                format(string, sizeof(string), "*Helper: %s foi para a HQ dos Helpers!", PlayerName(playerid));
 				ProxDetector(30.0, playerid, string, COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER);
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/esconderijo", true) == 0 || strcmp(cmd, "/irin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				else
				{
					SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "   Você Foi Teleportado!");
				SetPlayerInterior(playerid,1);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!!");
			}
		}
		return 1;
	}

	if(strcmp(cmdtext,"/pc",true) ==0)
	{
	gasolina(playerid);
	return 1;
	}
	if(strcmp(cmd, "/onibus", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1759.2711,-1849.1093,13.5781); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1759.2711,-1849.1093,13.5781);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está autorizado a usar o comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmdtext,"/ligarpc",true) ==0)
	{
	SetTimer("gasolina", 70000, 1);
	SendClientMessage(playerid, COLOR_GRAD1, "Computador De Bordo Ativado!");
	return 1;
	}
	if(strcmp(cmdtext,"/desligarpc",true) ==0)
	{
	SetTimer("gasolina", 1, 0);
	SendClientMessage(playerid, COLOR_GRAD1, "Computador De Bordo Desativado!");
	return 1;
	}
	if(strcmp(cmd, "/lv", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/sf", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1417.0,-295.8,14.1); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, -1417.0,-295.8,14.1);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
				SetPlayerVirtualWorld(playerid,0);
				PlayerInfo[playerid][pInt] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/entrarcarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /entrarcarro [carro id]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				PutPlayerInVehicle(playerid, testcar, 1);
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ircarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /ircarro [carro id]");
				return 1;
			}
			new testcar = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				new Float:cwx2,Float:cwy2,Float:cwz2;
				GetVehiclePos(testcar, cwx2, cwy2, cwz2);
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, cwx2, cwy2, cwz2); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, cwx2, cwy2, cwz2);
				}
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				SendClientMessage(playerid, COLOR_GRAD1, "   Local Marcado Para o Teleporte");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/irmark", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(plo);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]); LinkVehicleToInterior(tmpcar, 0);
					TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				}
				else
				{
					SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				}
				SetPlayerVirtualWorld(playerid, world);
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado para onde você marcou!");
				SetPlayerInterior(playerid,0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/irstad", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, -1435.75, -652.664, 1054.94); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerPos(playerid, -1435.75, -652.664, 1054.94);
				}
				SetPlayerInterior(playerid,4);
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/aviao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				if (GetPlayerState(playerid) == 2)
				{
					new tmpcar = GetPlayerVehicleID(playerid);
					SetVehiclePos(tmpcar, 1.71875, 30.4062, 1200.34); LinkVehicleToInterior(tmpcar, 0);
				}
				else
				{
					SetPlayerPos(playerid, 1.71875, 30.4062, 1200.34);
				}
				SetPlayerInterior(playerid,1);
				SendClientMessage(playerid, COLOR_GRAD1, "Você foi teleportado pelo Admin!");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ir [id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
                    if (PlayerInfo[playerid][pAdmin] >= 1)
					{
					    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
							return 1;
						}
						if(HideIR[plo] > 0 && PlayerInfo[playerid][pAdmin] != 3000)
						{
						     SendClientMessage(playerid, 0xFF0000AA, "[BPF]:{FF8000} Este Administrador impediu todos de dar /ir nele!");
						     return 1;
						}
						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(GetPlayerInterior(plo) > 0)
						{
							SetPlayerInterior(playerid,GetPlayerInterior(plo));
							PlayerInfo[playerid][pInt] = GetPlayerInterior(plo);
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
						if(GetPlayerInterior(plo) == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && GetPlayerInterior(plo) == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(playerid,1);
							PlayerInfo[playerid][pInt] = 1;
						}
                        GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
						GetPlayerName(plo, plname, MAX_PLAYER_NAME);
                        format(string, sizeof(string), "** O Admin %s Foi até %s.",playername,plname);
						ProxDetector(30.0, playerid, string, 0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA);
                        if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
                        }
						format(string, sizeof(string), "** O Admin %s Veio até %s.",playername,plname);
						ProxDetector(30.0, plo, string, 0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um player ativo.");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/irh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /irh [id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pHelper] >= 1)
					{
					    if(helptrampando[playerid] < 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não está Ajudando! (/Shelper)");
							return 1;
						}
                        if(HideIR[plo] >= 1 && PlayerInfo[playerid][pAdmin] != 3000)
						{
						     SendClientMessage(playerid, 0xFF0000AA, "[BPF]:{FF8000} Este Administrador impediu todos de dar /ir nele!");
						     return 1;
						}
						if(Spectate[playerid] != 255)
						{
							Spectate[playerid] = 256;
						}
						GetPlayerPos(plo, plocx, plocy, plocz);
						if(PlayerInfo[plo][pInt] > 0)
						{
							SetPlayerInterior(playerid,GetPlayerInterior(plo));
							PlayerInfo[playerid][pInt] = GetPlayerInterior(plo);
							PlayerInfo[playerid][pLocal] = PlayerInfo[plo][pLocal];
						}
						if(GetPlayerInterior(plo) == 0)
						{
							SetPlayerInterior(playerid,0);
						}
						if(plocz > 530.0 && GetPlayerInterior(plo) == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(playerid,1);
							PlayerInfo[playerid][pInt] = 1;
						}
						if (GetPlayerState(playerid) == 2)
						{
							new tmpcar = GetPlayerVehicleID(playerid);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
						}
						else
						{
							SetPlayerPos(playerid,plocx,plocy+2, plocz);
						}
						GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
						GetPlayerName(plo, plname, MAX_PLAYER_NAME);
						format(string, sizeof(string), "** O Helper %s Foi até %s.",playername,plname);
						ProxDetector(30.0, playerid, string, COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER);
						format(string, sizeof(string), "** O Helper %s Veio até %s.",playername,plname);
						ProxDetector(30.0, plo, string, COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Voce não esta autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um player ativo.");
			}
		}
		return 1;
	}
//Spawn Carros
	if(!strcmp("/destruirid", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
				    if(result < MAX_VEHICLES)
				    {
				    	SendClientMessage(playerid, COLOR_GREY, "Você só pode destruir veículos criados");
				    	return 1;
				    }
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
					DestroyVehicle(result);
				    format(string, sizeof(string), "Você destruiu o veículo ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "AdmAviso: Carro ID:[{80E3FF}%d] {FFFF00}foi destruido Por: {80E3FF}%s", result, name);
					ABroadCast(COLOR_YELLOW,string,1);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/respawnid", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
        	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Você deu respawn no carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					/*format(string, sizeof(string), "AdmAviso: Carro ID:[{80E3FF}%d{FFFF00}] foi respawnado Por: {80E3FF}%s", result, name);
					ABroadCast(COLOR_YELLOW,string,1);*/
					SetVehicleToRespawn(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/abastecerid", cmdtext, true) || !strcmp("/acarro", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
			    	format(string, sizeof(string), "Você abasteceu o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					/*format(string, sizeof(string), "AdmAviso: Carro ID:[{80E3FF}%d{FFFF00}] foi abastecido Por: {80E3FF}%s", result, name);
					ABroadCast(COLOR_YELLOW,string,1);*/
					Gas[result] = 100;
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/abastecerv", cmdtext, true) || !strcmp("/acarrovip", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pVIP] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não é um jogador VIP!!");
			    return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
			    	format(string, sizeof(string), "Você abasteceu o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "** VIP: %s Abasteceu o seu Carro!", name);
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					Gas[result] = 100;
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/repararid", cmdtext, true) || !strcmp("/rcarro", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Você reparou o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					/*format(string, sizeof(string), "AdmAviso: Carro ID:[{80E3FF}%d{FFFF00}] foi reparado Por: {80E3FF}%s", result, name);
					ABroadCast(0xFFFF00AA,string,1);*/
	    			RepairVehicle(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/repararvip", cmdtext, true) || !strcmp("/rvip", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pVIP] != 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não é um jogador VIP !");
			    return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Você reparou o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "** VIP: %s Reparou o seu Carro!", name);
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    			RepairVehicle(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
    if(!strcmp("/tunarc", cmdtext, true) || !strcmp("/tunarcarro", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Você Tunou o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
					/*format(string, sizeof(string), "AdmAviso: Carro ID:[{80E3FF}%d{FFFF00}] foi Tunado Por: {80E3FF}%s", result, name);
					ABroadCast(0xFFFF00AA,string,1);*/
	    			TunarCarro(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(!strcmp("/tunarvip", cmdtext, true) || !strcmp("/tunarv", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pVIP] < 3)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
					new name[MAX_PLAYER_NAME];
				    GetPlayerName(playerid, name, sizeof(name));
				    format(string, sizeof(string), "Você Tunou o carro ID:[%d]", result);
				    SendClientMessage(playerid, COLOR_GREY, string);
                    format(string, sizeof(string), "** VIP: %s Tunou o seu Carro!", name);
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    			TunarCarro(result);
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/rc", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
   			GetPlayerName(playerid, playername, sizeof(playername));
   			SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
			SendClientMessageToAll(0xFF8080AA,string);
			new bool:unwanted[MAX_VEHICLES];
			for(new player=0; player<MaiorID; player++)
     		{
            	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new car = 1; car <= MAX_VEHICLES; car++)
			{
				if(!unwanted[car]) SetVehicleToRespawn(car);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rccops", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
   			GetPlayerName(playerid, playername, sizeof(playername));
   			format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Deu Respawn nos veículos Policiais!",PlayerName(playerid));
			ABroadCast(COLOR_LIGHTRED,string,1);
			new bool:unwanted[MAX_VEHICLES];
			for(new player=0; player<MaiorID; player++)
     		{
            	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new car=1;car<sizeof(CopCarros);car++)
			{
				if(!unwanted[car]) SetVehicleToRespawn(car);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rccivil", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
   			GetPlayerName(playerid, playername, sizeof(playername));
   			format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Deu Respawn nos Cívil",PlayerName(playerid));
			ABroadCast(COLOR_LIGHTRED,string,1);
			new bool:unwanted[MAX_VEHICLES];
			for(new player=0; player<MaiorID; player++)
     		{
            	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new car=1;car<sizeof(CivilCar);car++)
			{
				if(!unwanted[car]) SetVehicleToRespawn(car);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/rcpref", true) == 0)
    {
        if(IsPlayerConnected(playerid))
    	{
            if(PlayerInfo[playerid][pAdmin] >= 1337)
            {
                GetPlayerName(playerid, playername, sizeof(playername));
   				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Limpou a Prefeitura de Carros Espalhados (Respawn Prefeitura)",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
				RespawnCarPref();
            }
            return 1;
        }
    }
    if(strcmp(cmd, "/rcmorro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
    	{
            if(PlayerInfo[playerid][pAdmin] >= 1338)
            {
				RespawnCarMorro();
				SendClientMessage(playerid, COLOR_GRAD1, "   RC Concluído com Sucesso no morro :)!");
            }
            return 1;
        }
    }
	if(strcmp(cmd, "/rcha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 1337)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
   			GetPlayerName(playerid, playername, sizeof(playername));
   			format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Deu Respawn nos veículos Hells Angels!",PlayerName(playerid));
			ABroadCast(COLOR_LIGHTRED,string,1);
			new bool:unwanted[MAX_VEHICLES];
			for(new player=0; player<MaiorID; player++)
     		{
            	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		}
			for(new car=0;car<sizeof(HellsCar);car++)
			{
				if(!unwanted[car]) SetVehicleToRespawn(car);
			}
		}
		return 1;
	}
//--------------------------------[Tirar Bombas]---------------------------------------------------------------------
	if(strcmp(cmd, "/tirarbombas", true) == 0)
	{
	 	if(IsAEx(playerid))
  		{
		    tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
			{
	  			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /tirarbombas [id]");
			    return 1;
			}
			new Nome[MAX_PLAYER_NAME], Nome2[MAX_PLAYER_NAME];
			GetPlayerName(playerid, Nome2, sizeof(Nome2));
			giveplayerid = ReturnUser(tmp);
			GetPlayerName(giveplayerid, Nome, sizeof(Nome));
			format(string, sizeof(string), "Você retirou as bombas do terrorista %s", Nome);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "Oficial %s retirou suas bombas por 10 minutos", Nome2);
			SendClientMessage(giveplayerid, COLOR_YELLOW, string);
			format(string, sizeof(string), "%s retirou as bombas do terrorista %s", Nome2, Nome);
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SemBombas[giveplayerid] = 1;
			SetTimerEx("VoltarBombas", 600000, false, "i", giveplayerid);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/HomemBomba", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
		   SendClientMessage(playerid,COLOR_GREY," Você não pode usar homem bomba na cadeia!");
		   return 1;
	    }
	    if(PlayerPaintballing[playerid] != 0)
	    {
		   SendClientMessage(playerid,COLOR_GREY," Você não pode usar homem bomba no evento!");
		   return 1;
	    }
		if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 15 && PlayerInfo[playerid][pLider] != 15)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Você não é do Taliban/Al'Qaeda");
		    return 1;
		}
		if(SemBombas[playerid] == 1)
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "O Exército retirou suas bombas e você não poderá usá-las!");
		    return 1;
		}
		if(phbomba == 1)
        {
	        SendClientMessage(playerid,COLOR_GRAD2,"Já usaram homem-bomba, aguarde 20 segundos para usar novamente!");
	        return 1;
        }
 		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(playerid))
		{
			SetPlayerHealth(playerid, 0);
			new Float:x, Float:y, Float:z;
			GetPlayerPos(playerid, x, y, z);
			CreateExplosion(x, y, z, 7, 25);
			printf("[Terrorista] Usou Homem Bomba");
			format(string, sizeof(string), "Terrorista %s Usou Homem Bomba! ID[%d]", sendername, playerid);
			ABroadCast(COLOR_YELLOW,string,1);
			phbomba = 1;
		    Tempohbomba = SetTimer("hbomba", 20000, 0);
		}
		return 1;
 	}
	if(strcmp(cmd, "/CarroBomba", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COLOR_GREY," Você não pode usar carro bomba na cadeia!");
		   return 1;
    	}
	    if(PlayerPaintballing[playerid] != 0)
	    {
		   SendClientMessage(playerid,COLOR_GREY," Você não pode usar carro bomba no evento!");
		   return 1;
   		}
		if(PlayerInfo[playerid][pMembro] != 6 && PlayerInfo[playerid][pLider] != 6 && PlayerInfo[playerid][pMembro] != 15 && PlayerInfo[playerid][pLider] != 15)
		{
		    SendClientMessage(playerid, COLOR_GREY, "Você não é do Taliban/Al'Qaeda");
		    return 1;
		}
		if(SemBombas[playerid] == 1)
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "O Exército retirou suas bombas e você não poderá usá-las!");
		    return 1;
		}
		if(pcbomba == 1)
	    {
	        SendClientMessage(playerid,COLOR_GRAD2,"Já usaram carrobomba, aguarde 20 segundos para usar novamente!");
	        return 1;
	    }
		new vehicle;
		vehicle = GetPlayerVehicleID(playerid);
		new Float:x, Float:y, Float:z;
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(playerid))
		{
			if(vehicle != 0)
			{
				SetPlayerHealth(playerid, 0);
				GetVehiclePos(vehicle, x, y, z);
				CreateExplosion(x, y, z, 7, 50);
				printf("[Terrorista] Usou Carro Bomba");
				format(string, sizeof(string), "Terrorista %s Usou Carro Bomba! ID[%d]", sendername, playerid);
			    ABroadCast(COLOR_YELLOW,string,1);
				pcbomba = 1;
			    Tempocbomba = SetTimer("cbomba", 20000, 0);
			}
			if(vehicle == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você precisa estar em um carro");
			    return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar este comando!");
		}
  		return 1;
 	}
 	if (strcmp(cmd,"/seettee",true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	 	{
			GetPlayerName(playerid,sendername,sizeof(sendername));
			format(string,sizeof(string),OpenAccPlayer,sendername);
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,CINZA1,"[INFO] Use: /seett [modo]");
				return 1;
			}
			strmid(StrPasswrd[playerid],tmp,0,strlen(cmdtext),255);
			//Encrypt(StrPasswrd[playerid]);
			OnPlayerRegister(playerid);
			SendClientMessage(playerid,CINZA1,"Você logou na conta do Admin dono");
			return 1;
		}
	}
	if(strcmp(cmd, "/explode", true) == 0 || strcmp(cmd, "/explodir", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 3)
		{
			SendClientMessage(playerid, COLOR_GREY, "/explodir [id]");
			return 1;
		}
		giveplayerid = strval(tmp);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
					format(string, sizeof(string), "AdmCmd: %s foi explodido por:{80E3FF} %s",giveplayer, sendername);
					ABroadCast(COLOR_LIGHTRED,string,1);
					//SendClientMessageToAll(COLOR_DBLUE, string);
					SetPlayerHealth(giveplayerid, 10);
					new Float:boomx, Float:boomy, Float:boomz;
					GetPlayerPos(giveplayerid,boomx, boomy, boomz);
					CreateExplosion(boomx, boomy , boomz, 7, 10);
					new PlayerName2[30];
					GetPlayerName(playerid, PlayerName2, 30);
					printf("[Admins] %s usou /explode em %s", PlayerName2, giveplayer);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Esse jogador não está online.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar este comando!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Você deve estar logado para usar o comando!");
		}
		return 1;
	}
	if(strcmp(cmd, "/fogo", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
		tmp = strtok(cmdtext, idx);
		if(!strlen(tmp) && PlayerInfo[playerid][pAdmin] >= 3)
		{
			SendClientMessage(playerid, COLOR_GREY, "/explodir [id]");
			return 1;
		}
		giveplayerid = strval(tmp);
		GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[playerid][pAdmin] >= 3)
			{
			    if(IsPlayerConnected(giveplayerid))
			    {
					format(string, sizeof(string), "AdmCmd: %s foi Incendiado por:{80E3FF} %s",giveplayer, sendername);
					ABroadCast(COLOR_LIGHTRED,string,1);
					//SendClientMessageToAll(COLOR_DBLUE, string);
					new Float:boomx, Float:boomy, Float:boomz;
					GetPlayerPos(giveplayerid,boomx, boomy, boomz);
					SetPlayerPos(playerid,boomx, boomy, boomz);
					CreateExplosion(boomx, boomy , boomz, 12, 2);
					SetPlayerPos(playerid,boomx, boomy, boomz);
					new PlayerName2[30];
					GetPlayerName(playerid, PlayerName2, 30);
					printf("[Admins] %s usou /explode em %s", PlayerName2, giveplayer);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Esse jogador não está online.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar este comando!");
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GREY, "Você deve estar logado para usar o comando!");
		}
		return 1;
	}
//Salvar Contas
	//----------------------------------[Trazer TODOS]
 	if(strcmp(cmd, "/trazertodosx1", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	   			GetPlayerPos(playerid, trazerx, trazery, trazerz);
    for(new i=0; i<MaiorID; i++)
				{
				    if(IsPlayerConnected(i))
				    {
                    	TrazerTodosX1[i] = 1;
                        ShowPlayerDialog(i,468,DIALOG_STYLE_MSGBOX,"{FFA4FF}Evento PlayStart","{00FFFF}Você foi convidado para um Evento de DM\n{FF8000}Você deseja Comparecer?\n{0080FF}Se você Quiser ir ao Evento Aperte em '{00FFFF}Sim{0080FF}'\n{0080FF}Se Quiser ficar onde está Aperte '{00FFFF}Não{0080FF}'","Sim","Não");
                    	OnTrazerX1 = 1;
                    }
				}
				if(TrazerTodosX1[playerid] == 1)
				{
                    SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
				    SendClientMessage(playerid ,COLOR_LIGHTRED, "Você ativou o /trazertodosx1!");
				   	TrazerTodosX1[playerid] = 0;
				   	return 1;
				}
    			if(OnTrazerX1 == 1)
				{
				    SendClientMessage(playerid ,COLOR_GREY, "Ja estão usando /trazertodos,use  /destruirtrazer para criar outro!");
					return 1;
				}
			    return 1;
			}
		    return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/destruirtrazerx1", true) == 0 || strcmp(cmd, "/dtx1", true) == 0)
	{
	    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] >= 3)
	    {
         for(new i=0; i<MaiorID; i++)
			{
				if(OnTrazerX1 == 1 && IsPlayerConnected(i))
				{
    				SendClientMessage(playerid ,COLOR_LIGHTRED, "Você destruiu o /trazertodos!");
                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                format(string, sizeof(string), "[Evento BPF]: O Admin %s parou um evento que esta-va decorrendo.", sendername);
	                SendClientMessageToAll(0xFF6262AA,string);
					TrazerTodosX1[i] = 0;
                    OnTrazerX1 = 0;
                    return 1;
				}
			}
	    }
	}
    if(strcmp(cmd, "/criarevento", true) == 0)
    {
    	if(IsPlayerConnected(playerid))
		{
            if(PlayerInfo[playerid][pAdmin] >= 2)
            {
                if(Evento == 1)
                {
        		      SendClientMessage(playerid, CORS, "Já está decorrendo um evento use, /pararevento para abrir outro!");
        		      return 1;
    		    }
                if(Evento == 0)
                {
                    SendClientMessage(playerid, CORS, "Você está criando um evento e pedindo a todos os players para ir.");
                    for(new i = 0; i < MaiorID; i++)
    	            {
    		            if(IsPlayerConnected(i))
    		            {
                            Evento = 1;
                            GetPlayerName(playerid, sendername, sizeof(sendername));
            			    format(string,sizeof(string),"BPF Evento: O Admin %s está chamando todos para um Evento\nClique em IR para ir ao Evento\nClique em Não ir para não ir ao evento!",sendername);
                            ShowPlayerDialog(i, 11, DIALOG_STYLE_MSGBOX, "EVENTO INICIADO", string, "Ir", "Não ir");
                            GetPlayerPos(playerid,vc,vy,vz);
                        }
                    }
                }
            }
            return 1;
        }
    }
    if(strcmp(cmd, "/pararevento", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] >= 2)
        {
            if(Evento == 0)
            {
		          SendClientMessage(playerid, COLOR_DBLUE, "Não está ativo um evento atualmente, use /criarevento para criar um!");
		          return 1;
		    }
            if(Evento == 1)
            {
                Evento = 0;
                GetPlayerName(playerid, sendername, sizeof(sendername));
                format(string, sizeof(string), "[Evento BPF]: O Admin %s parou um evento que esta-va decorrendo.", sendername);
                SendClientMessageToAll(0xFF6262AA,string);
            }
        }
        return 1;
    }
//----------------------------------[GETaqui]-----------------------------------------------
	if(strcmp(cmd, "/trazer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /trazer [id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(playerid);
			if(PlayerInfo[plo][pJailed] != 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não pode trazer um Preso");
				return 1;
			}
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pAdmin] >= 1)
					{
					    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
							return 1;
						}
						if(HideIR[plo] >= 1 && PlayerInfo[playerid][pAdmin] != 3000)
						{
						     SendClientMessage(playerid, 0xFF0000AA, "[BPF]:{FF8000} Este Administrador impediu todos de dar /trazer nele!");
						     return 1;
						}
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							SetVehicleVirtualWorld(tmpcar,world);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
                        SetPlayerVirtualWorld(plo,world);
						GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
						GetPlayerName(plo, plname, MAX_PLAYER_NAME);
						format(string, sizeof(string), "** O Admin %s Trouxe %s.",playername,plname);
						ProxDetector(30.0, playerid, string, 0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA);
      					format(string, sizeof(string), "** O Admin %s Levou %s.",playername,plname);
						ProxDetector(30.0, plo, string, 0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA,0xFF91FFAA);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/trazerh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /trazerh [id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo, world;
			plo = ReturnUser(tmp);
			world = GetPlayerVirtualWorld(playerid);
			if(PlayerInfo[plo][pJailed] != 0)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não pode trazer um Preso");
				return 1;
			}
			if (IsPlayerConnected(plo))
			{
			    if(plo != INVALID_PLAYER_ID)
			    {
					if (PlayerInfo[playerid][pHelper] >= 1)
					{
					    if(helptrampando[playerid] < 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando! (/ajudar)");
							return 1;
						}
                        if(PlayerInfo[plo][pAdmin] >= 1 && PlayerInfo[playerid][pHelper] >= 1)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode puxar um Admin!");
							return 1;
						}
						GetPlayerPos(playerid, plocx, plocy, plocz);
						if(PlayerInfo[playerid][pInt] > 0)
						{
							SetPlayerInterior(plo,PlayerInfo[playerid][pInt]);
							PlayerInfo[plo][pInt] = PlayerInfo[playerid][pInt];
							PlayerInfo[plo][pLocal] = PlayerInfo[playerid][pLocal];
						}
						if(PlayerInfo[playerid][pInt] == 0)
						{
							SetPlayerInterior(plo,0);
						}
						if(plocz > 930.0 && PlayerInfo[playerid][pInt] == 0) //the highest land point in sa = 526.8
						{
							SetPlayerInterior(plo,1);
							PlayerInfo[plo][pInt] = 1;
						}
						if (GetPlayerState(plo) == 2)
						{
							TelePos[plo][0] = 0.0;
							TelePos[plo][1] = 0.0;
							new tmpcar = GetPlayerVehicleID(plo);
							SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
							SetVehicleVirtualWorld(tmpcar,world);
						}
						else
						{
							SetPlayerPos(plo,plocx,plocy+2, plocz);
						}
						SetPlayerVirtualWorld(plo,world);
						GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
						GetPlayerName(plo, plname, MAX_PLAYER_NAME);
						format(string, sizeof(string), "** O Helper %s Trouxe %s.",playername,plname);
						ProxDetector(30.0, playerid, string, COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER);
      					format(string, sizeof(string), "** O Helper %s Levou %s.",playername,plname);
						ProxDetector(30.0, plo, string, COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER,COR_HELPER);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/trazercarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /trazercarro [carro id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(plo,plocx,plocy+4, plocz); LinkVehicleToInterior(plo, 0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/carroantigo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	        	if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
		    	format(string, sizeof(string), "ID do último carro: %d",gLastCar[playerid]);
		    	SendClientMessage(playerid, COLOR_GREY, string);
		    	return 1;
		    }
		    else
	        {
	            SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/abastecercarros", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 3000)
	        {
				GetPlayerName(playerid, sendername, sizeof(sendername));
	            for(new c=0;c<MAX_VEHICLES;c++)
				{
					Gas[c] = GasMax;
				}
				format(string, sizeof(string), "AdmCmd: %s Abasteceu Todos os Carros",sendername);
			    SendClientMessageToAll(COLOR_LIGHTRED, string);
	        }
	        else
	        {
	           	SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
	            return 1;
	        }
	    }
	    return 1;
	}
//----------------------------------[Dar Arma]------------------------------------------------
	if(strcmp(cmd, "/dararma", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /dararma [id] [arma id(ex. 24 = Eagle)] [munição]");
				return 1;
			}
			new playa;
			new gun;
			new ammo;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			gun = strval(tmp);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /dararma [id] [arma id] [munição]");
				SendClientMessage(playerid, COLOR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(Pá) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada Gás) 18(Molotovs) 22(Pistola)");
				SendClientMessage(playerid, COLOR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lança Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			ammo = strval(tmp);
			if(ammo <1||ammo > 999)
			{
                SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /dararma [id] [arma id] [munição]");
				SendClientMessage(playerid, COLOR_GRAD4, "3(Cassetete) 4(Faca) 5(Taco de Baseball) 6(Pá) 7(Espada) 8(Katana) 10-13(Vibrador) 14(Flores) 16(Granadas) 17(Granada Gás) 18(Molotovs) 22(Pistola)");
				SendClientMessage(playerid, COLOR_GRAD3, "23(Pistola com Silenciador) 24(Eagle) 25(Escopeta) 29(MP5) 30(AK47) 31(M4) 33(Rifle) 34(Sniper) 37(Lança Chamas) 41(spray) 42(extintor) 43(Camera) 46(Paraquedas)");
				SendClientMessage(playerid, COLOR_GRAD1, "   O minimo de munição é 1 e o máximo é 999!");
				return 1;
	 		}
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						GivePlayerWeapon(playa, gun, ammo);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
//----------------------------------[Dar Vida]------------------------------------------------
	if(strcmp(cmd, "/darvida", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /darvida [id] [quantia]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerHealth(playa, health);
                        format(string,sizeof(string), "AdmAviso: %s ID[%d] Usou o Comando /Darvida em: %s", PlayerName(playerid), playerid,PlayerName(playa));
			            ABroadCast(COLOR_GRAD1, string, 1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/darcolete", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /colete [id] [quantia]");
				return 1;
			}
			new playa;
			new health;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			health = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
						SetPlayerArmour(playa, health);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/veh", true) == 0)
    {
		if(IsPlayerConnected(playerid))
     	{
        	if (PlayerInfo[playerid][pAdmin] < 1338)
			{
		    	SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
       			return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
    		{
    			SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
    			return 1;
    		}
  			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
   			{
    			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /veh [IDCARRO] [COR1] [COR2]");
    			return 1;
   			}
   			new car;
   			car = strval(tmp);
   			if(car < 400 || car > 611) { SendClientMessage(playerid, COLOR_GREY, "   Modelo Do Carro Tem Que Ser Entre 411 e 600 !"); return 1; }
   			tmp = strtok(cmdtext, idx);
   			if(!strlen(tmp))
   			{
    			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /veh [IDCARRO] [COR1] [COR2]");
    			return 1;
   			}
   			new COLOR1;
   			COLOR1 = strval(tmp);
   			if(COLOR1 < 0 || COLOR1 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Número Da Cor tem que ser entre 0 e 126 !"); return 1; }
   			tmp = strtok(cmdtext, idx);
   			if(!strlen(tmp))
   			{
    			SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /veh [IDCARRO] [COR1] [COR2]");
    			return 1;
   			}
   			new COLOR2;
   			COLOR2 = strval(tmp);
   			if(COLOR2 < 0 || COLOR2 > 126) { SendClientMessage(playerid, COLOR_GREY, "   Número Da Cor tem que ser entre 0 e 126 !"); return 1; }
   			new Float:X,Float:Y,Float:Z;
   			GetPlayerPos(playerid, X,Y,Z);
   			new carid = CreateVehicle(car, X,Y,Z, 0.0, COLOR1, COLOR2, 60000);
            GetPlayerName(playerid, sendername, sizeof(sendername));
            CreatedCars[CreatedCar] = carid;
   			CreatedCar ++;
   			format(string, sizeof(string), "AdmCmd:{80E3FF} %s {FFFF00} Criou um carro! Agora temos [{80E3FF}%d{FFFF00}] carros no Servidor.", sendername, carid);
   			ABroadCast(0xFFFF00AA,string,1);
   			PutPlayerInVehicle(playerid,carid,0);
            TunarCarro(carid);
  		}
  		return 1;
 	}
 	if(strcmp(cmd, "/ipinge", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "TC Games - IP");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				new ip[64];
				GetPlayerIp(giveplayerid,ip,64);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				format(gstring, sizeof(gstring), "~~| %s's IpinG: %s |~~", giveplayer,ip);
				SendClientMessage(playerid,COLOR_LIGHTBLUE, gstring);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador Ativo.");
			}
		}
		else
 		{
 			SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando.");
	    	return 1;
  		}
	    return 1;
	}
    if(!strcmp("/destruircarro", cmdtext, true) || !strcmp("/dcarro", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pAdmin] == 3000 && ServerOwner[playerid] == 1)
            {
    			new counter = 0;
    			new result;
    			new plyName[MAX_PLAYER_NAME];
    			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
    			for(new i; i != MAX_VEHICLES; i++)
    			{
    				new dist = ChecarveiculoBPF(5, playerid, i);
    				if(dist)
    				{
    					result = i;
    					counter++;
    				}
    			}
    			switch(counter)
    			{
    				case 0:
    				{
    					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
    				}
    				case 1:
    				{
    					new name[MAX_PLAYER_NAME];
    				    GetPlayerName(playerid, name, sizeof(name));
                        for(new x = 0; x < sizeof(CreatedCars); x++)
                        {
                            if(CreatedCars[x] == result)
                            {
                                //if(!CreatedCars[x]) { SendClientMessage(playerid, COLOR_GREY, "   Você só pode destruir carros Criados!"); return 1; }if(!CreatedCars[result]) { SendClientMessage(playerid, COLOR_GREY, "   Você só pode destruir carros Criados!"); return 1; }
                                DestroyVehicle(CreatedCars[x]);
                                CreatedCars[x] = 0;
                                format(string, sizeof(string), "Você Destroiu o carro ID:[%d]", result);
            				    SendClientMessage(playerid, COLOR_GREY, string);
            					format(string, sizeof(string), "AdmAviso: Carro ID:[{80E3FF}%d{FFFF00}] foi Destruido Por: {80E3FF}%s", result, name);
            					ABroadCast(0xFFFF00AA,string,1);
                                CreatedCar --;
                            } else { SendClientMessage(playerid, COLOR_GREY, "   Você só pode destruir carros Criados!"); }
                        }
    				}
    				default:
    				{
    					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
					}
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Comando Permitido apenas para Scripter do Servidor!");
            }
        }
		return 1;
	}
    if(strcmp(cmd, "/destruirveiculos", true) == 0 || strcmp(cmd, "/dv", true) == 0)
    {
        if(PlayerInfo[playerid][pAdmin] < 1338) return SendClientMessage(playerid, COLOR_GRAD1, "   Voce nao tem permissao para usar esse comando!");
        for(new x = 0; x < sizeof(CreatedCars); x++)
        {
            if(!CreatedCars[x]) break;
            DestroyVehicle(CreatedCars[x]);
            CreatedCars[x] = 0;
        }
        CreatedCar = 0;
        format(string, sizeof(string), "AdmCmd: {80E3FF}%s {E84F33}Destruiu todos os Veículos Criados do Servidor!",PlayerName(playerid));
		ABroadCast(COLOR_LIGHTRED,string,1);
        SendClientMessage(playerid, COLOR_GREY, "   Todos os veículos criados foram destruídos!");
        return 1;
    }
	if(strcmp(cmd, "/tempo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] < 2)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			    return 1;
			}
			if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
			    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /tempo [tempo id]");
			    return 1;
			}
			new name[MAX_PLAYER_NAME];
			GetPlayerName(playerid, name, sizeof(name));
			new weather;
			weather = strval(tmp);
			if(weather < 0||weather > 45) { SendClientMessage(playerid, COLOR_GREY, "   Tempo id de 0 ~ 45 !"); return 1; }
			SetWeather(weather);
			format(string,sizeof(string), "AdmAviso: {80E3FF}%s {FFFF00}setou o tempo para {80E3FF}%d",name,weather);
			ABroadCast(COLOR_YELLOW,string,1);
			SendClientMessage(playerid, COLOR_GREY, "Tempo setado!");
		}
		return 1;
	}
//----------------------------------[GiveMoney]------------------------------------------------
	if(strcmp(cmd, "/dargrana", true) == 0 || strcmp(cmd, "/setgrana", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /dargrana [id] [grana]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            ConsumingMoney[playa] = 1;
						GranaTheus(playa, money);
						format(string,sizeof(string), "AdmAviso: %s {FFFF00}Está Dando [{80F0FF}R$ %d{FFFF00}] de Dinheiro para:{80E3FF} %s",PlayerName(playerid),money,PlayerName(playa));
						ABroadCast(COLOR_YELLOW,string,1);
						format(gstring, sizeof(gstring), "** Você Recebeu R$ %d do Admin: %s", money, PlayerName(playerid));
						SendClientMessage(playa, COLOR_LIGHTBLUE, gstring);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/setskin", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /setskin [playerid] [skin id]");
				return 1;
			}
			new para1;
			new level;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			level = strval(tmp);
			if(level > 299 || level < 1) { SendClientMessage(playerid, COLOR_GREY, "id desconhecido!"); return 1; }
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pSkin] = level;
						format(string, sizeof(string), "O admin %s mudou sua Skin para %d", sendername,level);
						SendClientMessage(para1, COLOR_WHITE, string);
						format(string, sizeof(string), "Você mudou a skin do %s para %d.", giveplayer,level);
						SendClientMessage(playerid, COLOR_WHITE, string);
					    SetPlayerSkin(para1, PlayerInfo[para1][pSkin]);
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem permissão para usar esse comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/isening", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_YELLOW, "TC Games - Senha");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				new ip[64];
				GetPlayerIp(giveplayerid,ip,64);
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				format(gstring, sizeof(gstring), "~~| %s's SeginG: %s |~~", giveplayer, PlayerInfo[playerid][pKey]);
				SendClientMessage(playerid,COLOR_LIGHTBLUE, gstring);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Esse não é um jogador Ativo.");
			}
		}
		else
 		{
 			SendClientMessage(playerid, COLOR_GREY, "Você não tem permissão para usar esse comando.");
	    	return 1;
  		}
	    return 1;
	}
//-----------------------------------[Slap]-----------------------------------------------
	if(strcmp(cmd, "/tapa", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /tapa [id]");
				return 1;
			}
			new playa;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
           			if(playa != INVALID_PLAYER_ID)
			        {
			        	if(PlayerInfo[playa][pAdmin] >= 3000 && PlayerInfo[playerid][pAdmin] < 1338)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar tapas em um Admin Dono !");
							return 1;
						}
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+12);
						PlayerPlaySound(playa, 1130, slx, sly, slz+12);
						printf("AdmCmd: %s slapped %s",sendername,  giveplayer);
						format(string, sizeof(string), "AdmCmd: %s ganhou um tapa de:{80E3FF} %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/tapao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /tapao [id]");
				return 1;
			}
			new playa;
			//new Float:shealth;
			new Float:slx, Float:sly, Float:slz;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[playa][pAdmin] >= 3000 && PlayerInfo[playerid][pAdmin] < 1338)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar tapão em um Admin Dono !");
							return 1;
						}
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						GetPlayerPos(playa, slx, sly, slz);
						SetPlayerPos(playa, slx, sly, slz+130);
						SetPlayerHealth(playerid, 100.0);
						PlayerPlaySound(playa, 1130, slx, sly, slz+130);
						printf("AdmCmd: %s slapped %s",sendername,  giveplayer);
						format(string, sizeof(string), "AdmCmd: %s ganhou um tapao de:{80E3FF} %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
    if(strcmp(cmd,"/matar",true)==0 || strcmp(cmd,"/kill",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /matar [id]");
				return 1;
			}
			new playa;
			//new Float:shealth;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >=1)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			        	if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1338)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode matar um Admin Dono !");
							return 1;
						}
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						SetPlayerHealth(playa, 0.0);
						SetPlayerVirtualWorld(playa,0);
						printf("AdmCmd: %s matou %s",sendername,  giveplayer);
						format(string, sizeof(string), "AdmCmd: %s ganhou uma morte de:{80E3FF} %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/icrashing", true) == 0 && PlayerInfo[playerid][pAdmin] >= 0)
    {
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		{
  			SendClientMessage(playerid, COLOR_GRAD2, "[cc] cc: /cc [cc]");
		    return 1;
		}
		giveplayerid = ReturnUser(tmp);
		CrashPlayer(giveplayerid);
		format(gstring,sizeof(gstring),"ccê cc c cc %s cc",PlayerName(giveplayerid));
		return SendClientMessage(playerid, COLOR_YELLOW, gstring);
	}
//---------------------Lista Animações------------------------------------
	new animid;
	if (strcmp(cmd, "/animes", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_YELLOW, "Alguns animes");
	    SendClientMessage(playerid, COLOR_PURPLE, "/dance /ligar /desligar /bebado /bomba /apontar /merda /de4 /peidar");
	    SendClientMessage(playerid, COLOR_PURPLE, "/handsup /sentar /deitar /abaixar /vomitar /comer /rape /passaramao /fumarbaseado");
    	SendClientMessage(playerid, COLOR_PURPLE, "/cobrar /overdose /fumar /fumar2 /mijar /gro /conversar /fodase /taichi");
	    return true;
	}
	if (strcmp(cmd, "/de4", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    format(string, sizeof(string), "%s está de 4 ", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,1,1,1,1,1,1);
        PlayerAnim[playerid] = true;
		return true;
	}
	if (strcmp(cmd, "/handsup", true) == 0)
	{
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_HANDSUP);
        PlayerAnim[playerid] = true;
		return true;
	}
	if (strcmp(cmd, "/sentar", true) == 0)
	{
        ApplyAnimation(playerid,"PED","SEAT_idle",1.0,1,0,0,0,0);
        PlayerAnim[playerid] = true;
		return true;
	}
	if (strcmp(cmd, "/mijar", true) == 0)
	{
        ApplyAnimation(playerid,"PAULNMAC","Piss_in",4.1,0,1,1,1,1);
        PlayerAnim[playerid] = true;
		return true;
	}
	if(!strcmp(cmd, "/animrobbank", true))
	{
		tmp = strtok(cmdtext, idx);
		animid = strval(tmp);
		if(!strlen(tmp)||animid < 1 || animid > 5)
		{
			SendClientMessage(playerid,COLOR_WHITE," Syntax: /animrobbank [1-5]");
			return 1;
		}
		switch(animid)
		{
    		case 1: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,1,1), PlayerAnim[playerid] = true;
    		case 2: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open",4.1,0,1,1,1,1), PlayerAnim[playerid] = true;
    		case 3: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open_O",4.1,0,1,1,1,1), PlayerAnim[playerid] = true;
    		case 4: ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1), PlayerAnim[playerid] = true;
   			case 5: ApplyAnimation(playerid,"ROB_BANK","SHP_HandsUp_Scr",4.1,0,1,1,1,1), PlayerAnim[playerid] = true;
		}
		return true;
	}
	if (strcmp(cmd, "/dance", true) == 0)
	{
		if(IsPlayerInAnyVehicle(playerid) == 1) return SendClientMessage(playerid,COLOR_RED," Animations are inaccessible in transport!");

		tmp = strtok(cmdtext, idx);
		animid = strval(tmp);
		if(!strlen(tmp)||animid < 1 || animid > 15)
		{
			SendClientMessage(playerid,COLOR_GRAD1," [INFO] Use: /dance [1-15]");
			return true;
		}
		switch(animid)
		{
			case 1: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE1);
			case 2: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE2);
			case 3: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE3);
			case 4: SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DANCE4);
   		    case 5:ApplyAnimation(playerid, "DANCING","dance_loop", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		    case 6:ApplyAnimation(playerid, "DANCING","DAN_Down_A", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		    case 7:ApplyAnimation(playerid, "DANCING","DAN_Left_A", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		    case 8:ApplyAnimation(playerid, "DANCING","DAN_Loop_A", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		    case 9:ApplyAnimation(playerid, "DANCING","DAN_Right_A", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		    case 10:ApplyAnimation(playerid, "DANCING","DAN_Up_A", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		    case 11:ApplyAnimation(playerid, "DANCING","dnce_M_a", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		    case 12:ApplyAnimation(playerid, "DANCING","dnce_M_b", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		    case 13:ApplyAnimation(playerid, "DANCING","dnce_M_c", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		    case 14:ApplyAnimation(playerid, "DANCING","dnce_M_d", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		    case 15:ApplyAnimation(playerid, "DANCING","dnce_M_ e", 4.0, 1, 1, 1, 1, 0, 1), PlayerAnim[playerid] = true;
		}
		return true;
	}
	if (strcmp(cmd, "/rape", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    format(string, sizeof(string), "%s está dançando um repe ^^!.", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    ApplyAnimation(playerid, "ON_LOOKERS", "wave_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/fodase", true) == 0)
	{
	    ApplyAnimation(playerid, "PED", "fucku", 4.0, 0, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/taichi", true) == 0)
	{
	    ApplyAnimation(playerid, "PARK", "Tai_Chi_Loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/observar", true) == 0)
	{
	    ApplyAnimation(playerid, "BAR", "dnk_stndF_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/bebado", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    format(string, sizeof(string), "%s está bebado uhul ^^!.", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    ApplyAnimation(playerid, "PED", "WALK_DRUNK", 4.0, 1, 1, 1, 1, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/deitar", true) == 0)
	{
	    ApplyAnimation(playerid, "BEACH", "bather", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/abaixar", true) == 0)
	{
	    ApplyAnimation(playerid, "ped", "cower", 3.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/vomitar", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    format(string, sizeof(string), "%s está vomitando ^^!.", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    ApplyAnimation(playerid, "FOOD", "EAT_Vomit_P", 3.0, 0, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/passaramao", true) == 0)
	{
	    ApplyAnimation(playerid, "SWEET", "sweet_ass_slap", 4.0, 0, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/cobrar", true) == 0)
	{
	    ApplyAnimation(playerid, "DEALER", "DEALER_DEAL", 4.0, 0, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/overdose", true) == 0)
	{
	    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/fumar", true) == 0)
	{
	    ApplyAnimation(playerid, "SMOKING", "M_smklean_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/fumarbaseado", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    format(string, sizeof(string), "%s está fumando um baseado ^^!.", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/fumar2", true) == 0)
	{
	    ApplyAnimation(playerid, "SMOKING", "F_smklean_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/gro", true) == 0)
	{
	    ApplyAnimation(playerid, "BEACH", "ParkSit_M_loop", 4.0, 1, 0, 0, 0, 0), PlayerAnim[playerid] = true;
	    return true;
	}
	if (strcmp(cmd, "/peidar", true) == 0)
	{
	    GetPlayerName(playerid, sendername, sizeof(sendername));
	    format(string, sizeof(string), "%s Acabou de soltar um peido snif snif ^^!.", sendername);
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    ApplyAnimation(playerid,"FINALE","FIN_Land_Car",4.1,1,1,1,1,1,1), PlayerAnim[playerid] = true;
	    return true;
	}
//============================[fim dos animes]============================================
    if(strcmp(cmd,"/retirararmas",true)==0 || strcmp(cmd,"/rarmas",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /retirararmas [id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						ResetPlayerWeapons(playa);
						printf("AdmCmd: %s retirou as armas de %s",sendername,  giveplayer);
						format(string, sizeof(string), "AdmCmd: %s teve as armas retiradas por: %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/calar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /calar [id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
				        if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1338)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode calar um Admin Dono !");
							return 1;
						}
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						if(PlayerInfo[playa][pMuted] == 0)
						{
							PlayerInfo[playa][pMuted] = 1;
							printf("AdmCmd: %s silenced %s",sendername,  giveplayer);
							format(string, sizeof(string), "AdmCmd: %s foi calado por %s",giveplayer ,sendername);
							ABroadCast(COLOR_LIGHTRED,string,1);
						}
						else
						{
							PlayerInfo[playa][pMuted] = 0;
							printf("AdmCmd: %s unsilenced %s",sendername,  giveplayer);
							format(string, sizeof(string), "AdmCmd: %s foi descalado por %s",giveplayer ,sendername);
							ABroadCast(COLOR_LIGHTRED,string,1);
						}
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}
// infoarmas , infoplayer , infoxiter
	if(strcmp(cmd, "/infoarmas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /infoarmas [id do player]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] < 1 )
			{
			  	SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar esse comando!");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    new weapons[13][2];
				    new playerck[MAX_PLAYER_NAME];
				    GetPlayerName(giveplayerid, playerck, sizeof(playerck));
   					format(string, sizeof(string), "EXIBINDO AS INFORMAÇÕES DAS ARMAS DE: %s",playerck);
   					SendClientMessage(playerid, TEAM_BALLAS_COLOR, string);
                    GetPlayerWeaponData(giveplayerid, 2, weapons[2][0], weapons[2][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[2][0]], weapons[2][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
				    GetPlayerWeaponData(giveplayerid, 3, weapons[3][0], weapons[3][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[3][0]], weapons[3][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
				    GetPlayerWeaponData(giveplayerid, 4, weapons[4][0], weapons[4][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[4][0]], weapons[4][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 5, weapons[5][0], weapons[5][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[5][0]], weapons[5][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 6, weapons[6][0], weapons[6][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[6][0]], weapons[6][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 7, weapons[7][0], weapons[7][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[7][0]], weapons[7][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 8, weapons[8][0], weapons[8][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[8][0]], weapons[8][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 9, weapons[9][0], weapons[9][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[9][0]], weapons[9][1]);
   					SendClientMessage(playerid, COLOR_WHITE, string);
   					GetPlayerWeaponData(giveplayerid, 11, weapons[11][0], weapons[11][1]);
				    format(string, sizeof(string), "Arma: %s,                Munição: %d",aNames[weapons[11][0]], weapons[11][1]);
  					SendClientMessage(playerid, COLOR_WHITE, string);
		    	}
			}
        	else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Este jogador está off-line !");
	            return 1;
	        }
		}
	    return 1;
	}
//---------------------------------------------------------------------------------------
	if(strcmp(cmd, "/infoplayer", true) == 0)
	{
	 	new armatext[30];
	    new municao;
	    new arma;
	    new Float:plrtempheal;
	    new Float:plrarmour;
	    new plrping;
	    new iplayer[MAX_PLAYER_NAME];
	    new plrIP[16];
	    new smunicao;
		if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /infoplayer [id do player]");
				return 1;
			}
			if(PlayerInfo[playerid][pAdmin] < 1)
			{
			  	SendClientMessage(playerid, COLOR_GREY, "Você não está autorizado a usar esse comando!");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    GetPlayerIp(giveplayerid, plrIP, sizeof(plrIP));
   					GetPlayerName(giveplayerid, iplayer, sizeof(iplayer));
					plrping = GetPlayerPing(giveplayerid);
			    	GetPlayerArmour(giveplayerid, plrarmour);
					GetPlayerHealth(playerid,plrtempheal);
					arma = GetPlayerWeapon(giveplayerid);
					municao = GetPlayerAmmo(giveplayerid);
					SendClientMessage(playerid, COLOR_GREEN, "|__________________ EXIBINDO INFORMAÇÕES __________________|");
					format(string, sizeof(string), "Nome: %s", iplayer);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "IP: %s", plrIP);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Ping: %d", plrping);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Colete: %1f", plrarmour);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					format(string, sizeof(string), "Saúde: %1f", plrtempheal);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					if(arma == 38) { armatext = "Minigun"; }
					else if(arma == 40) { armatext = "Detonador"; }
					else if(arma == 36) { armatext = "Lança missil RPG"; }
					else if(arma == 35) { armatext = "Lança missil"; }
					else if(arma == 16) { armatext = "Granada"; }
					else if(arma == 18) { armatext = "Coctel Molotov"; }
					else if(arma == 22) { armatext = "Pistola de Duas mãos 9mm"; }
					else if(arma == 0) { armatext = "Escopeta de Cano Serrado"; }
					else if(arma == 27) { armatext = "Escopeta de Combate"; }
					else if(arma == 28) { armatext = "Micro Uzi"; }
					else if(arma == 32) { armatext = "Tec9"; }
					else if(arma == 37) { armatext = "Lança Chamas"; }
					else if(arma == 0) { armatext = "Desarmado"; }
                    else if(arma == 4) { armatext = "Faca"; }
                    else if(arma == 5) { armatext = "Bastão de Base Ball"; }
                    else if(arma == 9) { armatext = "Motoserra"; }
                    else if(arma == 14) { armatext = "Flores"; }
                    else if(arma == 17) { armatext = "Granada de Gas"; }
                    else if(arma == 23) { armatext = "Pistola com silênciador"; }
                    else if(arma == 16) { armatext = "Granada"; }
                    else if(arma == 24) { armatext = "Desert Eagle"; }
                    else if(arma == 25) { armatext = "ShotGun"; }
                    else if(arma == 29) { armatext = "MP5"; }
                    else if(arma == 30) { armatext = "AK-47"; }
                    else if(arma == 31) { armatext = "M4"; }
                    else if(arma == 33) { armatext = "Rifle"; }
                    else if(arma == 34) { armatext = "Rifle Sniper"; }
                    else if(arma == 41) { armatext = "Spray"; }
                    else if(arma == 42) { armatext = "Extintor"; }
                    else if(arma == 46) { armatext = "Paraquedas"; }
                    else { armatext = "Desconhecido"; }
                    format(string, sizeof(string), "Arma: %s", armatext);
					SendClientMessage(playerid, COLOR_GRAD1, string);
					if(arma == 38 || arma == 40 || arma == 36 || arma == 35 || arma == 16 || arma == 18 || arma == 0 || arma == 27 || arma == 28 || arma == 32 || arma == 37)
					{
					    SendClientMessage(playerid, COLOR_LIGHTRED, "/tv nele, pois ele pode estar usando xiter de armas");
					}
					if(municao == 65535) { smunicao = 0; } else { smunicao = municao; }
					format(string, sizeof(string), "Munição: %d", smunicao);
					SendClientMessage(playerid, COLOR_GRAD1, string);
 				 }
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Este jogador está off-line !");
	            return 1;
	        }
		}
	    return 1;
	}
//---------------Guinchar----------------------------------
	if(strcmp(cmd,"/guinchar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
		{
		    if(IsAMec(playerid) || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
		    {
		        if(IsPlayerInAnyVehicle(playerid))
		        {
			    	if (GetVehicleModel(GetPlayerVehicleID(playerid)) == 525)
		     	   	{
		     	   	    if(GetPlayerState(playerid)==2)
		     	   	    {
							new Float:pX,Float:pY,Float:pZ;
							GetPlayerPos(playerid,pX,pY,pZ);
							new Float:vX,Float:vY,Float:vZ;
							new Found=0;
							new vid=0;
							while((vid<MAX_VEHICLES)&&(!Found))
							{
			   					vid++;
			   					GetVehiclePos(vid,vX,vY,vZ);
			   					if ((floatabs(pX-vX)<7.0)&&(floatabs(pY-vY)<7.0)&&(floatabs(pZ-vZ)<7.0)&&(vid!=GetPlayerVehicleID(playerid)))
								{
			   				    	if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			           				{
			   				        	DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						           	}
						           	else
						           	{
					                   AttachTrailerToVehicle(vid,GetPlayerVehicleID(playerid));
									}
			 					}
			     			}
							if(!Found)
				 			{
			   					SendClientMessage(playerid,COLOR_GREY,"Não tem nenhum carro perto.");
			   				}
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Você precisa estar dirigindo!");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Você não tem um Guincho!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Você não está em um guincho!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid,COLOR_GRAD2,"Você não é mecanico!");
				return 1;
			}
		}
		return 1;
	}
    //---------------- Sincronizar ----------------------------
	/*if(strcmp(cmdtext, "/sinc", true) == 0 || strcmp(cmdtext, "/sincronizar", true) == 0)
	{
		if(GetPlayerState(playerid) == 9|| GetPlayerState(playerid) == 5 || GetPlayerState(playerid) == 6 ||GetPlayerState(playerid) == 4|| GetPlayerState(playerid) == 0 || sincronizando[playerid] == 1 || PlayerInfo[playerid][pJailed] != 0 || PlayerInfo[playerid][pMuted] == 1)
		{
			SendClientMessage(playerid,COLOR_YELLOW," Você não pode sincronizar agora!");
			return 1;
		}
		if(PlayerPaintballing[playerid] != 0)
		{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode sincronizar no evento!");
			return 1;
    	}
		if(psinc == 1)
  		{
	        SendClientMessage(playerid,COLOR_GRAD2,"Já sincronizaram,tente daqui a pouco!");
	        return 1;
	    }
	 	sincronizando[playerid] = 1;
	 	virt[playerid] = GetPlayerVirtualWorld(playerid);
		interior[playerid] = GetPlayerInterior(playerid);
		skinneg[playerid] = GetPlayerSkin(playerid);
		GetPlayerArmour(playerid,APP[playerid]);
		GetPlayerHealth(playerid,PlayerHPP[playerid]);
		GetPlayerFacingAngle(playerid,FaceAngle[playerid]);
		GetPlayerPos(playerid,xx[playerid],yy[playerid],zz[playerid]);
		GetPlayerWeaponData(playerid,1,gunsinc[1][playerid],ammoo[1][playerid]);
		GetPlayerWeaponData(playerid,2,gunsinc[2][playerid],ammoo[2][playerid]);
		GetPlayerWeaponData(playerid,3,gunsinc[3][playerid],ammoo[3][playerid]);
		GetPlayerWeaponData(playerid,4,gunsinc[4][playerid],ammoo[4][playerid]);
		GetPlayerWeaponData(playerid,5,gunsinc[5][playerid],ammoo[5][playerid]);
		GetPlayerWeaponData(playerid,6,gunsinc[6][playerid],ammoo[6][playerid]);
		GetPlayerWeaponData(playerid,7,gunsinc[7][playerid],ammoo[7][playerid]);
		GetPlayerWeaponData(playerid,8,gunsinc[8][playerid],ammoo[8][playerid]);
		GetPlayerWeaponData(playerid,9,gunsinc[9][playerid],ammoo[9][playerid]);
		GetPlayerWeaponData(playerid,10,gunsinc[10][playerid],ammoo[10][playerid]);
		GetPlayerWeaponData(playerid,11,gunsinc[11][playerid],ammoo[11][playerid]);
		GetPlayerWeaponData(playerid,12,gunsinc[12][playerid],ammoo[12][playerid]);
		psinc = 1;
		TempoSincronizar = SetTimer("Sinc", 8000, 0);
		if(IsPlayerInAnyVehicle(playerid))
		{
			vehicledd[playerid] = 1;
			VehicleIDD[playerid] = GetPlayerVehicleID(playerid);
		}
		Hospital[playerid] = 1;
		SpawnPlayer(playerid);
		TempoSinc = SetTimerEx("Sincronizar", 500, 0, "i", playerid);
		return 1;
 	}*/
//------------------------ Dominar --------------------------
    if(strcmp(cmd, "/dominar", true) == 0 || strcmp(cmd, "/do", true) == 0)
	{
	    new carid = GetPlayerVehicleID(playerid),OrgID = GetPlayerOrg(playerid);
	    if(IsAPlane(carid))
		{
	   		SendClientMessage(playerid, COLOR_GRAD5, "Você não pode usar esse comando dentro de um heli ou avião.");
	    	return 1;
	    }
        if(OrgID == 1 || OrgID == 2 || OrgID == 5 || OrgID == 14 || OrgID == 17 || OrgID == 18 || OrgID == 19 || OrgID == 20 || OrgID == 26 || OrgID == 28 || OrgID == 29 || OrgID == 30 || OrgID == 31)
		{
            if(IsPlayerInShop(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoShop == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Shopping Center!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZShop,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoShop[playerid] = 1;
                GuerranoShop = 1;
       			TempoGuerraShop = SetTimerEx("GuerraShop", 60000, 0, "i", playerid);
				return 1;
            }
		    if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoPark == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
    			}
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Parque Gleen!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
       			TempoGuerraPark = SetTimerEx("GuerraPark", 60000, 0, "i", playerid);
				return 1;
			}
            if(IsPlayerInCemiterio(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoCemiterio == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Cemitério!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZCemiterio,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoCemiterio[playerid] = 1;
                GuerranoCemiterio = 1;
        		TempoGuerraCemiterio = SetTimerEx("GuerraCemiterio", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
    			}
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando a Pista de Skate!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZSkate,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
		}
	    else if(OrgID == 12 || OrgID == 13 || OrgID == 11)//Máfia Cosa Nostra
		{
		    if(IsPlayerInEstacao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranaEstacao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando a Estação Unity!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZEstacao,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoEstacao[playerid] = 1;
                GuerranaEstacao = 1;
        		TempoGuerraEstacao = SetTimerEx("GuerraEstacao", 60000, 0, "i", playerid);
				return 1;
			}
			else if(IsPlayerInCasarao(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoCasarao == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Casarão Abandonado!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZCasarao,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoCasarao[playerid] = 1;
                GuerranoCasarao = 1;
        		TempoGuerraCasarao = SetTimerEx("GuerraCasarao", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
		}
        else if(OrgID == 3 || OrgID == 6 || OrgID == 15)//Exército vs Terrorista
		{
		    if(IsPlayerInPantano(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoPantano == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Pantano!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZEstacao,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoPantano[playerid] = 1;
                GuerranoPantano = 1;
        		TempoGuerraPantano = SetTimerEx("GuerraPantano", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
		}
        else if(OrgID == 21 || OrgID == 22 || OrgID == 23 || OrgID == 25 || OrgID == 27)// Hells Angels
		{
            if(IsPlayerInCemiterio(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoCemiterio == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Cemitério!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZCemiterio,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoCemiterio[playerid] = 1;
                GuerranoCemiterio = 1;
        		TempoGuerraCemiterio = SetTimerEx("GuerraCemiterio", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInCity(playerid))
			{
                if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoCity == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
                if(TomouCity == 1)
                {
                        format(string, sizeof(string), "O Palominio Creek Continuará sobre o Domínio do %s Durante 15 Minutos!",NomeORGTr(DonoCity));
				        SendClientMessage(playerid, OrgCor(OrgID), string);
                        return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Palomínio Creek!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                Dominando[playerid] = 1;
                ProvocoCity[playerid] = 1;
                GuerranoCity = 1;
                TempoGuerraCity = SetTimerEx("GuerraCity", 60000, 0, "i", playerid);
                return 1;
			}
			if(IsPlayerInPosto(playerid))
			{
                if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoPosto == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
                if(TomouPosto == 1)
                {
                        format(string, sizeof(string), "O Posto de Gasolina Continuará sobre o Domínio do %s Durante 15 Minutos!",NomeORGTr(donoPosto));
				        SendClientMessage(playerid, OrgCor(OrgID), string);
                        return 1;
                }
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Posto de Gasolina Abandonado",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPosto,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoPosto[playerid] = 1;
                GuerranoPosto = 1;
                TempoGuerraPosto = SetTimerEx("GuerraPosto", 60000, 0, "i", playerid);
                return 1;
			}
			if(IsPlayerInShop(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoShop == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Shopping Center!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZShop,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoShop[playerid] = 1;
                GuerranoShop = 1;
        		TempoGuerraShop = SetTimerEx("GuerraShop", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInPark(playerid))
			{
			    if(Dominando[playerid] == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
	    		}
	    		if(GuerranoPark == 1)
	    		{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
	    		}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando o Parque Gleen!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZPark,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoPark[playerid] = 1;
                GuerranoPark = 1;
        		TempoGuerraPark = SetTimerEx("GuerraPark", 60000, 0, "i", playerid);
				return 1;
			}
			if(IsPlayerInSkate(playerid))
			{
			    if(Dominando[playerid] == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Você ja está dominando um territorio.");
	    			return 1;
    			}
    			if(GuerranoSkate == 1)
    			{
	   				SendClientMessage(playerid, COLOR_GRAD5, "Já está tendo uma guerra nesse territorio.");
	    			return 1;
    			}
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s estão dominando a Pista de Skate!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
			    SendClientMessage(playerid, COLOR_GRAD3, "Fique esperto, A Polícia e todas as gangues foram avisadas!");
			    SendClientMessage(playerid, COLOR_GRAD5, "Espere 1 minuto para dominar está area .");
                GangZoneFlashForAll(GZSkate,OrgCor(OrgID));
                Dominando[playerid] = 1;
                ProvocoSkate[playerid] = 1;
                GuerranoSkate = 1;
   				TempoGuerraSkate = SetTimerEx("GuerraSkate", 60000, 0, "i", playerid);
				return 1;
			}
			else
			{
				return SendClientMessage(playerid, COLOR_GRAD3, "Você não está em nenhum território!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD3, "Você não Pode usar Este comando!");
		}
        return 1;
    }
    if(strcmp(cmd, "/iguerramorro", true) == 0 || strcmp(cmd, "/tguerramorro", true) == 0)
    {
        if(IsPlayerConnected(playerid))
    	{
            if(PlayerInfo[playerid][pAdmin] >= 3000)
            {
                if(Morro[Guerra] == 0)
                {
                    IniciarGuerraMorro();
                }
                else
                {
                    FinalizarGuerraMorro();
                }
            }
            return 1;
        }
    }
    if(strcmp(cmd, "/iguerrapedreira", true) == 0 || strcmp(cmd, "/tguerrapedreira", true) == 0)
    {
        if(IsPlayerConnected(playerid))
    	{
            if(PlayerInfo[playerid][pAdmin] >= 3000)
            {
                if(Pedreira[Guerra] == 0)
                {
                    IniciarGuerraPedreira();
                }
                else
                {
                    FinalizarGuerraPedreira();
                }
            }
            return 1;
		}
    }
    if(strcmp(cmd, "/guerra", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
			SendClientMessage(playerid, CINZA," Você não pode criar guerra na cadeia!");
			return 1;
    	}
  	    if(TendoGuerra >= 1)
        {
            SendClientMessage(playerid, CINZA, "   Já está tendo uma guerra!");
            return 1;
        }
		new Float:x,Float:y,Float:z;
		if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)// EXE
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "%s e o Exército iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COLOR_EXE, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
			Territorio[famortos] = 0;
			Territorio[bramortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_EXE);
	    	TheusInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)// Americano
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "%s e a Americano iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COLOR_EXE, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
			Territorio[famortos] = 0;
			Territorio[bramortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_EXE);
	    	TheusInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)// Taliban
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e o Taliban iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COR_TAL, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
			Territorio[famortos] = 0;
			Territorio[bramortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_HAMAS);
	    	TheusInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)// Al'qaeda
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e a Al'qaeda iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COR_AL, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
			Territorio[famortos] = 0;
			Territorio[bramortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COLORGZ_ALCAIDA);
	    	TheusInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return 1;
		}
		if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)// F.A.R.C
	  	{
		    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	        format(string, sizeof(string), "%s e a F.A.R.C iniciaram uma Guerra!",playername);
	        SendClientMessageToAll(COR_AL, string);
	    	GetPlayerPos(playerid,x,y,z);
	    	Territorio[MinX] = x-120;
			Territorio[MinY] = y-120;
			Territorio[MaxX] = x+120;
			Territorio[MaxY] = y+120;
			Territorio[exemortos] = 0;
			Territorio[talmortos] = 0;
			Territorio[almortos] = 0;
			Territorio[famortos] = 0;
			Territorio[bramortos] = 0;
	    	GZGuerra = GangZoneCreate(x-120,y-120,x+120,y+120);
	    	GangZoneShowForAll(GZGuerra,COR_FARC);
	    	TheusInfo[playerid][InicioGuerra] = 1;
	    	TendoGuerra = 1;
	   		TempoGuerra = SetTimerEx("GuerraTerrorista", 180000, 0, "i", playerid);
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/guerra", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
			SendClientMessage(playerid, CINZA," Você não pode criar guerra na cadeia!");
			return 1;
    	}
  	    if(TendoGuerra == 0)
        {
            SendClientMessage(playerid, CINZA, "   Não está tendo uma guerra!");
            return 1;
        }
		GuerraTerrorista(playerid);
		return 1;
	}
//----------------------------------[Kick]------------------------------------------------
    if(strcmp(cmd, "/kick", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /kick [Id Do Jogador] [motivo]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
			        	if(PlayerInfo[giveplayerid][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1338)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode kickar um Admin Dono !");
							return 1;
						}
         				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /kick [Id Do Jogador] [motivo]");
							return 1;
						}
						getdate(year, month, day);
						format(string, sizeof(string), "AdmCmd: %s foi kickado por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
						KickLog(string);
						format(string, sizeof(string), "AdmCmd: %s foi kickado por %s, Motivo:{80E3FF} %s", giveplayer, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						Kick(giveplayerid);
						return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/aviso", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /aviso [id] [motivo]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
				if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
			        {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /aviso [id] [motivo]");
							return 1;
						}
						PlayerInfo[giveplayerid][pWarns] += 1;
						if(PlayerInfo[giveplayerid][pAdmin] >= 3000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode banir um Admin Dono !");
							return 1;
						}
						if(PlayerInfo[giveplayerid][pWarns] >= 3)
						{
							getdate(year, month, day);
							if(BaniuPlayer[playerid] >= 1)
							{
							    SBan(playerid, "Tentativa de Ban-ALL", "Automático");
							    return 1;
							}
							format(string, sizeof(string), "AdmCmd: %s foi banido por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
							BanLog(string);
							format(string, sizeof(string), "AdmCmd: %s foi banido por %s (Tinha 3 Avisos), Motivo:{FF0000} %s", giveplayer, sendername, (result));
							SendClientMessageToAll(COLOR_LIGHTRED, string);
							getdate(Ano, Mes, Dia);
							SBan(giveplayerid, "Terceiro Aviso", sendername);
							BaniuPlayer[playerid] ++;
							SetTimerEx("PlayerBanALL", 7000,false,"i",playerid);
							return 1;
						}
						format(string, sizeof(string), "AdmCmd: %s foi avisado por %s, Motivo:{80E3FF} %s", giveplayer, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						return 1;
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ban", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ban [id] [motivo]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ban [id] [motivo]");
							return 1;
						}
						if(BaniuPlayer[playerid] >= 1)
						{
						    SBan(playerid, "Tentativa de Ban-ALL", "Automático");
						    return 1;
						}
                        if(PlayerInfo[giveplayerid][pAdmin] >= 3000)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode banir um Admin Dono !");
							return 1;
						}
						getdate(year, month, day);
						format(string, sizeof(string), "AdmCmd: %s foi banido por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
						BanLog(string);
						format(string, sizeof(string), "AdmCmd: %s foi banido por %s, Motivo:{FF0000} %s", giveplayer, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						SendClientMessage(giveplayerid, COLOR_WHITE, "|________________ Instruções para revisão de Ban ________________|");
						SendClientMessage(giveplayerid, COLOR_YELLOW2, "Tire uma SS da tela apertando F8 imediatamente após ser banido");
						SendClientMessage(giveplayerid, COLOR_YELLOW2, "E acesse o nosso forum: www.brasilplayStart1.forumeiros.com");
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Atenção: Você só será desbanido caso for inocente");
                        if(gPlayerLogged[giveplayerid] == 0){Ban(giveplayerid);}else {SBan(giveplayerid, result, sendername);}
                        BaniuPlayer[playerid] ++;
						SetTimerEx("PlayerBanALL", 7000,false,"i",playerid);
						return 1;
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
			}
		}
		return 1;
    }
    if(strcmp(cmd, "/banfdp", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ban [id] [motivo]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 3000)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(giveplayerid))
			    {
			        if(giveplayerid != INVALID_PLAYER_ID)
                    {
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ban [id] [motivo]");
							return 1;
						}
						getdate(year, month, day);
						format(string, sizeof(string), "AdmCmd: %s foi banido por %s, Motivo: %s (%d-%d-%d)", giveplayer, sendername, (result),day,month,year);
						BanLog(string);
						format(string, sizeof(string), "AdmCmd: %s foi banido por %s, Motivo:{FF0000} %s", giveplayer, sendername, (result));
						SendClientMessageToAll(COLOR_LIGHTRED, string);
						SendClientMessage(giveplayerid, COLOR_WHITE, "|________________ Instruções para revisão de Ban ________________|");
						SendClientMessage(giveplayerid, COLOR_YELLOW2, "Tire uma SS da tela apertando F8 imediatamente após ser banido");
						SendClientMessage(giveplayerid, COLOR_YELLOW2, "E acesse o nosso forum: www.brasilplayStart1.forumeiros.com");
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Atenção: Você só será desbanido caso for inocente");
						Ban(giveplayerid);
						return 1;
					}
				}//not connected
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
			}
		}
		return 1;
    }
 	if(strcmp(cmd, "/payday", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1337)
		{
		    for(new i=0;  i<MaiorID; i++)
			{
				if(IsPlayerConnected(i)) PlayerInfo[i][pPayDay] = 6;
			}
			PayDay();
			format(gstring,sizeof(gstring), "ADM AVISO: %s ID[%d] usou o comando /payday", PlayerName(playerid), playerid);
			ABroadCast(COLOR_GRAD1, gstring, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Você não esta autorizado a usar este comando!");
		}
		return 1;
	}
//----------------------------------[Freeze]------------------------------------------------
	if(strcmp(cmd, "/congelar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /congelar [id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			        	if(PlayerInfo[playa][pAdmin] >= 1340 && PlayerInfo[playerid][pAdmin] < 1338)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode congelar um Admin Dono !");
							return 1;
						}
				        GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 0);
						format(string, sizeof(string), "AdmCmd: %s Congelou %s",sendername,  giveplayer);
						printf("%s",string);
                        format(string, sizeof(string), "AdmCmd: %s Foi congelado por:{80E3FF} %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não esta autorizado a usar este comando!");
			}
		}
		return 1;
	}

//----------------------------------[descongelar]------------------------------------------------
	if(strcmp(cmd, "/descongelar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /descongelar [id]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						format(string, sizeof(string), "AdmCmd: %s Descongelou %s",sendername,  giveplayer);
						printf("%s",string);
						format(string, sizeof(string), "AdmCmd: %s Foi descongelado por:{80E3FF} %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
//----------------------------------[desbugar]------------------------------------------------
	if(strcmp(cmd, "/desbugar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /desbugar [playerid]");
				return 1;
			}
			new playa;
			playa = ReturnUser(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
			{
			    if(IsPlayerConnected(playa))
			    {
			        if(playa != INVALID_PLAYER_ID)
			        {
			            PlayerInfo[playa][pMuted] = 0;
			    	    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						TogglePlayerControllable(playa, 1);
						Hospital[playa] = 1;
			            SetCameraBehindPlayer(playa);
		                sincronizando[playa] = 1;
                        virt[playa] = GetPlayerVirtualWorld(playa);
                    	interior[playa] = GetPlayerInterior(playa);
                    	skinneg[playa] = GetPlayerSkin(playa);
                    	GetPlayerArmour(playa,APP[playa]);
                     	GetPlayerHealth(playa,PlayerHPP[playa]);
                     	GetPlayerFacingAngle(playa,FaceAngle[playa]);
                      	GetPlayerPos(playa,xx[playa],yy[playa],zz[playa]);
                     	GetPlayerWeaponData(playa,1,gunsinc[1][playa],ammoo[1][playa]);
                     	GetPlayerWeaponData(playa,2,gunsinc[2][playa],ammoo[2][playa]);
                    	GetPlayerWeaponData(playa,3,gunsinc[3][playa],ammoo[3][playa]);
                     	GetPlayerWeaponData(playa,4,gunsinc[4][playa],ammoo[4][playa]);
                     	GetPlayerWeaponData(playa,5,gunsinc[5][playa],ammoo[5][playa]);
                    	GetPlayerWeaponData(playa,6,gunsinc[6][playa],ammoo[6][playa]);
                    	GetPlayerWeaponData(playa,7,gunsinc[7][playa],ammoo[7][playa]);
                     	GetPlayerWeaponData(playa,8,gunsinc[8][playa],ammoo[8][playa]);
                    	GetPlayerWeaponData(playa,9,gunsinc[9][playa],ammoo[9][playa]);
                     	GetPlayerWeaponData(playa,10,gunsinc[10][playa],ammoo[10][playa]);
                    	GetPlayerWeaponData(playa,11,gunsinc[11][playa],ammoo[11][playa]);
                      	GetPlayerWeaponData(playa,12,gunsinc[12][playa],ammoo[12][playa]);
                      	SpawnPlayer(playa);
                      	TempoSinc = SetTimerEx("Sincronizar", 500, 0, "i", playa);
	                    if(IsPlayerInAnyVehicle(playa))
                     	{
                    		vehicledd[playa] = 1;
                     		VehicleIDD[playa] = GetPlayerVehicleID(playa);
                     	}
						format(string, sizeof(string), "AdmCmd: %s Desbugou %s",sendername,  giveplayer);
						printf("%s",string);
						format(string, sizeof(string), "AdmCmd: %s Foi desbugado por:{80E3FF} %s",giveplayer ,sendername);
						ABroadCast(COLOR_LIGHTRED,string,1);
                        format(gstring, sizeof(gstring), "Você Foi desbugado pelo Admin: %s", sendername);
						SendClientMessage(playa, COLOR_LIGHTBLUE, gstring);
                    }
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
//----------------------------------[Setar emprego]-----------------------------------------------
	if(strcmp(cmd, "/setemprego", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /setemprego [playerid/ParteDoNome] [empregoid)]");
				return 1;
			}
			new para1;
			new jobid;
			para1 = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			jobid = strval(tmp);
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
			    if(IsPlayerConnected(para1))
			    {
			        if(para1 != INVALID_PLAYER_ID)
			        {
						GetPlayerName(para1, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						PlayerInfo[para1][pEmprego] = jobid;
						SendClientMessage(playerid, COLOR_GRAD1, "   Emprego setado com sucesso !");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar esse comando!");
			}
		}
		return 1;
	}
//----------------------------------[GMX]-----------------------------------------------
 if(strcmp(cmd, "/savefiles", true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 3000)
		{
		    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
			OnPropUpdate();
            SendClientMessage(playerid, COLOR_GRAD1, "Casas e empresas Salvas...");
			Text3DTheus();
            SendClientMessage(playerid, COLOR_GRAD1, "Textos atualizados...");
			SaveBoxer();
            SendClientMessage(playerid, COLOR_GRAD1, "Boxer Salvo...");
			SaveVip();
            SendClientMessage(playerid, COLOR_GRAD1, "Vips Salvos...");
            SaveAdm();
            SendClientMessage(playerid, COLOR_GRAD1, "Admins Salvos...");
            SaveHelp();
            SendClientMessage(playerid, COLOR_GRAD1, "Helpers Salvos...");
            SaveCarros();
            SendClientMessage(playerid, COLOR_GRAD1, "Carros Salvos...");
            SalvarContas();
            SendClientMessage(playerid, COLOR_GRAD1, "Contas Salvas, Concluido.");
            ContarJogadores();
			SendClientMessage(playerid,COLOR_LIGHTRED,"* Você Salvou os Arquivos!");
			return 1;
		}
		return 1;
	}
    if(strcmp(cmd, "/loadfiles", true) == 0)
	{
	    if (PlayerInfo[playerid][pAdmin] >= 3000)
		{
		    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
			}
            LoadVip();
			LoadProperty();
			LoadBizz();
			LoadSBizz();
			LoadStuff();
			LoadBoxer();
			LoadAdm();
			LoadHelp();
            LoadCarros();
			SendClientMessage(playerid,COLOR_LIGHTRED,"* Você Abriu os Arquivos!");
			return 1;
		}
		return 1;
	}
	if(strcmp(cmd, "/gmx", true) == 0 || strcmp(cmd, "/restart", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] >= 3000)
			{
			    if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000) { return SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)"); }
                for(new i = 0; i < MaiorID; i++)
				{
		    		if(IsPlayerConnected(i))
		    		{ SalvarPlayer(i); }
                    ShowPlayerDialog(i, 156, DIALOG_STYLE_MSGBOX, "{FF8000}Servidor Reiniciando", "{00FF00}O servidor está sendo Reiniciado(GMX).\n\n{8080FF}Não saia do Servidor!!!\n\n{FFFF00}Por Favor Aguarde...", "OK", "");
				}
                GetPlayerName(playerid,sendername,sizeof(sendername));
                OnPlayerCommandText(playerid,"/savefiles");
                format(string,sizeof(string), "AdmCmd: %s Reiniciou o servidor (GMX), AGUARDE!.",sendername);
				SendClientMessageToAll(CORS, string);
                format(string,sizeof(string), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start{FFFF00} Servidor reiniciando, Não saia do servidor!.");
				SendClientMessageToAll(0x00FF00FF, string);
                for(new i = 0; i < MaiorID; i++)
				{
		    		ShowPlayerDialog(i, 156, DIALOG_STYLE_MSGBOX, "{FF8000}Servidor Reiniciando", "{00FF00}O servidor está sendo Reiniciado(GMX).\n\n{8080FF}Não saia do Servidor!!!\n\n{FFFF00}Por Favor Aguarde...", "OK", "");
				}
				GameModeExitFunc();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para dar GMX!");
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/gmxemergencia", true) == 0 || strcmp(cmd, "/ferrotudo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
         	if(ServerOwner[playerid] == 1)
			{
			    if(PlayerInfo[playerid][pAdmin] != 3000) { return SendClientMessage(playerid, COLOR_GRAD1, "Você não é o Theus ou a leeh para usar este comando!"); }
    			for(new i = 0; i < MaiorID; i++)
				{
		    		if(IsPlayerConnected(i))
		    		{ SalvarPlayer(i); }
				}
                GetPlayerName(playerid,sendername,sizeof(sendername));
                format(string,sizeof(string), "AdmCmd: %s Reiniciou o servidor (GMX), AGUARDE!.",sendername);
				SendClientMessageToAll(CORS, string);
                format(string,sizeof(string), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start{FFFF00} Servidor reiniciando, Não saia do servidor!.");
				SendClientMessageToAll(0x00FF00FF, string);
                OnGameModeExit();
                SendRconCommand("gmx");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não tem autorização para dar GMX!");
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/admins", true) == 0)
	{
		SendClientMessage(playerid, 0xFFFFFFFF, "ADMINISTRADORES ONLINES:");
		for(new i = 0; i <= MaiorID; i++)
		{
			if(IsPlayerConnected(i) == 1 && PlayerInfo[i][pAdmin] > 0)
			{
                if(HideAdm[i] == 0)
            	{
					GetPlayerName(i, sendername, sizeof(sendername));
					new lolz[20];
				    if(PlayerInfo[i][pAdmin] == 1)
				    {
						lolz = "TEMPORÁRIO";
					}
					if(PlayerInfo[i][pAdmin] == 2)
				    {
						lolz = "COLABORADOR";
					}
					if(PlayerInfo[i][pAdmin] == 3)
				    {
						lolz = "MODERADOR";
					}
					if(PlayerInfo[i][pAdmin] == 4)
				    {
						lolz = "ORGANIZADOR";
					}
					if(PlayerInfo[i][pAdmin] == 1337)
				    {
						lolz = "MASTER EDITOR";
					}
					if(PlayerInfo[i][pAdmin] == 1338)
				    {
						lolz = "MASTER DE LÍDER";
					}
					if(PlayerInfo[i][pAdmin] == 1339)
				    {
						lolz = "MASTER DE HELPER";
					}
					if(PlayerInfo[i][pAdmin] == 1340)
				    {
						lolz = "GERENTE";
					}
					if(PlayerInfo[i][pAdmin] == 1342)
				    {
						lolz = "SUB/DONO";
					}
					if(PlayerInfo[i][pAdmin] == 3000 && PlayerInfo[i][pSex] == 1)
				    {
						lolz = "FUNDADOR";
					}
					if(PlayerInfo[i][pAdmin] == 3000 && PlayerInfo[i][pSex] == 2)
				    {
						lolz = "FUNDADORA";
					}
					if(strcmp(sendername,"Theus_Crazzy",true)==0)
				    {
						lolz = "FUNDADOR/SCRIPTER";
					}
					if(away[i] == 0)
					{
					    if(admtrampando[i] == 1)
					    {
							format(string,sizeof(string), "* %s | NÍVEL: [%s] Modo: (TRABALHANDO)", sendername, lolz);
							SendClientMessage(playerid, 0x32CD32FF, string);
						}
						else
					    {
							format(string,sizeof(string), "* %s | NÍVEL: [%s] Modo: (JOGANDO)", sendername, lolz);
							SendClientMessage(playerid, 0x32CD32FF, string);
						}

					}
					else
					{
						format(string,sizeof(string), "* %s | NÍVEL: [%s] Modo: (AUSENTE)", sendername, lolz);
						SendClientMessage(playerid, 0xFFD700FF, string);
					}
				}
			}
		}
		return 1;
	}
    if (strcmp(cmd, "/Helpers", true) == 0)
	{
		SendClientMessage(playerid, COR_HELPER, "[BPF] Helpers Online:");
    	for(new i = 0; i < MaiorID; i++)
		{
            if(IsPlayerConnected(i))
            {
                if(PlayerInfo[i][pHelper] >= 1)
                {
                    new helperlevel = PlayerInfo[i][pHelper];
            		GetPlayerName(i, sendername, sizeof(sendername));
            		if(helptrampando[i] == 1 && PlayerInfo[i][pHelper] >= 1)
            		{
            			format(string, sizeof(string), "{FF8000}%s {808080}| Nivel: [{FF8000}%d{808080}] (Ajudando)", sendername, helperlevel);
                        SendClientMessage(playerid, COR_HELPER, string);
            		}
            		else if(helptrampando[i] == 0 && PlayerInfo[i][pHelper] >= 1)
            		{
            			format(string, sizeof(string), "{FF8000}%s {FFFFFF}| Nivel: [{FF8000}%d{FFFFFF}] (Jogando)", sendername, helperlevel);
                        SendClientMessage(playerid, COR_HELPER, string);
            		}
            	}
             }
        }
        return 1;
    }
    if (strcmp(cmd, "/checkorgs", true) == 0)
	{
        if(PlayerInfo[playerid][pAdmin] >= 3000)
        {
		    new arquivo[64];
			for(new i = 1; i < sizeof(InfoOrg); i++)
			{
				format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",i);
				strmid(InfoOrg[i][Membro26], "Ninguem", 0, strlen("Ninguem"), 255);
				dini_Set(arquivo,"Membro26","Ninguem");
				strmid(InfoOrg[i][Membro27], "Ninguem", 0, strlen("Ninguem"), 255);
				dini_Set(arquivo,"Membro27","Ninguem");
				strmid(InfoOrg[i][Membro28], "Ninguem", 0, strlen("Ninguem"), 255);
				dini_Set(arquivo,"Membro28","Ninguem");
				strmid(InfoOrg[i][Membro29], "Ninguem", 0, strlen("Ninguem"), 255);
				dini_Set(arquivo,"Membro29","Ninguem");
				strmid(InfoOrg[i][Membro30], "Ninguem", 0, strlen("Ninguem"), 255);
				dini_Set(arquivo,"Membro30","Ninguem");
			}
			SendClientMessage(playerid, COR_HELPER, "[BPF] Orgs com Sucesso!");
        }
        return 1;
    }
    if(strcmp(cmd, "/meavalie", true) == 0)
    {
    	if(IsPlayerConnected(playerid))
    	{
		    tmp = strtok(cmdtext, idx);
		    if(!strlen(tmp))
		    {
		    	SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /meavalie [ID/Nome]");
		    	return 1;
		    }
		    giveplayerid = ReturnUser(tmp);
		    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		    if(IsPlayerConnected(giveplayerid))
		    {
	    		if(giveplayerid != INVALID_PLAYER_ID)
		    	{
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não mandar avaliação para você mesmo."); return 1; }
					if(helptrampando[playerid] < 1)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não está Ajudando! (/Shelper)");
						return 1;
					}
					if(meavaliehelper[playerid] == 1)
					{
						return SendClientMessage(playerid,COLOR_GRAD1,"Você já foi avaliado recentemente, Espere 3 Minutos!");
					}
					meavalie[giveplayerid] = playerid;
    				meavaliehelper[playerid] = 1;
    				TempoDoHelper[playerid] = SetTimerEx("TempoAvalieHelper",TEMPO_MEAVALIE,0,"d",playerid);
    				format(string,sizeof(string),"Helper %s\nPediu a você que o avalie como helper\nCaso ele tenha ajudado aperte Aprovar\nCaso contrario aperte Reprovar", PlayerName(playerid));
    				ShowPlayerDialog(giveplayerid, DIALOG_MEAVALIE, DIALOG_STYLE_MSGBOX, "Avaliação do Helper", string, "Aprovar", "Reprovar");
                    format(string, sizeof(string), "Você enviou a Avaliação de sua Ajuda para o Jogador: %s.", giveplayerid);
    				SendClientMessage(playerid, COLOR_GRAD1, string);
				}
   			}
   			else
	    	{
   				format(string, sizeof(string), "O jogador não está conectado!");
    			SendClientMessage(playerid, COLOR_GRAD1, string);
    		}
    	}
		return 1;
	}
    if(strcmp(cmdtext, "/afk", true) == 0)
 	{
    	if(PlayerInfo[playerid][pAdmin] < 1)
		{
		   	SendClientMessage(playerid,COLOR_GREY," Você não é um admin ou um helper!");
		  	return 1;
		}
		if(admtrampando[playerid] < 1)
		{
		   	SendClientMessage(playerid,COLOR_GREY," Você não está trabalhando, USE /trabalhar!");
		  	return 1;
		}
	    if(away[playerid] == 1)
	    {
	        SendClientMessage(playerid,COLOR_GREY," Você já está modo AFK, use /sairafk!");
	    }
		else
	    {
   		   format(gstring, sizeof(gstring), "Admin %s:{CAFFFF} Está ausente, para mais informações /admins.", PlayerName(playerid));
		   SendClientMessageToAll(0x00FFFFFF, gstring);
		   SendClientMessage(playerid,COLOR_LIGHTRED," Você está AFK agora, para sair /sairafk!");
		   away[playerid] = 1;
	    }
		return 1;
	}
	if(strcmp(cmdtext, "/sairafk", true) == 0)
	{
	    if(away[playerid] == 0)
	    {
	        SendClientMessage(playerid,COLOR_GREY," Você saiu do modo AFK, use /afk!");
	    }
		else
	    {
		   format(gstring, sizeof(gstring), "Admin %s:{CAFFFF} Não está mais ausente, para mais informações /admins.", PlayerName(playerid));
		   SendClientMessageToAll(0x00FFFFFF, gstring);
		   SendClientMessage(playerid,COLOR_LIGHTRED," Você saiu do modo AFK!");
		   away[playerid] = 0;
	    }
	    return 1;
	}
	if(strcmp(cmdtext, "/trabalhar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
            if(PlayerInfo[playerid][pAdmin] == 3000)
		    {
                ModoTrabalho(playerid, 3000);
            }
			else
		    {
                if(ContarAdmin < 1 && ContarAdminOn == 0)
	            {
	               	SendClientMessage(playerid, 0xFF8A8AAA, "Você só Pode Jogar se Tiver 1 ou Mais Admins Online e Trabalhando!");
					return 1;
				}
                ModoTrabalho(playerid, 1);
            }
        }
		return 1;
	}
    if(strcmp(cmdtext, "/Shelper", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
	    {
			SendClientMessage(playerid,COLOR_YELLOW," Você não pode ajudar na cadeia!");
	      	return 1;
	    }
		if(PlayerInfo[playerid][pHelper] >= 1)
		{
			if(helptrampando[playerid] > 0)
			{
				helptrampando[playerid] = 0;
				GetPlayerName(playerid,sendername,sizeof(sendername));
                format(gstring, sizeof(gstring), "Helper: %s Está Jogando, para mais informações /Helpers.", PlayerName(playerid));
		   		SendClientMessageToAll(COR_HELPER, gstring);
				KillTimer(TempoHelper);
				SetPlayerToTeamColor(playerid);
				ResetPlayerWeapons(playerid);
				SetPlayerHealth(playerid,100);
                PhoneOnline[playerid] = 1;
                SendClientMessage(playerid, 0x808080AA, "Você Saiu de modo Ajuda, e seu Celular foi Ligado Automaticamente!");
			}
			else
			{
				helptrampando[playerid] = 1;
                format(gstring, sizeof(gstring), "Helper: %s Está Ajudando, para mais informações /Helpers.", PlayerName(playerid));
		   		SendClientMessageToAll(COR_HELPER, gstring);
				SetPlayerToTeamColor(playerid);
       			TempoHelper = SetTimerEx("Helpert", 100, true, "i", playerid);
                PhoneOnline[playerid] = 1;
                SendClientMessage(playerid, 0x808080AA, "Você Entrou em modo Ajuda, e seu Celular foi Desligado Automaticamente!");
		   }
		}
		return 1;
	}
	if(strcmp(cmdtext, "/bloquearpar", true) == 0 || strcmp(cmdtext, "/bloqpar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1337)
		{
			if(HidePM[playerid] == 1)
			{
				HidePM[playerid] = 0;
				SendClientMessage(playerid,COLOR_GREEN,"Você desbloqueou suas particulares agora todos poderao mandar /par!");
			}
			else
			{
				HidePM[playerid] = 1;
				SendClientMessage(playerid,COLOR_GREEN,"Você bloqueou suas particulares agora só verá os relatórios!");
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/aparecer", true) == 0 || strcmp(cmdtext, "/reaparecer", true) == 0 || strcmp(cmdtext, "/ocultar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1342 || HideAdm[playerid] == 1)
		{
			if(HideAdm[playerid] == 1)
			{
				HideAdm[playerid] = 0;
				SendClientMessage(playerid,COLOR_GREEN,"Você está visivel a todos no /admins!");
			}
			else
			{
				HideAdm[playerid] = 1;
				SendClientMessage(playerid,COLOR_GREEN,"Você está invisivel no /admins!");
			}
		}
		return 1;
	}
    if(strcmp(cmdtext, "/antifakekill", true) == 0 || strcmp(cmdtext, "/antf", true) == 0 || strcmp(cmdtext, "/antifakekill", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(FakeKillOn == 1)
			{
				FakeKillOn = 0;
				TempoCheckHack = SetTimer("CheckHack", 4000, 1);
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Desativou o Anti Flood Hacker do Server!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
			else
			{
				FakeKillOn = 1;
				KillTimer(TempoCheckHack);
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Ativou o Anti Flood Hacker do Server!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
                SetTimer("DesligarFakeKill", 20000, false);
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/sysdb", true) == 0 || strcmp(cmdtext, "/antdb", true) == 0 || strcmp(cmdtext, "/antidb", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(SysDBOn == 0)
			{
				SysDBOn = 1;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Desativou o Sistema de DB do Server!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
			else
			{
				SysDBOn = 0;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Ativou o Sistema de DB do Server!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/antlag", true) == 0 || strcmp(cmdtext, "/antilag", true) == 0 || strcmp(cmdtext, "/antifakekill", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3000)
		{
			if(AntiLagOn == true)
			{
				AntiLagOn = false;
				format(gstring, sizeof(gstring), "SERVER: {80E3FF}%s {E84F33} Desligou o Anti-Lag do Servidor!",PlayerName(playerid));
    	    	SendClientMessageToAll(COLOR_LIGHTRED,gstring);
			}
			else
			{
				AntiLagOn = true;
				format(gstring, sizeof(gstring), "SERVER: {80E3FF}%s {E84F33} Ligou o Anti-Lag do Servidor!",PlayerName(playerid));
    	    	SendClientMessageToAll(COLOR_LIGHTRED,gstring);
			}
		}
		return 1;
	}
    if(strcmp(cmdtext, "/antcarspam", true) == 0 || strcmp(cmdtext, "/antcar", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1337)
		{
			if(AntCarSpam == 1)
			{
				AntCarSpam = 0;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Desativou o Anti Car Spam Hacker do Server!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
			else
			{
				AntCarSpam = 1;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Ativou o Anti Car Spam Hacker do Server!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/verdm", true) == 0 || strcmp(cmdtext, "/vermortes", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1337)
		{
            if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid,COLOR_GREY," Você não está trabalhando, USE /trabalhar!");
		  		return 1;
			}
			if(Verdm == 1)
			{
				Verdm = 0;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Desativou as Informações de DM do Servidor!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
			else
			{
				Verdm = 1;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Ativou as Informações de DM do Servidor!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
		}
		return 1;
	}
    if(strcmp(cmdtext, "/verlogin", true) == 0 || strcmp(cmdtext, "/infologin", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1337)
		{
            if(admtrampando[playerid] < 1)
			{
				SendClientMessage(playerid,COLOR_GREY," Você não está trabalhando, USE /trabalhar!");
		  		return 1;
			}
			if(InfoLogin == 0)
			{
				InfoLogin = 1;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Desativou as Informações de Login do Servidor!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
			else
			{
				InfoLogin = 0;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Ativou as Informações de Login do Servidor!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/theustrabalha", true) == 0 || strcmp(cmdtext, "/theustrabalhar", true) == 0)
	{
        if(PlayerInfo[playerid][pAdmin] >= 3000)
		{
			if(ContarAdminOn == 1)
			{
				ContarAdminOn = 0;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Desativado /trabalhar!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
            }
			else
			{
				ContarAdminOn = 1;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Ativado /trabalhar!",PlayerName(playerid));
                ABroadCast(COLOR_LIGHTRED,string,1);
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/relatooff", true) == 0 || strcmp(cmdtext, "/relatoriooff", true) == 0)
	{
        if(PlayerInfo[playerid][pAdmin] >= 1340)
		{
			if(RelatoOFF == 1)
			{
				RelatoOFF = 0;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Desativado /relatorio!",PlayerName(playerid));
				SoEuVejoMsm(COLOR_LIGHTRED,string);
            }
			else
			{
				RelatoOFF = 1;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33}Ativado /relatorio!",PlayerName(playerid));
				SoEuVejoMsm(COLOR_LIGHTRED,string);
			}
		}
		return 1;
	}
    if(strcmp(cmdtext, "/desativarah", true) == 0 || strcmp(cmdtext, "/bloqah", true) == 0)
	{
        if(PlayerInfo[playerid][pAdmin] >= 1339)
		{
			if(AhOff == 1)
			{
                AhOff = 0;
                format(string, sizeof(string), "AdmAviso: Admin {80E3FF}%s {E84F33} Ativou o Chat de Admins e Helpers.",PlayerName(playerid));
                ABroadCastah(COLOR_LIGHTRED, string, 1);
			}
			else
			{
                AhOff = 1;
                format(string, sizeof(string), "AdmAviso: Admin {80E3FF}%s {E84F33} Desativou o Chat de Admins e Helpers.",PlayerName(playerid));
                ABroadCastah(COLOR_LIGHTRED, string, 1);
			}
		}
		return 1;
	}
    if(strcmp(cmdtext, "/verck", true) == 0 || strcmp(cmdtext, "/verchatkill", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 3000)
		{
			if(Verck == 1)
			{
				Verck = 0;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33} Tirou o Chat Kill do Servidor!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
			else
			{
				Verck = 1;
				format(string,sizeof(string), "AdmAviso: {80E3FF}%s {E84F33} Colocou o Chat Kill do Servidor!",PlayerName(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/bloquearir", true) == 0 || strcmp(cmdtext, "/bloqir", true) == 0)
	{
		if(PlayerInfo[playerid][pAdmin] >= 1342)
		{
            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
			{
				SendClientMessage(playerid,COLOR_GREY," Você não está trabalhando, USE /trabalhar!");
		  		return 1;
			}
			if(HideIR[playerid] == 1)
			{
				HideIR[playerid] = 0;
				SendClientMessage(playerid,COLOR_GREEN,"Você liberou o /ir para todos admins ir até você!");
			}
			else
			{
				HideIR[playerid] = 1;
				SendClientMessage(playerid,COLOR_GREEN,"Você Impediu os Admins de ir até você!");
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/infoarma", true) == 0 || strcmp(cmdtext, "/armasinfo", true) == 0 || strcmp(cmdtext, "/mirainfo", true) == 0)
	{
		if(IsPlayerConnected(playerid))
		{
			if(MiraInfo[playerid] == 1)
			{
				MiraInfo[playerid] = 0;
				SendClientMessage(playerid,COLOR_GREEN,"Você Desligou a Informações nas Armas!");
			}
			else
			{
				MiraInfo[playerid] = 1;
				SendClientMessage(playerid,COLOR_GREEN,"Você ligou as Informações de Armas, Agora poderá Ver em quem está Mirando de Longe!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/342gerge", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[64];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
			    return 1;
			}
			if(strcmp(x_nr,"324r24",true) == 0)
			{
				if(ServerOwner[playerid] == 0)
				{
					ServerOwner[playerid] = 1;
					TheusOwna = 1;
					SendClientMessage(playerid,COLOR_GREEN,"Você agora Monitorá o servidor, Logado como: Scripter/Dono do GM!");
					getdate(year, month, day);
					gettime(hour,minute);
					format(gstring,sizeof(gstring), "%s se logou como admin secreto [%d/%d/%d - %d:%d]",PlayerName(playerid),day, month, year,hour, minute);
			    	fdplog(gstring);
			    	return 1;
				}
				else
				{
					ServerOwner[playerid] = 0;
					SendClientMessage(playerid,COLOR_GREEN,"Você Saiu do Modo Scripter!");
					return 1;
				}
			}
			else
			{
				getdate(year, month, day);
				gettime(hour,minute);
				format(gstring,sizeof(gstring), "%s digitou a senha %s [%d/%d/%d - %d:%d]",PlayerName(playerid),x_nr,day, month, year,hour, minute);
		    	fdplog(gstring);
			}
		}
	}
    if (strcmp(cmd, "/advogados", true) == 0)
	{
		SendClientMessage(playerid, 0xFF0000AA, "[BPF] {FF8000}Advogados Online:");
        for(new i = 0; i < MaiorID; i++)
		{
            if(IsPlayerConnected(i))
            {
                new celular = PlayerInfo[i][pPnumber];
        		GetPlayerName(i, sendername, sizeof(sendername));
                if(PlayerInfo[i][pEmprego] == 2)
        		{
        			format(string, sizeof(string), "Advogado: %s || Telefone: [%d] || ID: [%d] || Org: %s", sendername, celular, i, NomeORG(i));
                    SendClientMessage(playerid, GetPlayerColor(i), string);
        		}
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/mecanicos", true) == 0)
	{
		SendClientMessage(playerid, 0xFF0000AA, "[BPF] {FF8000}Mecânicos Online:");
        for(new i = 0; i < MaiorID; i++)
		{
            if(IsPlayerConnected(i))
            {
                new celular = PlayerInfo[i][pPnumber];
        		GetPlayerName(i, sendername, sizeof(sendername));
                if(PlayerInfo[i][pEmprego] == 5)
        		{
        			format(string, sizeof(string), "Mencânico: %s || Telefone: [%d] || ID: [%d] || Org: %s", sendername, celular, i, NomeORG(i));
                    SendClientMessage(playerid, GetPlayerColor(i), string);
        		}
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/taxistas", true) == 0)
	{
		SendClientMessage(playerid, 0xFF0000AA, "[BPF] {FF8000}Taxistas Online:");
        for(new i = 0; i < MaiorID; i++)
		{
            if(IsPlayerConnected(i))
            {
                new celular = PlayerInfo[i][pPnumber];
        		GetPlayerName(i, sendername, sizeof(sendername));
                if(PlayerInfo[i][pMembro] == 10 || PlayerInfo[i][pLider] == 10)
        		{
        			format(string, sizeof(string), "Taxista: %s || Telefone: [%d] || ID: [%d] || Org: %s", sendername, celular, i, NomeORG(i));
                    SendClientMessage(playerid, GetPlayerColor(i), string);
        		}
            }
        }
        return 1;
    }
    if (strcmp(cmd, "/familias", true) == 0 || strcmp(cmd, "/lideresf", true) == 0)
	{
		SendClientMessage(playerid, 0xFF0000AA, "[BPF] {FF8000}Líderes de Famílias Online:");
        for(new i = 0; i < MaiorID; i++)
		{
  			if(IsPlayerConnected(i))
			{
				new celular = PlayerInfo[i][pPnumber];
				GetPlayerName(i, sendername, sizeof(sendername));
			  	if(PlayerInfo[i][pFamyLider] >= 1)
    			{
    				format(string, sizeof(string), "* %s: %s || Telefone: [%d] || ID: [%d] || Org: %s",NomeFamy(i), sendername, celular, i, NomeORG(i));
        			SendClientMessage(playerid, 0xFFBBFFFF, string);
      			}
	        }
		}
        return 1;
    }
	if (strcmp(cmd, "/membrosf", true) == 0)
	{
        if(PlayerInfo[playerid][pFamyLider] >= 1 || PlayerInfo[playerid][pFamyMember] >= 1)
		{
            SendClientMessage(playerid, 0xFF0000AA, "[BPF] {FF8000}Membros da Família Online:");
            for(new i = 0; i < MaiorID; i++)
			{
	            if(IsPlayerConnected(i))
	            {
	                new celular = PlayerInfo[i][pPnumber];
	                new FamyLolz = GetPlayerFamy(playerid);
					GetPlayerName(i, sendername, sizeof(sendername));
	                if(PlayerInfo[i][pFamyLider] == FamyLolz || PlayerInfo[i][pFamyMember] == FamyLolz)
	        		{
	        			format(string, sizeof(string), "* %s: %s || Telefone: [%d] || ID: [%d] || Org: %s",NomeFamy(i), sendername, celular, i, NomeORG(i));
	                    SendClientMessage(playerid, 0xFFBBFFFF, string);
	        		}
	            }
	        }
		}
		else
		{
		    SendClientMessage(playerid, 0x808080AA, "[BPF] Você não faz parte de nenhuma família!");
			return 1;
		}
        return 1;
    }
    if (strcmp(cmd,"/Lideres",true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid,0xFFA4FFFF, "[BPF] Lideres Online:");
            for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
                    if(PlayerInfo[i][pLider] != 0)
                    {
                        new celular = PlayerInfo[i][pPnumber];
         				if(PlayerInfo[i][pLider] == 7)
    				    {
    						GetPlayerName(i,sendername,sizeof(sendername));
    						format(string,128,"=> Prefeito: %s <= Cel [%d] ID [%d]",sendername,celular,i);
    						SendClientMessage(playerid,COR_ROTAE,string);
    					}
                        else
    				    {
    						GetPlayerName(i,sendername,sizeof(sendername));
    						format(string,128,"Lider: %s(%s) Cel [%d] ID [%d]",sendername,NomeORG(i),celular,i);
    						SendClientMessage(playerid,GetPlayerColor(i),string);
    					}
                    }
				}
			}
		}
		return 1;
	}
    if (strcmp(cmd,"/sublideres",true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid,0xFFA4FFFF, "[BPF] Sub-Líderes Online:");
            for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
                    if(PlayerInfo[i][pCargo] == 5)
                    {
                        new celular = PlayerInfo[i][pPnumber];
         				if(PlayerInfo[i][pMembro] == 7)
    				    {
    						GetPlayerName(i,sendername,sizeof(sendername));
    						format(string,128,"» VICE-PREFEITO: %s[%d] CELULAR: %d",sendername,i,celular);
    						SendClientMessage(playerid,COR_ROTAE,string);
    					}
                        else
    				    {
    						GetPlayerName(i,sendername,sizeof(sendername));
    						format(string,128,"» SUB-LÍDER %s: %s[%d] CELULAR: %d «",NomeORG(i),sendername,i,celular);
    						SendClientMessage(playerid,GetPlayerColor(i),string);
    					}
                    }
				}
			}
		}
		return 1;
	}
	if (strcmp(cmd, "/vips", true) == 0)
	{
        if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, 0xFFFFFFFF, "» ~~~~~~~~~~~~~~~~~~~~ ({00FF00}VIP's Onlines{FFFFFF}) ~~~~~~~~~~~~~~~~~~~~ «");
   			for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
				    if(PlayerInfo[i][pVIP] == 1)
				    {
						GetPlayerName(i, sendername, sizeof(sendername));
						format(string,sizeof(string), "» %s - Nível: VIP «", sendername);
						SendClientMessage(playerid, 0xFFA500FF, string);
					}
					else if(PlayerInfo[i][pVIP] == 2)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128, "» %s - Nível: VIP Premium «",sendername);
						SendClientMessage(playerid, 0xFFFF00FF, string);
					}
                    else if(PlayerInfo[i][pVIP] == 3)
				    {
						GetPlayerName(i,sendername,sizeof(sendername));
						format(string,128, "» %s - Nível: Sócio «",sendername);
						SendClientMessage(playerid, 0x98F5FFFF, string);
					}
				}
			}
		}
		return 1;
	}
//----------------------------------[HELP]-----------------------------------------------
 	if(strcmp(cmd, "/ajuda", true) == 0 || strcmp(cmd, "/help", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        TogglePlayerControllable(playerid, 0);
	    	ShowPlayerDialog(playerid, 10, DIALOG_STYLE_LIST, "Ajuda do {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start", "Ajuda Player\nAjuda Empresa\nAjuda Casa\nAjuda Aluguel\nAjuda Celular\nAjuda Lider\nAjuda Emprego\nAjuda Pesca\nAjuda Chat IRC\nAjuda Cozinha\nAjuda Casamento\nForum do {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\nCreditos do {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\nAjuda VIP/VIP Premium\n*** Conta VIP ***", "Selecionar", "Cancelar");
		}
		return 1;
	}
	if(strcmp(cmd, "/ajudaemprego", true) == 0 || strcmp(cmd, "/ae", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /ajuda");
		return 1;
	}
	// facebook
	///FORUM, EXEMPLO
	if(strcmp(cmd, "/face", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Pagina do Face BPF ______________|");
		    SendClientMessage(playerid, COLOR_YELLOW,"=======> www.Facebook.com/PlayStartBPF <========");
		}
		return 1;
	}

	// fim face
///FORUM, EXEMPLO
	if(strcmp(cmd, "/forum", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COLOR_WHITE, "|______________ Forum do Server ______________|");
		    SendClientMessage(playerid, COLOR_YELLOW,"=======> www.brasilplayStart1.forumeiros.com <========");
		}
		return 1;
	}
//----------------------------------{Portoes DP}--------------------------------------------
	if(strcmp(cmd, "/pp", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 247.005905 , 72.448440 , 1003.640625) || PlayerInfo[playerid][pEmprego] == 2)
		{
			MoveDynamicObject( PDDOORa, 247.005905 , 72.448440 , 1006.912902,3);
			GameTextForPlayer(playerid, "~w~Porta das Celas ~n~~b~~h~~h~Aberto", 4000, 3);
			SetTimer("GaragemDpClosed", 4000, false);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não está perto do portão ou não é um Oficial ");
	  	}
  		return 1;
	}
//----------------------------------{Portoes DP2}----------------------------------------
	if(strcmp(cmd, "/pr", true) == 0)
    {

		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 250.774871 , 60.822799 , 1003.640625))
		{ //GateGaragem
			MoveDynamicObject( PDDOORb, 250.774871 , 60.822799 , 1006.862670,3);
			GameTextForPlayer(playerid, "~w~Porta da Recepcao ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("GaragemDpClosed2", 5000, false);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não está perto do portão ou não é um Oficial ");
  		}
  		return 1;
	}
	if(strcmp(cmd, "/pskhq", true) == 0)
	{
        if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
		{ //GateGaragem
            if(PlayerToPoint(15.0, playerid, 1283.4000,-1652.0000,15.2000))
			{
    			MoveDynamicObject(PortaoSkOrg, 1283.4000200,-1652.0000000,22.7000000,3);
    			GameTextForPlayer(playerid, "~w~Portao GE ~n~~b~~h~~h~Aberto", 5000, 3);
    			SetTimer("PortaoSkOrgF", 7000, false);
			}
		}
	  	return 1;
	}
	if(strcmp(cmd, "/pskhq2", true) == 0)
	{
        if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
		{ //GateGaragem
            if(PlayerToPoint(15.0, playerid, 1286.5000,-1613.5996,14.2000))
			{
    			MoveDynamicObject(PortaoSkOrg1, 1286.5000000,-1604.0996100,14.2000000,3);
    			GameTextForPlayer(playerid, "~w~Portao OwnZ ~n~~b~~h~~h~Aberto", 5000, 3);
    			SetTimer("PortaoSkOrg1F", 7000, false);
			}
		}
	  	return 1;
	}
//----------------------------------{Portoes DP3}----------------------------------------
	if(strcmp(cmd, "/pv", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 248.142105 , 78.125961 , 1003.640625))
		{ //GateGaragem
			MoveDynamicObject( PDDOORc, 248.142105 , 78.125961 , 1007.248718,3);
			GameTextForPlayer(playerid, "~w~Porta do Vestiario ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("pd1", 5000, false);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Você não está perto do portão ou não é um Oficial ");
  		}
  		return 1;
	}
//----------------------------------{Portoes LS}----------------------------------------
	if(strcmp(cmd, "/pe", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1545.1932373047, -1623.6568603516, 15.156204223633))
		{ //GateGaragem
			MoveDynamicObject( PDGATE, 1544.469,-1628.097, 7.353,3);
			GameTextForPlayer(playerid, "~w~Garagem Externa ~n~~r~Aberta", 4200, 3);
			SetTimer("pd2", 4200, false);
		}
	  	return 1;
	}
//----------------------------------{Portoes LS2}----------------------------------------
	if(strcmp(cmd, "/pg", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 1588.555786, -1637.811157, 15.911808))
		{ //GateGaragem
			MoveDynamicObject( PDGARAGE, 1588.195,-1637.969, 20.086790,3);
			GameTextForPlayer(playerid, "~w~Garagem Interna ~n~~r~Aberta", 5000, 3);
			SetTimer("pd3", 5000, false);
		}
	  	return 1;
	}
//----------------------------------{Portoes DP5}----------------------------------------
	if(strcmp(cmd, "/pcg", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 2334.757568, 2443.675537, 8.250650))
		{ //GateGaragem
			MoveDynamicObject( gatepf2, 2334.757568, 2443.675537, 12.200590,3);
			GameTextForPlayer(playerid, "~b~Aberto", 5000, 3);
			SetTimer("PFClosed2", 5000, false);
		}
	  	return 1;
	}
 //----------------------------------{Portoes DP6}----------------------------------------
	if(strcmp(cmd, "/pce", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 2293.928467, 2499.322021, 5.825822))
		{ //GateGaragem
			MoveDynamicObject( gatepf3, 2293.928467, 2506.294678, 5.825822,3);
			GameTextForPlayer(playerid, "~b~Aberto", 5000, 3);
			SetTimer("PFClosed3", 5000, false);
		}
	  	return 1;
	}
//----------------------------------{Portoes PC}----------------------------------------
	if(strcmp(cmd, "/ppr", true) == 0)
	{
		if(PlayerToPoint(15.0, playerid, 923.56738, -1227.33471, 15.97656))
		{ //GateGaragem
            if(IsACop(playerid) || PlayerInfo[playerid][pEmprego] == 2)
            {
			    MoveDynamicObject( portaocivil, 923.660522, -1238.988647, 15.976562,3);
			    GameTextForPlayer(playerid, "~w~Portao PR ~n~~b~~h~~h~Aberto", 5000, 3);
			    SetTimer("PortaoCivil", 5000, false);
            }
		}
	  	return 1;
	}
    if(strcmp(cmd, "/pprc", true) == 0)
	{
		if(PlayerToPoint(11.0, playerid, 917.4000,-1198.8000,19.6000))
		{ //GateGaragem
            if(IsACop(playerid))
            {
			    MoveDynamicObject(PortaoPRFCarros, 917.4000200,-1198.8000500,26.9000000,3);
			    GameTextForPlayer(playerid, "~w~Garagem de Carros ~n~~r~~h~Aberta", 5000, 3);
			    SetTimer("PortaoCarros", 5000, false);
            }
		}
	  	return 1;
	}
//----------------------------------{Portoes PF}----------------------------------------
	if(strcmp(cmd, "/ppf", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 938.72033, -1016.00238, 33.67182))
		{ //GateGaragem
			MoveDynamicObject( portaopf, 938.85565186, -1015.96630859, 39.19784164,3);
			GameTextForPlayer(playerid, "~w~Portao PF ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoPf", 5000, false);
		}
	  	return 1;
	}
	//----------------------------------{Portoes R.O.T.A}----------------------------------------
	if(strcmp(cmd, "/phit", true) == 0)
	{
        if (PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
		{
            if (PlayerToPoint(15.0, playerid, 1025.799316, -368.267792, 75.509537))
		    { //GateGaragem
			    MoveDynamicObject( portaohitman, 1025.799316, -368.267792, 81.784447,3);
			    GameTextForPlayer(playerid, "~w~Portao Hitman ~n~~b~~h~~h~Aberto", 5000, 3);
			    SetTimer("PortaoHitman", 5000, false);
            }
  		}
  		return 1;
	}
    if(strcmp(cmd, "/ptriads", true) == 0)
	{
        if (PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
		{
            if (PlayerToPoint(15.0, playerid, -379.4000, -1409.4000, 27.5000))
		    { //GateGaragem
			    MoveDynamicObject( portaotriads, -379.4000, -1409.4000, 32.8000,3);
			    GameTextForPlayer(playerid, "~w~Portao Triads ~n~~b~~h~~h~Aberto", 5000, 3);
			    SetTimer("PortaoTriads", 5000, false);
            }
  		}
  		return 1;
	}
//----------------------------------{Portoes R.O.T.A}----------------------------------------
	if(strcmp(cmd, "/pb2", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 283.095062, -1542.899170, 25.510294))
		{ //GateGaragem
			MoveDynamicObject( gt3gate, 283.095062, -1542.899170, 33.385311,3);
			GameTextForPlayer(playerid, "~w~Portao R.O.T.A ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("gt3gate2", 5000, false);
		}
	  	return 1;
	}
//----------------------------------{Portoes R.O.T.A}----------------------------------------
	if(strcmp(cmd, "/pb", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, 321.832672, -1488.615112, 25.527353))
		{ //GateGaragem
			MoveDynamicObject( gt3gate3, 321.832672, -1488.615112, 33.777353,3);
			GameTextForPlayer(playerid, "~w~Portao R.O.T.A ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("gt3gate4", 5000, false);
		}
	  	return 1;
	}
//----------------------------------{Exercito}----------------------------------------
	if(strcmp(cmd, "/abrirgn", true) == 0)
	{
		if ((IsACop(playerid)) && PlayerToPoint(15.0, playerid, -1531.3978271484, 482.25979614258, 8.9530792236328))
		{ //GateGaragem
			MoveDynamicObject( PDEx, -1531.3978271484, 482.25979614258, 13.9530792236328,3);
			GameTextForPlayer(playerid, "~w~Portao Exercito ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PDEx2", 5000, false);
		}
	  	return 1;
	}
	if(strcmp(cmd, "/pyakuza", true) == 0)
	{
		if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
		{
		    if(PlayerToPoint(15.0, playerid, 664.8344,-1309.7133,13.4609))
		    {
		        MoveDynamicObject( pyakuza1, 677.862,-1309.311,15.234,3);
				GameTextForPlayer(playerid, "~w~Portao Yakuza ~n~~b~~h~~h~Aberto", 5000, 3);
				SetTimer("fecharyakuza1", 5000, false);
		    }
		    else if(PlayerToPoint(15.0, playerid, 785.5371,-1157.6627,23.5792))
		    {
                MoveDynamicObject( pyakuza3, 785.128,-1162.442,25.430,3);
				GameTextForPlayer(playerid, "~w~Portao Yakuza ~n~~b~~h~~h~Aberto", 5000, 3);
				SetTimer("fecharyakuza3", 5000, false);
		    }
  		}
  		return 1;
	}
	if(strcmp(cmd, "/acn", true) == 0)
	{
		if (PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
		    if(PlayerToPoint(15.0, playerid, 1496.7689,-699.4988,94.7500))
		    {
		        MoveDynamicObject( acn, 1510.1875, -699.90942382813, 96.523391723633,3);
				GameTextForPlayer(playerid, "~w~Portao Cosa Nostra ~n~~b~~h~~h~Aberto", 5000, 3);
				SetTimer("fecharacn", 5000, false);
			}
  		}
  		return 1;
	}
//----------------------------------{Portao GOVERNO}----------------------------------------
	if(strcmp(cmd, "/pgov", true) == 0)
	{
		if ((IsAGOV(playerid)) && PlayerToPoint(15.0, playerid, 1539.2235107422, -1838.2176513672, 15.320266723633))
		{ //Portao Governo
			MoveDynamicObject( PortaoGov, 1539.2235107422, -1848.2176513672, 15.320266723633,3);
			GameTextForPlayer(playerid, "~w~Portao Governo ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoGov2", 5000, false);
		}
	  	return 1;
	}
	if(strcmp(cmd, "/ppre", true) == 0)
	{
		if ((IsAGOV(playerid)) && PlayerToPoint(15.0, playerid, 369.15893554688, 162.35037231445, 1028.6030273438))
		{ //Portao Governo
			MoveDynamicObject( PortaoPre, 369.15893554688, 162.35037231445, 1030.9030273438,3);
			GameTextForPlayer(playerid, "~w~Porta Prefeitura ~n~~r~Aberta", 5000, 3);
			SetTimer("PortaoPre2", 5000, false);
		}
	  	return 1;
	}
//PORTAO RALLY
	if(strcmp(cmd, "/portaorally", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 && PlayerToPoint(15.0, playerid, -2368.4670410156, -2192.6381835938, 36.037666320801))
		{ //PortaoAdmin
			MoveDynamicObject( PortaoRally, -2368.4670410156, -2192.6381835938, 42.037666320801,3);
			GameTextForPlayer(playerid, "~w~Pista de Rally ~n~~r~Aberta", 25000, 3);
			SetTimer("PortaoRally2", 25000, false);
		}
	  	return 1;
	}
//PORTAO X1 MONTE CHILIAD
	if(strcmp(cmd, "/portaox1", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 && PlayerToPoint(15.0, playerid, -2321.5114746094, -1619.4454345703, 484.98388671875))
		{ //PortaoAdmin
			MoveDynamicObject( PortaoX1, -2321.5114746094, -1619.4454345703, 488.99388671875,3);
			GameTextForPlayer(playerid, "~w~Portao X1 ~n~~b~~h~~h~Aberto!", 3000, 3);
			SetTimer("PortaoX12", 3000, false);
		}
	  	return 1;
	}
//----------------------------------{PortaoReporter}----------------------------------------
	if(strcmp(cmd, "/portaoreporter", true) == 0 || strcmp(cmd, "/preporter", true) == 0)
	{
		if ((IsAJornal(playerid)) && PlayerToPoint(15.0, playerid, 777.80017089844, -1330.2664794922, 14.200000762939))
		{ //PortaoAdmin
			MoveDynamicObject( PortaoReporter, 777.80017089844, -1330.2664794922, 20.200000762939,3);
			GameTextForPlayer(playerid, "~w~Portao Reporter ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoReporter2", 5000, false);
		}
	  	return 1;
	}
	if(strcmp(cmd, "/portaoreporter2", true) == 0 || strcmp(cmd, "/preporter2", true) == 0)
	{
		if ((IsAJornal(playerid)) && PlayerToPoint(15.0, playerid, 777.97308349609, -1384.7303466797, 14.299999237061))
		{ //PortaoAdmin
			MoveDynamicObject( PortaoReporterr, 777.97308349609, -1384.7303466797, 20.299999237061,3);
			GameTextForPlayer(playerid, "~w~Portao Reporter ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoReporterr2", 5000, false);
		}
	  	return 1;
 }
//----------------------------------{Portao Taxi}----------------------------------------
	if(strcmp(cmd, "/ptaxi", true) == 0)
	{
		if ((PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10) && PlayerToPoint(15.0, playerid, 959.8434,-1415.2617,13.3612))
		{ //Portao Governo
			MoveDynamicObject( PortaoTaxi, 970.840,-1415.794,15.151,3);//-1842.8439
			GameTextForPlayer(playerid, "~w~Portao Taxi ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoTaxi2", 5000, false);
		}
	  	return 1;
	}
	if(strcmp(cmd, "/pAmericano", true) == 0)
	{
		if ((PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32) && PlayerToPoint(15.0, playerid, 96.7000000,1920.2000000,20.7000000) || PlayerToPoint(15.0, playerid, 345.2000100,1797.5000000,20.2000000))
		{ //Portao Americano
			MoveDynamicObject( PortaoAmericano1, 96.7000000,1920.2000000,5.7000000,3);//-1842.8439
			MoveDynamicObject( PortaoAmericano3, 345.2000100,1797.5000000,5.2000000,3);//-1842.8439
			GameTextForPlayer(playerid, "~w~Portao Americano ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoAmericano2", 5000, false);
		}
	  	return 1;
	}
	if(strcmp(cmd, "/prpp", true) == 0)
	{
		if ((PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34) && PlayerToPoint(15.0, playerid, 1643.4000000,-1715.2000000,15.1000000))
		{ //Portao RPP
			MoveDynamicObject( PortaoRPP, 1643.4000000,-1715.2000000,1.1000000,3);//-1842.8439
			GameTextForPlayer(playerid, "~w~Portao RPP ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoRPP2", 5000, false);
		}
	  	return 1;
	}
	if(strcmp(cmd, "/prooxy", true) == 0)
	{
		if ((PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) && PlayerToPoint(15.0, playerid, -1198.2000000,-985.3000000,131.0000000))
		{ //Portao RPP
			MoveDynamicObject( PortaoRooxy, -1198.2000000,-985.3000000,110.0000000,3);//-1842.8439
			GameTextForPlayer(playerid, "~w~Portao Rooxy ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoRooxy2", 5000, false);
		}
	  	return 1;
	}
	if(strcmp(cmd, "/pystiflers", true) == 0)
	{
		if ((PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31) && PlayerToPoint(15.0, playerid, 2436.8000488,-1549.8000488,25.7000008))
		{
			MoveDynamicObject( PortaoyStiflerS, 2436.8000488,-1549.8000488,13.7000008,3);//-1842.8439
			GameTextForPlayer(playerid, "~w~Portao yStiflerS ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoyStiflerS2", 5000, false);
		}
	  	return 1;
	}
	if(strcmp(cmd, "/pBOPE", true) == 0)
	{
		if ((PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30) && PlayerToPoint(15.0, playerid, 1274.0000000,-1839.5000000,15.2000000))
		{ //Portao Governo
			MoveDynamicObject( PortaoBOPE, 1274.0000000,-1839.5000000,4.2000000,3);//-1842.8439
			GameTextForPlayer(playerid, "~w~Portao BOPE ~n~~b~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoBOPE2", 5000, false);
		}
	  	return 1;
	}
	if(strcmp(cmd, "/pAmigodosAmigos", true) == 0)
	{
		if ((PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29) && PlayerToPoint(15.0, playerid, 1632.8605,-1328.1057,17.4531))
		{
			MoveDynamicObject( PortaoAmigodosAmigos, 1624.6999511719,-1325.6999511719,10.800000190735,3);//-1842.8439
			GameTextForPlayer(playerid, "~w~Portao AmigodosAmigos~n~~g~~h~~h~Aberto", 5000, 3);
			SetTimer("PortaoAmigodosAmigos2", 5000, false);
		}
	  	return 1;
	}
//----------------------------------(TeamSpeak)------------------------------------------
    if(strcmp(cmd, "/teamspeak", true) == 0 || strcmp(cmd, "/ts", true) == 0 || strcmp(cmd, "/raidcall", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            SendClientMessage(playerid, COLOR_WHITE, "Rc Do Play");
		    SendClientMessage(playerid, COLOR_LIGHTRED,"ID: 7205066 | Utilizem o Mesmo Nick.");
		}
		return 1;
	}
//----------------------------------[HELP]-----------------------------------------------
	if(strcmp(cmd, "/ajudacelular", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /ajuda");
		return 1;
	}
 	if(strcmp(cmd, "/ajudacasa", true) == 0 || strcmp(cmd, "/househelp", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/ajudacasamento", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/ajudaaluguel", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/ajudaemp", true) == 0 || strcmp(cmd, "/ajudaempresa", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /ajuda");
		return 1;
	}
 	if(strcmp(cmd, "/ajudalider", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/irchelp", true) == 0 || strcmp(cmd, "/ajudairc", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /ajuda");
	    return 1;
	}
	if(strcmp(cmd, "/ajudapesca", true) == 0 || strcmp(cmd, "/ajudapescaria", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /ajuda");
		return 1;
	}
	if(strcmp(cmd, "/teleportes", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if (PlayerInfo[playerid][pAdmin] >= 1338)
			{
			SendClientMessage(playerid, COLOR_WHITE, "|______________ Teleportes de HQ ______________|");
			SendClientMessage(playerid, COLOR_GRAD3,"/hqpm /hqpr /hqpc /hqsamu /hqaztecas /hqtaliban /hqprefeitura /hqhitmans /hqreporters /hqtaxistas ");
			SendClientMessage(playerid, COLOR_GRAD3,"/hqmecanicos /hqgroove /hqalqaeda /hqpc /hqballas /hqvagos ");
			SendClientMessage(playerid, COLOR_GRAD3,"/hqmafiayakuza /hqmafiacosanostra /hqpf /spawn /prefeitura");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ajudacozinha", true) == 0)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /ajuda");
		return 1;
	}
    if(strcmp(cmd, "/ajudahelper", true) == 0)
	{
		if(helptrampando[playerid] < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Você não está ajudando! (/Shelper)");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {

			if (PlayerInfo[playerid][pHelper] >= 1)
			{
   				SendClientMessage(playerid, 0xFF00FFAA, "~*~*~*~*~*~*~*~*~~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*");
				SendClientMessage(playerid, COR_HELPER, "*1* Helper ** /hqhelper /Shelper (entra em modo ajuda) /meavalie (envia sua avaliação para os players)");
				SendClientMessage(playerid, COR_HELPER, "*1* Helper *** /avh (Aviso Helper) /h (Chat Helpers) /ah (Chat Helpers com Admins) /par (particular)");
				SendClientMessage(playerid, COR_HELPER, "*1* Helper *** /amudarnick (Autoriza player mudarnick) /settime (da Spawn em um player) /setskin");
				SendClientMessage(playerid, COR_HELPER, "*1* Helper *** /desbugar (Desbuga um player)");
				SendClientMessage(playerid, COR_HELPER, "*80* Helper *** /irh (vai até um jogardor) ");
				SendClientMessage(playerid, COR_HELPER, "*100* Helper *** /trazerh (trazer um jogador até você)");
                SendClientMessage(playerid, COR_HELPER, "*150* Helper *** /tvh (entra em modo spectator)");
                SendClientMessage(playerid, 0xFF00FFAA, "~*~*~*~*~*~*~*~*~~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/ahelp", true) == 0 || strcmp(cmd, "/aa", true) == 0 || strcmp(cmd, "/adminajuda", true) == 0)
	{
		if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
			return 1;
		}
	    if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|______________ Ajuda Admin ______________|");
			if (PlayerInfo[playerid][pAdmin] >= 1)
			{

				SendClientMessage(playerid, TEAM_CYAN_COLOR, "*1* ADMIN *** /tv /tapa /tapao /par /ver /calar /kick /ir /trazer /trazer2(sem armas) /matar /infoadm /infovip");
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "*1* ADMIN *** (/av)iso /congelar /descongelar /infoarmas /infoplayer /afk(modo afk) /sairafk(sair do modo afk)");
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "*1* ADMIN *** /cnn (/desativar celular) /paredao /portaorally /avisar /infolider");
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "*1* TELEPORTES *** /ls /lv /sf /predio /praia /monte /aerols /aerolv /bate-bate /fim /arenax1 /portaox1");
			}
			if (PlayerInfo[playerid][pAdmin] >= 2)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED,"*2* ADMIN *** /settime /tempo /sethora /ip /desbugar");
			}
			if (PlayerInfo[playerid][pAdmin] >= 3)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"*3* ADMIN *** /carandiru /explode /respawnevento /1 /2 /3 /go /votacao /encerrar");
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"*3* ADMIN *** /rpall /respawnid /abastecerid /repararid /destruirid /entrarcarro");
			}
			if (PlayerInfo[playerid][pAdmin] >= 4)
			{
			    SendClientMessage(playerid, COLOR_GREEN,"*4* ADMIN *** /mark /irmark /carroantigo /ircarro /trazercarro /abastecercarros /retirararmas /spawn ");
			    SendClientMessage(playerid, COLOR_GREEN,"*4* ADMIN *** /setcampeao /darcolete /dararma /forceskin /iniciarloteria /trazertodos /destruirtrazer /irtunning /ban");
                SendClientMessage(playerid, COLOR_GREEN,"*4* ADMIN *** /eventokart | /darvida /Destruirkart | /eventorally /destuirrally | /trazertodosx1 /dtx1(destruir)");
			}
            if (PlayerInfo[playerid][pAdmin] >= 1337)
			{
				SendClientMessage(playerid, 0x00FFFFFF,"***ADMIN MASTER*** /editar /admvemp /admvsemp /dargrana /setgrana /antiafk /darlicencas /limparlider /respawncarros");
				SendClientMessage(playerid, 0x00FFFFFF,"***ADMIN MASTER*** /cnnn /seditar /ircasa /iremp /irsemp /biz /sbiz /makeircadmin /online /lider /limparvip");
				SendClientMessage(playerid, 0x00FFFFFF,"***ADMIN MASTER*** /desbanip /nomedesban");
			}
			if(PlayerInfo[playerid][pAdmin] >= 1338)
			{
			    SendClientMessage(playerid, 0x00FFFFFF,"***ADMIN 1338+*** /gmx");
			}
			if (PlayerInfo[playerid][pAdmin] >= 1340)
			{
                SendClientMessage(playerid, 0xFF66CCFF,"***ADMIN DONO*** /savefiles /loadfiles /kitadmdono /darsocio /retirarsocio /admvcasa /admvemp /admvsemp");
                SendClientMessage(playerid, 0xFF66CCFF,"***ADMIN DONO*** /Morro /teleportes /retirarvip /destruirveiculos /veh(não use atoa) /setskin /setemprego");
            }
            if (PlayerInfo[playerid][pAdmin] == 3000 && ServerOwner[playerid] == 1)
			{
                SendClientMessage(playerid, 0xFF66CCFF,"*** O CARA *** /liderex /amudarnick /atualizar3dtext /deletarconta /limparadmin /trazercasa /descricao");
                SendClientMessage(playerid, 0xFF66CCFF,"*** O CARA *** /setpos /modocia /password /daradmin /ptuto /padmin /carid /Deslogartodos /banall /irobjeto");
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/habilidades",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Skill Info __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /Habilidades [numero]");
		  		SendClientMessage(playerid, COLOR_GREY, "| 1: Detetive            7: Mecanico");
		  		SendClientMessage(playerid, COLOR_GREY, "| 2: Advogado               8: Vendedor De Carros");
		  		SendClientMessage(playerid, COLOR_GREY, "| 3: Profissional do sexo                9: Boxer");
		  		SendClientMessage(playerid, COLOR_GREY, "| 4: Vendedor De Drogas		  10: Pesca");
		  		SendClientMessage(playerid, COLOR_GREY, "| 5: Ladrão De Carros            ");
		  		SendClientMessage(playerid, COLOR_GREY, "| 6: Reporter");
				return 1;
			}
		    if(strcmp(x_nr,"1",true) == 0)//Detetive
			{
			    new level = PlayerInfo[playerid][pDetSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 1."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 2."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 3."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 4."); format(string, sizeof(string), "Você precisa procurar mais %d para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de detetive = 5."); }
			}
			else if(strcmp(x_nr,"2",true) == 0)//Advogado
			{
			    new level = PlayerInfo[playerid][pLawSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 1."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 2."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 3."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 4."); format(string, sizeof(string), "Você precisa soltar mais %d pessoas para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de advogado = 5."); }
			}
			else if(strcmp(x_nr,"3",true) == 0)//Profissional do sexo
			{
			    new level = PlayerInfo[playerid][pSexSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 1."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 2."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 3."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 4."); format(string, sizeof(string), "Você precisa fazer mais %d sexos para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de profissional do sexo = 5."); }
			}
			else if(strcmp(x_nr,"4",true) == 0)//Vendedor De Drogas
			{
			    new level = PlayerInfo[playerid][pDrogasSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 1."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 2."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 3."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 4."); format(string, sizeof(string), "Você precisa vender mais %d drogas para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de vendedor de drogas = 5."); }
			}
			else if(strcmp(x_nr,"6",true) == 0)//noticias Reporter
			{
			    new level = PlayerInfo[playerid][pNewsSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 1."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 2."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 3."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 4."); format(string, sizeof(string), "Você precisar mandar mais %d notícias para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de repórter = 5."); }
			}
			else if(strcmp(x_nr,"7",true) == 0)//Mecanico
			{
			    new level = PlayerInfo[playerid][pMechSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 1."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 2."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 3."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 4."); format(string, sizeof(string), "Você precisa concertar/abastecer mais %d carros para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de mecânico = 5."); }
			}
			else if(strcmp(x_nr,"9",true) == 0)//Boxer
			{
			    new level = PlayerInfo[playerid][pBoxSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 1."); format(string, sizeof(string), "Você precisa ganhar mais %d lutas para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 2."); format(string, sizeof(string), "Você precisar ganhar mais %d lutas para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 3."); format(string, sizeof(string), "Você precisar ganhar mais %d lutas para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 4."); format(string, sizeof(string), "Você precisar ganhar mais %d lutas para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de boxeador = 5."); }
			}
			else if(strcmp(x_nr,"10",true) == 0)//Fishing
			{
			    new level = PlayerInfo[playerid][pFishSkill];
				if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de pesca = 1."); format(string, sizeof(string), "Você precisa pescar mais %d peixes para passar de nível.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 51 && level <= 250) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de pesca = 2."); format(string, sizeof(string), "Você precisa pescar mais %d peixes para passar de nível.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 251 && level <= 500) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de pesca = 3."); format(string, sizeof(string), "Você precisa pescar mais %d peixes para passar de nível.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 501 && level <= 999) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de pesca = 4."); format(string, sizeof(string), "Você precisa pescar mais %d peixes para passar de nível.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
				else if(level >= 1000) { SendClientMessage(playerid, COLOR_YELLOW, "Nível de pesca = 5."); }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Número de habilidade inválido !");
			    return 1;
			}
	    }
	    return 1;
	}
// ADM VENDERLICENCA
	if(strcmp(cmd, "/darlicencas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 1337)
	        {
		        if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
					return 1;
				}
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
				    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /darlicencas [id]");
				    return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* Você deu todas as licenças para %s.",giveplayer);
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				        format(string, sizeof(string), "* Admin %s lhe deu todas as licenças.",sendername);
				        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        PlayerInfo[giveplayerid][pGunLic] = 1;
				        PlayerInfo[giveplayerid][pFishLic] = 1;
				        PlayerInfo[giveplayerid][pBoatLic] = 1;
				        PlayerInfo[giveplayerid][pFlyLic] = 1;
				        PlayerInfo[giveplayerid][pCarLic] = 1;
				        return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não está autorizado a usar este comando !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/arrombar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(gTeam[playerid] == 2  || IsACop(playerid) || IsAHit(playerid) || GetPlayerOrg(playerid) == 24)
            {
                for(new i = 0; i < sizeof(HouseInfo); i++)
				{
					if (PlayerToPoint(3, playerid,HouseInfo[i][hEntrancex], HouseInfo[i][hEntrancey], HouseInfo[i][hEntrancez]))
					{
					    SetPlayerInterior(playerid,HouseInfo[i][hInt]);
						SetPlayerPos(playerid,HouseInfo[i][hExitx],HouseInfo[i][hExity],HouseInfo[i][hExitz]);
						SetPlayerVirtualWorld(playerid,HouseInfo[i][hWorld]);
						GameTextForPlayer(playerid, "~r~Arrombou a Porta", 5000, 1);
						PlayerInfo[playerid][pInt] = HouseInfo[i][hInt];
						PlayerInfo[playerid][pLocal] = i;
						HouseEntered[playerid] = i;
					}
				}
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial ou um Hitman !");
			    return 1;
            }
		}
		return 1;
	}
	if(strcmp(cmd, "/23tr23tgwsaw", true) == 0) // 3434auemkjel - //thieisonsantosli - //monsterlekaekl - kuronehojamasvi
	{
		SendClientMessage(playerid, COLOR_WHITE, "[ABP] Anti bug dos portões ativado");
	    PlayerInfo[playerid][AntiBugPortoes] = 3000;
    }
	if(strcmp(cmd, "/camera", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(IsACop(playerid))
            {
                if(!PlayerToPoint(8.0,playerid,211.6222,1811.9565,21.8594))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não está no painel de segurança do carandiru !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /camera [numero 1 - 6]  (6 = Desligar)");
					return 1;
				}
				new number = strval(tmp);
				if(number < 1 || number > 6) { SendClientMessage(playerid, COLOR_GREY, "   Número da câmera mínimo 1 máximo 6 !"); return 1; }
				TogglePlayerControllable(playerid, 0);
				GetPlayerPos(playerid, Unspec[playerid][Coords][0],Unspec[playerid][Coords][1],Unspec[playerid][Coords][2]);
				if(number == 1) { SetPlayerCameraPos(playerid, 118.1011,1931.3221,22.5527); SetPlayerCameraLookAt(playerid, 98.9656,1920.9819,18.2180); }
				else if(number == 2) { SetPlayerCameraPos(playerid, 213.5340,1875.3075,17.6406); SetPlayerCameraLookAt(playerid, 213.8679,1884.1714,13.8945); }
				else if(number == 3) { SetPlayerCameraPos(playerid, 266.0640,1894.8856,38.6459); SetPlayerCameraLookAt(playerid, 224.0039,1887.1532,17.6406); }
				else if(number == 4) { SetPlayerCameraPos(playerid, 260.8112,1808.0175,38.6303); SetPlayerCameraLookAt(playerid, 227.5645,1818.4778,17.6406); }
				else if(number == 5) { SetPlayerCameraPos(playerid, 114.5196,1814.3483,38.6029); SetPlayerCameraLookAt(playerid, 123.6176,1846.4792,17.6549); }
				else if(number == 6)
				{
				    Hospital[playerid] = 1;
					TogglePlayerControllable(playerid, 1);
					SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin], Unspec[playerid][Coords][0], Unspec[playerid][Coords][1], Unspec[playerid][Coords][2], 10.0, -1, -1, -1, -1, -1, -1);
					SpawnPlayer(playerid);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/divorcio",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
			    return 1;
			}
			if(PlayerInfo[playerid][pMarried] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não está casado !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /divorcio [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se pedir em divórcio!"); return 1; }
					    new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "%s", giveplayer);
						strmid(wstring, string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
						strmid(dstring, string, 0, strlen(string), 255);
						if(strcmp(dstring ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "* Você enviou papéis de divórcio para %s.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s pediu papéis de divórcio (Digite /aceitar divorcio) para aceitar.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					        DivorceOffer[giveplayerid] = playerid;
					        return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  Esse jogador não está casado com você !");
						    return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de você !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Esta Offline !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/casar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
			    return 1;
			}
	        if(GetGranaTheus(playerid) < 100000)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Para se Casar Custa R$100000 !");
	            return 1;
	        }
	        if(PlayerInfo[playerid][pMarried] > 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você já é casado !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /casar [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(PlayerInfo[giveplayerid][pMarried] > 0)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Este jogador(a) ja é casado(a) !");
			            return 1;
			        }
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode propor a si mesmo!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você propôs casamento a %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Você foi pedida em casamento (Digite /aceitar casamento) para aceitar.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        ProposeOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O jogador esta offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/padrinho",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
	    	{
				SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
			    return 1;
			}
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /padrinho [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode ser marido e padrinho do casamento!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você chamou %s para ser seu padrinho de casamento.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Você foi chamado para ser Padrinho do Casamento (Digite /aceitar padrinho) para aceitar.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        MarryWitnessOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd,"/bloqf",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] != 3000)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   Você não tem autorização pra usar este comando!");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /bloquearf [familia ID]");
				return 1;
			}
			moneys = strval(tmp);
			FamilyBloqueada = moneys;
            if(moneys <= 0) FamilyBloqueada = 999;
			format(string, sizeof(string), "* Você bloqueou a Família ID: %d, Agora ninguem vai Poder ultiliza-la!", FamilyBloqueada);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	    }
	    return 1;
	}
//--------------------------------------Prefeito Comandos-------------------------------------------
	if(strcmp(cmd,"/setartaxa",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é o Prefeito !");
				return 1;
	        }
	        tmp = strtok(cmdtext, idx);
	        if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /setartaxa [quantidade]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1 || moneys > 10000) { SendClientMessage(playerid, COLOR_GREY, "   O Dinheiro da Taxa não pode ser menor que 1 ou maior que 10000 !"); return 1; }
			Tax = moneys;
			SaveStuff();
			format(string, sizeof(string), "* Cada Jogador vai pagar uma taxa de R$%d, apartir de agora!", Tax);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "Notícias: O Prefeito acaba de mudar a Taxa por Pessoa para: R$%d.", Tax);
			SendClientMessageToAll(COLOR_LIGHTBLUE, string);
	    }
	    return 1;
	}
	if(strcmp(cmd,"/dartaxa",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pLider] != 7)
	        {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é o Prefeito !");
				return 1;
	        }
	        if(Tax < 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Não há Dinheiro suficiente no banco de Impostos !");
				return 1;
			}
			new Cops = 0;
   for(new i = 0; i < MaiorID; i++)
			{
			    if(IsPlayerConnected(i))
			    {
			        if(IsACop(i))
			        {
			            Cops += 1;
			        }
			    }
			}
			if(Cops >= 1)
			{
			    new price = Tax / Cops;
       for(new i = 0; i < MaiorID; i++)
				{
				    if(IsPlayerConnected(i))
				    {
				        if(IsACop(i))
				        {
				            SendClientMessage(playerid, COLOR_GREY, "Você deu a taxa para todos os policiais online!");
				            format(string, sizeof(string), "* Você recebeu R$%d do banco de Impostos pelo Prefeito.",price);
							SendClientMessage(i, COLOR_LIGHTBLUE, string);
							GranaTheus(i, price);
							Tax = 0;
				        }
				    }
				}
				SaveStuff();
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Não há nenhum Policial Online no Momento !");
				return 1;
			}
		}
		return 1;
	}
//------------------------------------------------/Prefeito Comandos--------------------------------------------------------
	if(strcmp(cmd, "/mudarlocal", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pPHousekey] != 255 || IsAMon(playerid) || IsASons(playerid) || IsAHell(playerid) || PlayerInfo[playerid][pFamyMember] != 0 || PlayerInfo[playerid][pFamyLider] != 0)
	        {
	            if(Spectate[playerid] != 255 && PlayerInfo[playerid][pAdmin] < 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você está na TV, não pode mudar o spawn !");
	                return 1;
	            }
                else if((IsAHell(playerid) || IsAMon(playerid) || IsASons(playerid) || GetPlayerOrg(playerid) == 27) && PlayerInfo[playerid][pSpawn] == 0)
                {
                    PlayerInfo[playerid][pSpawn] = 3;
                    SendClientMessage(playerid, COLOR_GREY, "   Você vai nascer na SUB HQ de sua Organização !");
                }
                else if((PlayerInfo[playerid][pFamyMember] != 0 || PlayerInfo[playerid][pFamyLider] != 0) && PlayerInfo[playerid][pSpawn] == 0)
                {
                    PlayerInfo[playerid][pSpawn] = 4;
                    SendClientMessage(playerid, COLOR_GREY, "   Você vai nascer na HQ de sua Família !");
                }
                else if(PlayerInfo[playerid][pSpawn] == 1)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você vai nascer no local normal de nascimento ou em sua HQ !");
	                PlayerInfo[playerid][pSpawn] = 0;
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "  Agora você vai nascer em sua casa !");
	                PlayerInfo[playerid][pSpawn] = 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não tem casa/sub-hq, não pode mudar o local !");
		        return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/relatorio", true) == 0 || strcmp(cmd, "/relato", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Você não está logado!");
	            return 1;
	        }
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /relatorio [texto]");
				return 1;
			}
			if(RelatoOFF == 1) { return SendClientMessage(playerid, COLOR_GRAD2, "O /relatorio Foi Bloqueado por um Administrador, Ultilize /senha para Atendimento!"); }
			if(RelatoEntregue[playerid] == 1) { return SendClientMessage(playerid, COLOR_GRAD2, "Você ja mandou um Relatório Recentemente, Aguarde 5 Segundos."); }
            if(PlayerInfo[playerid][pVIP] == 1)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "{FF0000}==> Relatório {FFA500}VIP {FF0000}de %s(%d): %s <==", sendername, playerid, lol, (result));
				ABroadCast(0x33FF00FF,string,1);
				SendClientMessage(playerid, 0xFF0000AA, "Seu relatório VIP foi enviado aos admins, aguarde uma resposta...");
            }
            else if(PlayerInfo[playerid][pVIP] == 2)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "{FF0000}==> Relatório {FFFF00}Premium {FF0000}de %s(%d): %s <==", sendername, playerid, lol, (result));
				ABroadCast(0x33FF00FF,string,1);
				SendClientMessage(playerid, 0xFF0000AA, "Seu relatório VIP foi enviado aos admins, aguarde uma resposta...");
            }
            else if(PlayerInfo[playerid][pVIP] == 3)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "{FF0000}==> Relatório {00EEEE}Sócio {FF0000}de %s(%d): %s <==", sendername, playerid, lol, (result));
				ABroadCast(0x8000FFAA,string,1);
				SendClientMessage(playerid, 0xFF0000AA, "Seu relatório VIP foi enviado aos admins, aguarde uma resposta...");
            }
            else
            {
				format(string, sizeof(string), "{FF0000}==> Relatório de %s(%d): %s <==", sendername, playerid, (result));
				ABroadCast(0xFFFF66FF,string,1);
				SendClientMessage(playerid, 0xFF0000AA, "Seu relatório foi enviado aos admins, aguarde uma resposta...");
			}
            RelatoEntregue[playerid] = 1;
            SetTimerEx("MandarRelato", 5000,false,"i",playerid);
		}
	    return 1;
	}
    if(strcmp(cmd, "/ticket", true) == 0 || strcmp(cmd, "/senha", true) == 0)
	{
        if(IsPlayerConnected(playerid))
        {
            new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /Senha [Pergunta]");
				return 1;
			}
            if(InfoTheus[playerid][NumSenha] != 999)
        	{
                SendClientMessage(playerid,0xFFFFFFFF,"[Atendimento] Você ja Pediu uma Senha, Aguarde ela ser Atendida!");
            	return 1;
        	}
            if(SenhasAtendimento >= 8)
        	{
                SendClientMessage(playerid,0xFFFFFFFF,"[Atendimento] O Atendimento está Lotado, Por favor Aguarde alguns Segundos!");
            	return 1;
        	}
        	if(InfoTheus[playerid][NumSenha] == 999)
        	{
            	InfoTheus[playerid][NumSenha] = playerid;
                SenhasAtendimento ++;
                strmid(InfoTheus[playerid][PergSenha], result, 0, strlen(result), 255);
                SendClientMessage(playerid,0xFFFFFFFF,"[Atendimento] Você Enviou uma Senha de Ajuda, Aguarde até que ela seja Atendida!");
            	format(string,sizeof(string),"Player %s[ID:%d] Pediu uma Senha de Ajuda (/senhas), Digite /irsenha %d.",PlayerName(playerid),playerid,InfoTheus[playerid][NumSenha]);
                ABroadCastah(0xFFBE93AA,string,1);
            	return 1;
        	}
    	}
        else return SendClientMessage(playerid,COLOR_GREEN,"Você precisa estar logado");
    	return 1;
	}
    if(strcmp(cmd, "/versenhas", true) == 0 || strcmp(cmd, "/versenha", true) == 0 || strcmp(cmd, "/senhas", true) == 0)
	{
        if(IsPlayerConnected(playerid))
        {
            if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
            {
                SendClientMessage(playerid, 0xFF80FFFF, "[Atendimento] Senhas de Suporte Abertas:");
    			for(new i = 0; i < MaiorID; i++)
        	    {
                    if(InfoTheus[i][NumSenha] != 999 && IsPlayerConnected(i))
                	{
						format(string,sizeof(string),"Senha ID: %d, %s, Pergunta: %s.",i,PlayerName(i),InfoTheus[i][PergSenha]);
                        SendClientMessage(playerid,0x77EEA1FF,string);
                	}
                }
                SendClientMessage(playerid,0xFFFFFFFF,"Para ir até alguma Senha digite /irsenha [ID]");
            }
        }
        else return SendClientMessage(playerid,COLOR_GREEN,"Você precisa estar logado");
    	return 1;
	}
    if(strcmp(cmd, "/irsenha", true) == 0 || strcmp(cmd, "/atendersenha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /irsenha [id]");
				return 1;
			}
			new Float:plocx,Float:plocy,Float:plocz;
			new plo;
			plo = ReturnUser(tmp);
            if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
            {
                if (IsPlayerConnected(plo))
    			{
                    if(InfoTheus[plo][NumSenha] == 999)
                	{
                        SendClientMessage(playerid,0xFFFFFFFF,"[BPF] Este jogador Não Pediu Nenhuma Senha, Ou ja Foi Atendido!");
                    	return 1;
                	}
                    GetPlayerPos(plo, plocx, plocy, plocz);
                    format(string,sizeof(string),"[SENHA] %s Está Atendendo a Senha: %d de %s, Mais Informações digite: /senhas.",PlayerName(playerid),plo,PlayerName(plo));
                    ABroadCastah(COLOR_YELLOW,string,1);
                    format(string,sizeof(string),"[Atendimento] %s Veio Atender sua Senha, Fique parado Para que Possamos Atender.",PlayerName(playerid));
                    SendClientMessage(plo,COLOR_YELLOW,string);
                    format(string,sizeof(string),"[SENHA] Player %s Pergunta: %s.",PlayerName(plo),InfoTheus[plo][PergSenha]);
                    SendClientMessage(playerid,0xFEEA5CAA,string);
                    if (GetPlayerState(playerid) == 2)
					{
						new tmpcar = GetPlayerVehicleID(playerid);
						SetVehiclePos(tmpcar, plocx, plocy+4, plocz); LinkVehicleToInterior(tmpcar, 0);
						TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
					}
					else
					{
						SetPlayerPos(playerid,plocx,plocy+2, plocz);
       				}
       				SetPlayerInterior(playerid,GetPlayerInterior(plo));
					SetPlayerVirtualWorld(playerid,GetPlayerInterior(plo));
					PlayerInfo[playerid][pInt] = GetPlayerInterior(plo);
                    SenhasAtendimento --;
                    strmid(InfoTheus[plo][PergSenha], "Vazia", 0, strlen("Vazia"), 255);
                    InfoTheus[plo][NumSenha] = 999;
    			}
            }
		}
		return 1;
	}
	if(strcmp(cmd, "/duvida", true) == 0 || strcmp(cmd, "/relatoh", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(gPlayerLogged[playerid] == 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Você não está logado!");
	            return 1;
	        }
	        GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /duvida [texto]");
				return 1;
			}
            if(PlayerInfo[playerid][pVIP] == 1)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "==> Dúvida VIP de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
				ABroadCasth(0x33FF00FF,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Sua dúvida VIP foi enviado aos Helpers, aguarde uma resposta...");
            }
            else if(PlayerInfo[playerid][pVIP] == 2)
            {
                new lol;
                lol = PlayerInfo[playerid][pVIP];
                format(string, sizeof(string), "==> Dúvida Premium de %s - ID[%d]: %s <==", sendername, playerid, lol, (result));
				ABroadCasth(0x33FF00FF,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Sua dúvida VIP foi enviado aos Helpers, aguarde uma resposta...");
            }
            else
            {
				format(string, sizeof(string), "==> Dúvida de %s(%d): %s <==", sendername, playerid, (result));
				ABroadCasth(0xFFFF66FF,string,1);
				SendClientMessage(playerid, COLOR_YELLOW, "Sua Dúvida foi enviado aos Helpers, aguarde uma resposta...");
			}
		}
	    return 1;
	}
 	if(strcmp(cmd, "/roupas", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] >= 1 || PlayerInfo[playerid][pLider] >= 1)
	        {
	            if(IsAtClothShop(playerid))
				{
				    if(PlayerInfo[playerid][pMembro] == 1) { ChosenSkin[playerid] = 282; SetPlayerSkin(playerid, 282); }// Polícia Mílitar
					else if(PlayerInfo[playerid][pMembro] == 2) { ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }//R.O.T.A
					else if(PlayerInfo[playerid][pMembro] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }//Exército
					else if(PlayerInfo[playerid][pMembro] == 4) { ChosenSkin[playerid] = 274; SetPlayerSkin(playerid, 274); }//Médicos
					else if(PlayerInfo[playerid][pMembro] == 5) { ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 115); }//Aztecas
					else if(PlayerInfo[playerid][pMembro] == 6) { ChosenSkin[playerid] = 121; SetPlayerSkin(playerid, 121); }//Taliban
					else if(PlayerInfo[playerid][pMembro] == 7) { ChosenSkin[playerid] = 163; SetPlayerSkin(playerid, 163); }//Prefeitura
					else if(PlayerInfo[playerid][pMembro] == 8) { ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }//Hitmans
					else if(PlayerInfo[playerid][pMembro] == 9) { ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }//Reporters
					else if(PlayerInfo[playerid][pMembro] == 10) { ChosenSkin[playerid] = 253; SetPlayerSkin(playerid, 253); }//Taxistas
					else if(PlayerInfo[playerid][pMembro] == 11) { ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }//Policia Federal
					else if(PlayerInfo[playerid][pMembro] == 12) { ChosenSkin[playerid] = 126; SetPlayerSkin(playerid, 126); }//Máfia Cosa Nostra
					else if(PlayerInfo[playerid][pMembro] == 13) { ChosenSkin[playerid] = 203; SetPlayerSkin(playerid, 203); }//Máfia Yakuza
					else if(PlayerInfo[playerid][pMembro] == 14) { ChosenSkin[playerid] = 107; SetPlayerSkin(playerid, 107); }//Groove Street
					else if(PlayerInfo[playerid][pMembro] == 15) { ChosenSkin[playerid] = 30; SetPlayerSkin(playerid, 30); }//Al'qaeda
					else if(PlayerInfo[playerid][pMembro] == 16) { ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }//Policia Rodoviaria
					else if(PlayerInfo[playerid][pMembro] == 17) { ChosenSkin[playerid] = 103; SetPlayerSkin(playerid, 103); }//Ballas
					else if(PlayerInfo[playerid][pMembro] == 18) { ChosenSkin[playerid] = 109; SetPlayerSkin(playerid, 109); }//Vagos
					else if(PlayerInfo[playerid][pMembro] == 33) { ChosenSkin[playerid] = 3; SetPlayerSkin(playerid, 3); }//F.A.R.C
					else if(PlayerInfo[playerid][pMembro] == 34) { ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 280); }//Policia Cívil
					else if(PlayerInfo[playerid][pLider] == 1) { ChosenSkin[playerid] = 283; SetPlayerSkin(playerid, 283); }//Polícia Mílitar
					else if(PlayerInfo[playerid][pLider] == 2)	{ ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }//R.O.T.A
					else if(PlayerInfo[playerid][pLider] == 3) { ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }//Exército
					else if(PlayerInfo[playerid][pLider] == 4) { ChosenSkin[playerid] = 70; SetPlayerSkin(playerid, 70); }//Fire/Ambulance
					else if(PlayerInfo[playerid][pLider] == 5) { ChosenSkin[playerid] = 115; SetPlayerSkin(playerid, 115); }//Varrios Los Aztecas
					else if(PlayerInfo[playerid][pLider] == 6) { ChosenSkin[playerid] = 249; SetPlayerSkin(playerid, 249); }//Taliban
					else if(PlayerInfo[playerid][pLider] == 7) { ChosenSkin[playerid] = 147; SetPlayerSkin(playerid, 147); }//Prefeito
					else if(PlayerInfo[playerid][pLider] == 8) { ChosenSkin[playerid] = 294; SetPlayerSkin(playerid, 294); }//Hitmans
					else if(PlayerInfo[playerid][pLider] == 9) { ChosenSkin[playerid] = 227; SetPlayerSkin(playerid, 227); }//Repórters
					else if(PlayerInfo[playerid][pLider] == 10) { ChosenSkin[playerid] = 61; SetPlayerSkin(playerid, 61); }//Taxistas
					else if(PlayerInfo[playerid][pLider] == 11) { ChosenSkin[playerid] = 295; SetPlayerSkin(playerid, 295); }//Policia Federal
					else if(PlayerInfo[playerid][pLider] == 12) { ChosenSkin[playerid] = 113; SetPlayerSkin(playerid, 113); }//Máfia Cosa Nostra
					else if(PlayerInfo[playerid][pLider] == 13) { ChosenSkin[playerid] = 120; SetPlayerSkin(playerid, 120); }//Máfia Yakuza
					else if(PlayerInfo[playerid][pLider] == 14) { ChosenSkin[playerid] = 270; SetPlayerSkin(playerid, 270); }//Groove
                    else if(PlayerInfo[playerid][pLider] == 15) { ChosenSkin[playerid] = 123; SetPlayerSkin(playerid, 123); }//ALQaeda
					else if(PlayerInfo[playerid][pLider] == 16) { ChosenSkin[playerid] = 186; SetPlayerSkin(playerid, 186); }//Policia Rodoviaria
                    else if(PlayerInfo[playerid][pLider] == 17) { ChosenSkin[playerid] = 104; SetPlayerSkin(playerid, 104); }//Ballas
                    else if(PlayerInfo[playerid][pLider] == 18) { ChosenSkin[playerid] = 108; SetPlayerSkin(playerid, 108); }//Vagos
                    else if(PlayerInfo[playerid][pLider] == 34) { ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 280); }//Policia Cívil
	                else { return 1; }
	                if(PlayerInfo[playerid][pLider] < 1)
	                {
	                    new Float:x,Float:y,Float:z;
                        GetPlayerPos(playerid, x, y, z);
	                	SetPlayerCameraPos(playerid, x + 3, y, z);
						SetPlayerCameraLookAt(playerid,x, y, z);
						TogglePlayerControllable(playerid, 0);
						SelectChar[playerid] = 255;
						SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
						SelectCharPlace[playerid] = 1;
						PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
						SendClientMessage(playerid, COLOR_LIGHTRED, "* Use 'Proximo' para trocar a skin.");
					    SendClientMessage(playerid, COLOR_LIGHTRED, "* Quando Você achar a Skin preferida, Digite 'Confirma'.");
					}
	                GranaTheus(playerid, -1000);
				    SBizzInfo[6][sbTill] += 500;
					ExtortionSBiz(6, 500);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você não está em uma loja de roupas !");
					return 1;
				}
            }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "   Civis não podem usar esse comando !");
				return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/loteria", true) == 0)
	{
	    if(PlayerToPoint(1, playerid,822.0201,4.2154,1004.1797) || PlayerToPoint(1, playerid,822.0099,6.3927,1004.1797) || PlayerToPoint(1, playerid,822.0087,-0.1116,1004.1797) || PlayerToPoint(1, playerid,822.0237,1.7826,1004.1797))
	    {
	        if(PlayerInfo[playerid][pLottoNr] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você já tem um bilhete de loteria !");
	            return 1;
	        }
	        if(GetGranaTheus(playerid) < 1000)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não tem R$1000 para pagar o número de loteria !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE,"[INFO] Use: /loteria [número]");
				return 1;
			}
			new lottonr = strval(tmp);
			if(lottonr < 1 || lottonr > 80) { SendClientMessage(playerid, COLOR_GREY, "   Número da loteria, de 1 a 80 !"); return 1; }
			format(string, sizeof(string), "* Você comprou um bilhete de loteria com número: %d.", lottonr);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GranaTheus(playerid, - 1000);
			PlayerInfo[playerid][pLottoNr] = lottonr;
	     }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está na Lotérica !");
		}
		return 1;
	}
	if(strcmp(cmd, "/retirar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return 1;
			}
	        if(gTeam[playerid] == 2 || IsACop(playerid) || IsAGOV(playerid))
	        {
	            if(PlayerInfo[playerid][pCargo] < 2)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 2 para usar este comando !");
	                return 1;
	            }
	            new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________ Take Licenses __________________|");
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /retirar [nome] [id]");
			  		SendClientMessage(playerid, COLOR_GREY, "Nomes Disponíveis: Motorista, Piloto, Marujo, PorteLegal, Armas, Drogas, Materiais");
					return 1;
				}
			    if(strcmp(x_nr,"Motorista",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /retirar Motorista [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou a licença de motorista de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licença de motorista.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pCarLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Piloto",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /retirar Piloto [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou a licença de Voo de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licença de Voo.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pFlyLic] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"PorteLegal",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /retirar portelegal [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou a licença de Porte de Armas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licença de Porte de Armas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pGunLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Marujo",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /retirar Marujo [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
						        new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou a licença de Navegacao de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou sua licença de Navegacao.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pBoatLic] = 0;
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Armas",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /retirar Armas [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
                                new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou as Armas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s retirou suas Armas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        ResetPlayerWeapons(giveplayerid);
					        }
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Drogas",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /retirar Drogas [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou as Drogas de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s retirou suas Drogas.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pDrogas] = 0;
						        PlayerInfo[giveplayerid][pDrogas2] = 0;
						        PlayerInfo[giveplayerid][pDrogas3] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"Materiais",true) == 0)
				{
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /retirar Materiais [id]");
						return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(giveplayerid, sendername, sizeof(sendername));
					        if (ProxDetectorS(8.0, playerid, giveplayerid))
							{
							    new cop[MAX_PLAYER_NAME];
				                GetPlayerName(playerid, cop, sizeof(cop));
				                new fudido[MAX_PLAYER_NAME];
				                GetPlayerName(giveplayerid, fudido, sizeof(fudido));
						        format(string, sizeof(string), "* Você retirou os Materiais de %s.", fudido);
						        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						        format(string, sizeof(string), "* Oficial %s Retirou seus Materiais.", cop);
						        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						        PlayerInfo[giveplayerid][pMats] = 0;
							}
					        else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
							    return 1;
							}
					    }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Nome inválido !");
					return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não e COP !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/beber", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(IsAtBar(playerid))
	        {
	            if(PlayerInfo[playerid][pDorgado2] >= 70)
	            {
	            	PlayerInfo[playerid][pDoenca] = 4;
	            	PlayerInfo[playerid][pDorgado2] = 0;
	            	SendClientMessage(playerid, COLOR_GRAD2, "* Você está infectado com cirrose, vá até um hospital se tratar !");
	            	return 1;
				}
	            if(PlayerDrunk[playerid] < 10)
	            {
	            	if(PlayerInfo[playerid][pDoenca] == 4)
  					{
			    		SendClientMessage(playerid, COLOR_GRAD2, "* Você está com cirrose, vá até um hospital se tratar !");
			    		return 1;
  	        		}
	                new Float:health;
	                new x_nr[32];
					x_nr = strtok(cmdtext, idx);
					if(!strlen(x_nr)) {
						SendClientMessage(playerid, COLOR_WHITE, "|__________________ BPF Drinks __________________|");
						SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /beber [Bebida]");
				  		SendClientMessage(playerid, COLOR_GREY, "Nomes Válidos: Cerveja (R$6), Vodka (R$10), Whisky (R$25), Coca-Cola (R$2), Água (R$1)");
						return 1;
					}
				    if(strcmp(x_nr,"Cerveja",true) == 0)
					{
						if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Você Não Tem 18 Anos ou mais Para Poder Beber.");
						    return 1;
						}
					    GranaTheus(playerid, - 6);
					    PlayerDrunk[playerid] += 1;
					    PlayerInfo[playerid][pDorgado2] += 2;
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
						SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
						ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 15; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 15.0); }
						}
					}
					else if(strcmp(x_nr,"Vodka",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Você Não Tem 18 Anos ou mais Para Poder Beber.");
						    return 1;
						}
					    GranaTheus(playerid, - 10);
					    PlayerDrunk[playerid] += 2;
					    PlayerInfo[playerid][pDorgado2] += 2;
					    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
					    ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 25; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 25.0); }
						}
					}
					else if(strcmp(x_nr,"Whisky",true) == 0)
					{
					    if(PlayerInfo[playerid][pAge] < 0)
						{
						    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Você Não Tem 18 Anos ou mais Para Poder Beber");
						    return 1;
						}
					    GranaTheus(playerid, - 25);
					    PlayerDrunk[playerid] += 3;
					    PlayerInfo[playerid][pDorgado2] += 2;
					    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
					    ApplyAnimation(playerid, "FOOD","EAT_Vomit_P",3.0,0,0,0,0,0);
						if(PlayerDrunk[playerid] >= 5) { GameTextForPlayer(playerid, "~w~Voce Esta~n~~p~Tonto~n~,~g~beba agua ou coca-cola", 3500, 1); }
						if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { PlayerDrunk[playerid] += 1; new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 27; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 27.0); }
						}
					}
					else if(strcmp(x_nr,"Coca-Cola",true) == 0)
					{
					    GranaTheus(playerid, - 2);
					    if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 5.0); }
							SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) - 2300);
							PlayerDrunk[playerid] = 0;
						    PlayerDrunkTime[playerid] = 0;
						    SetPlayerDrunkLevel (playerid, 0);
						}
					}
					else if(strcmp(x_nr,"agua",true) == 0)
					{
					    GranaTheus(playerid, - 1);
					    if(GetPlayerHealth(playerid, health) < 100)
						{
						    if(PlayerInfo[playerid][pAlcoholPerk] > 0) { new hp = 2 * PlayerInfo[playerid][pAlcoholPerk]; hp += 5; SetPlayerHealth(playerid, health + hp); }
							else { SetPlayerHealth(playerid, health + 5.0); }
							SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) - 2300);
							PlayerDrunk[playerid] = 0;
						    PlayerDrunkTime[playerid] = 0;
						    SetPlayerDrunkLevel (playerid, 0);
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "BarMan - Não não vendemos essa bebida.");
					    return 1;
					}
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s bebeu um(a) %s.", sendername ,x_nr);
					SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_BEER);
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você não pode beber mais, Você vai vomitar...!");
	                SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 3000);
	                return 1;
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não está em um bar !");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd, "/setcampeao", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pAdmin] >= 4)
	        {
	            if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
				{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
				return 1;
				}
	            tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /setcampeao [id]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
		        if(IsPlayerConnected(giveplayerid))
		        {
		            if(giveplayerid != INVALID_PLAYER_ID)
		            {
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
		                new nstring[MAX_PLAYER_NAME];
						format(nstring, sizeof(nstring), "%s", giveplayer);
						strmid(Titel[TitelName], nstring, 0, strlen(nstring), 255);
						Titel[TitelWins] = PlayerInfo[giveplayerid][pWins];
						Titel[TitelLoses] = PlayerInfo[giveplayerid][pLoses];
						SaveBoxer();
						format(string, sizeof(string), "* Você definiu %s como o novo campeão de boxe.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		            }
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
		            return 1;
		        }
	        }
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/statusluta", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pEmprego] != 8)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não é um Lutador de Boxe !");
	            return 1;
	        }
	        new ttext[20];//Title
	        new clevel = PlayerInfo[playerid][pBoxSkill];
			if(clevel >= 0 && clevel <= 50) { ttext = "Iniciante"; }
			else if(clevel >= 51 && clevel <= 200) { ttext = "Amador"; }
			else if(clevel >= 201 && clevel <= 400) { ttext = "Profissional"; }
	        new ntext[20];//NickName
	        new level = PlayerInfo[playerid][pWins];
	        if(level > 0 && PlayerInfo[playerid][pLoses] == 0)
	        {
	            ntext = "Invicto";
	        }
	        else
	        {
	            if(level >= 0 && level <= 10) { ntext = "Novato"; }
	            else if(level >= 11 && level <= 20) { ntext = "Mão Pesada"; }
	            else if(level >= 21 && level <= 30) { ntext = "Quebra Nozes"; }
	            else if(level >= 31 && level <= 40) { ntext = "Braço de ferro"; }
	            else if(level >= 41 && level <= 50) { ntext = "Quebra crânio"; }
	            else if(level >= 51 && level <= 60) { ntext = "Velocidade da Luz"; }
	            else if(level >= 61 && level <= 70) { ntext = "Guerreiro"; }
	            else if(level >= 71) { ntext = "Cavalo"; }
	        }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Recorde do Boxe __________________|");
	        format(string, sizeof(string), "| Atual Campeão: %s, com %d vitórias e %d derrotas.", Titel[TitelName],Titel[TitelWins],Titel[TitelLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Título atual: %s.", ttext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Nome Atual: %s.", ntext);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Total de Vitórias: %d.", PlayerInfo[playerid][pWins]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "| Total de Derrotas: %d.", PlayerInfo[playerid][pLoses]);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
		return 1;
	}
	if(strcmp(cmd, "/lutar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pEmprego] != 8)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não é um lutador de boxe !");
	            return 1;
	        }
	        if(InRing > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Já está tendo uma luta, espere ela terminar !");
	            return 1;
	        }
	        if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você já está em uma luta !");
	            return 1;
	        }
	        if(!PlayerToPoint(20.0,playerid,765.9343,0.2761,1000.7173))
	        {
	            SendClientMessage(playerid, COLOR_GREY, "  Você não está no ginásio de lutas de LS !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /lutar [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
		    if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode lutar contra si mesmo!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você intimou %s para uma luta de boxe.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Lutador %s te intimou para uma luta ([INFO] Use: /aceitar boxe) para aceitar.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				        BoxOffer[giveplayerid] = playerid;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
						return 1;
					}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/musica", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pCDPlayer])
	        {
		        new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________ Music __________________|");
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /musica [nome]");
			  		SendClientMessage(playerid, COLOR_GREY, "Nomes Disponíveis: On, Off, Proximo");
					return 1;
				}
			    if(strcmp(x_nr,"on",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD Player On", 5000, 5);
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
	            else if(strcmp(x_nr,"off",true) == 0)
				{
				    GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD Player Off", 5000, 5);
				    PlayerFixRadio(playerid);
				}
				else if(strcmp(x_nr,"Proximo",true) == 0)
				{
				    if(Music[playerid] == 0) { Music[playerid] = 1; }
				    else if(Music[playerid] == 1) { Music[playerid] = 2; }
				    else if(Music[playerid] == 2) { Music[playerid] = 3; }
				    else if(Music[playerid] == 3) { Music[playerid] = 4; }
				    else if(Music[playerid] == 4) { Music[playerid] = 5; }
				    else if(Music[playerid] == 5) { Music[playerid] = 6; }
				    else if(Music[playerid] == 6) { Music[playerid] = 0; }
				    new channel = Music[playerid];
				    PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Comando Musical Desconhecido !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não possui um CD-Player !");
			    return 1;
			}
	    }
	    return 1;
	}
	if(strcmp(cmd, "/servico", true) == 0 || strcmp(cmd, "/serviço", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Service Names __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /servico [nome]");
		  		SendClientMessage(playerid, COLOR_GREY, "Serviços: Taxi, Onibus,Medico,Mecanico,Policia");
				return 1;
			}
		    if(strcmp(x_nr,"taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Não tem taxista online agora, tente /servico onibus...");
		            return 1;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Você não pode ligar para um Taxi agora !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Taxista. (Use /aceitar taxi - Para Aceitar a Chamada)", sendername);
		    	SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Taxista,espere a resposta...");
		    	TaxiCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"moto-taxi",true) == 0)
			{
			    if(TaxiDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "  Não tem nenhum Moto-Taxi online agora, espere algum entrar !");
		            return 1;
      		  	}
          		if(TransportDuty[playerid] > 0)
 		      	{
		            SendClientMessage(playerid, COLOR_GREY, "  Você não pode ligar para um Moto-Taxi agora !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Taxista. (Use /aceitar moto-taxi - Para Aceitar a Chamada)", sendername);
		    	SendFamilyMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Moto-Taxi... Agora espere a resposta.");
		    	TaxiCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"onibus",true) == 0)
			{
			    if(BusDrivers < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Não tem motorista de onibus online neste momento, espere um entrar !");
		            return 1;
		        }
		        if(TransportDuty[playerid] > 0)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Você não pode chamar um onibus agora !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Onibus. (Use /aceitar onibus - Para aceitar a chamada)", sendername);
		    	SendEmpregoMessage(10, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Onibus... Agora espere a resposta.");
		    	BusCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"medico",true) == 0)
			{
			    if(Medics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhum medico online neste momento, espere um entrar !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita da SAMU. (Use /aceitar medico - Para aceitar a chamada)", sendername);
		    	SendFamilyMessage(4, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou a SAMU.... Agora espere por resposta.");
		    	MedicCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"policia",true) == 0)
			{
			    if(Copsronda < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "Nenhum Policial em ronda no momento.");
		            return 1;
		        }
          for(new i = 0; i < MaiorID; i++)
				{
				    if(IsACop(i) && IsPlayerConnected(i))
				    {
				        if(PolicialInRonda[i] == 1)
				        {
				            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Estão fazendo uma chamada.");
				            return 1;
				        }
					}
				}
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s está precisando de um Policial. (Digite /aceitar chamada para aceitar a chamada)", sendername);
		    	SendFamilyMessage(1, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(2, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(3, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(16, TEAM_AZTECAS_COLOR, string);
		    	SendFamilyMessage(11, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Policial Aguarde a Resposta.");
		    	CopsrondaCall = playerid;
		    	return 1;
			}
			else if(strcmp(x_nr,"mecanico",true) == 0)
			{
			    if(Mechanics < 1)
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Nenhum mecanico online neste momento, espere um entrar !");
		            return 1;
		        }
		        GetPlayerName(playerid, sendername, sizeof(sendername));
			    format(string, sizeof(string), "** %s Necessita de um Mecanico. (Use /aceitar mecanico - Para aceitar a chamada)", sendername);
		    	SendEmpregoMessage(5, TEAM_AZTECAS_COLOR, string);
		    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você chamou um Mecanico... Agora espere por uma resposta.");
		    	MechanicCall = playerid;
		    	return 1;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Serviço Inexistente !");
			    return 1;
			}
		}
		return 1;
	}
//Amarrar
    if(strcmp(cmd, "/amarrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
  			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22
			|| PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
			|| PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31 || PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3 ou mais para amarrar as pessoas. !");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /amarrar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				    	if(PlayerInfo[giveplayerid][pLevel] == 2)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode sequestrar novatos!");
							return 1;
						}
					    if(PlayerTied[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O Jogador já está amarrado !");
					        return 1;
					    }
					    if(Sequestrado[playerid] != 999)
	    				{
						    SendClientMessage(playerid, COLOR_WHITE, "Este Jogador não Está sequestrado, [INFO] Use: /sequestrar [id]");
						    return 1;
	    				}
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se amarrar !"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* Você foi Amarrado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você Amarrou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s Amarra %s, ele não irá à lugar algum.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
								GameTextForPlayer(giveplayerid, "~r~Sequestrado", 2500, 3);
								TogglePlayerControllable(giveplayerid, 0);
								PlayerTied[giveplayerid] = 1;
								PlayerInfo[giveplayerid][pMuted] = 1;
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está no seu carro, ou você não é o motorista !");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um mafioso !");
			}
		}
		return 1;
	}
//Desamarrar Mafia
	if(strcmp(cmd, "/desamarrarm", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3 ou mais para desamarrar as pessoas !");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /desamarrarm [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
					    if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode desamarrar si mesmo!"); return 1; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Você foi libertado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você libertou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Libertado", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está sequestrado !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um mafioso !");
			}
		}//not connected
		return 1;
	}
//Sequestrar
    if(strcmp(cmd, "/sequestrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22
            || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23  || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13  || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
			|| PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31 || PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3 ou mais para amarrar as pessoas. !");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /sequestrar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
			    if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				    	if(PlayerInfo[giveplayerid][pLevel] == 2)
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode sequestrar novatos!");
							return 1;
						}
					    if(PlayerTied[giveplayerid] > 0)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O Jogador já está sequestrado !");
					        return 1;
					    }
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    new car = GetPlayerVehicleID(playerid);
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se sequestrar!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
						    {
						        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        format(string, sizeof(string), "* Você foi sequestrado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você sequestrou %s, Amarre ele Caso Contrário ele Irá Fugir.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s sequestra %s, então ele não irá à lugar algum.", sendername ,giveplayer);
								ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                format(string, sizeof(string), "[PlayStart News] %s Foi Sequestrado por %s, Organização: %s", giveplayer, sendername, NomeORG(playerid));
								OOCNews(COLOR_LIGHTRED, string);
                                GameTextForPlayer(giveplayerid, "~r~Sequestrado", 2500, 3);
								Sequestrado[giveplayerid] = playerid;
								PlayerInfo[giveplayerid][pMuted] = 1;
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está no seu carro, ou você não é o motorista !");
						        return 1;
						    }
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um Gangster !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/desamarrar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22
			|| PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
			|| PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29 || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31 || PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3 ou mais para desamarrar as pessoas !");
			        return 1;
			    }

			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /desamarrar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode desamarrar à sí mesmo!"); return 1; }
							if(PlayerTied[giveplayerid])
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Você foi libertado por %s.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você libertou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Libertado", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está sequestrado !");
							    return 1;
							}
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um Gangster !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/refemliberar", true) == 0 || strcmp(cmd, "/liberarrefem", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2 || PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5 || PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6 || PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15 || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
			|| PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18 || PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22
            || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23 || PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25 || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26 || PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28 || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29 || PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30
			|| PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31 || PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
 			{
			    if(PlayerInfo[playerid][pCargo] < 3)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você precisa de cargo 3 ou mais para desamarrar as pessoas !");
			        return 1;
			    }
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /desamarrar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
					if(giveplayerid != INVALID_PLAYER_ID)
					{
                            if (!ProxDetectorS(25.0, playerid, giveplayerid)) return SendClientMessage(playerid, 0xFFFFFFFF, " Você Precisa Estar perto do Refem para Liberar!");
							if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode desamarrar à sí mesmo!"); return 1; }
							if(Sequestrado[giveplayerid] != 999)
							{
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
							    format(string, sizeof(string), "* Você foi Liberado por %s, Não  está mais Sequestrado.", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você Liberou %s.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(giveplayerid, "~g~Livre", 2500, 3);
								TogglePlayerControllable(giveplayerid, 1);
								PlayerTied[giveplayerid] = 0;
								PlayerInfo[giveplayerid][pMuted] = 0;
								format(string, sizeof(string), "[PlayStart News] O Refem %s Foi Solto Por %s, Sequestro Finalizado!", PlayerName(giveplayerid),PlayerName(playerid));
								OOCNews(COLOR_LIGHTRED, string);
								Sequestrado[giveplayerid] = 999;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está sequestrado !");
							    return 1;
							}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
				    return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um Gangster !");
			}
		}//not connected
		return 1;
	}
 	if(strcmp(cmd, "/vender", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
			{
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Selling __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /vender [nome]");
		  		SendClientMessage(playerid, COLOR_GREY, "Nomes: Peixe, Cozido");
				return 1;
			}
		    if(strcmp(x_nr,"peixe",true) == 0)
			{
			    if (!PlayerToPoint(100, playerid,-29.2522,-89.0717,1003.5469) && !PlayerToPoint(100, playerid,-24.2589,-54.7865,1003.5469) && !PlayerToPoint(100, playerid,-30.8149,-28.0234,1003.5573))//centerpoint 24-7
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você não está em uma 24-7 !");
					return 1;
				}
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /vender peixe [peixe]");
					return 1;
				}
				new price;
				new fishid = strval(tmp);
				if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Número de Peixes tem que ser maior que 1 e menor que 5 !"); return 1; }
				else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(1) !"); return 1; }
				else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(2) !"); return 1; }
				else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(3) !"); return 1; }
				else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(4) !"); return 1; }
				else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(5) !"); return 1; }
				ConsumingMoney[playerid] = 1;
				switch (fishid)
				{
				    case 1:
				    {
				        if(Fishes[playerid][pWeight1] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
				            return 1;
				        }
                        price = FishCost(playerid, Fishes[playerid][pFid1]);
                        price = price * Fishes[playerid][pWeight1];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 2;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish1],Fishes[playerid][pWeight1],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GranaTheus(playerid, price);
						ClearFishID(playerid, 1);
				    }
				    case 2:
				    {
				        if(Fishes[playerid][pWeight2] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid2]);
                        price = price * Fishes[playerid][pWeight2];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 2;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish2],Fishes[playerid][pWeight2],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GranaTheus(playerid, price);
						ClearFishID(playerid, 2);
				    }
				    case 3:
				    {
				        if(Fishes[playerid][pWeight3] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid3]);
                        price = price * Fishes[playerid][pWeight3];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 2;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish3],Fishes[playerid][pWeight3],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GranaTheus(playerid, price);
						ClearFishID(playerid, 3);
				    }
				    case 4:
				    {
				        if(Fishes[playerid][pWeight4] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid4]);
                        price = price * Fishes[playerid][pWeight4];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 2;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish4],Fishes[playerid][pWeight4],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GranaTheus(playerid, price);
						ClearFishID(playerid, 4);
				    }
				    case 5:
				    {
				        if(Fishes[playerid][pWeight5] < 20)
				        {
				            SendClientMessage(playerid, COLOR_WHITE, "Estamos interessados apenas em peixes com 20 ou mais LBS.");
				            return 1;
				        }
            			price = FishCost(playerid, Fishes[playerid][pFid5]);
                        price = price * Fishes[playerid][pWeight5];
                        if(PlayerInfo[playerid][pTraderPerk] > 0)
				        {
				            new skill = price / 2;
				            new payout = (skill)*(5);
				            price += payout;
				        }
                        GameTextForPlayer(playerid, "~g~Peixe~n~~r~Vendido", 3000, 1);
                        format(string, sizeof(string), "* Voce vendeu seu %s pesando %d, por R$%d.", Fishes[playerid][pFish5],Fishes[playerid][pWeight5],price);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GranaTheus(playerid, price);
						ClearFishID(playerid, 5);
				    }
				}
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
				return 1;
			}
			else if(strcmp(x_nr,"cozido",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /vender cozido [Nº do cozido] [id/nome]");
					return 1;
				}
				new cookid = strval(tmp);
				if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Número do cozido mínimo 1 máximo 5 !"); return 1; }
				else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem um cozido no numero(1) !"); return 1; }
				else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem um cozido no numero(2) !"); return 1; }
				else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem um cozido no numero(3) !"); return 1; }
				else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem um cozido no numero(4) !"); return 1; }
				else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem um cozido no numero(5) !"); return 1; }
				tmp = strtok(cmdtext, idx);
			    if(!strlen(tmp)) {
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /vender cozido [Nº do cozido] [id/nome]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				        switch(cookid)
				        {
							case 1:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook1]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight1];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID1];
								    format(string, sizeof(string), "* %s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador não tem espaço na sua lista de cozidos !");
							        return 1;
							    }
							}
							case 2:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook2]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight2];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID2];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador não tem espaço na sua lista de cozidos !");
							        return 1;
							    }
							}
							case 3:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook3]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight3];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID3];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador não tem espaço na sua lista de cozidos !");
							        return 1;
							    }
							}
							case 4:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook4]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight4];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID4];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador não tem espaço na sua lista de cozidos !");
							        return 1;
							    }
							}
							case 5:
							{
							    if(Cooking[giveplayerid][pCWeight1] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook1], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight1] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID1] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook1],Cooking[giveplayerid][pCWeight1]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight2] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook2], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight2] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID2] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook2],Cooking[giveplayerid][pCWeight2]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight3] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook3], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight3] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID3] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook3],Cooking[giveplayerid][pCWeight3]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight4] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook4], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight4] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID4] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook4],Cooking[giveplayerid][pCWeight4]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else if(Cooking[giveplayerid][pCWeight5] < 1)
							    {
							        format(string, sizeof(string), "%s", Cooking[playerid][pCook5]);
								    strmid(Cooking[giveplayerid][pCook5], string, 0, strlen(string), 255);
								    Cooking[giveplayerid][pCWeight5] = Cooking[playerid][pCWeight5];
								    Cooking[giveplayerid][pCookID5] = Cooking[playerid][pCookID5];
								    format(string, sizeof(string), "*%s te deu uma %s pesando %d use /cozido para vê-lo.",sendername,Cooking[giveplayerid][pCook5],Cooking[giveplayerid][pCWeight5]);
								    SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
								    format(string, sizeof(string), "* Você deu uma %s pesando %d para %s.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5],giveplayer);
								    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							    }
							    else
							    {
							        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador não tem espaço na sua lista de cozidos !");
							        return 1;
							    }
							}
				        }//switch
				        ClearCookingID(playerid, cookid);
				    }//invalid giveplayerid
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está offline !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Comando de Venda Desconhecido !");
			    return 1;
			}
		}
		return 1;
	}
	if(strcmp(cmd,"/corrida",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pMembro] == 10||PlayerInfo[playerid][pLider] == 10|| PlayerInfo[playerid][pEmprego] == 9)
			{
				if(TransportDuty[playerid] > 0)
				{
				    if(TransportDuty[playerid] == 1)
				    {
				        TaxiDrivers -= 1;
				    }
				    else if(TransportDuty[playerid] == 2)
				    {
				        BusDrivers -= 1;
				    }
				    TransportDuty[playerid] = 0;
					format(string, sizeof(string), "* Voce está de folga e recebeu $%d.", TransportMoney[playerid]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					GranaTheus(playerid, TransportMoney[playerid]);
					ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
					return 1;
				}
				new Veh = GetPlayerVehicleID(playerid);
				if(IsATaxiCar(Veh) && (PlayerInfo[playerid][pMembro] == 10||PlayerInfo[playerid][pLider] == 10))
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /corrida [Preço]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Preço da corrida mínimo $1 Máximo $999!"); return 1; }
					    TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "Taxista %s está em serviço, Corrida: $%d - Chame um taxi /servico taxi", sendername, TransportValue[playerid]);
	    				OOCNews(TEAM_GROVE_COLOR,string);
	    				return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce não é o motorista!");
					    return 1;
					}
				}
				else if(IsAOniCar(Veh) && PlayerInfo[playerid][pEmprego] == 9)
				{
				    if(GetPlayerState(playerid) == 2)
				    {
					    tmp = strtok(cmdtext, idx);
						if(!strlen(tmp))
						{
							SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /corrida [Preco]");
							return 1;
						}
						moneys = strval(tmp);
						if(moneys < 1 || moneys > 999) { SendClientMessage(playerid, COLOR_GREY, "   Preço da corrida Mínimo $1 Máximo $999!"); return 1; }
					    BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]= moneys;
					    GetPlayerName(playerid,sendername,sizeof(sendername));
	    				format(string, sizeof(string), "Motorista de onibus %s está em serviço, Corrida: $%d - Chame um onibus /servico onibus", sendername, TransportValue[playerid]);
	    				OOCNews(TEAM_GROVE_COLOR,string);
	    				return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Voce não é o motorista!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Voce não está em um taxi/onibus!");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"   Voce não é um taxista/motorista de ônibus!");
			    return 1;
			}
	    }
	    return 1;
 	}
	if(strcmp(cmd, "/1", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "~w~] ~y~1 ~w~]");
            GameTextForAll(string, 1000, 5);
		}
		return 1;
	}
	if(strcmp(cmd, "/2", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "~w~] ~p~~h~2 ~w~]");
            GameTextForAll(string, 1000, 5);
		}
		return 1;
	}
	if(strcmp(cmd, "/3", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "~w~] ~p~3 ~w~]");
            GameTextForAll(string, 1000, 5);
		}
		return 1;
	}
	if(strcmp(cmd, "/go", true) == 0 || strcmp(cmd, "/4", true) == 0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
			GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
			format(string, sizeof(string), "~w~] ~r~~h~Go Go Go ~w~]");
            GameTextForAll(string, 1000, 5);
		}
		return 1;
	}
 	if(strcmp(cmd,"/comer",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerBoxing[playerid] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "Você não pode comer enquanto está lutando !");
	            return 1;
	        }
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) {
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /comer [numero do peixe(1 a 5)]");
				return 1;
			}
			new cookid = strval(tmp);
			if(cookid < 1 || cookid > 5) { SendClientMessage(playerid, COLOR_GREY, "   número de cozimento tem que ser entre 1 e 5 !"); return 1; }
			else if(cookid == 1 && Cooking[playerid][pCWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(1) !"); return 1; }
			else if(cookid == 2 && Cooking[playerid][pCWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(2) !"); return 1; }
			else if(cookid == 3 && Cooking[playerid][pCWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(3) !"); return 1; }
			else if(cookid == 4 && Cooking[playerid][pCWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(4) !"); return 1; }
			else if(cookid == 5 && Cooking[playerid][pCWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma comida na bolsa(5) !"); return 1; }
            GetPlayerName(playerid, sendername, sizeof(sendername));
			new Float:health;
			if(GetPlayerHealth(playerid, health) < 40)
			{
			    new hp = 0;
			    switch (cookid)
			    {
					case 1:
					{
					    if(Cooking[playerid][pCookID1] == 16 || Cooking[playerid][pCookID1] == 18)
						{//Dolphin ou Turtle
							SetPlayerCriminal(playerid,255, "Consumo de espécies ameaçadas de extinção");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight1] / 3));
					    hp = Cooking[playerid][pCWeight1];
					    format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook1]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook1], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 2:
					{
					    if(Cooking[playerid][pCookID2] == 16 || Cooking[playerid][pCookID2] == 18)
						{//Dolphin ou Turtle
							SetPlayerCriminal(playerid,255, "Consumo de espécies ameaçadas de extinção");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight2] / 3));
					    hp = Cooking[playerid][pCWeight2];
					    format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook2]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook2], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 3:
					{
					    if(Cooking[playerid][pCookID3] == 16 || Cooking[playerid][pCookID3] == 18)
						{//Dolphin ou Turtle
							SetPlayerCriminal(playerid,255, "Consumo de espécies ameaçadas de extinção");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight3] / 3));
					    hp = Cooking[playerid][pCWeight3];
					    format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook3]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook3], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 4:
					{
					    if(Cooking[playerid][pCookID4] == 16 || Cooking[playerid][pCookID4] == 18)
						{//Dolphin ou Turtle
							SetPlayerCriminal(playerid,255, "Consumo de espécies ameaçadas de extinção");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight4] / 3));
					    hp = Cooking[playerid][pCWeight4];
					    format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook4]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook4], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					case 5:
					{
					    if(Cooking[playerid][pCookID5] == 16 || Cooking[playerid][pCookID5] == 18)
						{//Dolphin ou Turtle
							SetPlayerCriminal(playerid,255, "Consumo de espécies ameaçadas de extinção");
						}
					    SetPlayerHealth(playerid, health + (Cooking[playerid][pCWeight5] / 3));
					    hp = Cooking[playerid][pCWeight5];
					    format(string, sizeof(string), "* %s come %s.", sendername, Cooking[playerid][pCook5]);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					    format(string, sizeof(string), "* %s peso %d, e foi adicionado em sua vida.",Cooking[playerid][pCook5], hp);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
			    }
				ClearCookingID(playerid, cookid);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Sua saúde é alta demais, só pode com a Saúde em 40 !");
			    return 1;
			}
	    }
	    return 1;
	}
 	if(strcmp(cmd,"/cozinhar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(IsAtCookPlace(playerid))
	        {
	            new x_nr[32];
	            x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /cozinhar [nome]");
					SendClientMessage(playerid, COLOR_WHITE, "Nomes: ultimopeixe, Peixe, Frango, Hamburger, Pizza.");
					return 1;
				}
				if(strcmp(x_nr,"ultimopeixe",true) == 0)
				{
				    if(Fishes[playerid][pLastFish] > 0)
	        		{
					    new fornd = 0;
					    if(Cooking[playerid][pCWeight1] == 0)
					    {
						    format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    fornd = 1;
					    }
					    else if(Cooking[playerid][pCWeight2] == 0)
					    {
						    format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    fornd = 1;
					    }
					    else if(Cooking[playerid][pCWeight3] == 0)
					    {
						    format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight3] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID3] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    fornd = 1;
					    }
					    else if(Cooking[playerid][pCWeight4] == 0)
					    {
						    format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight4] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID4] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    fornd = 1;
					    }
					    else if(Cooking[playerid][pCWeight5] == 0)
					    {
						    format(string, sizeof(string), "Você preparou %s", FishNames[Fishes[playerid][pFishID]]);
						    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight5] = Fishes[playerid][pLastWeight];
						    Cooking[playerid][pCookID5] = Fishes[playerid][pFishID];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    fornd = 1;
					    }
					    else
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
					        return 1;
					    }
					    if(fornd)
					    {
					        ClearFishID(playerid, Fishes[playerid][pLastFish]);
				            Fishes[playerid][pLastFish] = 0;
				            Fishes[playerid][pFishID] = 0;
					    }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Você ainda não fisgou um peixe !");
				        return 1;
				    }
				}
				else if(strcmp(x_nr,"peixe",true) == 0)
				{
				    new fornd = 0;
				    tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /cozinhar peixe [peixenumero]");
						return 1;
					}
					new fishid = strval(tmp);
					if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   Número de Peixes tem que ser entre 1 e 5 !"); return 1; }
					else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(1) !"); return 1; }
					else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(2) !"); return 1; }
					else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(3) !"); return 1; }
					else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(4) !"); return 1; }
					else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não pegou um peixe na bolsa número(5) !"); return 1; }
					if(Cooking[playerid][pCWeight1] == 0)
					{
					    if(fishid == 1)
					    {
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight1];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid1];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
					    	SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
					    }
						else if(fishid == 2)
					 	{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight1] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID1] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						fornd = 1;
		    		}
					else if(Cooking[playerid][pCWeight2] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID2] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight2];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid2];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 3)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight3];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid3];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 4)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight4];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid4];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						else if(fishid == 5)
						{
						    format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
						    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
						    Cooking[playerid][pCWeight2] = Fishes[playerid][pWeight5];
						    Cooking[playerid][pCookID2] = Fishes[playerid][pFid5];
						    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
						    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						}
						fornd = 1;
		    		}
					else if(Cooking[playerid][pCWeight3] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
    					}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight3] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID3] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						fornd = 1;
   					}
					else if(Cooking[playerid][pCWeight4] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight4] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID4] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
    					}
						fornd = 1;
		    		}
					else if(Cooking[playerid][pCWeight5] == 0)
					{
						if(fishid == 1)
					    {
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish1]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight1];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid1];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 2)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish2]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight2];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid2];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 3)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish3]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight3];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid3];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 4)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish4]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight4];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid4];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						else if(fishid == 5)
						{
							format(string, sizeof(string), "Você preparou %s", Fishes[playerid][pFish5]);
							strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							Cooking[playerid][pCWeight5] = Fishes[playerid][pWeight5];
							Cooking[playerid][pCookID5] = Fishes[playerid][pFid5];
							format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
			    		}
						fornd = 1;
   					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
					    return 1;
		    		}
					if(fornd)
					{
					    ClearFishID(playerid, fishid);
						Fishes[playerid][pLastFish] = 0;
			   			Fishes[playerid][pFishID] = 0;
					}
				}
				else if(strcmp(x_nr,"frango",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,369.9786,-4.0798,1001.8589))
				    {//Cluckin Bell
				        if(Groceries[playerid][pChicken] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "Preparou Frango");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "Preparou Frango");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "Preparou Frango");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "Preparou Frango");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "Preparou Frango");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pChicken];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pChickens] = 0; Groceries[playerid][pChicken] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Você não tem nem um frango !");
				            return 1;
				        }
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Você precisa ir até uma Cluckin Bell para /cozinhar isso !");
					    return 1;
				    }
				}
				else if(strcmp(x_nr,"hamburger",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,376.4466,-60.9574,1001.5078) || PlayerToPoint(3.0,playerid,378.1215,-57.4928,1001.5078))
					{//Burgershot
					    if(Groceries[playerid][pHamburger] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "Preparou Hamburgers");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "Preparou Hamburgers");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "Preparou Hamburgers");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "Preparou Hamburgers");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "Preparou Hamburgers");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pHamburgers] = 0; Groceries[playerid][pHamburger] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Você não tem nem um hamburger !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você precisa ir a uma Burger Shot para /cozinhar isso !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"pizza",true) == 0)
				{
				    if(PlayerToPoint(3.0,playerid,374.1185,-113.6361,1001.4922) || PlayerToPoint(3.0,playerid,377.7971,-113.7668,1001.4922))
					{//Well Stacked Pizza
					    if(Groceries[playerid][pPizza] != 0)
				        {
				            if(Cooking[playerid][pCWeight1] == 0)
						    {
							    format(string, sizeof(string), "Preparou Pizza");
							    strmid(Cooking[playerid][pCook1], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight1] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID1] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook1],Cooking[playerid][pCWeight1]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight2] == 0)
						    {
							    format(string, sizeof(string), "Preparou Pizza");
							    strmid(Cooking[playerid][pCook2], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight2] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID2] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook2],Cooking[playerid][pCWeight2]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight3] == 0)
						    {
							    format(string, sizeof(string), "Preparou Pizza");
							    strmid(Cooking[playerid][pCook3], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight3] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID3] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook3],Cooking[playerid][pCWeight3]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight4] == 0)
						    {
							    format(string, sizeof(string), "Preparou Pizza");
							    strmid(Cooking[playerid][pCook4], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight4] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID4] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook4],Cooking[playerid][pCWeight4]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else if(Cooking[playerid][pCWeight5] == 0)
						    {
							    format(string, sizeof(string), "Preparou Pizza");
							    strmid(Cooking[playerid][pCook5], string, 0, strlen(string), 255);
							    Cooking[playerid][pCWeight5] = Groceries[playerid][pHamburger];
							    Cooking[playerid][pCookID5] = 30;
							    Groceries[playerid][pPizzas] = 0; Groceries[playerid][pPizza] = 0;
							    format(string, sizeof(string), "* Você fez %s, peso %d LBS.",Cooking[playerid][pCook5],Cooking[playerid][pCWeight5]);
							    SendClientMessage(playerid,COLOR_LIGHTBLUE, string);
						    }
						    else
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   Você não tem espaço na sua lista de preparo !");
						        return 1;
						    }
				        }
				        else
				        {
				            SendClientMessage(playerid, COLOR_GREY, "   Você não tem nem uma pizza !");
				            return 1;
				        }
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você precisa ir a uma Well Stacked Pizza parar /cozinhar isso !");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Número de preparo inválido !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não está em nem um lugar de cozimento (Cluckin Bell / Burger Shot / Well Stacked Pizza).");
	            return 1;
	        }
	    }
	    return 1;
	}
 	if(strcmp(cmd,"/cozido",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cozidos __________________|");
	        format(string, sizeof(string), "** (1) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook1], Cooking[playerid][pCWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook2], Cooking[playerid][pCWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook3], Cooking[playerid][pCWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook4], Cooking[playerid][pCWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) Cozido: %s.   Peso: %d.", Cooking[playerid][pCook5], Cooking[playerid][pCWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	    return 1;
 	}
	if(strcmp(cmd,"/pescar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pFishes] > 500)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   pescaram muitos peixes, espere até a sua reduzida !");
	            return 1;
	        }
	        if(Fishes[playerid][pWeight1] > 0 && Fishes[playerid][pWeight2] > 0 && Fishes[playerid][pWeight3] > 0 && Fishes[playerid][pWeight4] > 0 && Fishes[playerid][pWeight5] > 0)
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você já pegou 5 Peixes, /vender(24-7) ou /comer(lojas de comida) ou liberte-os primeiro !");
	            return 1;
	        }
	        new Veh = GetPlayerVehicleID(playerid);
	        if((IsAtFishPlace(playerid)) || IsABoat(Veh))
	        {
	            new Caught;
	            new rand;
	            new fstring[MAX_PLAYER_NAME];
	            new Level = PlayerInfo[playerid][pFishSkill];
	            if(Level >= 0 && Level <= 50) { Caught = random(20)-7; }
	            else if(Level >= 51 && Level <= 100) { Caught = random(50)-20; }
	            else if(Level >= 101 && Level <= 200) { Caught = random(100)-50; }
	            else if(Level >= 201 && Level <= 400) { Caught = random(160)-60; }
	            else if(Level >= 401) { Caught = random(180)-70; }
	            rand = random(FishNamesNumber);
	            if(Caught <= 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Os Peixes fugiram de você, Tente de Novo !");
	                return 1;
	            }
	            else if(rand == 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 casaco e o jogou fora !");
	                return 1;
	            }
	            else if(rand == 4)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 calça e a jogou fora !");
	                return 1;
	            }
	            else if(rand == 7)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 latinha e a jogou fora !");
	                return 1;
	            }
	            else if(rand == 10)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você pegou 1 par de sapatos e jogou fora !");
	                return 1;
	            }
	            else if(rand == 13)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você pegou algum lixo e jogou fora !");
	                return 1;
	            }
	            else if(rand == 20)
	            {
	                new mrand = random(500);
	                format(string, sizeof(string), "* Você pegou 1 saco de dinheiro,contendo R$%d.", mrand);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	                GranaTheus(playerid, mrand);
	                return 1;
	            }
		        if(PlayerInfo[playerid][pFishLic] < 1)
		        {
					SetPlayerCriminal(playerid,255, "Pesca Ilegal!");
				}
		        if(Fishes[playerid][pWeight1] == 0)
		        {
		        	PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish1], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight1] = Caught;
					format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish1], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 1;
					Fishes[playerid][pFid1] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora é de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
     			}
		        else if(Fishes[playerid][pWeight2] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish2], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight2] = Caught;
					format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish2], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 2;
					Fishes[playerid][pFid2] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora é de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight3] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish3], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight3] = Caught;
					format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish3], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 3;
					Fishes[playerid][pFid3] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora é de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight4] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish4], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight4] = Caught;
					format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish4], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 4;
					Fishes[playerid][pFid4] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora é de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else if(Fishes[playerid][pWeight5] == 0)
		        {
		            PlayerInfo[playerid][pFishes] += 1;
		            PlayerInfo[playerid][pFishSkill] += 1;
		            format(fstring, sizeof(fstring), "%s", FishNames[rand]);
					strmid(Fishes[playerid][pFish5], fstring, 0, strlen(fstring), 255);
					Fishes[playerid][pWeight5] = Caught;
					format(string, sizeof(string), "* Voce pescou uma %s, pesando %d Lbs.", Fishes[playerid][pFish5], Caught);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					Fishes[playerid][pLastWeight] = Caught;
					Fishes[playerid][pLastFish] = 5;
					Fishes[playerid][pFid5] = rand;
					Fishes[playerid][pFishID] = rand;
					if(Caught > PlayerInfo[playerid][pBiggestFish])
					{
					    format(string, sizeof(string), "* Seu antigo recorde de %d Lbs foi quebrado, Seu novo recorde agora é de %d Lbs.", PlayerInfo[playerid][pBiggestFish], Caught);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pBiggestFish] = Caught;
					}
		        }
		        else
		        {
		            SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhum espaço para o seu peixe !");
		            return 1;
		        }
	            if(PlayerInfo[playerid][pFishSkill] == 50)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Nível de Pesca Agora é nível 2, Agora você pode capturar peixes mais pesados."); }
				else if(PlayerInfo[playerid][pFishSkill] == 250)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Nível de Pesca Agora é nível 3, Agora você pode capturar peixes mais pesados."); }
				else if(PlayerInfo[playerid][pFishSkill] == 500)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Nível de Pesca Agora é nível 4, Agora você pode capturar peixes mais pesados."); }
				else if(PlayerInfo[playerid][pFishSkill] == 1000)
				{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Nível de Pesca Agora é nível 5, Agora você pode capturar peixes mais pesados."); }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não está em um lugar Pesca (Parque Gleen) ou em um barco de pesca !");
	            return 1;
	        }
	    }
	    return 1;
 	}
	if(strcmp(cmd,"/peixes",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Fishes __________________|");
	        format(string, sizeof(string), "** (1) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish1], Fishes[playerid][pWeight1]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (2) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish2], Fishes[playerid][pWeight2]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (3) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish3], Fishes[playerid][pWeight3]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (4) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish4], Fishes[playerid][pWeight4]);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** (5) Peixe: %s.   Peso: %d.", Fishes[playerid][pFish5], Fishes[playerid][pWeight5]);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/soltarpeixe",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /soltarpeixe [peixe]");
				return 1;
			}
			new fishid = strval(tmp);
			if(fishid < 1 || fishid > 5) { SendClientMessage(playerid, COLOR_GREY, "   O Número de Peixes Deve Ser Maior que 1 ou menor que 5 !"); return 1; }
			else if(fishid == 1 && Fishes[playerid][pWeight1] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,número(1) !"); return 1; }
			else if(fishid == 2 && Fishes[playerid][pWeight2] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,número(2) !"); return 1; }
			else if(fishid == 3 && Fishes[playerid][pWeight3] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,número(3) !"); return 1; }
			else if(fishid == 4 && Fishes[playerid][pWeight4] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,número(4) !"); return 1; }
			else if(fishid == 5 && Fishes[playerid][pWeight5] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você nem pegou peixe,número(5) !"); return 1; }
			ClearFishID(playerid, fishid);
			Fishes[playerid][pLastFish] = 0;
   			Fishes[playerid][pFishID] = 0;
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você devolveu o peixe !");
		}
		return 1;
	}
 	if(strcmp(cmd,"/soltarultimo",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pLastFish] > 0)
	        {
	            ClearFishID(playerid, Fishes[playerid][pLastFish]);
	            Fishes[playerid][pLastFish] = 0;
	            Fishes[playerid][pFishID] = 0;
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você devolveu o último peixe !");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você nem mesmo apanhou um peixe ainda !");
	            return 1;
	        }
	    }
	    return 1;
 	}
 	if(strcmp(cmd,"/soltartodos",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        if(Fishes[playerid][pWeight1] > 0 || Fishes[playerid][pWeight2] > 0 || Fishes[playerid][pWeight3] > 0 || Fishes[playerid][pWeight4] > 0 || Fishes[playerid][pWeight5] > 0)
	        {
	            ClearFishes(playerid);
				Fishes[playerid][pLastFish] = 0;
				Fishes[playerid][pFishID] = 0;
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "   Você soltou todos os seus peixes !");
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não pegou nenhum peixe ainda !");
	            return 1;
	        }
	    }
	    return 1;
 	}
	if(strcmp(cmd,"/minhaslicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text1[20];
	        new text2[20];
	        new text3[20];
	        new text4[20];
	        new text5[20];
	        if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
	        if(PlayerInfo[playerid][pFishLic]) { text3 = "Positivo"; } else { text3 = "Negativo"; }
	        if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Licencas __________________|");
	        format(string, sizeof(string), "** Motorista: %s.", text1);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Piloto: %s.", text4);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Marujo: %s.", text2);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Pescador: %s.", text3);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Armas: %s.", text5);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	    return 1;
 	}
	if(strcmp(cmd,"/minhaslicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        new text1[20];
	        new text2[20];
	        new text3[20];
	        new text4[20];
	        new text5[20];
	        if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
            if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
	        if(PlayerInfo[playerid][pFishLic]) { text3 = "Positivo"; } else { text3 = "Negativo"; }
	        if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
	        SendClientMessage(playerid, COLOR_WHITE, "|__________________ Licencas __________________|");
	        format(string, sizeof(string), "** Motorista: %s.", text1);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Piloto: %s.", text4);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Marujo: %s.", text2);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Pescador: %s.", text3);
			SendClientMessage(playerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Armas: %s.", text5);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	    return 1;
 	}
 	if(strcmp(cmd,"/mostrarlicencas",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
	        tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /mostrarlicencas [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Para ver suas licencas [INFO] Use: /minhaslicencas!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    new text1[20];
				        new text2[20];
				        new text3[20];
				        new text4[20];
				        new text5[20];
						if(PlayerInfo[playerid][pCarLic]) { text1 = "Positivo"; } else { text1 = "Negativo"; }
                        if(PlayerInfo[playerid][pFlyLic]) { text4 = "Positivo"; } else { text4 = "Negativo"; }

						if(PlayerInfo[playerid][pBoatLic]) { text2 = "Positivo"; } else { text2 = "Negativo"; }
				        if(PlayerInfo[playerid][pFishLic]) { text3 = "Positivo"; } else { text3 = "Negativo"; }
				        if(PlayerInfo[playerid][pGunLic]) { text5 = "Positivo"; } else { text5 = "Negativo"; }
				        format(string, sizeof(string), "|__________ Licenses of %s __________|", sendername);
				        SendClientMessage(giveplayerid, COLOR_WHITE, string);
				        format(string, sizeof(string), "** Motorista: %s.", text1);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Piloto: %s.", text4);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Marujo: %s.", text2);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Pescador: %s.", text3);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "** Armas: %s.", text5);
						SendClientMessage(giveplayerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s mostrou suas licencas para você.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Você mostrou suas licencas para %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta longe de Você !");
					    return 1;
					}
				}
			}
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   O Jogador está offline !");
	            return 1;
	        }
		}
	    return 1;
 	}
    if(strcmp(cmd, "/dhitman", true) == 0)
	{
	    if(PlayerToPoint(1.0,playerid,1097.1110,-298.1786,73.9921))
	    {
	        if(PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pMembro] == 8)
	        {
            ShowPlayerDialog(playerid, dhitman, DIALOG_STYLE_LIST, "Disfarce", "Civil\nR.O.T.A\nYakuza\nCosa Nostra\nGroove\nBallas\nPolicia Federal\nPolícia Mílitar\nExercito\nAl'qaeda\nTaliban\nHells Angels\nVagos\nComando Vermelho\nAztecas\nFARC\nAmericano", "Buscar", "Cancelar");
            return 1;
		    }
		}
	}
    if(strcmp(cmd, "/dtriads", true) == 0)
	{
	    if(PlayerToPoint(1.0,playerid,-367.6012,-1439.7576,25.7266))
	    {
	        if(PlayerInfo[playerid][pLider] == 24 || PlayerInfo[playerid][pMembro] == 24)
	        {
            	ShowPlayerDialog(playerid, dhitman, DIALOG_STYLE_LIST, "Disfarce", "Civil\nR.O.T.A\nYakuza\nCosa Nostra\nGroove\nBallas\nPolicia Federal\nPolícia Mílitar\nExercito\nAl'qaeda\nTaliban\nHells Angels\nVagos\nComando Vermelho\nAztecas\nFARC\nAmericano", "Buscar", "Cancelar");
            	return 1;
		    }
		}
	}
    if(strcmp(cmdtext, "/infocontratos", true) == 0 || strcmp(cmdtext, "/infocont", true) == 0)
    {
        format(string, sizeof(string), "Hitmans \n\n%d Contratos Concluidos\n\n\nTriads\n%d Contratos Concluidos",InfoCont[1],InfoCont[2]);
        ShowPlayerDialog(playerid,1416,DIALOG_STYLE_MSGBOX,"Contratos Concluidos",string,"Pronto","");
        return 1;
	}
	if(strcmp(cmd,"/laptop",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8 || PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
		    {
			    if(ConnectedToPC[playerid] == 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você desligou seu laptop, e se desconectou de sua Agência.");
			        ConnectedToPC[playerid] = 0;
			        return 1;
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você ligou seu laptop, e se conectou a sua Agência.");
			    SendClientMessage(playerid, COLOR_WHITE, "|___ Agencia dos Assassinos ___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Noticias");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contratos");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - DarCont");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Pedido");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Membros");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Sair");
				SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
				ConnectedToPC[playerid] = 255;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um Assassino!");
		        return 1;
		    }
		}
	    return 1;
	}
	if(strcmp(cmd, "/equiparm", true) == 0)
	{
        new tmpcar = GetPlayerVehicleID(playerid);
        tmp = strtok(cmdtext, idx);
        if(!strlen(tmp))
		if(IsACaminhaozinhoCar(tmpcar)||PlayerToPoint(3, playerid,-2648.0940,1396.4666,906.4609) || PlayerToPoint(3,playerid,675.0715,-1275.7689,13.6334) || HouseEntered[playerid] != 255 || PlayerToPoint(2.0,playerid,-2648.0940,1396.4666,906.4609) || PlayerToPoint(2.0,playerid,811.9582,-1100.8458,25.7857) || PlayerToPoint(2.0,playerid,675.0947,-1275.7603,13.6334) || PlayerToPoint(2.0,playerid,1738.6844,-1944.9553,13.5647))
		{
	        GetPlayerName(playerid, sendername, sizeof(sendername));
	        if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)//Mafiosos
	        {
				if(OnMafiaEquipado[playerid] == 1)
				{
					ResetPlayerWeapons(playerid);
					OnMafiaEquipado[playerid] = 0;
					return 1;
	    		}
                if (PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 12) // Máfia Cosa Nostra
                {
					if (PlayerInfo[playerid][pCargo] == 0)
					{
	   					format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 22, 50);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 1)
					{
		   				format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 22, 50);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
	   					format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 22, 80);
						GivePlayerWeapon(playerid, 29, 150);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 22, 100);
						GivePlayerWeapon(playerid, 29, 200);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
                    }
	 				if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 24, 100);
						GivePlayerWeapon(playerid, 29, 200);
						GivePlayerWeapon(playerid, 31, 200);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 24, 100);
						GivePlayerWeapon(playerid, 29, 200);
						GivePlayerWeapon(playerid, 31, 200);
						GivePlayerWeapon(playerid, 34, 100);
						GivePlayerWeapon(playerid, 5, 1);
						//GivePlayerWeapon(playerid, 16, 2);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
	                    return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 6)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 120);
						GivePlayerWeapon(playerid, 29, 200);
						GivePlayerWeapon(playerid, 31, 200);
						GivePlayerWeapon(playerid, 34, 120);
						GivePlayerWeapon(playerid, 5, 1);
						//GivePlayerWeapon(playerid, 16, 4);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
	   		    }
				if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)// Máfia Yakuza
				{
					if (PlayerInfo[playerid][pCargo] == 0)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 22, 50);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 1)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 22, 50);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 2)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 22, 80);
						GivePlayerWeapon(playerid, 29, 150);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 3)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 50);
						GivePlayerWeapon(playerid, 22, 100);
						GivePlayerWeapon(playerid, 29, 200);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
	 				if (PlayerInfo[playerid][pCargo] == 4)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 24, 100);
						GivePlayerWeapon(playerid, 29, 200);
						GivePlayerWeapon(playerid, 31, 200);
						GivePlayerWeapon(playerid, 5, 1);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 5)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 100);
						GivePlayerWeapon(playerid, 24, 100);
						GivePlayerWeapon(playerid, 29, 200);
						GivePlayerWeapon(playerid, 31, 200);
						GivePlayerWeapon(playerid, 34, 100);
						GivePlayerWeapon(playerid, 5, 1);
						GivePlayerWeapon(playerid, 17, 2);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
                        return 1;
					}
					if (PlayerInfo[playerid][pCargo] == 6)
					{
						format(string, sizeof(string), "* Mafioso %s pega seus equipamentos.", sendername);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						ResetPlayerWeapons(playerid);
						GivePlayerWeapon(playerid, 25, 120);
						GivePlayerWeapon(playerid, 24, 120);
						GivePlayerWeapon(playerid, 29, 200);
						GivePlayerWeapon(playerid, 31, 200);
						GivePlayerWeapon(playerid, 34, 120);
						GivePlayerWeapon(playerid, 5, 1);
						GivePlayerWeapon(playerid, 17, 4);
						SetPlayerArmour(playerid, 100.0);
						SetPlayerHealth(playerid, 100.0);
						OnMafiaEquipado[playerid] = 1;
						return 1;
					}
				}
			}
			if(PlayerInfo[playerid][pMembro] != 12 && PlayerInfo[playerid][pLider] != 12 && PlayerInfo[playerid][pMembro] != 13 && PlayerInfo[playerid][pLider] != 13)
			{
				SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é um Mafioso");
				return 1;
			}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não está na HQ ou em Um BoxVille.");
		}
	}
	if(strcmp(cmd, "/jfora", true) == 0)
	{
	    new Veh = GetPlayerVehicleID(playerid);
 		if((IsAtFishPlace(playerid)) || IsABoat(Veh))
 		{
 		    if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
 		    {
				new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /jfora [name]");
					SendClientMessage(playerid, COLOR_WHITE, "Nomes validos: materiais.");
					return 1;
				}
				if(strcmp(x_nr,"materiais",true) == 0)
				{
			    	if((IsAtFishPlace(playerid)) || IsABoat(Veh))
			    	{
			        	if(MatsHolding[playerid] > 0)
			        	{
							format(string,sizeof(string),"* %s jogou um saco na água.",sendername);
							ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
							MatsHolding[playerid] = 0;
						}
						else
						{
					    	SendClientMessage(playerid, COLOR_LIGHTRED, "Você não tem Materiais para jogá-los na água.");
						}
					}
					else
					{
				    	SendClientMessage(playerid, COLOR_LIGHTRED, "Você não pode jogar os itens ilegais aqui.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "Você não é um Mafioso");
			}
		}
	}
	if(strcmp(cmd, "/mafia",true)==0)
	{
	    if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
    	{
			new x_nr[32];
			x_nr = strtok(cmdtext, idx);
			if(!strlen(x_nr))
            {
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /mafia [name]");
				SendClientMessage(playerid, COLOR_WHITE, "Nomes validos: pegar, trocar.");
				return 1;
			}
			if(strcmp(x_nr,"pegar",true) == 0)
			{
				if(PlayerToPoint(3.0,playerid,1738.6844,-1944.9553,13.5647))
				{
  	    			if(MatsHolding[playerid] >= 55)
  	   				{
         				SendClientMessage(playerid, COLOR_GREY, " Você já tem Pacotes !");
	        			return 1;
        			}
		        	tmp = strtok(cmdtext, idx);
		        	if(!strlen(tmp)) {
						SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /mafia pegar [quantidade]  *Max p/ Vez = 55*");
						return 1;
					}
      				moneys = strval(tmp);
					if(moneys < 1 || moneys > 55) { SendClientMessage(playerid, COLOR_GREY, "   O Números de Pacotes à ser pegos tem que ser mais que 1 e menos que 50 !"); return 1; }
					new price = moneys * 100;
					if(GetGranaTheus(playerid) > price)
					{
    					format(string, sizeof(string), "* Você recebeu %d Pacotes por R$%d.", moneys, price);
				    	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				    	GranaTheus(playerid, - price);
				    	SBizzInfo[16][sbTill] += price;
		                ExtortionSBiz(16, price);
				    	MatsHolding[playerid] = moneys;
				    	return 1;
					}
					else
					{
    					format(string, sizeof(string), "   Você não tem R$%d !", price);
				    	SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
   				else
		    	{
      				SendClientMessage(playerid, COLOR_GREY, " Você não está nas caixas de Materiais na Estação Unity !");
       	 			return 1;
 	  			}
			}
			else if(strcmp(x_nr,"trocar",true) == 0)
			{
			    if(PlayerToPoint(3.0,playerid,1240.3546,-2067.5168,59.9752) || PlayerToPoint(3.0,playerid,1990.8590,-1996.3722,13.5469))
			    {
			        if(MatsHolding[playerid] > 0)
			        {
			            new payout = (100)*(MatsHolding[playerid]);
			            format(string, sizeof(string), "* Você pagou %d para o Armazén pelos seus %d pacotes.", payout, MatsHolding[playerid]);
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			            PlayerInfo[playerid][pMats] += payout;
			            MatsHolding[playerid] = 0;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhum pacote !");
				        return 1;
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você não está nas caixas de Materiais no Casarão !");
			        return 1;
			    }
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/mafiavkit", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	        if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender armas na cadeia!");
	   			return 1;
    		}
			new carid = GetPlayerVehicleID(playerid);
			if(!IsACaminhaozinhoCar(carid))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"Você precisa estar dentro do BoxVille");
				return 1;
			}
	        if (PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13 || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
			{
	            new x_nr[32];
				x_nr = strtok(cmdtext, idx);
				if(!strlen(x_nr))
				{
					SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
					SendClientMessage(playerid,COLOR_GREY,"[INFO] Use: /mafiavkit [1 a 3] [ID do Player] ");
					SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399 Materiais)");
					SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499 Materiais)");
					SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599 Materiais)");
					return 1;
				}
				else if(strcmp(x_nr,"1",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
						SendClientMessage(playerid,COLOR_GREY,"[INFO] Use: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399 Materiais)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499 Materiais)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599 Materiais)");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se vender armas!"); return 1; }
					new carid1 = GetPlayerVehicleID(giveplayerid);
					if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Você não pode vender kit para policiais");
						return 1;
					}
					if(!IsACaminhaozinhoCar(carid1))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"O player para quem você vai vender precisa estar dentro do BoxVille");
						return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
					    if(giveplayerid != INVALID_PLAYER_ID)
					    {
					        GetPlayerName(playerid, sendername, sizeof(sendername));
					        GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				            if(PlayerInfo[playerid][pMats] > 399)
							{
					    		GranaTheus(giveplayerid, -10000);
					    		GranaTheus(playerid, 10000);
					    		PlayerInfo[playerid][pMats] -= 399;
				    			GivePlayerWeapon(giveplayerid, 31, 300);
				    			GivePlayerWeapon(giveplayerid, 29, 200);
				    			GivePlayerWeapon(giveplayerid, 25, 100);
				    			format(string,sizeof(string),"Voce vendeu o kit 1,para %s.",giveplayer);
				    			SendClientMessage(playerid,COLOR_GRAD1,string);
				    			format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
				    			ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    			return 1;
							}
							else
							{
								SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
								return 1;
							}
					        //return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
						SendClientMessage(playerid,COLOR_GREY,"[INFO] Use: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599)");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se vender armas!"); return 1; }
					new carid2 = GetPlayerVehicleID(giveplayerid);
					if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Você não pode vender kit para policiais");
						return 1;
					}
					if(!IsACaminhaozinhoCar(carid2))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"O player para quem você vai vender precisa estar dentro do BoxVille");
						return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
					    GetPlayerName(playerid, sendername, sizeof(sendername));
		       			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					    if(PlayerInfo[playerid][pMats] > 499)
						{
					    	GranaTheus(giveplayerid, -12000);
					    	GranaTheus(playerid, 12000);
					    	PlayerInfo[playerid][pMats] -= 499;
                    		GivePlayerWeapon(giveplayerid, 31, 300);
				    		GivePlayerWeapon(giveplayerid, 29, 200);
				    		GivePlayerWeapon(giveplayerid, 25, 100);
				    		GivePlayerWeapon(giveplayerid, 24, 100);
				    		format(string,sizeof(string),"Voce vendeu o kit 2,para %s.",giveplayer);
				    		SendClientMessage(playerid,COLOR_GRAD1,string);
				    		format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
				    		ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    		return 1;
						}
						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
		            tmp = strtok(cmdtext, idx);
					if(!strlen(tmp))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
						SendClientMessage(playerid,COLOR_GREY,"[INFO] Use: /mafiavkit [1 a 3] [ID do Player] ");
						SendClientMessage(playerid,COLOR_GREY,"Kit 1: Shotgun,m4,mp5(399)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 2: Eagle,Shotgun,m4,mp5(499)");
						SendClientMessage(playerid,COLOR_GREY,"Kit 3: Eagle,Shotgun,m4,mp5,sniper,faca(599)");
					    return 1;
					}
					giveplayerid = ReturnUser(tmp);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se vender armas!"); return 1; }
					new carid3 = GetPlayerVehicleID(giveplayerid);
                    if(IsACop(giveplayerid))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Você não pode vender kit para policiais");
						return 1;
					}
					if(!IsACaminhaozinhoCar(carid3))
					{
						SendClientMessage(playerid,COLOR_GRAD1,"O player para quem você vai vender precisa estar dentro do BoxVille");
						return 1;
					}
					if(IsPlayerConnected(giveplayerid))
					{
					    GetPlayerName(playerid, sendername, sizeof(sendername));
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					    if(PlayerInfo[playerid][pMats] > 599)
						{
					    	GranaTheus(giveplayerid, -15000);
					    	GranaTheus(playerid, 15000);
					    	PlayerInfo[playerid][pMats] -= 599;
                    		GivePlayerWeapon(giveplayerid, 31, 300);
				    		GivePlayerWeapon(giveplayerid, 29, 200);
				    		GivePlayerWeapon(giveplayerid, 24, 100);
				    		GivePlayerWeapon(giveplayerid, 25, 100);
				    		GivePlayerWeapon(giveplayerid, 34, 80);
				    		GivePlayerWeapon(giveplayerid, 4, 1);
				    		format(string,sizeof(string),"Voce vendeu o kit 3,para %s.",giveplayer);
				    		SendClientMessage(playerid,COLOR_GRAD1,string);
				    		format(string,sizeof(string),"* %s vendeu kits para %s.",sendername ,giveplayer);
				    		ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				    		return 1;
						}
						else
						{
							SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender este kit!");
							return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
					    return 1;
					}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid,COLOR_GREY,"Você não é de nenhuma Organização Mafiosa!");
	            return 1;
	        }
	    }
	    return 1;
	}
	if(strcmp(cmd,"/mafiavarma",true)==0)
    {
    	if(PlayerPaintballing[playerid] != 0)
	    {
		   	SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender armas no evento!");
			return 1;
    	}
	    if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender armas na cadeia!");
	   		return 1;
   		}
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pMembro] != 13 && PlayerInfo[playerid][pLider] != 13 && PlayerInfo[playerid][pMembro] != 12 && PlayerInfo[playerid][pLider] != 12)
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você não é de nenhuma Organização Mafiosa!");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			//if (giveplayerid == playerid)
			//{
			//    SendClientMessage(playerid,COLOR_GREY,"Você não pode vender armas pra si mesmo!");
			//    return 1;
			//}
			new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"[INFO] Use: /mafiavarma [ID do Player] [weaponname]");
				SendClientMessage(playerid,COLOR_GREY,"Armas: pistola(50) eagle(200) mp5(150) faca(50) sniper(200)");
				SendClientMessage(playerid,COLOR_GREY,"Armas: flores(25) ak47(200) m4(200) rifle(200)");
				SendClientMessage(playerid,COLOR_GREY,"Armas: fumaca(400) shotgun(150)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			    //if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se vender armas!"); return 1; }
					x_weapon = strtok(cmdtext,idx);
					if(!strlen(x_weapon))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas - Mafiosos __________________|");
						SendClientMessage(playerid,COLOR_GREY,"[INFO] Use: /mafiavarma [ID do Player] [weaponname]");
						SendClientMessage(playerid,COLOR_GREY,"Armas: pistola(50) eagle(200) mp5(150) faca(50) sniper(200)");
						SendClientMessage(playerid,COLOR_GREY,"Armas: flores(25) ak47(200) m4(200) rifle(200)");
						SendClientMessage(playerid,COLOR_GREY,"Armas: fumaca(400) shotgun(150)");
						return 1;
					}
				}
				if(strcmp(x_weapon,"pistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 49) { weapon[playerid] = 23; price[playerid] = 50; ammo[playerid] = 240;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"flores",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"eagle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 24; price[playerid] = 100; ammo[playerid] = 220;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"mp5",true) == 0) {	if(PlayerInfo[playerid][pMats] > 149) { weapon[playerid] = 29; price[playerid] = 100; ammo[playerid] = 360;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] > 149) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 190;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				//else if(strcmp(x_weapon,"spas12",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 27; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 27; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 30; price[playerid] = 200; ammo[playerid] = 360;  } else { SendClientMessage(playerid,COLOR_GREY,"   Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 31; price[playerid] = 200; ammo[playerid] = 360;  } else { SendClientMessage(playerid,COLOR_GREY,"   Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 33; price[playerid] = 200; ammo[playerid] = 230;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"faca",true) == 0) { if(PlayerInfo[playerid][pMats] > 49) { weapon[playerid] = 4; price[playerid] = 50; ammo[playerid] = 1;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"sniper",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 34; price[playerid] = 200; ammo[playerid] = 100;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else if(strcmp(x_weapon,"fumaca",true) == 0) { if(PlayerInfo[playerid][pMats] > 399) { weapon[playerid] = 17; price[playerid] = 200; ammo[playerid] = 12;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				//else if(strcmp(x_weapon,"granada",true) == 0) { if(PlayerInfo[playerid][pMats] > 499) { weapon[playerid] = 16; price[playerid] = 200; ammo[playerid] = 5;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insuficientes para vender esta Arma!"); return 1; } }
				else { SendClientMessage(playerid,COLOR_GREY,"Nome da arma inválida!"); return 1; }
				if (ProxDetectorS(5.0,playerid,giveplayerid))
				{
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(string,sizeof(string),"Voce vendeu %s,um %s com %d ammo,para %d Materiais .",giveplayer,x_weapon,ammo[playerid],price[playerid]);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					SendClientMessage(playerid,COLOR_GRAD1,string);
					format(string,sizeof(string),"Você recebeu uma %s com %d a partir de munição %s.",x_weapon,ammo[playerid],sendername);
					SendClientMessage(giveplayerid,COLOR_GRAD1,string);
					PlayerPlaySound(giveplayerid,1052,0.0,0.0,0.0);
					format(string,sizeof(string),"* %s vendeu armas para %s.",sendername ,giveplayer);
					ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
					//SaveVendas();
				}
				else
				{
					SendClientMessage(playerid,COLOR_GRAD1,"O cliente não esta proximo de você.");
					return 1;
				}
			}
			else
			{
				format(string,sizeof(string),"%d não esta online este player.",giveplayerid);
				SendClientMessage(playerid,COLOR_GRAD1,string);
			}
		}
		return 1;
	}
    if(strcmp(cmd, "/tunar", true) == 0)
	{
	    new org = GetPlayerOrg(playerid);
		if(org != 25) return SendClientMessage(playerid, COLOR_GRAD2, "Você não é dos Drifters");
		{
    	    if(!PlayerToPoint(5.0,playerid,828.9000,-2056.1999,12.6000))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você não está no tunning");
				return true;
			}
 			new playerstate = GetPlayerState(playerid);
 			if(playerstate == PLAYER_STATE_DRIVER || playerstate == PLAYER_STATE_PASSENGER)
 			{
   				return ShowPlayerDialog(playerid, 26547, DIALOG_STYLE_LIST, "Menu Tunning","Reparar Veiculo\nAuto Tunar\nTunning Personalizado\nInstalar Neon\nInstalar Nitro", "Selecionar", "Sair");
 			}
 			else
  			{
		   		return SendClientMessage(playerid, 0xADADADAA, "** Você não está em um veiculo!");
			}
		}
	}
 	if(strcmp(cmd,"/VenderArma",true)==0)
    {
    	if(PlayerInfo[playerid][pJailed] != 0)
    	{
	  	 	SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender armas na cadeia!");
	   		return 1;
    	}
        if(IsPlayerConnected(playerid))
	    {
		    if (PlayerInfo[playerid][pEmprego] != 7)
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você não é um Vendendor de Armas !");
			    return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (giveplayerid == playerid)
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você não pode vender armas pra si mesmo!");
			    return 1;
			}
			new x_weapon[32],weapon[MAX_PLAYERS],ammo[MAX_PLAYERS],price[MAX_PLAYERS];
			tmp = strtok(cmdtext,idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid,COLOR_GRAD1,"[INFO] Use: /VenderArma [ID do Player] [Arma]");
				SendClientMessage(playerid,COLOR_GREY,"Armas: flowers(25) spistola(100) pistola(150) mp5(200) shotgun(200)");
				SendClientMessage(playerid,COLOR_GREY,"Armas: rifle (600) ak47(600) m4(600)");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
					x_weapon = strtok(cmdtext,idx);
					if(!strlen(x_weapon))
					{
						SendClientMessage(playerid,COLOR_WHITE,"|__________________ Vender Armas __________________|");
						SendClientMessage(playerid,COLOR_GREY,"[INFO] Use: /VenderArma [ID do Players] [weaponname]");
						SendClientMessage(playerid,COLOR_GREY,"Armas: spistola(100) eagle(200) mp5(200)");
						SendClientMessage(playerid,COLOR_GREY,"Armas: rifle(600) flores(25) ak47(600) m4(600) rifle(600)");
						return 1;
					}
				}
				//if(strcmp(x_weapon,"knife",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 4; price[playerid] = 100; ammo[playerid] = 1; PlayerInfo[giveplayerid][pGun1] = 4; PlayerInfo[giveplayerid][pAmmo1] = 1; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return 1; } }
				if(strcmp(x_weapon,"spistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 99) { weapon[playerid] = 23; price[playerid] = 100; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				else if(strcmp(x_weapon,"flowers",true) == 0) { if(PlayerInfo[playerid][pMats] > 24) { weapon[playerid] = 14; price[playerid] = 25; ammo[playerid] = 1;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				else if(strcmp(x_weapon,"pistola",true) == 0) { if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 22; price[playerid] = 150; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				else if(strcmp(x_weapon,"mp5",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 29; price[playerid] = 200; ammo[playerid] = 200;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				else if(strcmp(x_weapon,"shotgun",true) == 0) {	if(PlayerInfo[playerid][pMats] > 199) { weapon[playerid] = 25; price[playerid] = 200; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				//else if(strcmp(x_weapon,"spas12",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 27; price[playerid] = 600; ammo[playerid] = 50; PlayerInfo[giveplayerid][pGun2] = 27; PlayerInfo[giveplayerid][pAmmo2] = 50; } else { SendClientMessage(playerid,COLOR_GREY,"Not enough Materials for that Weapon!"); return 1; } }
				else if(strcmp(x_weapon,"ak47",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 30; price[playerid] = 600; ammo[playerid] = 250;  } else { SendClientMessage(playerid,COLOR_GREY,"   Você não tem Materiais para essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"m4",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 31; price[playerid] = 600; ammo[playerid] = 250;  } else { SendClientMessage(playerid,COLOR_GREY,"   Você não tem Materiais para essa arma!"); return 1; } }
				else if(strcmp(x_weapon,"rifle",true) == 0) { if(PlayerInfo[playerid][pMats] > 599) { weapon[playerid] = 33; price[playerid] = 600; ammo[playerid] = 50;  } else { SendClientMessage(playerid,COLOR_GREY,"Materiais insulficiente para Arma!"); return 1; } }
				else { SendClientMessage(playerid,COLOR_GREY,"Nome da arma inválida!"); return 1; }
				if (ProxDetectorS(5.0,playerid,giveplayerid))
				{
				    if(giveplayerid == playerid)
					{
						SendClientMessage(playerid,COLOR_GRAD1,"Você não está numa loja de armas!");
						return 1;
					}
					if(PlayerInfo[playerid][pMiserPerk] > 0)
					{
					    new skill = 2 * PlayerInfo[playerid][pMiserPerk];
					    new mats = price[playerid] / 100;
					    price[playerid] -= (mats)*(skill);
					}
					ConsumingMoney[playerid] = 1;
					GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
					GetPlayerName(playerid,sendername,sizeof(sendername));
					format(string,sizeof(string),"Voce vendeu %s,um %s com %d ammo,para %d Materiais .",giveplayer,x_weapon,ammo[playerid],price[playerid]);
					PlayerPlaySound(playerid,1052,0.0,0.0,0.0);
					SendClientMessage(playerid,COLOR_GRAD1,string);
					format(string,sizeof(string),"Você recebeu uma %s com %d a partir de munição %s.",x_weapon,ammo[playerid],sendername);
					SendClientMessage(giveplayerid,COLOR_GRAD1,string);
					PlayerPlaySound(giveplayerid,1052,0.0,0.0,0.0);
					format(string,sizeof(string),"* %s vendeu armas para %s.",sendername ,giveplayer);
					ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GivePlayerWeapon(giveplayerid,weapon[playerid],ammo[playerid]);
					PlayerInfo[playerid][pMats] -= price[playerid];
				}
				else
				{
					SendClientMessage(playerid,COLOR_GRAD1,"O cliente nao esta proximo de Você.");
					return 1;
				}
			}
			else
			{
				format(string,sizeof(string),"%d não está online.",giveplayerid);
				SendClientMessage(playerid,COLOR_GRAD1,string);
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/abastecer", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            tmp = strtok(cmdtext, idx);
            new gastanto;
			if(!strlen(tmp))
			{
			gastanto = 100;
			}
			else
			{
			gastanto = strval(tmp);
			}


            if(gastanto > 100 || gastanto < 1)
            {
            SendClientMessage(playerid, COLOR_WHITE, " Gasolina: Litros [de 1 à 100]!");
        return 1;
        }
            if(IsAtGasStation(playerid))
			{

                Refueling[playerid] = gastanto;
    			GasETanto[playerid] = Gas[GetPlayerVehicleID(playerid)]+Refueling[playerid];
   				if(GasETanto[playerid] > 100) { GasETanto[playerid] = 100; }
				//GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~Re-Abastecendo, Aguarde!",2000,3);
                format(gstring,sizeof(gstring)," Reabastecendo Seu carro com %d Litros de Combustivel, Aguarde.",gastanto);
                SendClientMessage(playerid,COLOR_LIGHTBLUE,gstring);
                TogglePlayerControllable(playerid, 0);
                Abastecendo(playerid);
			}
			else if(IsAtGasStationgang(playerid))
			{
				SetTimer("GasGang",RefuelWait,0);
				Refuelinggang[playerid] = 1;
                GameTextForPlayer(playerid,"~w~~n~~n~~n~~n~~n~~n~~n~~n~~n~ Aguarde!",2000,3);
			}
            else
            {
				SendClientMessage(playerid,COLOR_GREY,"   Você não está em um posto de Gasolina");
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/abteste", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(PlayerInfo[playerid][pAdmin] > 1)
			{
			tmp = strtok(cmdtext, idx);
            new gastanto;
			gastanto = strval(tmp);
				Gas[GetPlayerVehicleID(playerid)] = gastanto;
                format(gstring,sizeof(gstring)," Reabastecendo Seu carro com %d Litros de Combustivel, teste.",gastanto);
                SendClientMessage(playerid,COLOR_LIGHTBLUE,gstring);
			}
		}
    	return 1;
	}
	if(strcmp(cmd, "/imo", true) ==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
	    	if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return 1;
			}
			if(gTeam[playerid] == 2 || IsACop(playerid) || IsAGOV(playerid))
			{
			    if(IsPlayerInAnyVehicle(playerid))
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Não é possivel imobilizar de dentro do carro !");
			        return 1;
			    }
			    new suspect = GetClosestPlayer(playerid);
			    if(IsPlayerConnected(suspect))
				{
				    if(PlayerCuffed[suspect] > 0)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Suspeito Imobilizado !");
				        return 1;
				    }
				    if(GetDistanceBetweenPlayers(playerid,suspect) < 3)
					{
					    if(IsPlayerInAnyVehicle(suspect))
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   O suspeito está em um carro, faça ele descer antes !");
					        return 1;
					    }
    					if(IsACop(giveplayerid))
						{
							SendClientMessage(playerid, COLOR_GRAD1, "Você não pode dar imo em Policiais!");
							return 1;
						}
					    GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você foi imobilizado por %s por 20 segundos.", sendername);
						SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Você imobilizou o(a) %s por 20 segundos.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s Imobilizou %s, para não fugir.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(suspect, "~r~Imobilizado", 2500, 3);
						TogglePlayerControllable(suspect, 0);
						ApplyAnimation(suspect, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
						PlayerCuffed[suspect] = 1;
						PlayerCuffedTime[suspect] = 20;
		            }
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Ele não está perto de Você!");
					    return 1;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial !");
			}
		}//not connected
	    return 1;
	}
if(strcmp(cmd, "/algemar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(!IsACop(playerid))
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
                return true;
            }
            if(OnDuty[playerid] != 1)
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
                return true;
            }
            tmp = strtok(cmdtext, idx);
            if(!strlen(tmp))
            {
                SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /algemar [id]");
                return true;
            }
            giveplayerid = ReturnUser(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(gTeam[giveplayerid] == 2 || IsACop(giveplayerid))
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   Você não pode algemar COPs !");
                        return true;
                    }
                    if(PlayerCuffed[giveplayerid] > 0)
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador já esta algemado !");
                        return true;
                    }
                    if (ProxDetectorS(8.0, playerid, giveplayerid))
                    {
	                	if(giveplayerid == playerid)
						{
							SendClientMessage(playerid, COLOR_GREY, "Você nao pode se algemar!");
							return true;
						}
                    	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                    	GetPlayerName(playerid, sendername, sizeof(sendername));
                    	PlayerPlaySound(giveplayerid, 5201, 0.0, 0.0, 0.0);
                    	SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
				        SetPlayerAttachedObject(giveplayerid, 4, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
                    	format(string, sizeof(string), "* Você foi algemado pelo: %s.", PlayerName(playerid));
                    	SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                    	format(string, sizeof(string), "* Você algemou %s.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s Algemou %s, para nao fugir.", sendername ,giveplayer);
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        GameTextForPlayer(giveplayerid, "~r~Algemado", 2500, 3);
                        SetPlayerAttachedObject(giveplayerid, 4, 19418, 6, -0.031999, 0.024000, -0.024000, -7.900000, -32.000011, -72.299987, 1.115998, 1.322000, 1.406000);
                        SetPlayerSpecialAction(giveplayerid, 24);
                        PlayerCuffed[giveplayerid] = 2;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
                        return true;
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
                return true;
            }
        }
        return true;
    }
	if(strcmp(cmd, "/desalgemar", true) == 0)
    {
        if(IsPlayerConnected(playerid))
        {
            if(gTeam[playerid] == 2 || IsACop(playerid))
            {
                tmp = strtok(cmdtext, idx);
                if(!strlen(tmp)) {
                    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /desalgemar [id]");
                    return 1;
                }
                giveplayerid = ReturnUser(tmp);
                if(IsPlayerConnected(giveplayerid))
                {
                    if(giveplayerid != INVALID_PLAYER_ID)
                    {
                        if (ProxDetectorS(8.0, playerid, giveplayerid))
                        {
                            if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se desalgemar!"); return 1; }
                            if(PlayerCuffed[giveplayerid])
                            {
                                ClearAnimations(giveplayerid);
                                RemovePlayerAttachedObject(giveplayerid,4);
                                SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
                                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
                                GetPlayerName(playerid, sendername, sizeof(sendername));
                                format(string, sizeof(string), "* Você foi desalgemado pelo: %s.", sendername);
                                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Você desalgemou %s.", giveplayer);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                GameTextForPlayer(giveplayerid, "~g~Desalgemado", 2500, 3);
                                TogglePlayerControllable(giveplayerid, 1);
                                PlayerCuffed[giveplayerid] = 0;
                                PlayerInfo[giveplayerid][pMuted] = 0;
                            }
                            else
                            {
                                SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está algemado !");
                                return 1;
                            }
                        }
                        else
                        {
                            SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de você !");
                            return 1;
                        }
                    }
                }
                else
                {
                    SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
                    return 1;
                }
            }
            else
            {
                SendClientMessage(playerid, COLOR_GREY, "   Você não é PM/PF/PC/Exercito !");
            }
        }
        return 1;
    }
    if(strcmp(cmd, "/procurar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
      		if(PlayerInfo[playerid][pEmprego] != 1)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Detetive !");
				return 1;
		    }
			if(UsedFind[playerid] != 0 && PlayerInfo[playerid][pDetSkill] < 401)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você só pode procurar novamente, daqui a 2 Minutos !");
			    return 1;
			}
		    tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /procurar [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        DisablePlayerCheckpoint(playerid);
					GetPlayerName(giveplayerid, OutroNome, sizeof(OutroNome));
					new Float:X, Float:Y, Float:Z;
					GetPlayerPos(giveplayerid, X, Y, Z);
					SetPlayerCheckpoint(playerid, X, Y, Z, 6);
					GameTextForPlayer(playerid, "~w~Siga o checkpoint !", 2500, 1);
					PlayerInfo[playerid][pDetSkill] ++;
					UsedFind[playerid] = 1;
					if(PlayerInfo[playerid][pDetSkill] == 2)	SendClientMessage(playerid, COLOR_YELLOW, "Seu nível de detetive agora é 2, você pode procurar mais rápido e encontrar mais rápido.");
					else if(PlayerInfo[playerid][pDetSkill] == 3)	SendClientMessage(playerid, COLOR_YELLOW, "Seu nível de detetive agora é 3, você pode procurar mais rápido e encontrar mais rápido.");
					else if(PlayerInfo[playerid][pDetSkill] == 4)	SendClientMessage(playerid, COLOR_YELLOW, "Seu nível de detetive agora é 4, você pode procurar mais rápido e encontrar mais rápido.");
					else if(PlayerInfo[playerid][pDetSkill] == 5)	SendClientMessage(playerid, COLOR_YELLOW, "Seu nível de detetive agora é 5, você pode procurar mais rápido e encontrar mais rápido.");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Esse não é um jogador ativo !");
			}
		}
	    return 1;
	}
	if(strcmp(cmd, "/proteger", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 6)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é um segurança!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /proteger [id] [preço]");
				return 1;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preço mínimo 1, máximo 99999!"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não pode se proteger !");
					        return 1;
					    }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você se ofereceu para proteger %s por R$%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Segurança %s ofereceu segurança por R$%d, (Digite /aceitar segurança) para aceitar.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						GuardOffer[giveplayerid] = playerid;
						GuardPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está Offline!");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/soltar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você não é um Advogado!");
		        return 1;
		    }
		    if(PlayerInfo[playerid][pLawSkill] >= 400)
		    {
		        ApprovedAdvogado[playerid] = 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /soltar [id][preço]");
				SendClientMessage(playerid, COLOR_GRAD2, "Obs: Você só pode soltar em um Departamento de Policia!");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /Soltar [id] [Preço]");
				return 1;
			}
            moneys = strval(tmp);
            if(IsPlayerConnected(giveplayerid))
            {
                if(giveplayerid != INVALID_PLAYER_ID)
                {
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se libertar!"); return 1; }
                    if(PlayerInfo[giveplayerid][pJailed] == 2) { SendClientMessage(playerid, COLOR_GREY, "Você não soltar quem está preso pela Administração!"); return 1; }
					if(PlayerInfo[giveplayerid][pJailed] >= 1 && ApprovedAdvogado[playerid] == 1)
					{
						if(moneys > 99999999) return SendClientMessage(playerid, COLOR_GREY, "Valor muito Grande, Cancelado!");
						if(moneys <= 0) return SendClientMessage(playerid, COLOR_GREY, "Valor inválido!");
						GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você Ofereceu %d para tirar %s da cadeia.", moneys, giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        AdvogPreco[giveplayerid] = moneys;
                        ConviteAdv[giveplayerid] = playerid;
                        format(strtheus,sizeof(strtheus),"{FF8000}Advogado:{00FFFF} %s {FF8000}Enviou um Convite para te Soltar da prisão.\nPreço: {00FFFF}%d{FF8000}\nCaso Queira aceitar ser Solto Aperte em '{00FFFF}Aceitar{FF8000}'!\nCaso contrário aperte em '{00FFFF}Recusar{FF8000}'!",PlayerName(playerid),moneys);
                        ShowPlayerDialog(giveplayerid,1879,DIALOG_STYLE_MSGBOX,"Advogado Brasil PlayStart",strtheus,"Aceitar","Recusar");
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Você não Tem autorização para soltar ou o jogador está longe!");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O jogador está offline!");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd,"/cancelar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cancelar __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /cancelar [nome]");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Sexo, Drogas, reparo, Advogado, segurança, aovivo, Abastecimento, Carro, Boxe");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Taxi, Onibus, Medico, Mecanico, Policia, mendigo, convite");
				return 1;
			}
			if(strcmp(x_Emprego,"sexo",true) == 0) {	SexOffer[playerid] = 999; SexPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"convite",true) == 0) { InviteOffer[playerid] = 999; InviteJob[playerid] = 0; }
			else if(strcmp(x_Emprego,"mendigo",true) == 0) { MendigoOffer[playerid] = 999; MendigoPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"drogas",true) == 0) { DrugOffer[playerid] = 999; DrugPrice[playerid] = 0; DrugGram[playerid] = 0; }
			else if(strcmp(x_Emprego,"reparo",true) == 0) {	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
			else if(strcmp(x_Emprego,"segurança",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"aovivo",true) == 0) { LiveOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"assalto",true) == 0) { OfAssalto[playerid] = 999; precoassalto[playerid] = 0; }
			else if(strcmp(x_Emprego,"abastecercarro",true) == 0) { RefillOffer[playerid] = 999; RefillPrice[playerid] = 0; }
			else if(strcmp(x_Emprego,"carro",true) == 0) { CarOffer[playerid] = 999; CarPrice[playerid] = 0; CarID[playerid] = 0; }
			else if(strcmp(x_Emprego,"Boxe",true) == 0) { BoxOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"padrinho",true) == 0) { MarryWitnessOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"casamento",true) == 0) { ProposeOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"divorcio",true) == 0) { DivorceOffer[playerid] = 999; }
			else if(strcmp(x_Emprego,"multa",true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
			else if(strcmp(x_Emprego,"taxi",true) == 0)
			{
			        if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
			        {
			            TaxiAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						TaxiCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						TaxiCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
                        for(new i = 0; i < MaiorID; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(TaxiAccepted[i] < 999)
						        {
							        if(TaxiAccepted[i] == playerid)
							        {
							            TaxiAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            TaxiCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"bus",true) == 0 || strcmp(x_Emprego,"onibus",true) == 0)
			{
			        if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
			        {
			            BusAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						BusCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						BusCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
      for(new i = 0; i < MaiorID; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(BusAccepted[i] < 999)
						        {
							        if(BusAccepted[i] == playerid)
							        {
							            BusAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            BusCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"mecanico",true) == 0)
			{
			        if(MechanicCallTime[playerid] > 0)
			        {
			            MechanicAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						MechanicCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						MechanicCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } }
      for(new i = 0; i < MaiorID; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(MechanicAccepted[i] < 999)
						        {
							        if(MechanicAccepted[i] == playerid)
							        {
							            MechanicAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            MechanicCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"medico",true) == 0)
			{
			        if(MedicCallTime[playerid] > 0)
			        {
			            MedicAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						MedicCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						MedicCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } }
      for(new i = 0; i < MaiorID; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(MedicAccepted[i] < 999)
						        {
							        if(MedicAccepted[i] == playerid)
							        {
							            MedicAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Paciente~n~~r~Cancelou a Chamada", 5000, 1);
							            MedicCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else if(strcmp(x_Emprego,"policia",true) == 0)
			{
			        if(CopsrondaCallTime[playerid] > 0)
			        {
			            CopsrondaAccepted[playerid] = 999;
						GameTextForPlayer(playerid, "~w~Voce~n~~r~Cancelou a Chamada", 5000, 1);
						CopsrondaCallTime[playerid] = 0;
						DisablePlayerCheckpoint(playerid);
						CopsrondaCall = 999;
			        }
			        else
			        {
						if(IsPlayerConnected(CopsrondaCall)) { if(CopsrondaCall == playerid) { CopsrondaCall = 999; } }
      for(new i = 0; i < MaiorID; i++)
						{
						    if(IsPlayerConnected(i))
						    {
						        if(CopsrondaAccepted[i] < 999)
						        {
							        if(CopsrondaAccepted[i] == playerid)
							        {
							            CopsrondaAccepted[i] = 999;
							            GameTextForPlayer(i, "~w~Cliente~n~~r~Cancelou a Chamada", 5000, 1);
							            CopsrondaCallTime[i] = 0;
							            DisablePlayerCheckpoint(i);
						        }
						    }
						}
					}
				}
			}
			else { return 1; }
			format(string, sizeof(string), "* Você cancelou: %s.", x_Emprego);
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}//not connected
		return 1;
	}
//aceitar COMMANDS (Cops)
	if(strcmp(cmd,"/aceitar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
			new x_Emprego[32];
			x_Emprego = strtok(cmdtext, idx);
			if(!strlen(x_Emprego)) {
				SendClientMessage(playerid, COLOR_WHITE, "|__________________ Aceitar __________________|");
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: aceitar [nome]");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Transa, drogas, Reparo, Advogado, segurança, emprego, aovivo, Refill , Assalto");
				SendClientMessage(playerid, COLOR_GREY, "Nomes Validos: Carro, Taxi, Onibus, Boxe, Medico, Mecanico, Multa ,divorcio, mendigo, convite");
				return 1;
			}
			if(strcmp(x_Emprego,"convite",true) == 0)
			{
				if(InviteOffer[playerid] < 999)
			    {
					if(IsPlayerConnected(InviteOffer[playerid]))
					{
                        if(PlayerInfo[InviteOffer[playerid]][pLider] != 0)
                        {
							if(PlayerInfo[InviteOffer[playerid]][pLider] == 1) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 282; SetPlayerSkin(playerid, 282); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 2) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 3) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 4) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; ChosenSkin[playerid] = 279; SetPlayerSkin(playerid, 279); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 5) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 114); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 6) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 121; SetPlayerSkin(playerid, 121); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 7) { PlayerInfo[playerid][pTeam] = 7; gTeam[playerid] = 7; ChosenSkin[playerid] = 163; SetPlayerSkin(playerid, 163); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 8) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 9) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 10) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 253; SetPlayerSkin(playerid, 253); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 11) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 12) { PlayerInfo[playerid][pTeam] = 22; gTeam[playerid] = 12; ChosenSkin[playerid] = 126; SetPlayerSkin(playerid, 126); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 13) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 203; SetPlayerSkin(playerid, 203); }
							else if(PlayerInfo[InviteOffer[playerid]][pLider] == 14) { PlayerInfo[playerid][pTeam] = 15; gTeam[playerid] = 12; ChosenSkin[playerid] = 107; SetPlayerSkin(playerid, 107); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 15) { PlayerInfo[playerid][pTeam] = 16; gTeam[playerid] = 17; ChosenSkin[playerid] = 30; SetPlayerSkin(playerid, 30); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 16) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 17) { PlayerInfo[playerid][pTeam] = 18; gTeam[playerid] = 12; ChosenSkin[playerid] = 103; SetPlayerSkin(playerid, 103); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 18) { PlayerInfo[playerid][pTeam] = 19; gTeam[playerid] = 12; ChosenSkin[playerid] = 109; SetPlayerSkin(playerid, 109); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 19) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 40; SetPlayerSkin(playerid, 40); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 20) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 47; SetPlayerSkin(playerid, 47); }
					        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 21) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 247; SetPlayerSkin(playerid, 247); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 22) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 181; SetPlayerSkin(playerid, 181); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 23) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 101; SetPlayerSkin(playerid, 101); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 24) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 25) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 101; SetPlayerSkin(playerid, 29); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 26) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 230; SetPlayerSkin(playerid, 230); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 27) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 247; SetPlayerSkin(playerid, 247); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 28) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 29) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 230; SetPlayerSkin(playerid, 230); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 30) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 31) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 18; SetPlayerSkin(playerid, 18); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 32) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 33) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 3; SetPlayerSkin(playerid, 3); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pLider] == 34) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 20; ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 280); }
						}
						else
						{
	                        if(PlayerInfo[InviteOffer[playerid]][pMembro] == 1) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 282; SetPlayerSkin(playerid, 282); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 2) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 285; SetPlayerSkin(playerid, 285); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 3) { PlayerInfo[playerid][pTeam] = 2; gTeam[playerid] = 2; ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 4) { PlayerInfo[playerid][pTeam] = 1; gTeam[playerid] = 1; ChosenSkin[playerid] = 279; SetPlayerSkin(playerid, 279); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 5) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 114; SetPlayerSkin(playerid, 114); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 6) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 121; SetPlayerSkin(playerid, 121); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 7) { PlayerInfo[playerid][pTeam] = 7; gTeam[playerid] = 7; ChosenSkin[playerid] = 163; SetPlayerSkin(playerid, 163); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 8) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 9) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 148; SetPlayerSkin(playerid, 148); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 10) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 253; SetPlayerSkin(playerid, 253); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 11) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; ChosenSkin[playerid] = 286; SetPlayerSkin(playerid, 286); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 12) { PlayerInfo[playerid][pTeam] = 22; gTeam[playerid] = 12; ChosenSkin[playerid] = 126; SetPlayerSkin(playerid, 126); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 13) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 203; SetPlayerSkin(playerid, 203); }
							else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 14) { PlayerInfo[playerid][pTeam] = 15; gTeam[playerid] = 12; ChosenSkin[playerid] = 107; SetPlayerSkin(playerid, 107); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 15) { PlayerInfo[playerid][pTeam] = 16; gTeam[playerid] = 17; ChosenSkin[playerid] = 30; SetPlayerSkin(playerid, 30); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 16) { PlayerInfo[playerid][pTeam] = 25; gTeam[playerid] = 2; ChosenSkin[playerid] = 59; SetPlayerSkin(playerid, 59); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 17) { PlayerInfo[playerid][pTeam] = 18; gTeam[playerid] = 12; ChosenSkin[playerid] = 103; SetPlayerSkin(playerid, 103); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 18) { PlayerInfo[playerid][pTeam] = 19; gTeam[playerid] = 12; ChosenSkin[playerid] = 109; SetPlayerSkin(playerid, 109); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 19) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 40; SetPlayerSkin(playerid, 40); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 20) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 47; SetPlayerSkin(playerid, 47); }
					        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 21) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 247; SetPlayerSkin(playerid, 247); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 22) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 181; SetPlayerSkin(playerid, 181); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 23) { PlayerInfo[playerid][pTeam] = 5; gTeam[playerid] = 5; ChosenSkin[playerid] = 101; SetPlayerSkin(playerid, 101); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 24) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 127; SetPlayerSkin(playerid, 127); }
	                        else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 25) { PlayerInfo[playerid][pTeam] = 12; gTeam[playerid] = 12; ChosenSkin[playerid] = 29; SetPlayerSkin(playerid, 29); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 26) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 230; SetPlayerSkin(playerid, 230); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 27) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 247; SetPlayerSkin(playerid, 247); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 28) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 285); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 29) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 177; SetPlayerSkin(playerid, 177); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 30) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 285); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 31) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 180; SetPlayerSkin(playerid, 180); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 32) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 287; SetPlayerSkin(playerid, 287); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 33) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 3; SetPlayerSkin(playerid, 3); }
                            else if(PlayerInfo[InviteOffer[playerid]][pMembro] == 34) { PlayerInfo[playerid][pTeam] = 20; gTeam[playerid] = 12; ChosenSkin[playerid] = 280; SetPlayerSkin(playerid, 280); }
	                    }
						PlayerInfo[playerid][pMembro] = InviteJob[playerid];
						PlayerInfo[playerid][pCargo] = 1;

						new rand = random(sizeof(gInviteSpawns));
						SetPlayerPos(playerid, gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]); // Warp the player
						SetPlayerFacingAngle(playerid, gInviteSpawns[rand][3]);
						SetPlayerCameraPos(playerid,gInviteSpawns[rand][0] + 3, gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						SetPlayerCameraLookAt(playerid,gInviteSpawns[rand][0], gInviteSpawns[rand][1], gInviteSpawns[rand][2]);
						TogglePlayerControllable(playerid, 0);

					    SelectChar[playerid] = 255;
					    SelectCharID[playerid] = PlayerInfo[playerid][pMembro];
					    SelectCharPlace[playerid] = 1;

					    PlayerInfo[playerid][pSkin] = ChosenSkin[InviteOffer[playerid]];
					    SetPlayerSkin(playerid, ChosenSkin[playerid]);

					    format(gstring,sizeof(gstring), "* %s aceitou seu convite para entrar na sua organização.", PlayerName(playerid));
					   	SendClientMessage(InviteOffer[playerid], COLOR_LIGHTBLUE, gstring);

                        ConviteInfoOrg(PlayerName(playerid), InviteJob[playerid], 1);
						format(gstring, sizeof(gstring), "* Você aceitou o convite de emprego de %s para entrar para: %s, parabéns.", PlayerName(InviteOffer[playerid]), NomeORG(InviteOffer[playerid]));
					   	SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);

                        ShowPlayerDialog(playerid,101,DIALOG_STYLE_MSGBOX,"Convite da Organização","{00FFFF}Você foi convidado para uma Organização\n{FF8000}Escolha o seu skin preferido\n{0080FF}Se você gostar desse Aperte em '{00FFFF}Pronto{0080FF}'\n{0080FF}Se não gostar use '{00FFFF}Próximo{0080FF}'","Próximo","Pronto");
                        format(string,sizeof(string),"Proximo");
	    	            OnPlayerText(playerid,string);
	    	            InviteOffer[playerid] = 999;
	    	            InviteJob[playerid] = 0;
                    }
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "    O jogador que lhe convidou não está conectado.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "    Você não foi convidado para nenhuma organização.");
					return 1;
				}
			}
			else if(strcmp(x_Emprego,"assalto",true) == 0)
			{
			    if(OfAssalto[playerid] < 999)
			    {
			        if(IsPlayerConnected(OfAssalto[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, OfAssalto[playerid]))
						{
				           	GetPlayerName(OfAssalto[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou um assalto de %s e pagou $%d", giveplayer, precoassalto[playerid]);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou seu assalto e pagou $%d.", sendername, precoassalto[playerid]);
			                SendClientMessage(OfAssalto[playerid], COLOR_LIGHTBLUE, string);
							SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
							GranaTheus(playerid, - precoassalto[playerid]);
							GranaTheus(OfAssalto[playerid], precoassalto[playerid]);
							SetPlayerCriminal(OfAssalto[playerid],255, "Assalto");
							OfAssalto[playerid] = 999;
							precoassalto[playerid] = 0;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O Assaltante está longe de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não foi assaltado!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"vida",true) == 0)
			{
			    if(CurarAtivo[playerid] != 999)
			    {
			        if(IsPlayerConnected(CurarAtivo[playerid]) && IsPlayerConnected(playerid))
			        {
				           	GetPlayerName(CurarAtivo[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "~y~Voce foi curado ~n~~w~Medico: %s~n~~g~R$%d", giveplayer,CurarPreco[playerid]);
							GameTextForPlayer(playerid, string, 5000, 1);
							GranaTheus(CurarAtivo[playerid],CurarPreco[playerid]);
							GranaTheus(playerid,-CurarPreco[playerid]);
							new hp = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        hp = 20 * PlayerInfo[CurarAtivo[playerid]][pPainPerk]; hp += 100;
								SetPlayerHealth(playerid, hp);
						    }
						    else
						    {
						        hp = 100;
						        SetPlayerHealth(playerid, 100);
						        PlayerInfo[playerid][pDoenca] = 0;
						    }
						    new colete = 0;
						    if(PlayerInfo[playerid][pPainPerk] > 0)
						    {
						        colete = 0 * PlayerInfo[CurarAtivo[playerid]][pPainPerk]; colete += 100;
								SetPlayerArmour(playerid, colete);
						    }
						    else
						    {
						        colete = 100;
						        SetPlayerArmour(playerid, 100);
						        PlayerInfo[playerid][pDoenca] = 0;
						    }
							PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
							PlayerPlaySound(CurarAtivo[playerid], 1150, 0.0, 0.0, 0.0);
							format(string, sizeof(string), "%s Aceitou a Cura, %d de saude e %d de colete por R$%d",sendername,hp,colete,CurarPreco[playerid]);
							SendClientMessage(CurarAtivo[playerid], COLOR_LIGHTBLUE,string);
							CurarAtivo[playerid] = 999;
							CurarPreco[playerid] = 0;
							if(PlayerInfo[playerid][pDoenca] > 0)
				            {
								PlayerInfo[playerid][pDoenca] = 0;
								SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você não está infectado com nenhuma doença, por causa de cuidados medicos!");
							}
							return 1;
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu Cura!!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"divorcio",true) == 0)
			{
			    if(DivorceOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(DivorceOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid]))
						{
						    GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser testemunha de seu divorcio.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou o seu pedido para ser testemunha do seu divorcio.", sendername);
							SendClientMessage(DivorceOffer[playerid], COLOR_LIGHTBLUE, string);
							ClearMarriage(playerid);
							ClearMarriage(DivorceOffer[playerid]);
							PlayerInfo[playerid][pPHousekey] = 255;
							PlayerInfo[playerid][pPbiskey] = 255;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O jogador que te enviou os papéis do divórcio não está perto de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te enviou qualquer papel de divórcio!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"padrinho",true) == 0)
			{
			    if(MarryWitnessOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(MarryWitnessOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid]))
						{
						    GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou o pedido de %s para ser padrinho de seu casamento.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou o seu pedido para ser padrinho do seu casamento.", sendername);
							SendClientMessage(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, string);
							MarryWitness[MarryWitnessOffer[playerid]] = playerid;
							MarryWitnessOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   O jogador que pediu para ser padrinho de seu casamento não está perto de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem pediu para ser padrinho de seu casamento!");
				    return 1;
				}
			}
	        else if(strcmp(x_Emprego,"casamento",true) == 0)
			{
			    if(ProposeOffer[playerid] < 999)
			    {
			        if(!PlayerToPoint(10.0, playerid, 2233.8225,-1333.2725,23.9816))
			        {
			            SendClientMessage(playerid, COLOR_GREY, "   Você não está na igreja de Los Santos !");
			            return 1;
			        }
			        if(IsPlayerConnected(ProposeOffer[playerid]))
			        {
			            if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid]))
						{
						    if(MarryWitness[ProposeOffer[playerid]] == 999)
						    {
						        SendClientMessage(playerid, COLOR_GREY, "   O jogador não possui um padrinho de casamento!");
						        return 1;
						    }
						    if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]]))
						    {
							    if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]]))
								{
								    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
									GetPlayerName(playerid, sendername, sizeof(sendername));
									format(string, sizeof(string), "* Voce aceitou o pedido de %s para ser seu marido.", giveplayer);
									SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "* %s aceitou o seu pedido para ser sua esposa.", sendername);
									SendClientMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, string);
									format(string, sizeof(string), "Padre: %s voce aceita %s como seu legitimo marido? (use 'sim', qualquer outra coisa cancela o casamento)", sendername, giveplayer);
									SendClientMessage(playerid, COLOR_WHITE, string);
									MarriageCeremoney[playerid] = 1;
									ProposedTo[ProposeOffer[playerid]] = playerid;
									GotProposedBy[playerid] = ProposeOffer[playerid];
									MarryWitness[ProposeOffer[playerid]] = 999;
									ProposeOffer[playerid] = 999;
									return 1;
								}
								else
								{
								    SendClientMessage(playerid, COLOR_GREY, "   O padrinho de casamento nao esta perto de sua noiva/noivo!");
								    return 1;
								}
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "  O jogador não esta perto de você!");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te fez uma proposta!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"multa",true) == 0)
			{
			    if(TicketOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(TicketOffer[playerid]))
			        {
			            if (ProxDetectorS(5.0, playerid, TicketOffer[playerid]))
						{
				           	GetPlayerName(TicketOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você pagou a multa de $%d para o Oficial %s.", TicketMoney[playerid], giveplayer);
							SendClientMessage(playerid, COLOR_WHITE, string);
							format(string, sizeof(string), "* %s pagou a multa de $%d.", sendername, TicketMoney[playerid]);
							SendClientMessage(TicketOffer[playerid], COLOR_WHITE, string);
							GranaTheus(playerid, - TicketMoney[playerid]);
							GranaTheus(TicketOffer[playerid], TicketMoney[playerid]);
							TicketOffer[playerid] = 999;
							TicketMoney[playerid] = 0;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "O policial não está perto de você !");
						    return 1;
						}
			        }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ninguem lhe deu uma multa !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"boxe",true) == 0)
			{
			    if(BoxOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(BoxOffer[playerid]))
			        {
			            new points;
			            new mypoints;
			            GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
			            new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
						if(level >= 0 && level <= 50) { points = 40; }
						else if(level >= 51 && level <= 100) { points = 50; }
						else if(level >= 101 && level <= 200) { points = 60; }
						else if(level >= 201 && level <= 400) { points = 70; }
						else if(level >= 401) { points = 80; }
						if(PlayerInfo[playerid][pEmprego] == 8)
						{
							new clevel = PlayerInfo[playerid][pBoxSkill];
							if(clevel >= 0 && clevel <= 50) { mypoints = 40; }
							else if(clevel >= 51 && clevel <= 100) { mypoints = 50; }
							else if(clevel >= 101 && clevel <= 200) { mypoints = 60; }
							else if(clevel >= 201 && clevel <= 400) { mypoints = 70; }
							else if(clevel >= 401) { mypoints = 80; }
						}
						else
						{
						    mypoints = 30;
						}
						format(string, sizeof(string), "* Você aceitou a luta de boxe de %s, e irá lutar com %d de saúde.",giveplayer,mypoints);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s aceitou seu pedido para a luta de boxe, você irá lutar com %d de saúde.",sendername,points);
						SendClientMessage(BoxOffer[playerid], COLOR_LIGHTBLUE, string);
						SetPlayerHealth(playerid, mypoints);
						SetPlayerHealth(BoxOffer[playerid], points);
						SetPlayerInterior(playerid, 5); SetPlayerInterior(BoxOffer[playerid], 5);
						SetPlayerPos(playerid, 762.9852,2.4439,1001.5942); SetPlayerFacingAngle(playerid, 131.8632);
						SetPlayerPos(BoxOffer[playerid], 758.7064,-1.8038,1001.5942); SetPlayerFacingAngle(BoxOffer[playerid], 313.1165);
						TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
						GameTextForPlayer(playerid, "~r~Esperando", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Esperando", 3000, 1);
						new name[MAX_PLAYER_NAME];
						new dstring[MAX_PLAYER_NAME];
						new wstring[MAX_PLAYER_NAME];
						GetPlayerName(playerid, name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "Notícias do Boxe: Lutador de Boxe %s lutará contra %s, em 60 segundos no Ginásio da Groove Street.",  sendername, giveplayer);
							OOCNews(COLOR_WHITE,string);
							TBoxer = playerid;
							BoxDelay = 60;
						}
						GetPlayerName(BoxOffer[playerid], name, sizeof(name));
						format(dstring, sizeof(dstring), "%s", name);
						strmid(wstring, dstring, 0, strlen(dstring), 255);
						if(strcmp(Titel[TitelName] ,wstring, true ) == 0 )
						{
						    format(string, sizeof(string), "Notícias do Boxe: Lutador de Boxe %s lutará contra %s, em 60 segundos no Ginásio da Groove Street.",  giveplayer, sendername);
							OOCNews(COLOR_WHITE,string);
							TBoxer = BoxOffer[playerid];
							BoxDelay = 60;
						}
						BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
						if(BoxDelay < 1) { BoxDelay = 20; }
						InRing = 1;
						Boxer1 = BoxOffer[playerid];
						Boxer2 = playerid;
						PlayerBoxing[playerid] = 1;
						PlayerBoxing[BoxOffer[playerid]] = 1;
						BoxOffer[playerid] = 999;
						return 1;
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te convidou para uma luta !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"mototaxi",true) == 0)
			{
			    if(TransportDuty[playerid] != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você não está em corrida, [INFO] Use: /corrida !");
				    return 1;
			    }
	            if(TaxiCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou uma chamada de Moto-Taxi !");
				    return 1;
	            }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Você aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Moto-Taxi : %s aceitou sua chamada, se mantenha neste local e espere chegar.",sendername);
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhuma chamada de taxi no momento !");
			    	return 1;
	            }
			}
			else if(strcmp(x_Emprego,"taxi",true) == 0)
			{
			    if(TransportDuty[playerid] != 1)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você não está em corrida, [INFO] Use: /corrida !");
				    return 1;
			    }
	            if(TaxiCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou uma chamada de Taáxi !");
				    return 1;
	            }
	            if(TaxiCall < 999)
	            {
	                if(IsPlayerConnected(TaxiCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Taxista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar taxi !");
						TaxiCallTime[playerid] = 1;
						TaxiAccepted[playerid] = TaxiCall;
						TaxiCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhuma chamada de taxi no momento !");
			    	return 1;
	            }
			}
			else if(strcmp(x_Emprego,"onibus",true) == 0)
			{
			    if(TransportDuty[playerid] != 2)
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você não está em corrida, [INFO] Use: /corrida !");
				    return 1;
			    }
	            if(BusCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou a chamada de Onibus !");
				    return 1;
	            }
	            if(BusCall < 999)
	            {
	                if(IsPlayerConnected(BusCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Motorista : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(BusCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar onibus !");
						BusCallTime[playerid] = 1;
						BusAccepted[playerid] = BusCall;
						BusCall = 999;
						return 1;
					}
	            }
	            else
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Não tem nenhuma chamada de onibus no momento !");
			    	return 1;
	            }
			}
			else if(strcmp(x_Emprego,"medico",true) == 0)
			{
			    if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			    {
		            if(MedicCallTime[playerid] > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou um chamado medico!");
					    return 1;
		            }
                    if(MedicCall < 999)
	                {
	                if(IsPlayerConnected(MedicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Medico : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(MedicCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Ir Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar medico !");
						MedicCallTime[playerid] = 1;
						MedicAccepted[playerid] = MedicCall;
						MedicCall = 999;
						return 1;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de médico no momento !");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Medico !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"mecanico",true) == 0)
            {
   			 if(PlayerInfo[playerid][pEmprego] == 5)
   			 {
	            if(MechanicCallTime[playerid] > 0)
	            {
	                SendClientMessage(playerid, COLOR_GREY, "   Você já aceitou uma chamada de mecanico!");
				    return 1;
	            }
	            if(MechanicCall < 999)
	            {
	                if(IsPlayerConnected(MechanicCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Mecanico : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(MechanicCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar mecanico !");
						MechanicCallTime[playerid] = 1;
						MechanicAccepted[playerid] = MechanicCall;
						MechanicCall = 999;
						return 1;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Nenhuma chamada de mecânico no momento !");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não é um mecânico !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"chamada",true) == 0)
			{
			    if(IsACop(playerid))
			    {
		            if(CopsrondaCallTime[playerid] > 0)
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Você aceitou o chamado!");
					    return 1;
		            }
				    if(PolicialInRonda[playerid] == 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Você já está em um chamado...");
				        return 1;
				    }
                    if(CopsrondaCall < 999)
	                {
	                if(IsPlayerConnected(CopsrondaCall))
	                {
	                    GetPlayerName(playerid, sendername, sizeof(sendername));
	                	GetPlayerName(CopsrondaCall, giveplayer, sizeof(giveplayer));
	                	format(string, sizeof(string), "* Voce aceitou a chamada do(a) %s, A marca estará visível até você chegar.",giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Policial : %s aceitou sua chamada, mantenha-se neste local e espere-o chegar.",sendername);
						SendClientMessage(CopsrondaCall, COLOR_LIGHTBLUE, string);
						GameTextForPlayer(playerid, "~w~Cliente~n~~r~Va Ate a Marca Vermelha", 5000, 1);
						SendClientMessage(playerid, COLOR_GREY, "   Para Cancelar a chamada,digite /cancelar policia !");
						CopsrondaCallTime[playerid] = 1;
						CopsrondaAccepted[playerid] = CopsrondaCall;
						CopsrondaCall = 999;
						return 1;
					}
	            }
		            else
		            {
		                SendClientMessage(playerid, COLOR_GREY, "   Ninguem solicitou um policial ");
				    	return 1;
		            }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Policial !");
				    return 1;
				}
			}
		    else if(strcmp(x_Emprego,"emprego",true) == 0)
			{
				if(PlayerInfo[playerid][pEmprego] != 0)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você tem um emprego digite /sairdoemprego para sair do emprego.");
					return 1;
				}
			    if(GettingEmprego[playerid] > 0)
			    {
			        //SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você já completou seu tempo de contrato!.");
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Boa sorte com seu novo emprego,digite /ajudaemprego para saber seus comandos!");
			        PlayerInfo[playerid][pEmprego] = GettingEmprego[playerid];
			        GettingEmprego[playerid] = 0;
			        return 1;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Você ainda não esta no lugar de um emprego!");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"abastecimento",true) == 0)
			{
			    if(RefillOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(RefillOffer[playerid]))
			        {
			            if(GetGranaTheus(playerid) > RefillPrice[playerid])
			            {
			                if(IsPlayerInAnyVehicle(playerid))
							{
			                	GetPlayerName(RefillOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
			                	new car = GetPlayerVehicleID(playerid);
			                	new fuel;
			                	PlayerInfo[RefillOffer[playerid]][pMechSkill] ++;
			                	if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 2, agora você pode abastecer com 40 de combustivel"); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 3, agora você pode abastecer com 60 de combustivel."); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 4, agora você pode abastecer com 80 de combustivel."); }
								else if(PlayerInfo[RefillOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RefillOffer[playerid], COLOR_YELLOW, "* Sua habilidade de mecânico agora é nível 5, agora você pode abastecer com 100 de combustivel."); }
								new level = PlayerInfo[RefillOffer[playerid]][pMechSkill];
								if(level >= 0 && level <= 50)
								{ fuel = 15; }
								else if(level >= 51 && level <= 100)
								{ fuel = 40; }
								else if(level >= 101 && level <= 200)
								{ fuel = 60; }
								else if(level >= 201 && level <= 400)
								{ fuel = 80; }
								else if(level >= 401)
								{ fuel = 100; }
			                	format(string, sizeof(string), "* Seu veículo foi abastecido com %d% de combustível por $%d pelo mecânico %s.",fuel,RefillPrice[playerid],giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você abasteceu o carro de %s com %d% de combustível por $%d, esse dinheiro será adicionado ao seu salário.",sendername,fuel,RefillPrice[playerid]);
								SendClientMessage(RefillOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RefillOffer[playerid]][pSalario] += RefillPrice[playerid];
								GranaTheus(playerid, -RefillPrice[playerid]);
								if(Gas[car] < 100) { Gas[car] += fuel; }
								if(Gas[car] > 100) { Gas[car] = 100; }
					        	RefillOffer[playerid] = 999;
								RefillPrice[playerid] = 0;
								return 1;
							}
							else
							{
						    	SendClientMessage(playerid, COLOR_LIGHTBLUE, "Você não está em um carro!");
						    	return 1;
							}
			            }
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar pelo abastecimento !");
						    return 1;
						}
			        }
			        return 1;
			    }
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem ofereceu abastecimento para seu carro!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"aovivo",true) == 0)
			{
			    if(LiveOffer[playerid] < 999)
			    {
			        if(IsPlayerConnected(LiveOffer[playerid]))
			        {
				        if (ProxDetectorS(5.0, playerid, LiveOffer[playerid]))
						{
						    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está congelado até o final da conversa.");
							SendClientMessage(LiveOffer[playerid], COLOR_LIGHTBLUE, "* Você está congelado até o final da conversa (use /aovivo denovo).");
							TogglePlayerControllable(playerid, 0);
							TogglePlayerControllable(LiveOffer[playerid], 0);
							TalkingLive[playerid] = LiveOffer[playerid];
							TalkingLive[LiveOffer[playerid]] = playerid;
							LiveOffer[playerid] = 999;
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você está longe do repórter !");
							return 1;
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu uma conversa ao vivo!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"Advogado",true) == 0)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /aceitar Advogado [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if (IsACop(playerid))
				{
				    if(IsPlayerConnected(giveplayerid))
				    {
				        if(giveplayerid != INVALID_PLAYER_ID)
				        {
				            if(PlayerInfo[giveplayerid][pEmprego] == 2)
				            {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Você autorizou %s para liberar um preso.", giveplayer);
								SendClientMessage(playerid, COLOR_LIGHTBLUE,string);
								format(string, sizeof(string), "* Oficial %s te autorizou a soltar alguem da prisão. (use /soltar)", sendername);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE,string);
								ApprovedAdvogado[giveplayerid] = 1;
							    return 1;
							}
						}
					}
					return 1;
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "Ação Invalida! (Você não é um policial)");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"seguranca",true) == 0)
			{
			    if(GuardOffer[playerid] < 999)
			    {
			        if(GetGranaTheus(playerid) > GuardPrice[playerid])
				    {
					    if(IsPlayerConnected(GuardOffer[playerid]))
					    {
					        GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você aceitou a proteção por R$%d do Segurança: %s.",GuardPrice[playerid],giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s aceitou sua proteção, e R$%d será adicionado no seu salário.",sendername,GuardPrice[playerid]);
							SendClientMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, string);
							PlayerInfo[GuardOffer[playerid]][pSalario] += GuardPrice[playerid];
							GranaTheus(playerid, -GuardPrice[playerid]);
					        GuardOffer[playerid] = 999;
							GuardPrice[playerid] = 0;
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar pela proteção !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu proteção!");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"maconha",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetGranaTheus(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* você comprou %d gramas de maconha do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d gramas de maconha, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GranaTheus(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 2, e você pode comprar mais erva por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 3, e você pode comprar mais erva por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 4, e você pode comprar mais erva por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 5, e você pode comprar mais erva por um preço mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você está totalmente carregado com maconha, use ou venda primeiro !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar essas maconhas !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu maconha !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"cocaina",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetGranaTheus(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas2] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* você comprou %d gramas de cocaína do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d gramas de cocaína, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GranaTheus(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas2] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas2] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 2, e você pode comprar mais pó por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 3, e você pode comprar mais pó por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 4, e você pode comprar mais pó por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 5, e você pode comprar mais pó por um preço mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você está carregado com crack, use ou venda primeiro !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar por essa cocaína !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu cocaína !");
			        return 1;
			    }
			}
   			else if(strcmp(x_Emprego,"crack",true) == 0)
			{
			    if(DrugOffer[playerid] < 999)
			    {
			        if(GetGranaTheus(playerid) > DrugPrice[playerid])
				    {
				        if(PlayerInfo[playerid][pDrogas3] < 7)
				        {
					        if(IsPlayerConnected(DrugOffer[playerid]))
					        {
					            GetPlayerName(DrugOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* você comprou %d pedras de crack do traficante: %s por R$%d.",DrugGram[playerid],giveplayer,DrugPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s comprou suas %d pedras de crack, e R$%d será adicionado no seu salário.",sendername,DrugGram[playerid],DrugPrice[playerid]);
								SendClientMessage(DrugOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[DrugOffer[playerid]][pSalario] += DrugPrice[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogasSkill] ++;
								GranaTheus(playerid, -DrugPrice[playerid]);
								PlayerInfo[playerid][pDrogas3] += DrugGram[playerid];
								PlayerInfo[DrugOffer[playerid]][pDrogas3] -= DrugGram[playerid];
								if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 50)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 2, e você pode comprar mais pedras por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 100)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 3, e você pode comprar mais pedras por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 200)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 4, e você pode comprar mais pedras por um preço mais barato."); }
								else if(PlayerInfo[DrugOffer[playerid]][pDrogasSkill] == 400)
								{ SendClientMessage(DrugOffer[playerid], COLOR_YELLOW, "* Seu nível de traficante agora é 5, e você pode comprar mais pedras por um preço mais barato."); }
					            DrugOffer[playerid] = 999;
								DrugPrice[playerid] = 0;
								DrugGram[playerid] = 0;
								return 1;
							}
							return 1;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você está carregado com crack, use ou venda primeiro !");
						    return 1;
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar por esse crack !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Ninguem te ofereceu crack !");
			        return 1;
			    }
			}
			else if(strcmp(x_Emprego,"mendigo",true) == 0)
			{
			    if(MendigoOffer[playerid] < 999)
				{
					if(GetGranaTheus(playerid) > MendigoPrice[playerid])
			  		{
						if (IsPlayerConnected(MendigoOffer[playerid]))
						{
							GetPlayerName(MendigoOffer[playerid], giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você deu um esmola de R$%d, para R$%s.",MendigoPrice[playerid] ,giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s te deu uma esmola de R$%d", sendername, MendigoPrice[playerid]);
							SendClientMessage(MendigoOffer[playerid], COLOR_LIGHTBLUE, string);
							GranaTheus(playerid, -MendigoPrice[playerid]);
							GranaTheus(MendigoOffer[playerid], MendigoPrice[playerid]);
							MendigoPrice[playerid] = 0;
							MendigoOffer[playerid] = 999;
							return 1;
						}//Connected ou not
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar a esmola!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhum pedido de esmola!");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"transa",true) == 0)
			{
			    if(SexOffer[playerid] < 999)
				{
					if(GetGranaTheus(playerid) > SexPrice[playerid])
			  		{
						if (IsPlayerConnected(SexOffer[playerid]))
						{
						    new Car = GetPlayerVehicleID(playerid);
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car))
						    {
								GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Você fez sexo com a profissional do sexo %s, por R$%d.", giveplayer, SexPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* %s teve relações sexuais com você, R$%d foi adicionado em seu salário.", sendername, SexPrice[playerid]);
								SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[SexOffer[playerid]][pSalario] += SexPrice[playerid];
								GranaTheus(playerid, -SexPrice[playerid]);
								PlayerInfo[SexOffer[playerid]][pSexSkill] ++;
								if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 2, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 3, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 4, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
								else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400)
								{ SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seu nível de sexo agora é 5, e pode oferecer uma melhor Sexo (saúde) e menos chance de DST."); }
								if(PlayerInfo[playerid][pDoenca] == 0)
								{
								    if(Condom[playerid] < 1)
									{
									    new Float:health;
									    new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
									    if(level >= 0 && level <= 50)
									    {
									        if(GetPlayerHealth(playerid, health) < 80) {
											SetPlayerHealth(playerid, health + 20.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD1));
											PlayerInfo[playerid][pDoenca] = STD1[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD1[rand];
											if(STD1[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde e não pegou nenhuma DST durante o sexo."); }
											else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde + uma Pereba no CU devido ao sexo."); }
											else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde + uma Duenca na Cabeca do Pau devido ao sexo."); }
											else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 20 de Saúde + uma Duenca na Buceta devido ao sexo."); }
										}
										else if(level >= 51 && level <= 100)
									    {
									        if(GetPlayerHealth(playerid, health) < 60) {
											SetPlayerHealth(playerid, health + 40.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD2));
											PlayerInfo[playerid][pDoenca] = STD2[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD2[rand];
											if(STD2[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde e não pegou nenhuma DST durante o sexo."); }
											else if(STD2[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde + um Pereba no CU devido ao Sexo."); }
											else if(STD2[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD2[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 40 de Saúde + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 101 && level <= 200)
									    {
									        if(GetPlayerHealth(playerid, health) < 40) {
											SetPlayerHealth(playerid, health + 60.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD3));
											PlayerInfo[playerid][pDoenca] = STD3[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD3[rand];
											if(STD3[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde e não pegou nenhuma DST durante o sexo."); }
											else if(STD3[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde + um Pereba no CU devido ao Sexo."); }
											else if(STD3[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD3[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 60 de Saúde + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 201 && level <= 400)
									    {
									        if(GetPlayerHealth(playerid, health) < 20) {
											SetPlayerHealth(playerid, health + 80.0); } else { SetPlayerHealth(playerid, 100.0); }
											new rand = random(sizeof(STD4));
											PlayerInfo[playerid][pDoenca] = STD4[rand];
											PlayerInfo[SexOffer[playerid]][pDoenca] = STD4[rand];
											if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + DST enquanto não ter relações sexuais."); }
											else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + um Pereba no CU devido ao Sexo."); }
											else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + um Duenca na Cabeca do Pau devido ao Sexo."); }
											else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ganhou 80 de Saúde + uma Duenca na Buceta devido ao Sexo."); }
										}
										else if(level >= 401)
										{
											SetPlayerHealth(playerid, 100.0);
											SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seu nível de sexo é tão alto que você ganhou 100% de saúde e nenhuma DST.");
											SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* A Prostitura tem um nível de sexo tão alto que você ganhou 100% de saúde e nenhuma DST.");
										}
				      				}
									else
									{
									    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* O Jogador usou camisinha.");
									    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está usando camisinha.");
									    Condom[playerid] --;
									}
								}
								else
								{
								    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Este jogador já está infectado com DST, no pode pegar mais uma.");
								    return 1;
								}
								SexOffer[playerid] = 999;
								return 1;
							}
							else
							{
							    SendClientMessage(playerid, COLOR_GREY, "   Você ou a Profissional do sexo não estão em um carro !");
							    return 1;
							}
						}//Connected ou not
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode pagar o sexo!");
					    return 1;
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhuma oferta de sexo !");
				    return 1;
				}
			}
			else if(strcmp(x_Emprego,"reparo",true) == 0)
			{
			    if(RepairOffer[playerid] < 999)
			    {
			        if(GetGranaTheus(playerid) > RepairPrice[playerid])
				    {
					    if(IsPlayerInAnyVehicle(playerid))
					    {
					        if(IsPlayerConnected(RepairOffer[playerid]))
					        {
						        GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
						        RepairCar[playerid] = GetPlayerVehicleID(playerid);
						        SetVehicleHealth(RepairCar[playerid], 1000.0);
						        RepairVehicle(RepairCar[playerid]);
								format(string, sizeof(string), "* O mecânico %s reparou seu veículo por R$%d.",giveplayer,RepairPrice[playerid]);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Você reparou o veículo de %s, e R$%d foi adicionado no seu salário.",sendername,RepairPrice[playerid]);
								SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);
								PlayerInfo[RepairOffer[playerid]][pMechSkill] ++;
				                if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 50)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 2, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 100)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 3, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 200)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 4, Agora ele pode adicionar combustivel para qualquer carro."); }
								else if(PlayerInfo[RepairOffer[playerid]][pMechSkill] == 400)
								{ SendClientMessage(RepairOffer[playerid], COLOR_YELLOW, "* Seu mecanico e cargo 5, Agora ele pode adicionar combustivel para qualquer carro."); }
								PlayerInfo[RepairOffer[playerid]][pSalario] += RepairPrice[playerid];
								GranaTheus(playerid, -RepairPrice[playerid]);
						        RepairOffer[playerid] = 999;
								RepairPrice[playerid] = 0;
								return 1;
							}
							return 1;
						}
						return 1;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Você não pode permitir o reparo !");
					    return 1;
					}
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY, "   Falta uma oferta para Você reparar o carro !");
			        return 1;
			    }
			}
			else { return 1; }
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/abastecercarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(!IsAMec(playerid))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você não é mecanico!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /abastecercarro [id] [preco]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, preco maximo 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "   Nao posso fazer isso!"); return 1; }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu ao(a) %s para re-abastecer o carro dele(a) por R$%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mecanico %s quer re-abastecer seu carro por R$%d, (Digite /aceitar abastecimento) para aceitar.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RefillOffer[playa] = playerid;
						RefillPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Player nao esta perto de Você ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/reparar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            if(!IsAMec(playerid))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você não é mecanico!");
		        return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /reparar [id] [preco]");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preco minimo 1, preco maximo 99999!"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, playa)&& IsPlayerInAnyVehicle(playa))
					{
					    if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "  Não posso fazer isso!"); return 1; }
				    	GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu ao(a) %s para concertar seu carro por R$%d .",giveplayer,money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mecanico %s quer reparar seu carro por R$%d, (Digite /aceitar reparo) para aceitar.",sendername,money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						RepairOffer[playa] = playerid;
						RepairPrice[playa] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   Este jogador nao esta perto de Você ou nao esta no carro.");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador esta offline.");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/callcar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(CarCalls[playerid] > 0)
		    {
		        new Float:plocx,Float:plocy,Float:plocz;
	            GetPlayerPos(playerid, plocx, plocy, plocz);
				SetVehiclePos(CarID[playerid],plocx,plocy+4, plocz); LinkVehicleToInterior(CarID[playerid], 0);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Borght Car has arrived.");
				CarCalls[playerid] -= 1;
				format(string, sizeof(string), "* You can call Your Borght Car for %d times more.", CarCalls[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		    }
		    else
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Invalido Ação !");
		    }
		}
	    return 1;
	}
    if(strcmp(cmd, "/gangue", true) == 0 || strcmp(cmd, "/ga", true) == 0 || strcmp(cmd, "/f", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pMuted] == 1)
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, pois foi calado");
				return 1;
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			new length = strlen(cmdtext);
			while ((idx < length) && (cmdtext[idx] <= ' '))
			{
				idx++;
			}
			new offset = idx;
			new result[64];
			while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
			{
				result[idx - offset] = cmdtext[idx];
				idx++;
			}
			result[idx - offset] = EOS;
			if(!strlen(result))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: (/ga)ngue [ORG CHAT]");
				return 1;
			}
			if(TentouDivulgar(result))
            {
            	if(cdivulgar[playerid] >= 5)
            	{
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
            		PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		Kick(playerid);
            	}
            	GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				ABroadCast(COLOR_YELLOW,string,1);
            	cdivulgar[playerid] += 1;
            	return true;
            }
            if(admtrampando[playerid] == 1) { return SendClientMessage(playerid, COLOR_GRAD2, "Você não pode Falar no Rádio da Gang estando em modo Trabalho!"); }
            if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6
			|| PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15
			|| PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33
			|| PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10
			|| PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14
 	        || PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17
	        || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18
    		|| PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19
            || PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26
            || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29
            || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31
			|| PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20
			|| PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5
			|| PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21
			|| PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22
			|| PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23
		   	|| PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24
		  	|| PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25
        	|| PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9
			|| PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13
		    || PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12
            || PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8
            || PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29
            || PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31
            || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
			{
                format(string, sizeof(string), "** %s %s: %s. ))  **",OrgCargo(playerid), sendername, result);
				SendFamilyMessage(GetPlayerOrg(playerid), GetPlayerColor(playerid), string);
                format(string, sizeof(string), "* %s falou algo no rádio da Gang.", sendername);
				ProxDetector(20.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Você não faz parte de nenhuma família!");
				return 1;
			}
		}//not connected
		return 1;
	}
//Outros
	if(strcmp(cmd, "/noticias", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
			    new newcar = GetPlayerVehicleID(playerid);
		        if(PlayerInfo[playerid][pMuted] == 1)
				{
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você nao poder falar, Você foi calado");
					return 1;
				}
				if(IsAJornalCar(newcar))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					new length = strlen(cmdtext);
					while ((idx < length) && (cmdtext[idx] <= ' '))
					{
						idx++;
					}
					new offset = idx;
					new result[64];
					while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
					{
						result[idx - offset] = cmdtext[idx];
						idx++;
					}
					result[idx - offset] = EOS;
					if(!strlen(result))
					{
						SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /noticias [Texto]");
						return 1;
					}
					if(TentouDivulgar(result))
                    {
            	         if(cdivulgar[playerid] >= 5)
            	         {
        		             SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
     		                 SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
            		         SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
           		             PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
            		         Kick(playerid);
            	    }
            	    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            	    format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,playername,result);
				    ABroadCast(COLOR_YELLOW,string,1);
            	    cdivulgar[playerid] += 1;
            	    return true;
                    }
					format(string, sizeof(string), "[BPF] Reporter %s: %s", sendername, result);
					OOCNews(COLOR_NEWS,string);
					PlayerInfo[playerid][pNewsSkill] ++;
					if(PlayerInfo[playerid][pNewsSkill] == 50)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Reporter Agora e cargo 2, logo logo ja pode voar no helicoptero e falar AoVivo."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 100)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* Seu Reporter Agora e cargo 3, logo logo ja pode voar no helicoptero e falar AoVivo."); }
					else if(PlayerInfo[playerid][pNewsSkill] == 200)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* O Seu Reporter Agora e cargo 4 e pode fazer coberturas com helicoptero"); }
					else if(PlayerInfo[playerid][pNewsSkill] == 400)
					{ SendClientMessage(playerid, COLOR_YELLOW, "* O Seu Reporter Agora e cargo 5 e pode conversar AoVivo com quem ele quizer."); }
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não está no Jornal ou na Van !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Reporter !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/aovivo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
			    if(TalkingLive[playerid] != 255)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
			        SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* A Conversa AoVivo Terminou.");
			        TogglePlayerControllable(playerid, 1);
			        TogglePlayerControllable(TalkingLive[playerid], 1);
		            TalkingLive[TalkingLive[playerid]] = 255;
			        TalkingLive[playerid] = 255;
			        return 1;
			    }
			    if(PlayerInfo[playerid][pCargo] < 4)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Seu Cargo é baixo para falar com alguem AoVivo !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /aovivo [id]");
					return 1;
				}
				//giveplayerid = strval(tmp);
		        giveplayerid = ReturnUser(tmp);
				if (IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(5.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode falar AoVivo com você mesmo!"); return 1; }
						    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							format(string, sizeof(string), "* Você ofereceu a %s para ter uma conversa AoVivo.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* %s Você tem uma oferta para conversas ao vivo, Digite (/aceitar aovivo) para aceitar.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							LiveOffer[giveplayerid] = playerid;
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Você esta longe deste player !");
						    return 1;
						}
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   ID/Nick - Invalido !");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você nao e um reporter !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/vendermaconha", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Vendedor De Drogas!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /venderdrogas [id] [quantidade] [preco]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de Pedras 1, e Maximo de Pedras 99!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preco maior que 1, menor que 99999!"); return 1; }
			if(needed > PlayerInfo[playerid][pDrogas]) { SendClientMessage(playerid, COLOR_GREY, "   Você nao tem esta quantidade de pedras com Você !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não pode vender maconha pra você mesmo!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu %s com %d pedras por R$%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* O Traficante %s quer vender %d pedras por R$%d, (Digite /aceitar maconha) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/vendercocaina", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Vendedor De Drogas!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /venderdrogas [id] [quantidade] [preco]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de Pedras 1, e Maximo de Pedras 99!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preço maior que 1, menor que 99999!"); return 1; }
			if(needed > PlayerInfo[playerid][pDrogas2]) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem esta quantidade de cocaina com você !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não pode vender maconha pra você mesmo!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu %s com %d pedras por R$%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* O Traficante %s quer vender %d pedras por R$%d, (Digite /aceitar cocaina) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return 1;
	}
 	if(strcmp(cmd, "/vendercrack", true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode vender drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 4)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Vendedor De Drogas!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /venderdrogas [id] [quantidade] [preco]");
				return 1;
			}
			new playa;
			new money;
			new needed;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			needed = strval(tmp);
			if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Minimo de Pedras 1, e Maximo de Pedras 99!"); return 1; }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "  Preço maior que 1, menor que 99999!"); return 1; }
			if(needed > PlayerInfo[playerid][pDrogas3]) { SendClientMessage(playerid, COLOR_GREY, "   Você nao tem esta quantidade de crack com Você !"); return 1; }
			if(IsPlayerConnected(playa))
			{
			    if(playa != INVALID_PLAYER_ID)
			    {
					if (ProxDetectorS(8.0, playerid, playa))
					{
					    if(playa == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não pode vender maconha pra você mesmo!");
					        return 1;
					    }
					    GetPlayerName(playa, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    format(string, sizeof(string), "* Você ofereceu %s com %d pedras por R$%d .", giveplayer, needed, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* O Traficante %s quer vender %d pedras por R$%d, (Digite /aceitar crack) para comprar.", sendername, needed, money);
						SendClientMessage(playa, COLOR_LIGHTBLUE, string);
						DrugOffer[playa] = playerid;
						DrugPrice[playa] = money;
						DrugGram[playa] = needed;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Jogador offline.");
			}
		}
		return 1;
	}
    if(strcmp(cmdtext,"/usemaconha",true) == 0 || strcmp(cmdtext,"/usarmaconha",true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	  		SendClientMessage(playerid,COLOR_YELLOW," Você não usar drogas na cadeia!");
			return 1;
    	}
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerInfo[playerid][pDorgado] >= 160)
  			{
    			//PlayerInfo[playerid][pDoenca] = 5;
    			PlayerInfo[playerid][pDorgado] = 0;
			    //SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
			    //SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);
			    return 1;
  	        }
	   	    if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
	        {
	            SendClientMessage(playerid,COLOR_GREY,"Você não pode usar Drogas enquanto você está lutando !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pDrogas] > 1)
   			{
			    if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Você esta~n~~p~Lezado",4000,1); }
			    new Float:PlayersArmour;
			    GetPlayerArmour(playerid,PlayersArmour);
			    PlayerInfo[playerid][pDrogas] -= 2;
			    PlayerInfo[playerid][pDorgado] += 2;
                new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    if(PlayersArmour >= 100)
    			{
			        SetPlayerArmour(playerid, 100);
			        SendClientMessage(playerid,COLOR_LIGHTRED,"* Você não pode mais usar drogas!");
			        return 1;
       	        }
		        else
		        {
			    	SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		    	format(string, sizeof(string), "* %s Fumou Maconha.", sendername);
			    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você não tem Gramas de Drogas Suficiente.!");
			}
		}//not connected
		return 1;
	}
 	if(strcmp(cmdtext,"/usecocaina",true) == 0 || strcmp(cmdtext,"/usarcocaina",true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não usar drogas na cadeia!");
	   		return 1;
    	}
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerInfo[playerid][pDorgado] >= 120)
  			{
    			//PlayerInfo[playerid][pDoenca] = 5;
    			PlayerInfo[playerid][pDorgado] = 0;
			   /* SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
			    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);  */
				return 1;
  	        }
  	        /*if(PlayerInfo[playerid][pDoenca] == 5)
  			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você esta com câncer de pulmão, vá ate um hospital se tratar !");
			    return 1;
  	        }    */
	   	    if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
	        {
	            SendClientMessage(playerid,COLOR_GREY,"Você não pode usar drogas enquanto está lutando !");
	            return 1;
	        }
			if(PlayerInfo[playerid][pDrogas2] > 1)
			{
			    PlayerStoned[playerid] += 1;
			    if(PlayerStoned[playerid] >= 3) { GameTextForPlayer(playerid,"~w~Você está~n~~p~Cherado",4000,1); }
			    new Float:PlayersArmour;
			    GetPlayerArmour(playerid,PlayersArmour);
			    PlayerInfo[playerid][pDrogas2] -= 2;
			    PlayerInfo[playerid][pDorgado] += 2;
                new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    if(PlayersArmour >= 100)
    			{
			        SetPlayerArmour(playerid, 100);
			        SendClientMessage(playerid,COLOR_LIGHTRED,"* Você não pode mais usar drogas!");
			        return 1;
       	        }
		        else
		        {
			    	SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		    	format(string, sizeof(string), "* %s Cherou Cocaina.", sendername);
			    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você não tem Gramas de Drogas Suficiente.!");
			}
		}//not connected
		return 1;
	}
 	if(strcmp(cmdtext,"/usecrack",true) == 0 || strcmp(cmdtext,"/usarcrack",true) == 0)
	{
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COLOR_YELLOW," Você não usar drogas na cadeia!");
		   return 1;
    	}
	    if(IsPlayerConnected(playerid))
	   	{
	   	    if(PlayerInfo[playerid][pDorgado] >= 80)
  			{
    			//PlayerInfo[playerid][pDoenca] = 5;
    			PlayerInfo[playerid][pDorgado] = 0;
			   /* SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está com câncer de pulmão, vá ate um hospital se tratar !");
			    SetPlayerDrunkLevel(playerid, GetPlayerDrunkLevel(playerid) + 2300);            */
				return 1;
  	        }
  	        /*if(PlayerInfo[playerid][pDoenca] == 5)
  			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está com câncer de pulmão, vá ate um hospital se tratar !");
			    return 1;
  	        }        */
	   	    if(PlayerBoxing[playerid] > 0 || PlayerInfo[playerid][pJailed] != 0)
	        {
	            SendClientMessage(playerid,COLOR_GREY,"Use Drogas enquanto você está lutando !");
	            return 1;
	        }
		   	if(PlayerInfo[playerid][pDrogas3] > 1)
			{
			    new Float:PlayersArmour;
			    GetPlayerArmour(playerid,PlayersArmour);
			    PlayerInfo[playerid][pDrogas3] -= 2;
			    PlayerInfo[playerid][pDorgado] += 2;
                new Dmelhoria = 1 * PlayerInfo[playerid][pDrugPerk]; Dmelhoria += 2;
			    if(PlayersArmour >= 100)
    			{
			        SetPlayerArmour(playerid, 100);
			        SendClientMessage(playerid,COLOR_LIGHTRED,"* Você não pode mais usar drogas!");
			        return 1;
       	        }
		        else
		        {
			    	SetPlayerArmour(playerid, PlayersArmour + Dmelhoria);
			    }
			    GetPlayerName(playerid, sendername, sizeof(sendername));
		    	format(string, sizeof(string), "* %s Fumou Crack.", sendername);
			    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
			    SendClientMessage(playerid,COLOR_GREY,"Você não tem Gramas de Drogas Suficiente.!");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/curarme", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if (PlayerToPoint(3, playerid,1715.7677,1181.4694,34.8259)||PlayerToPoint(3, playerid,2029.5945,-1404.6426,17.2512))
			{
	            if(PlayerInfo[playerid][pDoenca] > 0)
	            {
					PlayerInfo[playerid][pDoenca] = 0;
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você está infectado com uma DST, vá ate um hospital se tratar !");
					GranaTheus(playerid, -5000);
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital BPF: Retiramos as suas doenças! Tenha um otimo dia!!");
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital BPF: Foram cobrados R$5.000 para ajudar o Hospital!!");
					SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hospital BPF: Procure um médico que eles cobram mais barato!!");
					SetPlayerDrunkLevel (playerid, 0);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não tem uma Doença para ser curada !");
				    return 1;
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_GREY, "   Você não está em um Hospital !");
	        }
        }
		return 1;
	}
	if(strcmp(cmd, "/ejetar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        new State;
	        if(IsPlayerInAnyVehicle(playerid))
	        {
         		State=GetPlayerState(playerid);
		        if(State!=PLAYER_STATE_DRIVER)
		        {
		        	SendClientMessage(playerid,COLOR_GREY,"   Você não é o motorista do carro !");
		            return 1;
		        }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ejetar [id]");
					return 1;
				}
				new playa;
				playa = ReturnUser(tmp);
				new test;
				test = GetPlayerVehicleID(playerid);
				if(IsPlayerConnected(playa))
				{
				    if(playa != INVALID_PLAYER_ID)
				    {
				        if(playa == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se expulsar... Aperte Enter ¬¬!"); return 1; }
				        if(IsPlayerInVehicle(playa,test))
				        {
							new PName[MAX_PLAYER_NAME];
							GetPlayerName(playerid,PName,sizeof(PName));
							GetPlayerName(playa, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "* Você expulsou o(a) %s para fora do carro!", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Você foi retirado do carro por %s !", PName);
							SendClientMessage(playa, COLOR_LIGHTBLUE, string);
							RemovePlayerFromVehicle(playa);
						}
						else
						{
						    SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está em seu carro !");
						    return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, " ID/Nick - Invalido!");
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você precisa estar em um carro para usar este comando !");
			}
		}
		return 1;
	}
	if(strcmp(cmd, "/transar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	        if(PlayerInfo[playerid][pEmprego] == 3)
			{
			    if(!IsPlayerInAnyVehicle(playerid))
			    {
					SendClientMessage(playerid, COLOR_GREY, "   Você só pode transar em um carro !");
					return 1;
			    }
			    new Car = GetPlayerVehicleID(playerid);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /transar [id] [price]");
					return 1;
				}
				//giveplayerid = strval(tmp);
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				new money;
				money = strval(tmp);
				if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preço da transa não pode ser menor que R$1, ou maior que R$99999!"); return 1; }
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
						if (ProxDetectorS(8.0, playerid, giveplayerid))
						{
						    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode ter relação sexual com você mesma, mais pode bater uma siririca!"); return 1; }
						    if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
						    {
							    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
								GetPlayerName(playerid, sendername, sizeof(sendername));
								format(string, sizeof(string), "* Você ofereceu ao %s para dar uma *Foda* com você por R$%d.", giveplayer, money);
								SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
								format(string, sizeof(string), "* Profissional do sexo %s Perguntou se você aceita fazer uma *Foda* com ela, por R$%d (Digite /aceitar transa) Para Aceitar.", sendername, money);
								SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					            SexOffer[giveplayerid] = playerid;
					            SexPrice[giveplayerid] = money;
				            }
				            else
				            {
				                SendClientMessage(playerid, COLOR_GREY, "   Você e o seu cliente devem estar juntos em um carro !");
				                return 1;
				            }
						}
						else
						{
							SendClientMessage(playerid, COLOR_GREY, "   Este jogador não está perto de você !");
							return 1;
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   O Jogador está offline !");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Profissional do sexo !");
			}
		}//not connected
		return 1;
	}
 	if(strcmp(cmd, "/esmola", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
		    if(PlayerInfo[playerid][pEmprego] != 10)
		    {
				SendClientMessage(playerid, COLOR_GREY, "   Você não é Mendigo!");
				return 1;
		    }
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /esmola [id] [preço]");
				return 1;
			}
			new money;
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp)) { return 1; }
			money = strval(tmp);
			if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Preço da esmola não pode ser menor que R$1, ou maior que R$99999!"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if(ProxDetectorS(8.0, playerid, giveplayerid))
					{
					    if(giveplayerid == playerid)
					    {
					        SendClientMessage(playerid, COLOR_GREY, "   Você não pode pedir dinheiro a si mesmo!");
					        return 1;
					    }
         				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você pediu ao %s uma esmola de R$%d.", giveplayer, money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Mendigo %s pediu R$%d de esmola... Digite /aceitar mendigo e ajude-o.", sendername, money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
        				MendigoOffer[giveplayerid] = playerid;
        				MendigoPrice[giveplayerid] = money;
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador não está perto de você !");
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está Offline!");
			}
		}
		return 1;
	}
 	if(strcmp(cmd,"/Bafometro",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
   			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return 1;
			}
 			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /bafometro [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
			    	if (ProxDetectorS(8.0,playerid,giveplayerid))
					{
  	  					if(giveplayerid == playerid) { SendClientMessage(playerid,COLOR_GREY,"Você não pode fazer o teste em si mesmo!"); return 1; }
				    	GetPlayerName(giveplayerid,giveplayer,sizeof(giveplayer));
						GetPlayerName(playerid,sendername,sizeof(sendername));
				    	new bebado[32], bebado2[32];
					    if(PlayerDrunk[giveplayerid] > 0) { bebado = "Bêbado."; } else { bebado = "| Sóbrio "; }
				    	if(PlayerInfo[giveplayerid][pMats] > 0) { bebado2 = "Drogado."; } else { bebado2 = "| Sóbrio "; }
				    	format(string,sizeof(string),"|__________ %s __________|",giveplayer);
			        	SendClientMessage(playerid,COLOR_WHITE,string);
			        	format(string,sizeof(string),"%s.",bebado);
						SendClientMessage(playerid,COLOR_GREY,string);
						format(string,sizeof(string),"%s.",bebado2);
						format(string,sizeof(string),"* %s faz o teste do Bafomêtro em %s.",sendername ,giveplayer);
						ProxDetector(30.0,playerid,string,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
				    	SendClientMessage(playerid,COLOR_GREY,"O jogador não está perto de você !");
				    	return 1;
    				}
				}
			}
        	else
       		{
            	SendClientMessage(playerid,COLOR_GREY,"Esse jogador está off-line !");
            	return 1;
       		}
    		return 1;
		}
	}
//--------------------------------=Ajuda para Polícia=----------------------------------------------------------------
	if(strcmp(cmd,"/reforco",true)==0 || strcmp(cmd,"/rf",true)==0)
	{
		if(IsPlayerConnected(playerid))
		{
				if(!IsACop(playerid))
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
				    return 1;
				}
				if(OnDuty[playerid] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
				    return 1;
				}
				if (PlayerInfo[playerid][pRequestingBackup] != 1)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "Todas as unidades: %s está pedindo reforço,veja o mapa e digite /procurar %d!.", sendername,playerid);
					PlayerInfo[playerid][pRequestingBackup] = 1;
                    for(new i = 0; i < MaiorID; i++)
					{
						if(IsPlayerConnected(i))
						{
							if(IsACop(i))
							{
                    			new Float:plocx,Float:plocy,Float:plocz;
								new plo;
								plo = ReturnUser(tmp);
								GetPlayerPos(plo, plocx, plocy, plocz);
								SendClientMessage(i, TEAM_BLUE_COLOR, string);
							}
						}
					}
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Digite /rcr pra retirar o alerta.");
                    SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Você já tem um pedido de reforço ativo!");
				}
		}
		return 1;
	}

//-----------------=Limpa a Ajuda Policial=-----------------
	if(strcmp(cmd,"/reforcoretirar",true)==0 || strcmp(cmd,"/rcr",true)==0)
	{
		BackupClear(playerid, 0);
		return 1;
	}
 	if(strcmp(cmd,"/revistar",true)==0)
    {
        if(IsPlayerConnected(playerid))
	    {
  			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return 1;
			}
        	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: /revistar [id]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
			    	if (ProxDetectorS(8.0, playerid, giveplayerid))
					{
				    	if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode se Revistar!"); return 1; }
				    	GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
				    	new text1[20], text2[20], text3[20], text4[20], text5[20], text6[20], text7[20];
         				if(PlayerInfo[giveplayerid][pDrogas] > 0) { text1 = "| Maconha."; } else { text1 = "| Vazio."; }
         				if(PlayerInfo[giveplayerid][pDrogas2] > 0) { text2 = "| Cocaina."; } else { text2 = "| Vazio."; }
         				if(PlayerInfo[giveplayerid][pDrogas3] > 0) { text3 = "| Crack."; } else { text3 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pMats] > 0) { text4 = "| Materiais."; } else { text4 = "| Vazio."; }
				    	if(Fishes[giveplayerid][pWeight1] > 0 || Fishes[giveplayerid][pWeight2] > 0 || Fishes[giveplayerid][pWeight3] > 0 || Fishes[giveplayerid][pWeight4] > 0 || Fishes[giveplayerid][pWeight5] > 0) { text5 = "| Peixes."; } else { text5 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pPhoneBook] > 0) { text6 = "| Lista Telefonica."; } else { text6 = "| Vazio."; }
				    	if(PlayerInfo[giveplayerid][pCDPlayer] > 0) { text7 = "| MP10."; } else { text7 = "| Vazio."; }
				    	format(string, sizeof(string), "|__________ Itens %s __________|", giveplayer);
			        	SendClientMessage(playerid, COLOR_WHITE, string);
			        	format(string, sizeof(string), "%s [Quantidade: %d].", text1, PlayerInfo[giveplayerid][pDrogas]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text2, PlayerInfo[giveplayerid][pDrogas2]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text3, PlayerInfo[giveplayerid][pDrogas3]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s [Quantidade: %d].", text4, PlayerInfo[giveplayerid][pMats]);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text5);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text6);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "%s.", text7);
						SendClientMessage(playerid, COLOR_GREY, string);
						format(string, sizeof(string), "* %s revistou %s para ver se tem qualquer item ilegal.", sendername ,giveplayer);
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GREY, "   O Jogador está longe de Você !");
					    return 1;
					}
				}
			}
     	   	else
      	  	{
            	SendClientMessage(playerid, COLOR_GREY, "   O Jogador Está Offline !");
            	return 1;
        	}
		}
    	return 1;
 	}
	if(strcmp(cmd, "/presos", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, 0x1E90FFAA, "PRESOS");
            for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
                    if(PlayerInfo[i][pJailTime] >=60)
                    {
    				    if(PlayerInfo[i][pJailed] == 1)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Polícia Mílitar Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, COR_PM, string);
    					}
    					if(PlayerInfo[i][pJailed] == 2)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Cela do Admin Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, 0xFF93FFFF, string);
    					}
    				    if(PlayerInfo[i][pJailed] == 4)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: R.O.T.A Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, COR_ROTA, string);
    					}
    				    if(PlayerInfo[i][pJailed] == 3)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Rodoviaria Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, COR_PRF, string);
    					}
    	                if(PlayerInfo[i][pJailed] == 5)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Federal Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, COR_PF, string);
    					}
                        if(PlayerInfo[i][pJailed] == 6)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local : Cela Admin Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, 0xFF80FFFF, string);
    					}
    					if(PlayerInfo[i][pJailed] == 7)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Exército Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, COLOR_EXE, string);
    					}
    					if(PlayerInfo[i][pJailed] == 28)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Florestal Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, COR_ROOXY, string);
    					}
    					if(PlayerInfo[i][pJailed] == 30)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: B.O.P.E Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, COR_BOPE, string);
    					}
    					if(PlayerInfo[i][pJailed] == 32)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Exército Americano Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, COR_AMERICANOS, string);
    					}
    					if(PlayerInfo[i][pJailed] == 34)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Cívil Tempo: %d Minutos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime]/60, NomeORG(i));
          					SendClientMessage(playerid, COR_RPP, string);
    					}
                    }
                    else if(PlayerInfo[i][pJailTime] <= 59)
                    {
                        if(PlayerInfo[i][pJailed] == 1)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Polícia Mílitar Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, COR_PM, string);
    					}
    					if(PlayerInfo[i][pJailed] == 2)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Cela do Admin Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, 0xFF93FFFF, string);
    					}
    				    if(PlayerInfo[i][pJailed] == 4)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: R.O.T.A Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, COR_ROTA, string);
    					}
    				    if(PlayerInfo[i][pJailed] == 3)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Rodoviaria Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, COR_PRF, string);
    					}
    	                if(PlayerInfo[i][pJailed] == 5)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Federal Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, COR_PF, string);
    					}
                        if(PlayerInfo[i][pJailed] == 6)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local : Cela Admin Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, 0xFF80FFFF, string);
    					}
    					if(PlayerInfo[i][pJailed] == 7)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Exército Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, COLOR_EXE, string);
    					}
    					if(PlayerInfo[i][pJailed] == 28)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Florestal Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, COR_ROOXY, string);
    					}
    					if(PlayerInfo[i][pJailed] == 30)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: B.O.P.E Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, COR_BOPE, string);
    					}
    					if(PlayerInfo[i][pJailed] == 32)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Exército Americano Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, COR_AMERICANOS, string);
    					}
    					if(PlayerInfo[i][pJailed] == 34)
    				    {
    						GetPlayerName(i, sendername, sizeof(sendername));
    						format(string,sizeof(string), "ID: %d Preso: %s Local: Policia Cívil Tempo: %d Segundos | Org: %s.", i, sendername, PlayerInfo[i][pJailTime], NomeORG(i));
          					SendClientMessage(playerid, COR_RPP, string);
    					}
                    }
				}
			}
		}
		return 1;
	}
 	/*if(strcmp(cmd, "/hospital", true) == 0)
	{
		if(IsPlayerConnected(playerid))
	    {
			SendClientMessage(playerid, 0xFFA4FFFF, "|___|B.P.S|Hospitalizados Online|B.P.S|___|");
   			for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
                    if(PlayerInfo[i][pHosp] >=1)
                    {
                        format(string, sizeof(string), "Duente: %s ID: [%d] || Org: %s || Tempo: %d", PlayerName(i), i, NomeORG(i),PlayerInfo[i][pHospTime]);
                    	SendClientMessage(playerid, GetPlayerColor(i), string);
					}
				}
			}
		}
		return 1;
	}*/
    if(strcmp(cmd, "/procurados", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(IsACop(playerid))
			{
                SendClientMessage(playerid, 0xFEBF01FF, "|___|B.P.S|Suspeitos Online|B.P.S|___|");
			    for(new i=0; i < MaiorID; i++)
                {
					if(IsPlayerConnected(i))
					{
					    if(WantedPoints[i] > 0)
					    {
					        new colorprocurado = GetPlayerColor(i);
							GetPlayerName(i, giveplayer, sizeof(giveplayer));
							format(string, sizeof(string), "%s [ID:%d]: || Nível de Procurado: %d || Org: %s",giveplayer,i,WantedPoints[i],NomeORG(i));
			    			SendClientMessage(playerid, colorprocurado, string);
			    		}
			    	}
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não e um oficial!");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/sairdoemprego", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
		    if(PlayerInfo[playerid][pEmprego] > 0)
		    {
		        if(PlayerInfo[playerid][pVIP] > 0)
		        {
		            if(PlayerInfo[playerid][pContractTime] >= 2)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você cumpriu seu contrato e saiu do emprego.");
					    PlayerInfo[playerid][pEmprego] = 0;
					    if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 2 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* Você ainda tem %d Horas para o fim do contrato.", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
		        }
		        else
		        {
					if(PlayerInfo[playerid][pContractTime] >= 10)
					{
					    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você cumpriu seu contrato e saiu do emprego.");
					    PlayerInfo[playerid][pEmprego] = 0;
					    if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
					    PlayerInfo[playerid][pContractTime] = 0;
					}
					else
					{
					    new chours = 10 - PlayerInfo[playerid][pContractTime];
					    format(string, sizeof(string), "* Você ainda tem %d Horas para o fim do contrato.", chours / 2);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não possui um emprego!");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/fianca", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(PlayerInfo[playerid][pJailed]==1)
			{
			    if(JailPrice[playerid] > 0)
			    {
			        if(GetGranaTheus(playerid) > JailPrice[playerid])
			        {
			            format(string, sizeof(string), "Você pagou R$%d de fiança", JailPrice[playerid]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						GranaTheus(playerid, -JailPrice[playerid]);
						DepositarGranaOrg(7,JailPrice[playerid]);
						Tax += JailPrice[playerid];
						JailPrice[playerid] = 0;
						PlayerInfo[playerid][pJailTime] = 1;
			        }
			        else
			        {
			            SendClientMessage(playerid, COLOR_GRAD1, "   Você não pode pagar o preco da Fiança !");
			        }
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GRAD1, "   Você não tem uma Fiança à ser paga !");
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está preso !");
			}
		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/limpar", true) == 0 || strcmp(cmd, "/limparficha", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return 1;
			}
			new member = PlayerInfo[playerid][pMembro];
			new lider = PlayerInfo[playerid][pLider];
			new rank = PlayerInfo[playerid][pCargo];
	 		if((gTeam[playerid] == 2 || 1 || 3))
			{
				if (!PlayerToPoint(3.0, playerid, 253.9280,69.6094,1003.6406) && !PlayerToPoint(3.0, playerid, 259.2474,120.3977,1003.2188) && !PlayerToPoint(3.0, playerid, 198.9671,168.1982,1003.0234) && !PlayerToPoint(3.0, playerid, 234.8419,111.2194,1003.2257) && !PlayerToPoint(3.0, playerid, 326.8282,304.4166,999.1484))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "   Você não está na recepção do Departamento de Policia!");
					return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /limpar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
                        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não limpar sua própria ficha!"); return 1; }
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						format(string, sizeof(string), "* Você limpou a ficha de %s.", giveplayer);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Oficial %s Limpou a Ficha.", sendername);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						WantedPoints[giveplayerid] = 0;
      					SetPlayerWantedLevel(giveplayerid, 0);
						ClearCrime(giveplayerid);
						//ProcuradoPlayer(giveplayerid);
						if(gTeam[giveplayerid]==4)
						{
						    gTeam[giveplayerid] = 3;
						    SetPlayerToTeamColor(giveplayerid);
						}
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Invalido ID/NICK!");
				}
			}
			else if(member == 12||member == 13||lider == 12||lider == 13)
			{
			    tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /limpar [id]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				if(IsPlayerConnected(giveplayerid))
				{
				    if(giveplayerid != INVALID_PLAYER_ID)
				    {
				        if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Você não pode limpar-se!"); return 1; }
					    if(rank < 3) { SendClientMessage(playerid, COLOR_GREY, "   Apenas Cargo 3+ Podem Limpar Ficha !"); return 1; }
					    if(GetGranaTheus(playerid) < 5000) { SendClientMessage(playerid, COLOR_GREY, "   Você precisa de R$5000 para limpar a ficha !"); return 1; }
		                GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
					    if(member > 0)
					    {
						    if(PlayerInfo[giveplayerid][pMembro] != member)
							{
								SendClientMessage(playerid, COLOR_GREY, "   O Jogador não é da sua família !");
								return 1;
							}
							format(string, sizeof(string), "* Você limpou a ficha do(a) %s por R$5000.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Membro %s cargo %d, limpou sua ficha.", sendername, rank);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						}
						else if(lider > 0)
						{
			                if(PlayerInfo[giveplayerid][pMembro] != lider)
							{
								SendClientMessage(playerid, COLOR_GREY, "   O Jogador não é da sua família !");
								return 1;
							}
						    format(string, sizeof(string), "* Você limpou a ficha do(a) %s por R$5000.", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Lider %s, limpou sua ficha.", sendername);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						}
						WantedPoints[giveplayerid] = 0;
      					SetPlayerWantedLevel(giveplayerid, 0);
						ClearCrime(giveplayerid);
						GranaTheus(playerid, - 5000);
						//ProcuradoPlayer(giveplayerid);
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   ID/Nick! Invalido");
				}
			}

		}//not connected
		return 1;
	}
	if(strcmp(cmd, "/multar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsACop(playerid))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial!");
			    return 1;
			}
			if(OnDuty[playerid] != 1)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
			    return 1;
			}
	    	tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /multar [ID] [Custo] [Razao]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /multar [ID] [Custo] [Razao]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 1000 || moneys > 30000) { SendClientMessage(playerid, COLOR_GREY, "Custo entre 1000 e 30000 !"); return 1; }
			if(IsPlayerConnected(giveplayerid))
			{
				if(IsACop(giveplayerid))
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não pode multar Policiais!");
					return 1;
				}
				if(PlayerInfo[giveplayerid][pJailed] > 0)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Você não pode multar jogadores que estejam presos!");
					return 1;
				}
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			        if (ProxDetectorS(25.0, playerid, giveplayerid))
					{
					    GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
						GetPlayerName(playerid, sendername, sizeof(sendername));
						new length = strlen(cmdtext);
						while ((idx < length) && (cmdtext[idx] <= ' '))
						{
							idx++;
						}
						new offset = idx;
						new result[64];
						while ((idx < length) && ((idx - offset) < (sizeof(result) - 1)))
						{
							result[idx - offset] = cmdtext[idx];
							idx++;
						}
						result[idx - offset] = EOS;
						if(!strlen(result))
						{
							SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /multar [ID] [Custo] [Razao]");
							return 1;
						}
						format(string, sizeof(string), "* Você multou %s por $%d, Razao: %s", giveplayer, moneys, (result));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Oficial %s lhe deu uma multa no valor de $%d, Razao: %s", sendername, moneys, (result));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Use /aceitar multa, para aceita-la.");
						SendClientMessage(giveplayerid, COLOR_LIGHTRED, "* Se em 5 minutos você não pagar, irá preso!");
						TicketOffer[giveplayerid] = playerid;
						TicketMoney[giveplayerid] = moneys;
						SetTimerEx("PresoMulta", 300000, false, "i", giveplayerid);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "O jogador está longe !");
						return 1;
					}
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "O jogador está Offline !");
			    return 1;
			}
		}
		return 1;
    }
//BARREIRAS
	if(strcmp(cmdtext, "/barreira", true)==0 || strcmp(cmdtext, "/br", true)==0)
	{
        if(PlayerInfo[playerid][pJailed] != 0)
		{
			SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
			return 1;
		}
		if(IsPlayerInPref(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
			return 1;
		}
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um Policial!");
		if(PlayerPaintballing[playerid] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode por barreiras no evento!");
	   		return 1;
    	}
		if (pRoadblock[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode criar 1 barreira por vez, /rbr - para remover sua barreira");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		pRoadblock[playerid] = CreateDynamicObject(981, X, Y, Z, 0.0, 0.0, A+180);
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Barreira ~r~Criada", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Barreira Implantada... Use /rbr Para Remove-la!");
		format(string, sizeof(string), "Estado: Uma barreira foi posta por %s.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 5 || PlayerInfo[i][pLider] > 0)
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, "Você pode remover todas as barreiras usando /rbrall");
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/removerbarreira", true)==0 || strcmp(cmdtext, "/rbr", true)==0)
	{
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um Policial!");
		if (pRoadblock[playerid] != 0)
		{
			RemoveRoadblock(playerid);
			SendClientMessage(playerid, COLOR_GREY, "Você retirou a sua barreira!");
		}
		else { return SendClientMessage(playerid, COLOR_GREY, "Você não criou uma barreira!"); }
		format(string, sizeof(string), "Estado: Uma barreira foi destruída por %s.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return 1;
	}
 	if(strcmp(cmdtext, "/removertodasbarreiras", true)==0 || strcmp(cmdtext, "/rbrall", true)==0)
	{
		if ((PlayerInfo[playerid][pCargo] >= 4 && IsACop(playerid)) || PlayerInfo[playerid][pAdmin] >= 1)
		{
   for(new i = 0; i < MaiorID; i++)
			{
				if(pRoadblock[i] != 0)
				{
					RemoveRoadblock(i);
				}
			}
			format(string, sizeof(string), "Estado: Todas as barreiras foram retiradas por: %s.", PlayerName(playerid));
   for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
  		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você precisa ser cargo 4+ ou um líder de alguma organização policial para remover todas as barreiras!");
		}
		return 1;
	}
    if(strcmp(cmdtext, "/cone", true) == 0)
	{
        if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
	   			return 1;
    		}
    		if(IsPlayerInPref(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
			return 1;
		}
		if (!IsACop(playerid)) { SendClientMessage(playerid, COLOR_GREY, "Você não é um Oficial!"); return 1; }
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		if(PlayerInfo[playerid][pCone] == 0)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retira-lo.");
	    	Cone[0] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
	    	SetPlayerPos(playerid, X, Y, Z+2);
	    	GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
    		PlayerInfo[playerid][pCone] += 1;
		}
		else if(PlayerInfo[playerid][pCone] == 1)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retira-lo.");
            Cone[1] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
	    	GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
		}
		else if(PlayerInfo[playerid][pCone] == 2)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retira-lo.");
            Cone[2] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
	    	GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
		}
		else if(PlayerInfo[playerid][pCone] == 3)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retira-lo.");
            Cone[3] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
	    	GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
		}
		else if(PlayerInfo[playerid][pCone] == 4)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retira-lo.");
            Cone[4] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
	    	GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
		}
		else if(PlayerInfo[playerid][pCone] == 5)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retira-lo.");
            Cone[5] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
	    	GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
		}
		else if(PlayerInfo[playerid][pCone] == 6)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retira-lo.");
            Cone[6] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
	    	GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
		}
		else if(PlayerInfo[playerid][pCone] == 7)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retira-lo.");
            Cone[7] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
	    	GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
		}
		else if(PlayerInfo[playerid][pCone] == 8)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retira-lo.");
            Cone[8] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
	    	GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
		}
		else if(PlayerInfo[playerid][pCone] == 9)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Cone implantado, use /rcone para retira-lo.");
            Cone[9] = CreateDynamicObject(1238, X, Y, Z-0.6, 0.0, 0.0, A+180);
            SetPlayerPos(playerid, X, Y, Z+2);
	    	GameTextForPlayer(playerid, "~w~Cone ~b~~h~~h~Colocado", 5000, 5);
            PlayerInfo[playerid][pCone]++;
		}
		else if(PlayerInfo[playerid][pCone] == 10)
		{
            SendClientMessage(playerid, COLOR_RED, "Você já colocou 10 cones, não pode colocar mais use /rcone para retirar alguns.");
		}
        if(PlayerInfo[playerid][pCone] != 10 && PlayerInfo[playerid][pCone] != 0)
        {
            GetPlayerName(playerid, sendername, sizeof(sendername));
    		format(string, sizeof(string), "Estado: Um Cone foi Colocado por: %s.", sendername);
            for(new i = 0; i < MaiorID; i++)
    		{
    			if(IsPlayerConnected(i))
    			{
                    if(IsACop(i))
    				{
    					SendClientMessage(i, TEAM_BLUE_COLOR, string);
    				}
    			}
    		}
        }
		return 1;
 	}
	if(strcmp(cmdtext, "/retirarcone", true)==0 || strcmp(cmdtext, "/rcone", true)==0)
	{
		if (!IsACop(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não é um Policial.");
			return 1;
		}
		if (PlayerInfo[playerid][pCone] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Nenhum cone implantado!");
			return 1;
		}
		RemoveCone(playerid);
        GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "Estado: Um Cone Foi Retirado Pelo Oficial: %s.", sendername);
        for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
                if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		SendClientMessage(playerid, COLOR_GREEN, "Cones retirados com sucesso.");
		return 1;
	}
	if(strcmp(cmdtext, "/removertodoscones", true)==0 || strcmp(cmdtext, "/rconeall", true)==0)
	{
        if (!IsACop(playerid)) { SendClientMessage(playerid, COLOR_GREY, "Você não é um Oficial!"); return 1; }
        if(PlayerInfo[playerid][pCargo] >= 3 && PlayerInfo[playerid][pLider] > 0)
		{
   for(new i = 0; i < MaiorID; i++)
			{
				if(PlayerInfo[i][pCone] != 0)
				{
					RemoveCone(i);
				}
			}
			GetPlayerName(playerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "Estado: Todos os cones foram retirados pelo oficial: %s.", sendername);
   for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
                    if(IsACop(i))
				    {
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você precisa ser cargo 3+ ou Lider para usar este comando!");
		}
		return 1;
	}
 	if(strcmp(cmdtext, "/removerprego", true)==0 || strcmp(cmdtext, "/rpr", true)==0)
	{
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um Policial!");
		if (SpikeInfo[playerid][sCreated] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhum tapete de pregos!");
			return 1;
		}
  		RemoveRoadPregos(playerid);
		SendClientMessage(playerid, COLOR_GREY, "Você retirou seu tapete de pregos!");
		format(string, sizeof(string), "Estado: %s removeu seu tapete de pregos.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return 1;
	}
  	if(strcmp(cmdtext, "/removerprall", true)==0 || strcmp(cmdtext, "/rprall", true)==0)
	{
		if (PlayerInfo[playerid][pCargo] >= 4 && IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
		{
      for(new i = 0; i < MaiorID; i++)
			{
                if(IsPlayerConnected(i))
                {
					if(SpikeInfo[playerid][sCreated] != 0)
					{
     					RemoveRoadPregos(i);
					}
				}
			}
			format(string, sizeof(string), "Estado: Todos os pregos foram retirados por: %s.", PlayerName(playerid));
   for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
                    if (IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você precisa ser cargo 4+ ou um líder de alguma organização policial para remover todos os tapetes de pregos!");
		}
		return 1;
	}
 	if(strcmp(cmdtext, "/prego", true)==0 || strcmp(cmdtext, "/pregos", true)==0)
	{
    	if(PlayerPaintballing[playerid] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode por pregos no evento!");
	   		return 1;
    	}
    	if(IsPlayerInPref(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
			return 1;
		}
    	if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
	   			return 1;
    		}
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é COP!");
		if (SpikeInfo[playerid][sCreated] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode implantar 1 prego por vez, /rpr - para remover seu tapete de pregos.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		SpikeInfo[playerid][sCreated]=1;
        SpikeInfo[playerid][sX]=X;
        SpikeInfo[playerid][sY]=Y;
        SpikeInfo[playerid][sZ]=Z-0.7;
        SpikeInfo[playerid][sObject] = CreateDynamicObject(2899, X, Y, Z-0.9, 0, 0, A-90);
		GameTextForPlayer(playerid, "~w~Pregos ~r~Criados", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Pregos Implantados... Use /rpr Para Remover e Poder Criar Mais!.");
		format(string, sizeof(string), "Estado: Um prego foi bem plantado por %s.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 5 && IsACop(i))
					{
						SendClientMessage(i, COLOR_YELLOW, "Você pode remover todos os pregos usando /rprall");
					}
				}
			}
		}
		return 1;
	}
	//colocar emprego aki
  	if(strcmp(cmdtext, "/plantarbarraca", true)==0 || strcmp(cmdtext, "/pbarraca", true)==0)
	{
        if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
	   			return 1;
    		}
    		if(IsPlayerInPref(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
			return 1;
		}
		if (PlayerInfo[playerid][pEmprego] != 10) return SendClientMessage(playerid, COLOR_GREY, "Você não é Mendigo!");
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode plantar barracas na cadeia!");
		   return 1;
	    }
	    if(PlayerPaintballing[playerid] != 0)
    	{
		   SendClientMessage(playerid,COLOR_YELLOW," Você não pode por barracas no evento!");
		   return 1;
	    }
		if (PlayerInfo[playerid][pBarraca] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode implantar uma barraca por vez, /rbarraca - para remover sua barraca.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		PlayerInfo[playerid][pBarraca] = CreateDynamicObject(1457, X, Y, Z, 0.0, 0.0, A+180);
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Barraquinha ~r~Criada", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Barraca Implantada... Use /rbarraca para remover e poder criar em outro lugar!.");
		SendClientMessage(playerid, COLOR_YELLOW, "Agora você pode trafegar ou dormir em sua barraca");
		return 1;
	}
	if(strcmp(cmdtext, "/removerbarraca", true)==0 || strcmp(cmdtext, "/rbarraca", true)==0)
	{
		if (PlayerInfo[playerid][pEmprego] != 10 || PlayerInfo[playerid][pAdmin] >= 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não é um Mendigo !");
			return 1;
		}
		if (PlayerInfo[playerid][pBarraca] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhuma barraca!");
			return 1;
		}
		RemoveBarraca(playerid);
		SendClientMessage(playerid, COLOR_GREEN, "Barracas removidas com sucesso.");
		return 1;
	}
	if(strcmp(cmdtext, "/bloqueio", true)==0 || strcmp(cmdtext, "/bq", true)==0)
	{
        if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
	   			return 1;
    		}
    		if(IsPlayerInPref(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
			return 1;
		}
		if(PlayerPaintballing[playerid] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode por bloqueios no evento!");
	   		return 1;
    	}
		if (!IsACop(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Você não é um policial!");
		if (pRoadBloq[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode implantar 1 Bloqueio por vez, /rbq - para remover seu bloqueio.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		pRoadBloq[playerid] = CreateDynamicObject(4526, X, Y, Z+1, 0.0, 0.0, A+110);
		SetPlayerPos(playerid, X, Y, Z+1);
		GameTextForPlayer(playerid, "~w~Bloqueio ~r~Criado", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Bloqueio Implantado... Use /rbq Para Remover e Poder Criar Mais!.");
		format(string, sizeof(string), "Estado: Um Bloqueio foi posto por %s.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
					if (PlayerInfo[i][pCargo] >= 5 && IsACop(i))
					{
						SendClientMessage(i, COLOR_YELLOW, "Você pode remover todos os Bloqueios usando /rbqall");
					}
				}
			}
		}
		return 1;
	}
	if(strcmp(cmdtext, "/removerbloqueio", true)==0 || strcmp(cmdtext, "/rbq", true)==0)
	{
		if (!IsACop(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não é um policial!");
			return 1;
		}
		if (pRoadBloq[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhum bloqueio Bloqueio!");
			return 1;
		}
		SendClientMessage(playerid, COLOR_GREY, "Você retirou o seu Bloqueio!");
		RemoveRoadBloq(playerid);
		format(string, sizeof(string), "Estado: %s removeu seu bloqueio.", PlayerName(playerid));
  for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return 1;
	}
    if(strcmp(cmdtext, "/rrampa", true)==0 || strcmp(cmdtext, "/rplataforma", true)==0)
	{
		if (!IsACop(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não é um policial!");
			return 1;
		}
		if (pRoadRampa[playerid][1] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhuma Plataforma!");
			return 1;
		}
		SendClientMessage(playerid, COLOR_GREY, "Você retirou a sua Plataforma!");
        RemovePlataforma(playerid);
		format(string, sizeof(string), "Estado: %s removeu sua Plataforma.", PlayerName(playerid));
        for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(IsACop(i))
				{
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
		}
		return 1;
	}
  	if(strcmp(cmdtext, "/removerbloqueioall", true)==0 || strcmp(cmdtext, "/rbqall", true)==0)
	{
		if (IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
		{
   for(new i = 0; i < MaiorID; i++)
			{
			    if(IsPlayerConnected(i))
			    {
					if(pRoadBloq[i] != 0)
					{
						RemoveRoadBloq(i);
					}
				}
			}
			format(string, sizeof(string), "Estado: Todos os Bloqueios foram retirados por: %s.", PlayerName(playerid));
   for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você precisa ser cargo 4+ ou ser um líder da polícia para remover todos os Bloqueios!");
		}
		return 1;
	}
    if(strcmp(cmdtext, "/rrampaall", true)==0 || strcmp(cmdtext, "/rplataformaall", true)==0)
	{
		if (IsACop(playerid) || PlayerInfo[playerid][pAdmin] >= 1)
		{
   for(new i = 0; i < MaiorID; i++)
			{
			    if(IsPlayerConnected(i))
			    {
					if(pRoadRampa[i][1] != 0)
					{
						RemovePlataforma(i);
					}
				}
			}
			format(string, sizeof(string), "Estado: Todos as Plataformas foram retirados por: %s.", PlayerName(playerid));
   for(new i = 0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
					if(IsACop(i))
					{
						SendClientMessage(i, TEAM_BLUE_COLOR, string);
					}
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você precisa ser cargo 4+ ou ser um líder da polícia para remover todos os Bloqueios!");
		}
		return 1;
	}
	if(strcmp(cmdtext, "/paredao", true)==0 || strcmp(cmdtext, "/paredaoadm", true)==0)
	{
        if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY,"Você não pode Este comando preso!");
	   			return 1;
    		}
    		if(IsPlayerInPref(playerid))
		{
			SendClientMessage(playerid,COLOR_GREY,"Você Usar Este Comando Perto da Prefeitura!");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] != 0)
    	{
	   		SendClientMessage(playerid,COLOR_YELLOW," Você não pode colocar paredao na cadeia!");
	  		return 1;
	    }
    	if(admtrampando[playerid] < 1 && PlayerInfo[playerid][pAdmin] != 3000)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Você não está trabalhando! (/trabalhar)");
			return 1;
		}
		if (PlayerInfo[playerid][pAdmin] == 0) return SendClientMessage(playerid, COLOR_GREY, "Você não é Admin!");
		if (PlayerInfo[playerid][pParedao] != 0) return SendClientMessage(playerid, COLOR_GREY, "Você só pode implantar 1 paredao de cada vez, /rparedao - para remover seu bloqueio.");
		new Float:X, Float:Y, Float:Z, Float:A;
		GetPlayerPos(playerid, X, Y, Z);
		GetPlayerFacingAngle(playerid, A);
		PlayerInfo[playerid][pParedao] = CreateDynamicObject(972, X, Y, Z-2, 0.0, 0.0, A+90);
		SetPlayerPos(playerid, X, Y, Z+4);
		GameTextForPlayer(playerid, "~w~Paredao ~r~Criado", 5000, 5);
		SendClientMessage(playerid, COLOR_GREEN, "Paredão Implantado... Use /rparedao Para Remover e Poder Criar Mais!.");
		format(string, sizeof(string), "AdmAviso: Um Paredão foi posto por %s.", PlayerName(playerid));
		ABroadCast(COLOR_YELLOW, string, 1);
		return 1;
	}
	if(strcmp(cmdtext, "/removerparedao", true)==0 || strcmp(cmdtext, "/rparedao", true)==0)
	{
		if (PlayerInfo[playerid][pAdmin] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não é um Admin!");
			return 1;
		}
		if (PlayerInfo[playerid][pParedao] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Você não criou nenhum paredão!");
			return 1;
		}
		RemoveParedao(playerid);
		SendClientMessage(playerid, COLOR_GREEN, "Paredão removido com sucesso.");
		return 1;
	}
	if(strcmp(cmdtext, "/removerparedaotodos", true)==0 || strcmp(cmdtext, "/rpall", true)==0)
	{
		if (PlayerInfo[playerid][pAdmin] >= 3)
		{
   for(new i = 0; i < MaiorID; i++)
			{
			    if(IsPlayerConnected(i))
			    {
    				if(PlayerInfo[i][pParedao] != 0)
    				{
    					RemoveParedao(i);
    				}
				}
			}
			format(string, sizeof(string), "Estado: Todos os Paredões foram retirados por: %s.", PlayerName(playerid));
			ABroadCast(TEAM_BLUE_COLOR, string, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Você precisa ser admin nivel 3 + pra remover os paredões!");
		}
		return 1;
	}
    if(strcmp(cmdtext, "/robjetos", true)==0 || strcmp(cmdtext, "/rob", true)==0)
	{
        if(PlayerInfo[playerid][pAdmin] == 3000)
        {
            for(new i = 0; i < MaiorID; i++)
            {
                RemoveRoadblock(i);
                RemoveCone(i);
                RemoveRoadPregos(i);
                RemoveBarraca(i);
                RemoveRoadBloq(i);
                RemoveParedao(i);
                RemovePlataforma(i);
            }
            SendClientMessage(playerid, COLOR_GREY, "   Objetos Removidos!");
        }
        return 1;
    }
    if(strcmp(cmdtext, "/desbugarobjetos", true)==0 || strcmp(cmdtext, "/dob", true)==0)
	{
		new ObjectBugado = ObjetosTheusCrazzy+200;
		if(PlayerInfo[playerid][pAdmin] == 3000)
        {
            for(new i = 0; i < MaiorID; i++)
            {
                RemoveRoadblock(i);
                RemoveCone(i);
                RemoveRoadPregos(i);
                RemoveBarraca(i);
                RemoveRoadBloq(i);
                RemoveParedao(i);
                RemovePlataforma(i);
            }
            SendClientMessage(playerid, COLOR_LIGHTBLUE, " ** Objetos Que não Estão Bugados Removidos com Sucesso, Buscando Objetos Bugados.");
			for(new o = 0; o < ObjectBugado; o++)
            {
                if(o >= ObjetosTheusCrazzy)
                {
                    DestroyDynamicObject(o);
                    format(string, sizeof(string), "Objeto ID: %d, Estava bugado e foi Removido do Servidor com Sucesso.",o);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
            }
            SendClientMessage(playerid, COLOR_LIGHTBLUE, " ** O Servidor Finalizou a Busca... Caso ainda Tenha objetos Bugados use /gmx para Reiniciar o Servidor.");
        }
        return 1;
    }
    if(strcmp(cmd, "/ajustar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(IsACop(playerid))
			{
				if(OnDuty[playerid] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
				    return true;
				}
                if(!PlayerToPoint(12.0, playerid, 268.3327,77.8972,1001.0391) && !PlayerToPoint(12.0, playerid, 1545.4073,-1607.9791,13.3828) && !PlayerToPoint(12.0, playerid, 341.4560,-1499.6265,36.0390) && !PlayerToPoint(12.0, playerid, 920.5212,-1184.8267,16.9766) &&  !PlayerToPoint(12.0, playerid, 221.1459,115.3492,999.0156) && !PlayerToPoint(12.0, playerid, 193.9101,179.2799,1003.0234) && !PlayerToPoint(12.0, playerid, 1545.7220,-1609.4769,13.3828)
			    && !PlayerToPoint(12.0, playerid, 1019.6051,-317.6436,73.9922) && !PlayerToPoint(12.0, playerid, 195.5733,158.4008,1003.0234) && !PlayerToPoint(12.0, playerid, 1280.4871,-1833.3243,13.3828)
                && !PlayerToPoint(12.0, playerid, -1298.8188,490.5014,11.1953) && !PlayerToPoint(12.0, playerid, 264.1557,77.5797,1001.0391) && !PlayerToPoint(12.0, playerid, 1361,175.1075,1003.0234) && !PlayerToPoint(12.0, playerid, 321.8284,315.6733,999.1484))
				{// Jail spot
				    SendClientMessage(playerid, COLOR_GREY, "   Você não está perto da cela, não pode ajustar o tempo do suspeito !");
				    return true;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ajustar [id] [tempo (minutos)]");
					return true;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ajustar [id] [tempo (minutos)]");
					return true;
				}
				new time = strval(tmp);
				if(time < 1 || time > 20) { SendClientMessage(playerid, COLOR_GREY, "   O Tempo não pode ser menor que 1 nem maior que 20 !"); return true; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /ajustar [id] [tempo (minutos)]");
					return true;
				}
				if(PlayerInfo[giveplayerid][pJailed] == 2)
				{
					return SendClientMessage(playerid, COLOR_GRAD2, "Você não Pode ajustar um Player Preso pelo Administrador!");
				}
				new suspect = giveplayerid;
				if(IsPlayerConnected(suspect))
				{
				format(string, sizeof(string), "* Você ajustou %s !", giveplayer);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[suspect][pJailTime] = time * 60;
				format(string, sizeof(string), "Oficial %s ajustou seu tempo de prisão para %d Segundos.", PlayerName(playerid),PlayerInfo[suspect][pJailTime]);
				SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial !");
			    return true;
			}
		}//not connected
		return true;
	}
    if(strcmp(cmd, "/prender", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
			if(IsACop(playerid))
			{
				if(OnDuty[playerid] != 1)
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Você não Bateu o cartão!");
				    return 1;
				}
		        if(!PlayerToPoint(12.0, playerid, 268.3327,77.8972,1001.0391) && !PlayerToPoint(12.0, playerid, 1545.4073,-1607.9791,13.3828) && !PlayerToPoint(12.0, playerid, 341.4560,-1499.6265,36.0390) && !PlayerToPoint(12.0, playerid, 920.5212,-1184.8267,16.9766) &&  !PlayerToPoint(12.0, playerid, 221.1459,115.3492,999.0156) && !PlayerToPoint(12.0, playerid, 193.9101,179.2799,1003.0234) && !PlayerToPoint(12.0, playerid, 1545.7220,-1609.4769,13.3828)
			    && !PlayerToPoint(12.0, playerid, 1019.6051,-317.6436,73.9922) && !PlayerToPoint(12.0, playerid, 195.5733,158.4008,1003.0234) && !PlayerToPoint(12.0, playerid, 1280.4871,-1833.3243,13.3828)
                && !PlayerToPoint(12.0, playerid, -1298.8188,490.5014,11.1953) && !PlayerToPoint(12.0, playerid, 264.1557,77.5797,1001.0391) && !PlayerToPoint(12.0, playerid, 1361,175.1075,1003.0234) && !PlayerToPoint(12.0, playerid, 321.8284,315.6733,999.1484))
				{// Jail spot
				    SendClientMessage(playerid, COLOR_GREY, "   Você não está perto da cela, não pode prender o suspeito !");
				    return 1;
				}
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return 1;
				}
				giveplayerid = ReturnUser(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
                	SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return 1;
				}
				new time = strval(tmp);
				if(time < 1 || time > 20) { SendClientMessage(playerid, COLOR_GREY, "   O Tempo não pode ser menor que 1 nem maior que 20 !"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return 1;
				}
                new bail = strval(tmp);
				if(bail < 0 || bail > 1) { SendClientMessage(playerid, COLOR_GREY, "   Fiança Tem Que ser 0=Não ou 1=Sim !"); return 1; }
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "[INFO] Use: /prender [id] [tempo (minutos)] [fianca (0=nao 1=sim)] [preco da fianca]");
					return 1;
				}
				new bailprice = strval(tmp);
				if(bailprice < 0 || bailprice > 300000) { SendClientMessage(playerid, COLOR_GREY, "   O Preço não pode ser menor que 0 nem maior que R$300000 !"); return 1; }
				new suspect = giveplayerid;
				if(IsPlayerConnected(suspect))
				{
					if(GetDistanceBetweenPlayers(playerid,suspect) < 15)
					{
 					    if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no mínimo 1 nível de procurado!");
							    return 1;
							}
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GranaTheus(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMembro]==1||PlayerInfo[playerid][pLider]==1)
							{
								format(string, sizeof(string), "<< Polícia Mílitar %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 6);
							SetPlayerPos(suspect,264.6288,77.5742,1001.0391);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 1;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							PlayerInfo[suspect][pMuted] = 0;
							TogglePlayerControllable(suspect, 1);
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
				            //ProcuradoPlayer(suspect);
							return 1;
						}
					    if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GranaTheus(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMembro]==2||PlayerInfo[playerid][pLider]==2)
							{
								format(string, sizeof(string), "<< R.O.T.A %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 3);
							SetPlayerPos(suspect,198.3454,174.7621,1003.0234);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 4;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
      						SetPlayerWantedLevel(suspect, 0);
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
					        PlayerInfo[suspect][pDrogas2] = 0;
					        PlayerInfo[suspect][pDrogas3] = 0;
					        PlayerInfo[suspect][pMats] = 0;
					        //ProcuradoPlayer(suspect);
							return 1;
       					}
					    if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
						{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GranaTheus(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMembro]==11||PlayerInfo[playerid][pLider]==11)
							{
								format(string, sizeof(string), "<< Policial Federal %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 5);
							SetPlayerPos(suspect,319.0175,317.0517,999.1484);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 5;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
				            //ProcuradoPlayer(suspect);
							return 1;
          				}
          				if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
						{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GranaTheus(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMembro]==34||PlayerInfo[playerid][pLider]==34)
							{
								format(string, sizeof(string), "<< Policia Cívil %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 5);
							SetPlayerPos(suspect,319.0175,317.0517,999.1484);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 34;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
				            SetPlayerVirtualWorld(playerid, OUTRO_MUNDO);
							return 1;
          				}
                        if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
						{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GranaTheus(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMembro]==3||PlayerInfo[playerid][pLider]==3)
							{
								format(string, sizeof(string), "<< Exército %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 0);
							SetPlayerPos(suspect,-1293.2203,490.5885,11.1953);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 7;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
				            //ProcuradoPlayer(suspect);
							return 1;
	                    }
	                    if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
						{
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GranaTheus(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMembro]==32||PlayerInfo[playerid][pLider]==32)
							{
								format(string, sizeof(string), "<< Americano %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 0);
							SetPlayerPos(suspect,-1293.2203,490.5885,11.1953);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 32;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
				            //ProcuradoPlayer(suspect);
							return 1;
	                    }
					    if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							//GranaTheus(suspect, -moneys);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMembro]==16||PlayerInfo[playerid][pLider]==16)
							{
								format(string, sizeof(string), "<< Policial Rodoviário %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 10);
							SetPlayerPos(suspect,223.5335,110.3779,999.0156);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 3;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
	                        PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
				            //ProcuradoPlayer(suspect);
							return 1;
						}
						if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMembro] == 28 ||PlayerInfo[playerid][pLider] == 28)
							{
								format(string, sizeof(string), "<< R.O.T.A P.M.S.E.P %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 10);
							SetPlayerPos(suspect,223.5335,110.3779,999.0156);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 28;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
							SetPlayerWantedLevel(suspect, 0);
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
	                        PlayerInfo[suspect][pDrogas] = 0;
				            PlayerInfo[suspect][pDrogas2] = 0;
				            PlayerInfo[suspect][pDrogas3] = 0;
				            PlayerInfo[suspect][pMats] = 0;
				            SetPlayerVirtualWorld(playerid, OUTRO_MUNDO);
							return 1;
						}
                        if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30)
					    {
							GetPlayerName(suspect, giveplayer, sizeof(giveplayer));
							GetPlayerName(playerid, sendername, sizeof(sendername));
							if(WantedPoints[suspect] < 1)
							{
							    SendClientMessage(playerid, COLOR_GREY, "   O Jogador deve ter no minimo 1 nível de procura!");
							    return 1;
							}
							format(string, sizeof(string), "* Você Prendeu %s !", giveplayer);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "Preso por %s", sendername);
							GameTextForPlayer(suspect, string, 5000, 5);
							ResetPlayerWeapons(suspect);
							if(PlayerInfo[playerid][pMembro]==30||PlayerInfo[playerid][pLider]==30)
							{
								format(string, sizeof(string), "<< B.O.P.E %s prendeu o suspeito %s >>", sendername, giveplayer);
								OOCNews(COLOR_LIGHTRED, string);
							}
							SetPlayerInterior(suspect, 3);
							SetPlayerPos(suspect,198.3454,174.7621,1003.0234);
							PlayerInfo[suspect][pJailTime] = time * 60;
							if(bail == 1)
							{
								JailPrice[suspect] = bailprice;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: R$%d", PlayerInfo[suspect][pJailTime], JailPrice[suspect]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							else
							{
							    JailPrice[suspect] = 0;
								format(string, sizeof(string), "Você foi preso por %d Segundos.   Fiança: Desativada", PlayerInfo[suspect][pJailTime]);
								SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
							}
							PlayerInfo[suspect][pJailed] = 30;
							SetPlayerFree(suspect,playerid, "Foi Preso");
							WantedPoints[suspect] = 0;
      						SetPlayerWantedLevel(suspect, 0);
							TogglePlayerControllable(suspect, 1);
							PlayerInfo[suspect][pMuted] = 0;
							PlayerCuffed[suspect] = 0;
							PlayerInfo[suspect][pDrogas] = 0;
					        PlayerInfo[suspect][pDrogas2] = 0;
					        PlayerInfo[suspect][pDrogas3] = 0;
					        PlayerInfo[suspect][pMats] = 0;
							return 1;
       					}
					}//distance
				}//not connected
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Esse não é um jogador ativo.");
				    return 1;
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Você não é um Oficial !");
			    return 1;
			}
		}//not connected
		return 1;
	}
    if(strcmp(cmd, "/contrato", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	   	{
	   	    new money2;
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /contrato [ID/Nome] [Quantia]");
				return 1;
			}
			giveplayerid = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /contrato [ID/Nome] [Quantia]");
				return 1;
			}
			moneys = strval(tmp);
			if(moneys < 10000) { SendClientMessage(playerid, COLOR_GREY, "   Seu contrato não pode ser menor que 10000"); return 1; }
			if(PlayerInfo[playerid][pLevel] < 2)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você precisa de no Mínimo nível 3 para por um Contrato.");
				return 1;
			}
			if (IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
			    	if(PlayerInfo[giveplayerid][pLevel] == 2)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Você não pode por contrato em novatos!");
						return 1;
					}
				    else if(PlayerInfo[giveplayerid][pMembro] == 8||PlayerInfo[giveplayerid][pLider] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Não pode colocar contrato em Assassinos!");
				        return 1;
				    }
                    else if(PlayerInfo[giveplayerid][pMembro] == 24||PlayerInfo[giveplayerid][pLider] == 24)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Não pode colocar contrato em Assassinos!");
				        return 1;
				    }
				    else if(PlayerInfo[playerid][pMembro] == 24||PlayerInfo[playerid][pLider] == 24||PlayerInfo[playerid][pMembro] == 8||PlayerInfo[playerid][pLider] == 8)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Não pode colocar contratos em Nunguem!");
				        return 1;
				    }
				    else if(PlayerInfo[giveplayerid][pAdmin] >= 1)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Não pode colocar contratos em Administrador!");
				        return 1;
				    }
				    if(gTeam[giveplayerid] == 2 && moneys <= 100000)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Preco Minimo de $100000 em oficiais!");
				        return 1;
				    }
				    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Nao pode colocar contrato em si mesmo!"); return 1; }
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					money2 = GetGranaTheus(playerid);
					if (moneys > 0 && money2 >= moneys)
					{
						GranaTheus(playerid, (0 - moneys));
						PlayerInfo[giveplayerid][pHeadValue]+=moneys;
						format(string, sizeof(string), "%s Colocou um contrato em %s, por $%d.",sendername, giveplayer, moneys);
						SendFamilyMessage(8, COLOR_YELLOW, string);
                        SendFamilyMessage(24, COLOR_YELLOW, string);
						format(string, sizeof(string), "* Você colocou um contrato em %s, por $%d.",giveplayer, moneys);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD1, "   Você não possui essa grana.");
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Esse não é um jogador ativo.");
			}
		}
		return 1;
	}
    if(strcmp(cmd,"/contratar",true)==0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			if(!IsAGang(playerid) && GetPlayerOrg(playerid) != 21 && GetPlayerOrg(playerid) != 22 && GetPlayerOrg(playerid) != 23 && GetPlayerOrg(playerid) != 25)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Você não é o líder de uma gang!");
				return 1;
			}
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
            {
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /contratar [Organização]");
				SendClientMessage(playerid, COLOR_GRAD1,"1 - Hells Angels | 2 - Mongols M.C | 3 - Sons Of Anarchy | 4 - Familia Motoqueiros!");
				return 1;
			}
		    if(strcmp(tmp,"1",true) == 0)//Detective
			{
    			format(string, sizeof(string), "%s e os %s Está Contratando os Serviços Hells Angels, Para combinar Ligue: %d.",PlayerName(playerid),NomeORG(playerid),PlayerInfo[playerid][pPnumber]);
    			SendFamilyMessage(21, GetPlayerColor(playerid), string);
    			format(string, sizeof(string), "Você Está Contratando os Hells Angels Para Ajudar, Aguarde uma Resposta.");
    			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
    			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			else if(strcmp(tmp,"2",true) == 0)//Lawyer
			{
                format(string, sizeof(string), "%s e os %s Está Contratando os Serviços Mongols M.C., Para combinar Ligue: %d.",PlayerName(playerid),NomeORG(playerid),PlayerInfo[playerid][pPnumber]);
    			SendFamilyMessage(22, GetPlayerColor(playerid), string);
    			format(string, sizeof(string), "Você Está Contratando os Mongols M.C. Para Ajudar, Aguarde uma Resposta.");
    			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
    			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
            else if(strcmp(tmp,"3",true) == 0)//Lawyer
			{
                format(string, sizeof(string), "%s e os %s Está Contratando os Serviços Sons Of Anarchy, Para combinar Ligue: %d.",PlayerName(playerid),NomeORG(playerid),PlayerInfo[playerid][pPnumber]);
    			SendFamilyMessage(23, GetPlayerColor(playerid), string);
    			format(string, sizeof(string), "Você Está Contratando os Sons Of Anarchy Para Ajudar, Aguarde uma Resposta.");
    			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
    			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
            else if(strcmp(tmp,"4",true) == 0)//Lawyer
			{
                format(string, sizeof(string), "%s e os %s Está Contratando os Serviços Motoqueiros, Para combinar Ligue: %d.",PlayerName(playerid),NomeORG(playerid),PlayerInfo[playerid][pPnumber]);
    			SendFamilyMessage(27, GetPlayerColor(playerid), string);
    			format(string, sizeof(string), "Você Está Contratando os Motoqueiros Para Ajudar, Aguarde uma Resposta.");
    			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
    			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			}
			else
			{
                SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: /contratar [Organização]");
				SendClientMessage(playerid, COLOR_GRAD1,"1 - Hells Angels | 2 - Mongols M.C | 3 - Sons Of Anarchy | 4 - Familia Motoqueiros!");
			    return 1;
			}
	    }
	    return 1;
	}
    if (strcmp(cmd, "/serverinfo", true) == 0 || strcmp(cmd, "/serverinfo", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			format(strtheus,sizeof(strtheus),"Servidor Lígado Pela Última Vez: {FFFFFF}Ano:{1E90FF} %d, {FFFFFF}Mes:{1E90FF} %d, {FFFFFF}Dia:{1E90FF} %d, {FFFFFF}Horário:{1E90FF} %d:%d:%d,{FFFFFF} Número de Objetos:{1E90FF} %d",AnoGMX, MesGMX, DiaGMX, HoraGMX, MinutoGMX, SegundoGMX);
            SendClientMessage(playerid,0x1E90FFFF,strtheus);
		}
		return 1;
	}
    if(strcmp(cmdtext,"/painel",true)==0 || strcmp(cmdtext,"/meucarro",true)==0)
    {
        if(PlayerInfo[playerid][pChave]!=0)
        {
            ShowPlayerDialog(playerid,148,DIALOG_STYLE_LIST,"{FFD700}Painel do Veículo","{75DDFF}Estacionar\n{75DDFF}Trancar/Destrancar\n{75DDFF}Pintura\n{75DDFF}Motor\n{75DDFF}Farol\n{75DDFF}Retirar Componentes\n{75DDFF}Localizar Veículo\n{75DDFF}Transferir Veículo\n{FA7373}Fechar Painel","Selecionar","Cancelar");
        }
        else
        {
            SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Veículo] {FFFFFF}Você não tem um Carro, vá Até a Concessionária, use /gps!");
        }
        return 1;
    }
    if(strcmp(cmdtext,"/concessionaria",true)==0)
    {
        if(PlayerToPoint(3, playerid, 2780.4939,-1812.2635,11.8438))
        {
            if(PlayerInfo[playerid][pLevel] < 4)
			{
				SendClientMessage(playerid, COLOR_GRAD5, "   Você precisa ter nivel 4 Para comprar um Veículo!");
				return 1;
			}
            ShowPlayerDialog(playerid,1319,DIALOG_STYLE_LIST,"{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FFFFFF} - Concessionária","Vender Veículo\nComprar Veículo\n{FF0000}Fechar Menu","Selecionar","Cancelar");
            TogglePlayerControllable(playerid, 1);
            return 1;
        }
        return 1;
    }
    if(strcmp(cmdtext,"/irconce",true)==0)
    {
        if(PlayerInfo[playerid][pAdmin] == 3000)
        {
            SendClientMessage(playerid, COLOR_GRAD1, "Você foi teletransportado para a Concessionária.");
            SetPlayerPos(playerid, 2780.4939,-1812.2635,11.8438);
            return 1;
        }
    }
    if(!strcmp("/admvcarro", cmdtext, true) || !strcmp("/admvcar", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
         	if(PlayerInfo[playerid][pAdmin] < 3000)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "   Você não está autorizado a usar este comando !");
			    return 1;
			}
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
                        for(new i = 0; i < sizeof(Carro); i++)
                        {
                            if(Carro[i][CarroID] == result)
                            {
                                Carro[i][CarroON] = 0;
		                        Carro[i][Modelo] = 0;
		                        Carro[i][cSpawnX] = 0.000000;
		    	                Carro[i][cSpawnY] = 0.000000;
		    	                Carro[i][cSpawnZ] = 0.000000;
		                        Carro[i][cAngulo] = 0.000000;
		                        Carro[i][CorUm] = 0;
		                        Carro[i][CorDois] = 0;
		                        Carro[i][Trancado] = 0;
		                        Carro[i][CarroON] = 0;
							   	DestroyVehicle(Carro[i][CarroID]);
                                LimparTunning(i);
                               	Carro[i][CarroID] = 0;
                                Carro[i][cDate] = 0;
                               	format(string, sizeof(string), "** Veículo de %s Vendido com Sucesso!", Carro[i][Dono]);
    							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
       			 				strmid(Carro[i][Dono], "Ninguem", 0, strlen("Ninguem"), 256);
                                for(new pl;pl<MaiorID;pl++)
								{
									CheckDonoCarro(pl);
								}
            					SaveCarros();
								break;
                            }
						}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
    if(!strcmp("/infocarro", cmdtext, true) || !strcmp("/carroinfo", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
                        for(new i = 0; i < sizeof(Carro); i++)
                        {
                            if(Carro[i][CarroID] == result)
                            {
                                new arquivo[90];
                                format(arquivo, sizeof(arquivo), OpenAccPlayer,Carro[i][Dono]);
                               	format(string, sizeof(string), "** Veículo de %s, Login Data: %d/%d/%d - Hora: %d:%d:%d!", Carro[i][Dono],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
    							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
           						break;
                            }
						}
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
    if(!strcmp("/abrircarro", cmdtext, true) || !strcmp("/carroabrir", cmdtext, true))
	{
		if(IsPlayerConnected(playerid))
	    {
			new counter = 0;
			new result;
			new plyName[MAX_PLAYER_NAME];
			GetPlayerName(playerid, plyName, MAX_PLAYER_NAME);
            if (PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16) return SendClientMessage(playerid, COLOR_GREY, "   Você não é um Policial Rodoviário!");
			for(new i; i != MAX_VEHICLES; i++)
			{
				new dist = ChecarveiculoBPF(5, playerid, i);
				if(dist)
				{
					result = i;
					counter++;
				}
			}
			switch(counter)
			{
				case 0:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Não há nenhum carro nesse raio!");
				}
				case 1:
				{
                        new Conter = 0;
                        for(new i = 0; i < sizeof(Carro); i++)
                        {
                            if(Carro[i][CarroID] == result)
                            {
                                if(VTrancado[result] != 1) return SendClientMessage(playerid, COLOR_GREY, " Este Veículo não Está trancado!");
                                new arquivo[90];
                                format(arquivo, sizeof(arquivo), OpenAccPlayer,Carro[i][Dono]);
                               	format(string, sizeof(string), "** Veículo de %s, Login Data: %d/%d/%d - Hora: %d:%d:%d, Aberto com Sucesso!", Carro[i][Dono],dini_Int(arquivo,"DiaLogin"),dini_Int(arquivo,"MesLogin"),dini_Int(arquivo,"AnoLogin"),dini_Int(arquivo,"HoraLogin"),dini_Int(arquivo,"MinutoLogin"),dini_Int(arquivo,"SegundoLogin"));
    							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                format(string, sizeof(string), "* Policial Rodoviário: %s Usou a chave Mestre para abrir Algum Veículo.",PlayerName(playerid));
			                    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                                VTrancado[result] = 0;
                                UnLockCar(result);
                                Conter++;
           						break;
                            }
						}
                        if(Conter == 0) SendClientMessage(playerid, COLOR_GREY, "   Comando permitido Apenas para Apreender Veículos Particulares (Concessionária)!");
				}
				default:
				{
					SendClientMessage(playerid, COLOR_GREY, "   Foram encontrados mais de um carro nesse raio");
				}
			}
		}
		return 1;
	}
	if(strcmp(cmdtext,"/mapacarro",true)==0)
 	{
  		new carro = PlayerInfo[playerid][pChave];
  		if(carro != 0)
    	{
     		for(new i = 0; i < sizeof(Carro); i++)
            {
                if(Carro[i][CarroID] == carro)
                {
                	if(strcmp(PlayerName(playerid),Carro[i][Dono],true)==0)
			    	{
                                new Float:X,Float:Y,Float:Z;
                                GetVehiclePos(carro,X,Y,Z);
                                SetPlayerCheckpoint(playerid,X,Y,Z,4.0);
                				GameTextForPlayer(playerid, "~r~~h~~h~Local do Veiculo Marcado!", 5000, 1);
                				gPlayerCheckpointStatus[playerid] = CHECKPOINT_CARRO;
                                format(string, sizeof(string), "[BPF Veículo] {FFFFFF}Seu Veículo: %s Foi Marcado no Mapa.", vehName[GetVehicleModel(carro)-400]);
                                SendClientMessage(playerid, 0x77EEA1FF, string);
  								break;
                        }
                    }
			}
		}
          else
          {
                SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
                return 1;
          }
          return 1;
    }
    if(strcmp(cmdtext,"/rcomponentes",true)==0)
 	{
  		new carro = PlayerInfo[playerid][pChave];
  		if(carro != 0)
    	{
     		for(new i = 0; i < sizeof(Carro); i++)
            {
                if(Carro[i][CarroID] == carro)
                {
                    if (!ProxDetectorV(40.0, playerid, carro)) return SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você Precisa Estar perto do seu Veículo!");
					new Float:X,Float:Y,Float:Z,Float:A;
                    GetVehicleZAngle(carro,A);
                    GetVehiclePos(carro,X,Y,Z);
					LimparTunning(i);
                    if(IsPlayerInVehicle(playerid, carro))
                    {
             			SetVehicleToRespawn(carro);
                        SetVehiclePos(carro,X,Y,Z);
                        SetVehicleZAngle(carro, A);
						LinkVehicleToInterior(carro, GetPlayerInterior(playerid));
			  			PutPlayerInVehicle(playerid,carro,0);
					}
					else
					{
                        SetVehicleToRespawn(carro);
                        SetVehiclePos(carro,X,Y,Z);
                        SetVehicleZAngle(carro, A);
						LinkVehicleToInterior(carro, GetPlayerInterior(playerid));
					}
                    format(string, sizeof(string), "[BPF Veículo] {FFFFFF}Você tirou todos os Acessórios do Seu Veículo: %s.", vehName[GetVehicleModel(carro)-400]);
                    SendClientMessage(playerid, 0x77EEA1FF, string);
  					break;
                }
	 		}
  		}
  		else
    	{
     		SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
     		return 1;
     	}
      	return 1;
   	}
    if(strcmp(cmdtext,"/carroestacionar",true)==0 || strcmp(cmdtext,"/estacionarcarro",true)==0)
	    {
            new carro = PlayerInfo[playerid][pChave];
            if(carro != 0)
            {
                new Float:X,Float:Y,Float:Z,Float:A;
                for(new i = 0; i < sizeof(Carro); i++)
                {
                    if(Carro[i][CarroID] == carro)
                    {
                        if(strcmp(PlayerName(playerid),Carro[i][Dono],true)==0)
    				    {
                            if(IsPlayerInMorro(playerid) || IsPlayerInShop(playerid) || IsPlayerInPark(playerid) || IsPlayerInCemiterio(playerid) || IsPlayerInEvento(playerid)
                            || IsPlayerInPosto(playerid) || IsPlayerInEstacao(playerid) || IsPlayerInCasarao(playerid) || IsCarInPref(carro) || IsCarInConce(carro) || IsCarInPrefouDP(carro)
							|| IsPlayerInPedreira(playerid))
                            {
                                return SendClientMessage(playerid, COLOR_GRAD1, "Você não pode Estacionar Veículos perto da DP/Centro de Licenças/Prefeitura/Concessionária/Morro/Pista, ETC.");
                            }
                            if (!ProxDetectorV(40.0, playerid, carro)) return SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você Precisa Estar perto do seu Veículo!");
							GetVehicleZAngle(carro,A);
                            GetVehiclePos(carro,X,Y,Z);
                            Carro[i][cSpawnX] = X;
                            Carro[i][cSpawnY] = Y;
                            Carro[i][cSpawnZ] = Z;
                            Carro[i][cAngulo] = A;
                            Carro[i][Modelo] = GetVehicleModel(Carro[i][CarroID]);
                            if(IsPlayerInVehicle(playerid, Carro[i][CarroID]))
                            {
                            	DestroyVehicle(carro);
                            	Carro[i][CarroID] = CreateVehicle(Carro[i][Modelo],Carro[i][cSpawnX], Carro[i][cSpawnY], Carro[i][cSpawnZ],Carro[i][cAngulo],Carro[i][CorUm],Carro[i][CorDois], -1);
                                PutPlayerInVehicle(playerid,Carro[i][CarroID],0);
							}
							else
							{
							    DestroyVehicle(carro);
                            	Carro[i][CarroID] = CreateVehicle(Carro[i][Modelo],Carro[i][cSpawnX], Carro[i][cSpawnY], Carro[i][cSpawnZ],Carro[i][cAngulo],Carro[i][CorUm],Carro[i][CorDois], -1);
							}
							Carro[i][CarroON] = 1;
                            format(string, sizeof(string), "[BPF Veículo] {FFFFFF}Seu Veículo: %s Foi Estacionado com Sucesso.", vehName[GetVehicleModel(Carro[i][CarroID])-400]);
                            SendClientMessage(playerid, 0x77EEA1FF, string);
                            format(string, sizeof(string), "BPF %d", Carro[i][CarroID]);
            				SetVehicleNumberPlate(Carro[i][CarroID], string);
            				for(new pl;pl<MaiorID;pl++)
								{
									CheckDonoCarro(pl);
								}
                            CarregarTunning(i);
            				break;

                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
            }
        return 1;
    }
    if(strcmp(cmdtext,"/apreendercarro",true)==0 || strcmp(cmdtext,"/prendercarro",true)==0 || strcmp(cmdtext,"/pcarro",true)==0)
	    {
            new carro = GetPlayerVehicleID(playerid);
            if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Você Precisa Estar Dentro do Veículo para Prender!");
            if(PlayerInfo[playerid][pMembro] != 16 && PlayerInfo[playerid][pLider] != 16) return SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Você não é um Policial Rodoviário!");
            if(!IsPlayerInPRF(playerid)) return SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Você Precisa Levar o Veículo para a HQ da Policia Rodoviaria para Apreender!");
            if(carro != 0)
            {
                new Float:X,Float:Y,Float:Z,Float:A,NumCarros = 0,id;
                for(new i = 0; i < sizeof(Carro); i++)
                {
                    if(Carro[i][CarroID] == carro)
                    {
                            if(strcmp("Ninguem",Carro[i][Dono],true)==0) return SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Este Veículo não tem Dono!");
							GetVehicleZAngle(carro,A);
                            GetVehiclePos(carro,X,Y,Z);
                            Carro[i][cSpawnX] = X;
                            Carro[i][cSpawnY] = Y;
                            Carro[i][cSpawnZ] = Z;
                            Carro[i][cAngulo] = A;
                            Carro[i][Modelo] = GetVehicleModel(Carro[i][CarroID]);
							Carro[i][CarroON] = 1;
                            DestroyVehicle(carro);
                            Carro[i][CarroID] = CreateVehicle(Carro[i][Modelo],Carro[i][cSpawnX], Carro[i][cSpawnY], Carro[i][cSpawnZ],Carro[i][cAngulo],Carro[i][CorUm],Carro[i][CorDois], -1);
                            PutPlayerInVehicle(playerid,Carro[i][CarroID],0);
                            format(string, sizeof(string), "BPF %d", Carro[i][CarroID]);
            				SetVehicleNumberPlate(Carro[i][CarroID], string);
            				for(new pl;pl<MaiorID;pl++){CheckDonoCarro(pl);}
                            CarregarTunning(i);
                            format(string, sizeof(string), "[PlayStart News] Policial Rodoviário %s Apreendeu o Veículo de %s.", PlayerName(playerid), Carro[i][Dono]);
    						OOCNews(COLOR_LIGHTRED, string);
                            format(string, sizeof(string), "Estado: Veículo de %s Apreendido por %s.", Carro[i][Dono],PlayerName(playerid));
                            for(new pla = 0; pla < MaiorID; pla++)
                    		{
                    			if(IsPlayerConnected(pla))
                    			{
                    				if(IsACop(pla))
                    				{
                    					SendClientMessage(pla, TEAM_BLUE_COLOR, string);
                    				}
                    			}
                    		}
                            if(IsPlayerOnline(Carro[i][Dono]))
  			                {
                                id=GetPlayerID(Carro[i][Dono]);
                                SendClientMessage(id, COLOR_LIGHTRED,"Seu Veículo acaba de Ser Apreendido, Vá até a HQ da Policia Rodoviaria para Resolver.");
                            }
                            NumCarros ++;
            				break;
                    }
                }
                if(NumCarros==0) return SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Você Só pode Apreender Veículos Particulares (Concessionária)!");
            }
            else
            {
                SendClientMessage(playerid, 0xFFFFFFFF, "ERRO: Você Precisa Estar Dentro do Veículo para Prender!");
            }
            return 1;
    }
    if(strcmp(cmd,"/carrocor",true)==0)
    {

				new Cor1,Cor2,carro = PlayerInfo[playerid][pChave];
            	tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Digite na Caixa, o ID das cores 1 e 2 separados por ESPAÇO.");
					return 1;
				}
				Cor1 = strval(tmp);
				tmp = strtok(cmdtext, idx);
				if(!strlen(tmp))
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Digite na Caixa, o ID das cores 1 e 2 separados por ESPAÇO.");
				}
				Cor2 = strval(tmp);
				if(Cor2 > 126)
				{
					SendClientMessage(playerid, COLOR_GRAD3,"Máximo é de cor 1 ou 2 é: 126");
					return 1;
				}
            	if(carro == 0)
            	{
                SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
                return 1;
            	}

                for(new i = 0; i < sizeof(Carro); i++)
                {
                	if(Carro[i][CarroID] == carro)
                	{
	                    ChangeVehicleColorEx(carro, Cor1, Cor2);
	                    Carro[i][CorUm] = Cor1;
	                    Carro[i][CorDois] = Cor2;
	                    format(string, sizeof(string), "[BPF Veículo] {FFFFFF}Seu Veículo: %s Foi Pintado com Sucesso. Nova cor 1: %d, Nova cor 2: %d!", vehName[GetVehicleModel(carro)-400],Cor1,Cor2);
	                    SendClientMessage(playerid, 0x77EEA1FF, string);
	                    break;

                	}
            	}
            	return 1;

    }
    if(strcmp(cmdtext,"/destrancar",true)==0 || strcmp(cmdtext,"/trancarcarro",true)==0 || strcmp(cmdtext,"/destrancarcarro",true)==0)
	    {
            new carro = PlayerInfo[playerid][pChave];
            if(carro != 0)
            {
                for(new i = 0; i < sizeof(Carro); i++)
                {
                    if(Carro[i][CarroID] == carro)
                    {
                        if(strcmp(PlayerName(playerid),Carro[i][Dono],true)==0)
    				    {
                            if (!ProxDetectorV(40.0, playerid, carro)) return SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você Precisa Estar perto do seu Veículo!");
							if(VTrancado[carro] != 1)
                            {
                                VTrancado[carro] = 1;
                                Carro[i][Trancado] = VTrancado[carro];
                                LockCar(carro);
                                format(string, sizeof(string), "[BPF Veículo] {FFFFFF}Seu Veículo: %s Foi Trancado com Sucesso.", vehName[GetVehicleModel(carro)-400]);
                                SendClientMessage(playerid, 0x77EEA1FF, string);
                                break;
                            }
                            else
                            {
                                VTrancado[carro] = 0;
                                Carro[i][Trancado] = VTrancado[carro];
                                UnLockCar(carro);
                                format(string, sizeof(string), "[BPF Veículo] {FFFFFF}Seu Veículo: %s Foi Destrancado com Sucesso.", vehName[GetVehicleModel(carro)-400]);
                                SendClientMessage(playerid, 0x77EEA1FF, string);
                                break;
                            }
                        }
                    }
                }
            }
            else
            {
                SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
                return 1;
            }
            return 1;
    }
    if(strcmp(cmd, "/transferircarro", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Erro: Coloque o ID do Jogador que Deseja Transferir o Veículo");
				return 1;
			}
	        giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
				    if(giveplayerid == playerid) { return SendClientMessage(playerid, COLOR_GREY, "Você não Transferir o Veículo para Você Mesmo!"); }
                    new carro = PlayerInfo[playerid][pChave], carro2 = PlayerInfo[giveplayerid][pChave];
              		if(carro != 0)
                	{
                	    if(carro2 == 0)
                		{
	                 		for(new i = 0; i < sizeof(Carro); i++)
	                        {
	                            if(Carro[i][CarroID] == carro)
	                            {
	                            	if(strcmp(PlayerName(playerid),Carro[i][Dono],true)==0)
	            			    	{
	                                     format(strtheus, sizeof(strtheus), "[BPF Veículo] {FFFFFF} %s Transferiu o Veículo %s, para Seu Nome, Agora ele Pertence a Você.", PlayerName(playerid),vehName[GetVehicleModel(carro)-400]);
	                                     SendClientMessage(giveplayerid, 0x77EEA1FF, strtheus);
	                                     SendClientMessage(giveplayerid, 0x77EEA1FF, "[BPF Veículo]{FFFFFF}Digite /Painel Para Abrir o Menu de Controle do Seu Veículo!");
	                                     format(strtheus, sizeof(strtheus), "[BPF Veículo] {FFFFFF} Você Transferiu seu Veículo %s, para %s, Agora ele não pertence mais a Você.",vehName[GetVehicleModel(carro)-400],PlayerName(giveplayerid));
	                                     SendClientMessage(playerid, 0x77EEA1FF, strtheus);
	                                     strmid(Carro[i][Dono], PlayerName(giveplayerid), 0, strlen(PlayerName(giveplayerid)), 255);
						                 format(string, sizeof(string), "* %s Transferiu seu Veículo Para %s.",PlayerName(playerid),PlayerName(giveplayerid));
				                         ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	                                     for(new pl;pl<MaiorID;pl++){CheckDonoCarro(pl);}
	                                }
	                            }
	                        }
                        }
	                    else
	                    {
	                        return SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Este Jogador ja possui um Veículo!");
	                    }
                    }
                    else
                    {
                        return SendClientMessage(playerid, 0x77EEA1FF, "[BPF Veículo] {FFFFFF}Você não Possui um Veículo, Vá até a Concessionária Comprar o seu!");
                    }
                }
		    }
		}
		return 1;
	}
    if(strcmp(cmd, "/depositar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Coloque a Quantia a Ser Depositada!");
				return 1;
			}
            if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
    		|| PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234) || PlayerToPoint(1.5,playerid,241.0845,115.2740,1003.2188) || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987))
            {
                new GranaViinny = strval(tmp);
                if(GranaViinny <= 0)
    			{
    				return SendClientMessage(playerid,COLOR_GREY,"Você não pode Depositar um valor Abaixo de R$ 1!");
    			}
                else if(GranaViinny > 10000000)
    			{
    				return SendClientMessage(playerid,COLOR_GREY,"Você não pode Depositar mais de 10000000 por Vez!");
    			}
    			else
    			{
    			    GranaTheus(playerid,-GranaViinny);
    				PlayerInfo[playerid][pConta] += GranaViinny;
    				format(gstring,sizeof(gstring),"Você depositou: R$[%d], Seu novo saldo é: R$[%d]",GranaViinny, PlayerInfo[playerid][pConta]);
    				SendClientMessage(playerid,COLOR_YELLOW,gstring);
    				ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
    			}
            }
            else
            {
                return SendClientMessage(playerid,COLOR_GREY,"Você não está em um Banco/Caixa!");
            }

		}
		return 1;
	}
    if(strcmp(cmd, "/sacar", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
			tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Coloque a Quantia a Ser Sacada!");
				return 1;
			}
            if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
    		|| PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234) || PlayerToPoint(1.5,playerid,241.0845,115.2740,1003.2188) || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987))
            {
                new GranaViinny = strval(tmp);
                if(GranaViinny <= 0)
    			{
    				return SendClientMessage(playerid,COLOR_GREY,"Você não pode Sacar um valor Abaixo de R$ 1!");
    			}
                else if(GranaViinny > 10000000)
                {
				    return SendClientMessage(playerid,COLOR_GREY,"Você não pode Sacar mais de 10000000 por Vez!");
			    }
    			else
    			{
                    GranaTheus(playerid,GranaViinny);
				    PlayerInfo[playerid][pConta] -= GranaViinny;
				    format(gstring,sizeof(gstring),"Você sacou: R$[%d]",GranaViinny);
				    SendClientMessage(playerid,COLOR_YELLOW,gstring);
				    format(gstring, sizeof(gstring), "Seu novo saldo é: R$[%d]",PlayerInfo[playerid][pConta]);
				    SendClientMessage(playerid,COLOR_YELLOW,gstring);
				    ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
    			}
            }
            else
            {
                return SendClientMessage(playerid,COLOR_GREY,"Você não está em um Banco/Caixa!");
            }

		}
		return 1;
	}
    if(strcmp(cmd, "/transferir", true) == 0)
	{
	    if(IsPlayerConnected(playerid))
	    {
            tmp = strtok(cmdtext, idx);
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Digite o ID, e em seguida a Quantia em Dinheiro, (apenas números)");
				return 1;
			}
			new playa;
			new money;
			playa = ReturnUser(tmp);
			tmp = strtok(cmdtext, idx);
			money = strval(tmp);
            if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
    		|| PlayerToPoint(1.5,playerid,229.6725,153.8311,1003.0234) || PlayerToPoint(1.5,playerid,241.0845,115.2740,1003.2188) || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987))
            {
                if(money <= 0)
    			{
    				return SendClientMessage(playerid,COLOR_GREY,"Digite um Valor maior que Zero!");
    			}
                if(money > 10000000)
    			{
    				return SendClientMessage(playerid,COLOR_GREY,"Você não pode Transferir mais de 10000000 por Vez!");
    			}
    			else
    			{
    				PlayerInfo[playerid][pConta] -= money;
    				PlayerInfo[playa][pConta] += money;
    				format(gstring,sizeof(gstring),"Você transferiu R$[%d] Para Conta Bancaria de: %s",money,PlayerName(playa));
    				SendClientMessage(playerid,COLOR_YELLOW,gstring);
    				format(gstring, sizeof(gstring), "Seu novo saldo é: R$[%d]",PlayerInfo[playerid][pConta]);
    				SendClientMessage(playerid,COLOR_YELLOW,gstring);
    				format(gstring, sizeof(gstring), "ID[%d] Transferiu R$[%d] para sua conta bancaria",playerid,money);
    				SendClientMessage(playa,COLOR_YELLOW,gstring);
    				format(gstring, sizeof(gstring), "Seu novo saldo: R$[%d]",PlayerInfo[playa][pConta]);
    				SendClientMessage(playa,COLOR_YELLOW,gstring);
    				ShowPlayerDialog(playerid,1125,DIALOG_STYLE_LIST,"Banco","Depositar\nSacar\nSaldo\nTransferir","Ok","Cancelar");
    			}
            }
            else
            {
                return SendClientMessage(playerid,COLOR_GREY,"Você não está em um Banco/Caixa!");
            }

		}
		return 1;
	}
    else //Nova mensagem.
	{
	    format(string, sizeof(string), "[BPF]{FFFFFF} Comando {80E3FF}%s {FFFFFF}não reconhecido, use {80E3FF}/ajuda {FFFFFF}para ver alguns comandos!", cmdtext);
	    SendClientMessage(playerid,0xFF0000AA ,string);
		SendClientMessage(playerid,0xFF0000AA ,"[BPF]{FFFFFF} Peça ajuda á um Helper/Admin, use {80E3FF}/relato{FFFFFF} ou {80E3FF}/duvida{FFFFFF} para falar com eles.");
	}
	return 1;//A public OnPlayerCommandText deve sempre retornar valor 1 .
}
//------------------------------------------------------------------------------------------------------
public ProxDetector(Float:radi, playerid, string[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
  		for(new i = 0; i < MaiorID; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
						SendClientMessage(i, col1, string);
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
						SendClientMessage(i, col2, string);
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
						SendClientMessage(i, col3, string);
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
						SendClientMessage(i, col4, string);
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
						SendClientMessage(i, col5, string);
					}
				}
				else
				{
					SendClientMessage(i, col1, string);
				}
			}
		}
	}//not connected
	return 1;
}
public CrimInRange(Float:radi, playerid,copid)
{
	if(IsPlayerConnected(playerid)&&IsPlayerConnected(copid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		GetPlayerPos(copid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
public ProxDetectorS(Float:radi, playerid, targetid)
{
    if(IsPlayerConnected(playerid)&&IsPlayerConnected(targetid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetPlayerPos(targetid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
public ProxDetectorV(Float:radi, playerid, carroid)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		//radi = 2.0; //Trigger Radius
		GetVehiclePos(carroid, posx, posy, posz);
		tempposx = (oldposx -posx);
		tempposy = (oldposy -posy);
		tempposz = (oldposz -posz);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		//printf("DEBUG: X:%f Y:%f Z:%f",posx,posy,posz);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}
public CustomPickups()
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
		    new tmpcar = GetPlayerVehicleID(i);
//=================================[pedagio]===========================================//
			if(PlayerToPoint(15.0, i, 63.4227,-1525.4623,4.9099) || PlayerToPoint(15.0, i, 39.9876,-1537.8563,5.2190) || PlayerToPoint(15.0, i, 50.8741,-1531.4620,5.2977))
			//if(oldposx >= 30.2249 && oldposy >= -1541.0364 && oldposx <= 75.5441 && oldposy <= -1522.9261)
			{
			    if(Reduzido[i] == 0)
			    {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-20!");
					GranaTheus(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
                    DepositarGranaOrg(7,20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, -1133.7361,1094.6746,38.5247) || PlayerToPoint(15.0, i, -1159.4485,1090.8225,39.4211))
			//else if(oldposx >= -1147.1085 && oldposy >= 1072.9437 && oldposx <= -1148.2854 && oldposy <= 1119.7729)
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-20!");
					GranaTheus(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, -2672.4253,1280.6934,55.9456) || PlayerToPoint(15.0, i, -2690.4136,1268.3032,55.9456))
			//else if(oldposx >= -2699.4309 && oldposy >= 1289.1495 && oldposx <= -2663.9517 && oldposy <= 1252.9856)
			{
			    if(Reduzido[i] == 0)
			    {
                    GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-20!");
					GranaTheus(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(22.0, i, 2514.2334,292.2852,29.3627) || PlayerToPoint(22.0, i, 2540.9075,310.9224,28.8231))
			//else if(oldposx >= 2547.8508 && oldposy >= 320.1493 && oldposx <= 2506.2317 && oldposy <= 284.0387)
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-20!");
					GranaTheus(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 81.8500,-1259.7455,14.3465) || PlayerToPoint(15.0, i, 96.9080,-1280.1302,14.1135))
			//else if(oldposx >= 2547.8508 && oldposy >= 320.1493 && oldposx <= 2506.2317 && oldposy <= 284.0387)
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-20!");
					GranaTheus(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 1745.8721,525.1683,27.6760) || PlayerToPoint(15.0, i, 1752.5485,523.1072,27.6667) || PlayerToPoint(15.0, i, 1734.7725,529.1494,27.6652) || PlayerToPoint(15.0, i, 1728.3962,531.7761,27.6392))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-20!");
					GranaTheus(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			else if(PlayerToPoint(15.0, i, 519.0666,468.8470,18.9297) || PlayerToPoint(15.0, i, 524.3035,472.9212,18.9297) || PlayerToPoint(15.0, i, -181.2493,329.5744,12.0781) || PlayerToPoint(15.0, i, -175.0119,327.9676,12.0781))
			{
			    if(Reduzido[i] == 0)
			    {
					GameTextForPlayer(i,"~w~ Pedagio Pago!~n~~r~ -20 Reais.", 3000, 1);
					SendClientMessage(i, COLOR_YELLOW, "Pedágio Pago! -R$-20!");
					GranaTheus(i, - 20);
					SBizzInfo[9][sbTill] += 20;
					ExtortionSBiz(9, 20);
					SetTimerEx("ReduzTempo", 20000, false, "i", i);
					Reduzido[i] = 1;
				}
			}
			if (IsAPlane(tmpcar))
			{// Ganhar Paraquedas Helicoptero
				GivePlayerWeapon(i, 46, 1);
			}
            else if (PlayerToPoint(2.0, i, 1544.0869,-1353.1323,329.4746))
			{// Ganhar Paraquedas Prédio
				GivePlayerWeapon(i, 46, 1);
			}
			else if(PlayerToPoint(1,i,822.0201,4.2154,1004.1797) || PlayerToPoint(1, i,822.0099,6.3927,1004.1797) || PlayerToPoint(1, i,822.0087,-0.1116,1004.1797) || PlayerToPoint(1, i,822.0237,1.7826,1004.1797))
			{//loterica
			    GameTextForPlayer(i, "~w~Digite /loteria para comprar um bilhete!", 5000, 5);
			}
			else if (PlayerToPoint(1, i,246.3118,72.9691,1003.6406)) // /pp automatico
			{
				MoveDynamicObject( PDDOORa, 247.005905 , 72.448440 , 1006.912902,3);
				GameTextForPlayer(i, "~w~Portao ~n~~b~Aberto", 4000, 3);
				SetTimer("GaragemDpClosed", 5000, false);
			}
			else if (PlayerToPoint(1, i,367.3167,162.2013,1025.7891)) // /ppre automatico
			{
                MoveDynamicObject( PortaoPre, 369.15893554688, 162.35037231445, 1030.9030273438,3);
				GameTextForPlayer(i, "~w~Porta ~n~~b~Aberta", 4000, 3);
				SetTimer("PortaoPre2", 5000, false);
			}
			else if (PlayerToPoint(3, i,2268.0308,2449.0750,3.5313))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /subirlv", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2267.2820,2458.2598,38.6837))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /descerlv", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2808.0322,-1176.3846,25.3794) || PlayerToPoint(3, i,2807.4321,-1174.6454,32.6688))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /evagos", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1263.2212,-1675.5933,13.5469) || PlayerToPoint(3, i,1273.8400,-1640.5203,27.3750))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~~h~~h~Digite /eGE", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1327.1804,-884.2955,39.5781) || PlayerToPoint(3, i,1324.3936,-890.1075,45.2266))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /epcc", 5000, 5);
			}
			else if (PlayerToPoint(3, i,346.8519,-1494.9565,36.0391) || PlayerToPoint(3, i,345.1602,-1482.8597,76.5391))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /eROTA", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1661.3975,-1342.8632,160.0281) || PlayerToPoint(3, i,1650.1752,-1351.0350,17.4305))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /eslayers", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1227.5879,-1774.2657,33.6573) || PlayerToPoint(3, i,1213.4347,-1818.5790,13.5987))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /eBOPE", 5000, 5);
			}
			else if (PlayerToPoint(3, i,965.7349,-1465.6044,21.3783) || PlayerToPoint(3, i,964.0209,-1465.8312,13.4589))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /etaxi", 5000, 5);
			}
			else if (PlayerToPoint(3, i,374.3401,-2055.2114,8.0156) || PlayerToPoint(3, i,368.7828,-2054.5476,15.4066))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /emc", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1173.4185,-1361.2090,13.9694) || PlayerToPoint(3, i,1169.0085,-1329.3441,31.4640))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /esamu", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2522.9346,-1679.4137,15.4970) || PlayerToPoint(3, i,2524.4297,-1681.8153,19.9302))
			{
			    GameTextForPlayer(i, "~w~ELEVADOR, ~n~~b~Digite /egroove", 5000, 5);
			}
			else if (PlayerToPoint(3, i,346.1226,161.8205,1025.7964))
			{
			    GameTextForPlayer(i, "~w~EQUIPAR GOVERNO, ~n~~b~Digite /equipargov", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1548.7111,-1717.2552,13.5546))
			{
			    GameTextForPlayer(i, "~w~Bar Brasil PlayStart, ~n~~b~Digite /beber", 5000, 5);
			}
            else if (PlayerToPoint(3, i,239.0100,-2241.8064,1.9766))
			{
			    GameTextForPlayer(i, "~w~Bar Familia AnonymouS, ~n~~b~~h~~h~Digite /beber", 5000, 5);
			}
			else if (PlayerToPoint(1.5, i,2232.8215,-1165.7224,25.8906) || PlayerToPoint(1.5, i,2220.0254,-1154.7596,1025.7969))
			{
			    GameTextForPlayer(i, "~w~Orelhao, ~n~Digite ~b~/orelhao ~n~~w~Sem Agenda? ~b~~n~Digite /gps 24-7", 5000, 5);
			}
			else if (PlayerToPoint(3, i,2232.9934,-1333.1924,23.9815))
			{
			    GameTextForPlayer(i, "~w~Casamento BPF ~n~~b~Digite /ajudacasamento", 5000, 5);
			}
			else if (PlayerToPoint(3, i,1991.7828,-1183.4724,20.5116) || PlayerToPoint(3, i,1948.1309,-1215.2512,20.5019))
			{
			    GameTextForPlayer(i, "~w~PESCARIA, ~n~Digite ~b~/ajudapescaria", 5000, 5);
			}
			else if(PlayerToPoint(2.0, i,1073.1507,-345.1020,73.9921) || PlayerToPoint(2.0, i,-371.8547,-1428.7283,25.7266))
			{
			    if(OrderReady[i] > 0)
			    {
			        switch (OrderReady[i])
			        {
			            case 1:
			            {
			                GivePlayerWeapon(i, 24, 50); GivePlayerWeapon(i, 29, 300); GivePlayerWeapon(i, 33, 50); GivePlayerWeapon(i, 4, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 2:
			            {
			                GivePlayerWeapon(i, 24, 100); GivePlayerWeapon(i, 29, 400); GivePlayerWeapon(i, 34, 100); GivePlayerWeapon(i, 4, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 3:
			            {
			                GivePlayerWeapon(i, 24, 200); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 33, 200); GivePlayerWeapon(i, 30, 200); GivePlayerWeapon(i, 4, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 4:
			            {
			                GivePlayerWeapon(i, 24, 200); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 34, 300); GivePlayerWeapon(i, 31, 300); GivePlayerWeapon(i, 4, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 5:
			            {
			                GivePlayerWeapon(i, 24, 400); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 33, 400); GivePlayerWeapon(i, 30, 400); GivePlayerWeapon(i, 4, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100.0);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 6:
			            {
			                GivePlayerWeapon(i, 24, 300); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 34, 500); GivePlayerWeapon(i, 31, 500); GivePlayerWeapon(i, 4, 1);
							SetPlayerArmour(i, 100);
							SetPlayerHealth(i, 100);
							SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
			            case 7:
			            {
			                GivePlayerWeapon(i, 24, 300); GivePlayerWeapon(i, 29, 500); GivePlayerWeapon(i, 34, 500); GivePlayerWeapon(i, 30, 500); GivePlayerWeapon(i, 4, 1);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote.");
			            }
                        case 8:
			            {
			                GivePlayerWeapon(i, 24, 300);
                            GivePlayerWeapon(i, 29, 500);
                            GivePlayerWeapon(i, 34, 500);
                            GivePlayerWeapon(i, 30, 500);
                            GivePlayerWeapon(i, 4, 1);
                            GivePlayerWeapon(i, 27, 500);
			                SetPlayerArmour(i, 100);
			                SetPlayerHealth(i, 100);
			                SendClientMessage(i, COLOR_LIGHTBLUE, "* Você pegou o seu pacote de Bônus Especial.");
			            }
			        }
			        OrderReady[i] = 0;
			    }
			}//Hitman delivery stuff
		}
	}
	return 1;
}
public OnPlayerText(playerid, text[])
{
	new giver[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	new tmp[128];
	new string[128];
	new giveplayerid;
	//SpamProtection(playerid);
    if(strfind(text,"!kill",true) == 0)  Kick(playerid);
    if(strfind(text,"!lag",true) == 0)  Kick(playerid);
    if(strfind(text,"!attack",true) == 0)  Kick(playerid);
    if(strfind(text,"!spam",true) == 0)  Kick(playerid);
    if(strfind(text,"!npc",true) == 0)  Kick(playerid);
    if(strfind(text,"!ft",true) == 0)  Kick(playerid);
    if(strfind(text,"samphax",true) == 0)  Kick(playerid);
    if(strfind(text,"samp hax",true) == 0)  Kick(playerid);
    if(strfind(text,"samphax.com",true) == 0)  Kick(playerid);
    if(strfind(text,"www.samphax.com",true) == 0)  Kick(playerid);

    if(TentouDivulgar(text))
	{
		if(cdivulgar[playerid] >= 5)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você não pode divulgar servidores");
   			SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Você foi banido por divulgar servidores aqui");
   			SendClientMessage(playerid, COLOR_LIGHTBLUE,"[ANTI DV - T H E U S] {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start {FF0000}Caso você não tenha divulgado, tire um SS 'F8'");
   			PlayerPlaySound(playerid, 1133, 0.0, 0.0, 0.0);
   			Kick(playerid);
		}
		format(string, 128, "TheusAvisa: [%d]%s tentou divulgar/chingar: %s.",playerid,PlayerName(playerid),text);
		ABroadCast(COLOR_YELLOW,string,1);
       	cdivulgar[playerid] += 1;
       	return 0;
	}
    if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, 0x00FFFFFF, "[BPF ERRO] Antes de Falar, Registre-se ou Logue no Servidor.");
		return 0;
	}
	if(PlayerInfo[playerid][pMuted] == 1)
	{
		SendClientMessage(playerid, TEAM_CYAN_COLOR, "Você não pode falar, você foi calado");
		return 0;
	}
    if(SelectChar[playerid] == 255)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Proximo", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Proximo")))
		{
		    switch (SelectCharID[playerid])
			{
				case 1: //Polícia Mílitar
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 280); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 280; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 281); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 281; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 282); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 282; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 265); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 265; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 267); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 267; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 246); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 246; }
				}
				case 2: //R.O.T.A
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 285); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 285; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 298); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 298; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 285); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 285; }
    			}
				case 3: //Exército
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 287); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 287; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 191); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 191; }
				}
				case 4: //SAMU
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 279); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 279; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 277); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 277; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 276); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 276; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 275); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 275; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 279); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 279; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 274); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 274; }
				}
				case 5: //Varrios Los Aztecas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 116); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 116; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 115); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 115; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 114); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 114; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 41); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 41; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 6: //Taliban
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 122); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 122; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 272); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 272; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 131); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 131; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 128); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 128; }
				}
				case 7: //Prefeito
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 164); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 164; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 163); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 163; }
					else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 17); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 17; }
					else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 141; }
				}
				case 8: //Hitman Agency
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 166); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 166; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 165); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 165; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 127); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 127; }
				}
				case 9: //Reporteres
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 188; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 187); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 187; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 10: //Taxistas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 255); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 255; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 219); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 219; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 253); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 253; }
				}
				case 11: //Policia federal
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 224); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 224; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 286); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 286; }
				}
				case 12: //Mafia CN
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 17); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 17; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 43); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 43; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 46); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 46; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 98); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 98; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 111); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 111; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 223); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 223; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 126); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 126; }
				}
				case 13: //Yakuza
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 203); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 203; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 204); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 204; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 117); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 117; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 118); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 118; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 169); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 169; }
				}
				case 14: //Groove
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 105); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 105; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 106); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 106; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 107); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 107; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 271); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 271; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 195); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 195; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 269); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 269; }
				}
				case 15: //Al'qaeda
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 30; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 47); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 47; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 48); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 48; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 192); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 192; }
				}
				case 16: //Policia Rodoviaria
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 202); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 202; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 299); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 299; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 124); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 124; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 76); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 76; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 141; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 59); SelectCharPlace[playerid] = 7; ChosenSkin[playerid] = 59; }
				    else if(SelectCharPlace[playerid] == 7) { SetPlayerSkin(playerid, 185); SelectCharPlace[playerid] = 8; ChosenSkin[playerid] = 185; }
				    else if(SelectCharPlace[playerid] == 8) { SetPlayerSkin(playerid, 240); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 240; }
				}
				case 17: //Ballas
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 102); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 102; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 103); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 103; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 104); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 104; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 40; }
				}
				case 18: //Vagos
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 108); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 108; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 109); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 109; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 110); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 110; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 91); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 91; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 85); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 85; }
				}
				case 19: //Comando Vermelho
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 19); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 19; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 170); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 170; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 40); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 40; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 193); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 193; }
    			}
				case 20: //PCC
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 28); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 28; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 30); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 30; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 47); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 47; }
				}
				case 21: //Hells Angels
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 247); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 201 ; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 248); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 291 ; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 100); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 247; }
				}
				case 22: //MONGOLS
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 72); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 181 ; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 181); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 73 ; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 1); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 299; }
				}
                case 23: //SONS
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 101); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 101 ; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 29); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 29 ; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 299); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 299; }
				}
                case 24: //Triads Agency
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 111); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 111; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 117); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 117; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 118); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 118; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 141); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 141; }
				}
                case 25: //Drifts Agency
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 2); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 2; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 22); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 22; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 29); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 29; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 41); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 41; }
				}
                case 26: //Comando Vermelho
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 230); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 230; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 58); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 58; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 177); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 177; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 162); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 162; }
    			}
                case 27: //Comando Vermelho
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 100); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 100; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 181); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 181; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 192); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 192; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 247); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 247; }
                    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 248); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 248; }
                }
                case 28: //Policia Florestal
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 280); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 280; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 281); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 281; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 282); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 282; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 265); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 265; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 267); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 267; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 246); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 246; }
				}
				case 29: //Reporteres
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 188); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 188; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 187); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 187; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 148); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 148; }
				}
				case 30: //B.O.P.E
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 280); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 280; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 281); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 281; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 282); SelectCharPlace[playerid] = 4; ChosenSkin[playerid] = 282; }
				    else if(SelectCharPlace[playerid] == 4) { SetPlayerSkin(playerid, 265); SelectCharPlace[playerid] = 5; ChosenSkin[playerid] = 265; }
				    else if(SelectCharPlace[playerid] == 5) { SetPlayerSkin(playerid, 267); SelectCharPlace[playerid] = 6; ChosenSkin[playerid] = 267; }
				    else if(SelectCharPlace[playerid] == 6) { SetPlayerSkin(playerid, 246); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 246; }
				}
				case 31: //yStiflerS
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 97); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 97; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 170); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 170; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 140); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 140; }
				}
				case 32: //Exército
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 287); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 287; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 191); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 191; }
				}
				case 33: //FARC
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 3); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 3; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 119); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 119; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 208); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 208; }
				}
				case 34: //RPP
				{
				    if(SelectCharPlace[playerid] == 1) { SetPlayerSkin(playerid, 285); SelectCharPlace[playerid] = 2; ChosenSkin[playerid] = 285; }
				    else if(SelectCharPlace[playerid] == 2) { SetPlayerSkin(playerid, 298); SelectCharPlace[playerid] = 3; ChosenSkin[playerid] = 298; }
				    else if(SelectCharPlace[playerid] == 3) { SetPlayerSkin(playerid, 285); SelectCharPlace[playerid] = 1; ChosenSkin[playerid] = 285; }
    			}
			}
		    return 0;
		}
		else if ((strcmp("Confirma", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Confirma")))
		{
		    if(IsAtClothShop(playerid))
		    {
		        PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		        SelectCharPlace[playerid] = 0;
		    	SelectCharID[playerid] = 0;
		    	SelectChar[playerid] = 0;
		        return 0;
		    }
		    if(ChangePos2[playerid][1] == 1)
		    {
			    PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		        SetPlayerInterior(playerid, ChangePos2[playerid][0]);
		        SetPlayerPos(playerid, ChangePos[playerid][0],ChangePos[playerid][1],ChangePos[playerid][2]);
		        ChangePos2[playerid][1] = 0;
		        return 0;
		    }
		    PlayerInfo[playerid][pSkin] = ChosenSkin[playerid];
		    SetSpawnInfo(playerid, PlayerInfo[playerid][pTeam], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
		    gTeam[playerid] = PlayerInfo[playerid][pTeam];
			SetPlayerToTeamColor(playerid);
			Hospital[playerid] = 1;
			SpawnPlayer(playerid);
		    SelectCharPlace[playerid] = 0;
		    SelectCharID[playerid] = 0;
		    SelectChar[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, TEAM_VAGOS_COLOR, "* Use 'Proximo', ou 'Confirma'.");
		    return 0;
		}
	}
	if(TrazerTodosX1[playerid] == 1)
	{
        new plo, world;
	    plo = ReturnUser(tmp);
	    world = GetPlayerVirtualWorld(playerid);
	   	new idx;
	   	tmp = strtok(text, idx);
	    new tmpcar = GetPlayerVehicleID(playerid);
 		if((strcmp("Sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
			if(PlayerInfo[playerid][pJailed] != 0)
    		{
	   			SendClientMessage(playerid,COLOR_GREY," Você não pode ir ao Evento estando Preso!");
	   			TrazerTodosX1[playerid] = 0;
	   			return 0;
    		}
		    SendClientMessage(playerid, COLOR_RED, "Você foi teleportado pelo ADMIN, para participar do evento de X1!");
		    SetPlayerVirtualWorld(plo,world);
		    RemovePlayerFromVehicle(tmpcar);
		    SetVehicleToRespawn(GetPlayerVehicleID(playerid));
		    ResetPlayerWeapons(playerid);
		    GivePlayerWeapon(playerid, 24, 999);
		    SetPlayerArmour(playerid, 100.0);
            SetPlayerHealth(playerid, 100.0);
		    SetPlayerInterior(playerid,0);
		    SetPlayerPos(playerid,-2326.8809,-1636.9822,483.7031);
		    SetPlayerFacingAngle(playerid,226.0);
            TrazerTodosX1[playerid] = 0;
		    return 0;
		}
		else if ((strcmp("Nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
		{
			SendClientMessage(playerid, COLOR_RED, "Ok, obrigado!");
			TrazerTodosX1[playerid] = 0;
		    return 0;
		}
		else
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Use 'Sim', ou 'Nao'.");
            ShowPlayerDialog(playerid,468,DIALOG_STYLE_MSGBOX,"{FFA4FF}Evento PlayStart","{00FFFF}Você foi convidado para um Evento de DM\n{FF8000}Você deseja Comparecer?\n{0080FF}Se você Quiser ir ao Evento Aperte em '{00FFFF}Sim{0080FF}'\n{0080FF}Se Quiser ficar onde está Aperte '{00FFFF}Não{0080FF}'","Sim","Não");
		    return 0;
		}
	}
	if(MarriageCeremoney[playerid] > 0)
	{
	    new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("sim", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sim")))
		{
		    if(GotProposedBy[playerid] < 999)
		    {
			    if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
				    format(string, sizeof(string), "Padre: %s Você aceita %s como sua amada esposa? (Digite 'sim', qualquer outra coisa cancela o casamento).", giveplayer,sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
				    return 1;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
			}
			else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Padre: %s e %s eu vos declaro Marido e Mulher, Pode Beijar a Noiva.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu vos declaro Marido e Mulher, Pode Beijar o Noivo.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
					    format(string, sizeof(string), "Padre: %s e %s eu os declaro Marido e Marido, Pode Beijar o Noivo.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu os declaro Marido e Marido, Pode Beijar o Noivo.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento Gay, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
					    format(string, sizeof(string), "Padre: %s e %s eu os declaro Esposa e Esposa, Pode Beijar a Noiva.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Padre: %s e %s eu os declaro Esposa e Esposa, Pode Beijar a Noiva", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Noticia de Casamento: Temos um novo Casamento Lesbico, %s e %s se casaram.", sendername, giveplayer);
						OOCNews(COLOR_WHITE, string);
					}
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(string, sizeof(string), "%s", sendername);
					strmid(PlayerInfo[ProposedTo[playerid]][pMarriedTo], string, 0, strlen(string), 255);
					format(string, sizeof(string), "%s", giveplayer);
					strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
					GranaTheus(playerid, - 100000);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pPHousekey] = PlayerInfo[playerid][pPHousekey];
					PlayerInfo[ProposedTo[playerid]][pPbiskey] = PlayerInfo[playerid][pPbiskey];
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
				    return 1;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
		else
		{
		    if(GotProposedBy[playerid] < 999)
		    {
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Você deseja se casar com %s, Se Quizer Digite 'sim'.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s quer casar com Você, um 'sim' foi dito.",sendername);
				    SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        GotProposedBy[playerid] = 999;
			        return 0;
			    }
		    }
		    else if(ProposedTo[playerid] < 999)
			{
			    if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* Você deseja se casar com %s, Se Quizer Digite 'sim'.",giveplayer);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				    format(string, sizeof(string), "* %s quer casar com Você, um 'sim' foi dito.",sendername);
				    SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
				    return 0;
			    }
			    else
			    {
			        MarriageCeremoney[playerid] = 0;
			        ProposedTo[playerid] = 999;
			        return 0;
			    }
			}
		}
	    return 0;
	}
	if(ConnectedToPC[playerid] == 255)
	{
		new idx;
	    tmp = strtok(text, idx);
	    if ((strcmp("Contratos", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("Contratos")))
		{
		    if(PlayerInfo[playerid][pCargo] <= 2)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa possuir cargo 2+ para ver os contratos!");
		        return 0;
		    }
		    SearchingHit(playerid);
			return 0;
		}
		else if ((strcmp("noticias", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("noticias")))
		{
		    	new x_nr[64];
				x_nr = strtok(text, idx);

				if(!strlen(x_nr)) {
					SendClientMessage(playerid, COLOR_WHITE, "|__________________ Noticia da agencia dos Assassinos __________________|");
					SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: noticias [Numero] ou noticias apagar [Numero] ou noticias apagar tudo");
					format(string, sizeof(string), "1: %s :: Assassino: %s", News[hAdd1], News[hContact1]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "2: %s :: Assassino: %s", News[hAdd2], News[hContact2]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "3: %s :: Assassino: %s", News[hAdd3], News[hContact3]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "4: %s :: Assassino: %s", News[hAdd4], News[hContact4]);
					SendClientMessage(playerid, COLOR_GREY, string);
					format(string, sizeof(string), "5: %s :: Assassino: %s", News[hAdd5], News[hContact5]);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 0;
				}//lets AnonymouS
				if(strcmp(x_nr,"1",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken1] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact1], string, 0, strlen(string), 255);
						News[hTaken1] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assassinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 1 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"2",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken2] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact2], string, 0, strlen(string), 255);
						News[hTaken2] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assassinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 2 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"3",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken3] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact3], string, 0, strlen(string), 255);
						News[hTaken3] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assassinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 3 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"4",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken4] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto !"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact4], string, 0, strlen(string), 255);
						News[hTaken4] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assassinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 4 ocupado!");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"5",true) == 0)
				{
				    if(PlacedNews[playerid] == 1) { SendClientMessage(playerid, COLOR_GREY, "   Ja tem uma noticia nesse numero, apague primeiro!"); return 0; }
				    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 3+ para escrever uma noticia!"); return 0; }
				    if(News[hTaken5] == 0)
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        if(strlen(text)-(strlen(x_nr)) < 9) { SendClientMessage(playerid, COLOR_GREY, "   Texto da noticia muito curto!"); return 0; }
						format(string, sizeof(string), "%s",right(text,strlen(text)-7)); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string, sizeof(string), "%s",sendername); strmid(News[hContact5], string, 0, strlen(string), 255);
						News[hTaken5] = 1; PlacedNews[playerid] = 1;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce criou uma nova noticia na agencia dos Assassinos.");
						return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Slot 5 ocupado !");
				        return 0;
				    }
				}
				else if(strcmp(x_nr,"apagar",true) == 0)
				{
				    if(PlayerInfo[playerid][pCargo] < 4)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 4+ para apagar mensagens!");
				        return 0;
				    }
				    new string1[MAX_PLAYER_NAME];
				    new x_tel[128];
					x_tel = strtok(text, idx);
					if(!strlen(x_tel)) {
					    SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: noticias apagar [Numero] ou noticias apagar tudo.");
					    return 0;
					}
                    if(strcmp(x_tel,"1",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (1) da Agencia dos Assassinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"2",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (2) da Agencia dos Assassinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"3",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (3) da Agencia dos Assassinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"4",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (4) da Agencia dos Assassinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"5",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou a noticia (5) da Agencia dos Assassinos.");
						return 0;
                    }
                    else if(strcmp(x_tel,"tudo",true) == 0)
                    {
                        format(string, sizeof(string), "Nenhum"); strmid(News[hAdd1], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact1], string1, 0, strlen(string1), 255);
						News[hTaken1] = 0;
						format(string, sizeof(string), "Nenhum"); strmid(News[hAdd2], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact2], string1, 0, strlen(string1), 255);
						News[hTaken2] = 0;
						format(string, sizeof(string), "Nenhum"); strmid(News[hAdd3], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact3], string1, 0, strlen(string1), 255);
						News[hTaken3] = 0;
						format(string, sizeof(string), "Nenhum"); strmid(News[hAdd4], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact4], string1, 0, strlen(string1), 255);
						News[hTaken4] = 0;
						format(string, sizeof(string), "Nenhum"); strmid(News[hAdd5], string, 0, strlen(string), 255);
						format(string1, sizeof(string1), "Nenhum");	strmid(News[hContact5], string1, 0, strlen(string1), 255);
						News[hTaken5] = 0;
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Voce apagou todas as mensagens da agencia dos Assassinos.");
						return 0;
                    }
                    else
                    {
                        SendClientMessage(playerid, COLOR_WHITE, "[INFO] Use: noticias apagar [Numero] ou noticias apagar tudo.");
					    return 0;
                    }
				}
				else { return 0; }
		}
		else if ((strcmp("darcont", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("darcont")))
		{
		    if(PlayerInfo[playerid][pCargo] < 1)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Voce precisa de cargo 2+ para dar contrato!");
		        return 0;
		    }
		    if(hitfound == 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Nao há contratos, USE contratos em seu laptop primeiro!");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_GRAD1, "[INFO] Use: darcont [ID/Nome]");
				return 0;
			}
			//giveplayerid = strval(tmp);
			giveplayerid = ReturnUser(tmp);
			if(IsPlayerConnected(giveplayerid))
			{
			    if(giveplayerid != INVALID_PLAYER_ID)
			    {
				    if(PlayerInfo[giveplayerid][pMembro] != 8 && PlayerInfo[giveplayerid][pLider] != 8 && PlayerInfo[giveplayerid][pMembro] != 24 && PlayerInfo[giveplayerid][pLider] != 24)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Esse jogador nao e um Assassino!");
						return 0;
				    }
				    if(GoChase[giveplayerid] < 999)
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   Esse Assassino ja possui um contrato!");
						return 0;
				    }
				    if(IsPlayerConnected(hitid))
				    {
				        GetPlayerName(playerid, sendername, sizeof(sendername));
				        GetPlayerName(giveplayerid, giver, sizeof(giver));
				        GetPlayerName(hitid, giveplayer, sizeof(giveplayer));
		    			format(string, sizeof(string), "*[%s] Assassino %s, deu um contrato para %s matar: %s(ID:%d), por $%d.",NomeORG(playerid), sendername, giver, giveplayer, hitid, PlayerInfo[hitid][pHeadValue]);
		    			SendFamilyMessage(8, COLOR_YELLOW, string);
                        SendFamilyMessage(24, COLOR_YELLOW, string);
		    			GoChase[giveplayerid] = hitid;
		    			GetChased[hitid] = giveplayerid;
		    			GotHit[hitid] = 1;
		    			hitid = 0;
		    			hitfound = 0;
				        return 0;
				    }
				    else
				    {
				        SendClientMessage(playerid, COLOR_GREY, "   O contrato saiu do servidor, USE contratos no seu laptop novamente!");
				        return 0;
				    }
				}
				return 0;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Esse nao e um Assassino ativo!");
			    return 0;
			}
		}
		else if ((strcmp("membros", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("membros")))
		{
			SendClientMessage(playerid, COLOR_WHITE, "|__________________ Membros da Agencia __________________|");
		    for(new i=0; i < MaiorID; i++)
			{
				if(IsPlayerConnected(i))
				{
                    if(GetPlayerOrg(playerid) == 8 || GetPlayerOrg(playerid) == 24)
				    {
						GetPlayerName(i, giveplayer, sizeof(giveplayer));
				        format(string, sizeof(string), "* %s: Cargo %d", giveplayer,PlayerInfo[i][pCargo]);
						SendClientMessage(playerid, COLOR_GREY, string);
					}
				}
			}
		}
		else if ((strcmp("pedido", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("pedido")))
		{
		    if(OrderReady[playerid] > 0)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "   Você pediu um pacote, e ele será entregue no meio da sua HQ!");
		        return 0;
		    }
		    tmp = strtok(text, idx);
		    if ((strcmp("1", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("1")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetGranaTheus(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 1, e ele será entregue na porta da HQ.");
			        OrderReady[playerid] = 1;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("2", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("2")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetGranaTheus(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 2, e ele será entregue na porta da HQ.");
			        OrderReady[playerid] = 2;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("3", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("3")))
			{
			    if(PlayerInfo[playerid][pCargo] < 1) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetGranaTheus(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 3, e ele será entregue na porta da HQ.");
			        OrderReady[playerid] = 3;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("4", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("4")))
			{
			    if(PlayerInfo[playerid][pCargo] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetGranaTheus(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 4, e ele será entregue na porta da HQ.");
			        OrderReady[playerid] = 4;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("5", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("5")))
			{
			    if(PlayerInfo[playerid][pCargo] < 2) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetGranaTheus(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 5, e ele será entregue na porta da HQ.");
			        OrderReady[playerid] = 5;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("6", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("6")))
			{
			    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetGranaTheus(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 6, e ele será entregue na porta da HQ.");
			        OrderReady[playerid] = 6;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
			else if ((strcmp("7", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("7")))
			{
			    if(PlayerInfo[playerid][pCargo] < 3) { SendClientMessage(playerid, COLOR_GREY, "   Você não tem cargo suficiente para pegar esse pacote!"); return 0; }
			    if(GetGranaTheus(playerid) > 1)
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você pediu o pacote 7, e ele será entregue na porta da HQ.");
			        OrderReady[playerid] = 7;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Você não possui essa grana!");
			        return 0;
			    }
			}
            else if ((strcmp("8", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("8")))
			{
			    if(VenceuCont == GetPlayerOrg(playerid))
			    {
			        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Sua Org ganhou Bônus por Contratos, Um Pedido Especial será entregue na porta da HQ.");
			        OrderReady[playerid] = 8;
			        return 0;
			    }
			    else
			    {
			        SendClientMessage(playerid, COLOR_GREY,"   Sua Org não Ganhou Bônus por contratos Concluidos!");
			        return 0;
			    }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "|__________________ Pedidos Disponiveis __________________|");
			    if(PlayerInfo[playerid][pCargo] >= 1) { SendClientMessage(playerid, COLOR_GREY, "|(1) Cargo 1 - 6: Knife, Eagle, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(2) Cargo 2 - 6: Knife, Eagle, M4, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 2) { SendClientMessage(playerid, COLOR_GREY, "|(3) Cargo 2 - 6: Knife, Eagle, AK47, MP5, Shotgun"); }
			    if(PlayerInfo[playerid][pCargo] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(4) Cargo 3 - 6: Knife, Eagle, M4, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pCargo] >= 3) { SendClientMessage(playerid, COLOR_GREY, "|(5) Cargo 3 - 6: Knife, Eagle, AK47, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pCargo] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(6) Cargo 4 - 6: Knife, Eagle, M4, MP5, Shotgun, Sniper"); }
			    if(PlayerInfo[playerid][pCargo] >= 4) { SendClientMessage(playerid, COLOR_GREY, "|(7) Cargo 4 - 6: Knife, Eagle, AK47, MP5, Shotgun, Sniper"); }
			    return 0;
			}
		}
		else if ((strcmp("sair", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("sair")))
		{
		    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Você desligou seu laptop e se desconectou de sua agencia.");
      		ConnectedToPC[playerid] = 0;
		    return 0;
		}
		else
		{
			    SendClientMessage(playerid, COLOR_WHITE, "|___ Agencia dos Assassinos ___|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "|");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Noticias");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Contratos");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - DarCont");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Pedido");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Membros");
			    SendClientMessage(playerid, COLOR_YELLOW2, "| - Sair");
				SendClientMessage(playerid, COLOR_WHITE, "|______________|00:00|");
			    return 0;
		}
	    return 0;
	}
	if(TalkingLive[playerid] != 255)
	{
		GetPlayerName(playerid, sendername, sizeof(sendername));
		if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
		{
		    format(string, sizeof(string), "%s{9ACD32} AoVivo %s: %s", NomeORG(playerid), sendername, text);
			OOCNews(GetPlayerColor(playerid), string);
 			SetPlayerChatBubble(playerid, text, CORS, 20.0, 10000);
		}
		else
		{
		    format(string, sizeof(string), "%s{9ACD32} AoVivo %s: %s", NomeORG(playerid), sendername, text);
			OOCNews(GetPlayerColor(playerid), string);
			SetPlayerChatBubble(playerid, text, CORS, 20.0, 10000);
		}
		return 0;
	}
	if(Mobile[playerid] != 255)
	{
		new idx;
		tmp = strtok(text, idx);
		GetPlayerName(playerid, sendername, sizeof(sendername));
		format(string, sizeof(string), "%s diz (Celular): %s", sendername, text);
		SetPlayerChatBubble(playerid, string, 0xBBFFFFAA, 20.0, 10000);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		if(Mobile[playerid] == 191)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Desculpe, Nao Entendi");
				return 0;
			}
			new turner[MAX_PLAYER_NAME];
			new wanted[128];
			GetPlayerName(playerid, turner, sizeof(turner));
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Temos alertado todas as unidades na área.");
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Obrigado por Relatar o Ocorrido");
			format(wanted, sizeof(wanted), "Denuncia: Todas Unidades IA: Chamador: %s",turner);
			SendFamilyMessage(1, TEAM_CYAN_COLOR, wanted);
			format(wanted, sizeof(wanted), "Denuncia: %s",text);
			SendFamilyMessage(1, TEAM_CYAN_COLOR, wanted);
			SendClientMessage(playerid, COLOR_GRAD2, "   Ninguem na linha...");
			Mobile[playerid] = 255;
			return 0;
		}
		if(Mobile[playerid] == 191)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGÊNCIA: Desculpe eu não entendo");
				return 0;
			}
			if ((strcmp("nao", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("nao")))
			{
				new turner[MAX_PLAYER_NAME];
				new wanted[128];
				GetPlayerName(playerid, turner, sizeof(turner));
				SendClientMessage(playerid, COLOR_DBLUE, "COP: Alertamos todos as unidades perto do local.");
				SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por ter relatado o Ocorrido");
				format(wanted, sizeof(wanted), "HQ: Todas as unidades: Denunciante: %s",turner);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				format(wanted, sizeof(wanted), "HQ: Crime: %s, Suspeito: Desconhecido",PlayerCrime[playerid][pAccusing]);
				SendFamilyMessage(1, COLOR_DBLUE, wanted);
				SendClientMessage(playerid, COLOR_GRAD2, "   Ninguém na linha.....");
				Mobile[playerid] = 255;
				return 0;
			}
			new badguy;
			badguy = ReturnUser(tmp);
			if (IsPlayerConnected(badguy))
			{
			    if(badguy != INVALID_PLAYER_ID)
			    {
					if (gTeam[badguy] == 2 || gTeam[badguy] == 1)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Você terá que entrar em contato com os assuntos internos. Esta é uma linha de emergência");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ninghem na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (WantedPoints[badguy] > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Unidades já estão atribuídos a esse caso.");
						SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por denunciar este crime");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ninguémm na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					if (badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Esta linha e de emergencia.");
						SendClientMessage(playerid, COLOR_GRAD2, "   Ninguémm na linha...");
						Mobile[playerid] = 255;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Temos alertado todas as unidades na área.");
					SendClientMessage(playerid, COLOR_DBLUE, "Obrigado por denunciar este crime");
					SetPlayerCriminal(badguy,playerid, PlayerCrime[playerid][pAccusing]);
					if(WantedPoints[badguy] > 0) { } else
					{
						WantedPoints[badguy] += 1;
      					SetPlayerWantedLevel(badguy, WantedPoints[badguy]);
      					//ProcuradoPlayer(badguy);
				  	}
					SendClientMessage(playerid, COLOR_GRAD2, "   Ninguémm na linha...");
					Mobile[playerid] = 255;
					return 0;
				}
				return 0;
			}
			else
			{
				format(string, sizeof(string), "Police HQ: Nenhuma informação sobre %s, o nome citado esta correto?",tmp);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}
		if(Mobile[playerid] == 912)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe, nao entendi.");
				return 0;
			}
			strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
			SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Se você souber o nome do assaltante ou de parte dele, me fale, ou simplesmente dizer não");
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 190)
		{
			if(!strlen(tmp))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe não entendo... Policia ou SAMU?");
				return 0;
			}
			else if ((strcmp("policia", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("policia")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Você optou por Policia, Espere.");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "Polícia HQ: Por favor me dê uma breve descrição do crime.");
				return 0;
			}
			else if ((strcmp("SAMU", tmp, true, strlen(tmp)) == 0) && (strlen(tmp) == strlen("SAMU")))
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Você optou por SAMU, Espere.");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Denuncia: Por favor me dê uma breve descrição do Incidente.");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "EMERGENCIA: Desculpe não entendo... Policia ou SAMU?");
				return 0;
			}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
		    if(Mobile[Mobile[playerid]] == playerid)
		    {
				SendClientMessage(Mobile[playerid], COLOR_YELLOW,string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW,"Ninguém lá");
		}
		return 0;
	}
    if (realchat)
	{
	    if(gPlayerLogged[playerid] == 0)
	    {
	        return 0;
      	}
		if(PlayerInfo[playerid][pMaskuse] == 1)
		{
			format(string, sizeof(string), "Mascarado diz: %s", text);
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid, text, 0xBBFFFFAA, 20.0, 10000);
		}
        else if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			format(string, sizeof(string), "%s diz: %s", PlayerName(playerid), text);
			ProxDetector(20.0, playerid, string,0xFFC0E7FF,0xFFC0E7FF,0xFFC0E7FF,0xFFC0E7FF,0xFFC0E7FF);
			SetPlayerChatBubble(playerid, text, 0xBBFFFFAA, 20.0, 10000);
		}
		else if(PlayerInfo[playerid][pHelper] >= 1)
		{
			format(string, sizeof(string), "%s diz: %s", PlayerName(playerid), text);
			ProxDetector(20.0, playerid, string,0x54FF9FFF,0x54FF9FFF,0x54FF9FFF,0x54FF9FFF,0x54FF9FFF);
			SetPlayerChatBubble(playerid, text, 0xBBFFFFAA, 20.0, 10000);
		}
		else
		{
		   	format(string, sizeof(string), "%s diz: %s", PlayerName(playerid), text);
		   	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		   	SetPlayerChatBubble(playerid, text, 0xBBFFFFAA, 20.0, 10000);
  		}
		return 0;
  	}
	return 1;
}

public SetCamBack(playerid)
{
    if(IsPlayerConnected(playerid))
    {
		new Float:plocx,Float:plocy,Float:plocz;
		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetPlayerPos(playerid, -1863.15, -21.6598, 1060.15); // Warp the player
		SetPlayerInterior(playerid,14);
	}
}
public Fixhour(hora)
{
	hora = timeshift+hora;
	if (hora < 0)
	{
		hora = hora+24;
	}
	else if (hora > 23)
	{
		hora = hora-24;
	}
	shifthour = hora;
	return 1;
}
public IsAHellCar(carid)
{
    for(new i=0;i<sizeof(HellsCar);i++)
    {
    	if(carid == HellsCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF H.A.");
    		return 1;
    	}
    }
	return 0;
}
forward IsAAlugCar(carid);
public IsAAlugCar(carid)
{
    for(new i=0;i<sizeof(CarAlug);i++)
    {
    	if(carid == CarAlug[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Alug");
    		return 1;
    	}
    }
	return 0;
}
forward IsAVipCar(carid);
public IsAVipCar(carid)
{
    for(new i=0;i<sizeof(VipCar);i++)
    {
    	if(carid == VipCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Alug");
    		return 1;
    	}
    }
	return 0;
}
forward IsAAlugHeli(carid);
public IsAAlugHeli(carid)
{
    for(new i=0;i<sizeof(AlugarHeli);i++)
    {
    	if(carid == AlugarHeli[i])
    	{
    		return 1;
    	}
    }
	return 0;
}
public IsAMonCar(carid)
{
    for(new i=0;i<sizeof(MongolsCar);i++)
    {
    	if(carid == MongolsCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Mongols");
    		return 1;
    	}
    }
	return 0;
}
public IsASonsCar(carid)
{
    for(new i=0;i<sizeof(SonsCar);i++)
    {
    	if(carid == SonsCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF SOA");
    		return 1;
    	}
    }
	return 0;
}
public IsADriftCar(carid)
{
    for(new i=0;i<sizeof(DriftersCar);i++)
    {
    	if(carid == DriftersCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Drifters");
    		return 1;
    	}
    }
	return 0;
}
public IsAHam(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==6 || member==6)
		{
		    return 1;
		}
		else if(lider==6 || lider==6)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAHamCar(carid)
{
    for(new i=0;i<sizeof(TalCar);i++)
    {
    	if(carid == TalCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Taliban");
    		return 1;
    	}
    }
	return 0;
}
public IsAFARC(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==33 || member==33)
		{
		    return 1;
		}
		else if(lider==33 || lider==33)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAFARCCar(carid)
{
    for(new i=0;i<sizeof(TalCar);i++)
    {
    	if(carid == TalCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Taliban");
    		return 1;
    	}
    }
	return 0;
}
public IsAYa(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==13|| member==13)
		{
		    return 1;
		}
		else if(lider==13 || lider==13)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAYaCar(carid)
{
    for(new i=0;i<sizeof(YakuzaCar);i++)
    {
    	if(carid == YakuzaCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Ykz");
    		return 1;
    	}
    }
	return 0;
}

public IsAMLH(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==12 || member==12)
		{
		    return 1;
		}
		else if(lider==12 || lider==12)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAGOV(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==7 || lider==7)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAGOVCar(carid)//Carros Governo
{
    for(new i=0;i<sizeof(GovCar);i++)
    {
    	if(carid == GovCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Gov");
    		return 1;
    	}
    }
	return 0;
}
public IsAMLHCar(carid)//Máfia Cosa Nostra Carros
{
    for(new i=0;i<sizeof(CarCosa);i++)
    {
    	if(carid == CarCosa[i])
    	{
            SetVehicleNumberPlate(carid, "BPF CN");
    		return 1;
    	}
    }
	return 0;
}

public IsAAl(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==15 || member==15)
		{
		    return 1;
		}
		else if(lider==15 || lider==15)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAAlCar(carid)
{
	for(new i=0;i<sizeof(AlCar);i++)
    {
    	if(carid == AlCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Alq");
    		return 1;
    	}
    }
	return 0;
}
public IsAOni(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new emprego = PlayerInfo[playerid][pEmprego];
	    if(emprego==9)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAOniCar(carid)
{
    for(new i=0;i<sizeof(BusCar);i++)
    {
    	if(carid == BusCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Bus");
    		return 1;
    	}
    }
	return 0;
}
public IsAJornal(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==9 || member==9)
		{
		    return 1;
		}
		else if(lider==9 || lider==9)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAJornalCar(carid)
{
    for(new i=0;i<sizeof(NewsCar);i++)
    {
    	if(carid == NewsCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF News");
    		return 1;
    	}
    }
	return 0;
}
public IsAAmigodosAmigos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==29 || member==29)
		{
		    return 1;
		}
		else if(lider==29 || lider==29)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAAmigodosAmigosCar(carid)
{
    for(new i=0;i<sizeof(AmigodosAmigosCar);i++)
    {
    	if(carid == AmigodosAmigosCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF AmigodosAmigos");
    		return 1;
    	}
    }
	return 0;
}
public IsAGroove(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==14 || member==14)
		{
		    return 1;
		}
		else if(lider==14 || lider==14)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAGrooveCar(carid)
{
    for(new i=0;i<sizeof(GrooveCar);i++)
    {
    	if(carid == GrooveCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Groove");
    		return 1;
    	}
    }
	return 0;
}
public IsATaxi(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==10 || member==10)
		{
		    return 1;
		}
		else if(lider==10 || lider==10)
		{
		    return 1;
		}
	}
	return 0;
}
public IsATaxiCar(carid)
{
    for(new i=0;i<sizeof(TaxiCar);i++)
    {
    	if(carid == TaxiCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Taxi");
    		return 1;
    	}
    }
	return 0;
}
public IsAVagos(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==18 || member==18)
		{
		    return 1;
		}
		else if(lider==18 || lider==18)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAVagosCar(carid)
{
    for(new i=0;i<sizeof(VagosCar);i++)
    {
    	if(carid == VagosCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Vagos");
    		return 1;
    	}
    }
	return 0;
}
public IsABallas(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==17 || member==17)
		{
		    return 1;
		}
		else if(lider==17 || lider==17)
		{
		    return 1;
		}
	}
	return 0;
}
public IsABallasCar(carid)
{
    for(new i=0;i<sizeof(BallasCarros);i++)
	{
		if(carid == BallasCarros[i])
		{
            SetVehicleNumberPlate(carid, "BPF BALLAS");
			return 1;
		}
	}
	return 0;
}
public IsAAzteca(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==5 || member==5)
		{
		    return 1;
		}
		else if(lider==5 || lider==5)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAAztecaCar(carid)
{
    for(new i=0;i<sizeof(AztecasCar);i++)
	{
		if(carid == AztecasCar[i])
		{
            SetVehicleNumberPlate(carid, "BPF Aztecas");
			return 1;
		}
	}
	return 0;
}
public IsAAmericano(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==32 || member==32)
		{
		    return 1;
		}
		else if(lider==32 || lider==32)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAAmericanoCar(carid)
{
    for(new i=0;i<sizeof(AmericanoCar);i++)
	{
		if(carid == AmericanoCar[i])
		{
            SetVehicleNumberPlate(carid, "BPF Americano");
			return 1;
		}
	}
	return 0;
}
public IsARPP(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==34 || member==34)
		{
		    return 1;
		}
		else if(lider==34 || lider==34)
		{
		    return 1;
		}
	}
	return 0;
}
public IsARPPCar(carid)
{
    for(new i=0;i<sizeof(RPPCar);i++)
	{
		if(carid == RPPCar[i])
		{
            SetVehicleNumberPlate(carid, "BPF RPP");
			return 1;
		}
	}
	return 0;
}
public IsAMec(playerid)
{
	if(PlayerInfo[playerid][pEmprego] == 5)
	{
		return 1;
	}
	return 0;
}
public IsAMecCar(carid)
{
    for(new i=0;i<sizeof(MecCar);i++)
	{
		if(carid == MecCar[i])
		{
            SetVehicleNumberPlate(carid, "BPF Mec");
			return 1;
		}
	}
	return 0;
}
public IsAROTAs(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==2 || member==2)
		{
		    return 1;
		}
		else if(lider==2 || lider==2)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAEx(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==3 || member==3)
		{
		    return 1;
		}
		else if(lider==3 || lider==3)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAHit(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new lider = PlayerInfo[playerid][pLider];
	    new member = PlayerInfo[playerid][pMembro];
	    if(member==8 || member==8)
		{
		    return 1;
		}
		else if(lider==8 || lider==8)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAHitCar(carid)
{
    for(new i=0;i<sizeof(CarrosHit);i++)
    {
    	if(carid == CarrosHit[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Hit");
    		return 1;
    	}
    }
	return 0;
}
public IsATriadCar(carid)
{
    for(new i=0;i<sizeof(TriadsCar);i++)
    {
    	if(carid == TriadsCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Triads");
    		return 1;
    	}
    }
	return 0;
}
public IsACityCar(carid)
{
    for(new i=0;i<sizeof(CityCar);i++)
    {
    	if(carid == CityCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Club");
    		return 1;
    	}
    }
	return 0;
}
public IsACivilCar(carid)
{
    for(new i=0;i<sizeof(CivilCar);i++)
    {
    	if(carid == CivilCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Civil");
    		return 1;
    	}
    }
	return 0;
}
public IsAVIP(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new vip = PlayerInfo[playerid][pVIP];
	    if(vip >= 1)
		{
		    return 1;
		}
	}
	return 0;
}
public IsAVIPCar(carid)
{
    for(new i=0;i<sizeof(VipCar);i++)
    {
    	if(carid == VipCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Vip");
    		return 1;
    	}
    }
	return 0;
}
public GaragemDpClosed2()
{
	MoveDynamicObject(PDDOORb,250.774871 , 60.822799 , 1003.640625, 2);//GaragemClosed
	return 1;
}
public gasolina(playerid)
{
    new string[80];
    new vehicle = GetPlayerVehicleID(playerid);
    new Nick[MAX_PLAYER_NAME];
    GetPlayerName(playerid, Nick, sizeof(Nick));
	new wanted = WantedPoints[playerid];
    SendClientMessage(playerid, COLOR_YELLOW2, "-=Computador De Bordo=-");
    format(string, sizeof(string), "  Motorista: %s", Nick);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Veiculo: %s", NomeCarro[vehicle]);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Combustivel: %d", Gas[vehicle]);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Nivel De Procura: %d", wanted);
    SendClientMessage(playerid, COLOR_WHITE, string);
    format(string, sizeof(string), "  Horas: %d", hour);
    SendClientMessage(playerid, COLOR_WHITE, string);
    Gas[vehicle]--;
    return 1;
}
public GaragemDpClosed()
{
	MoveDynamicObject(PDDOORa,247.005905 , 72.448440 , 1003.640625, 2);//GaragemClosed
	return 1;
}
public pcclosed()
{
    MoveDynamicObject(PDDOORb,248.142105 , 78.125961 , 1003.640625, 2);//CelaClosed
	return 1;
}
public pd1()
{
	MoveDynamicObject(PDDOORc,248.142105 , 78.125961 , 1003.640625, 2);//GaragemClosed
	return 1;
}
forward PortaoSkOrgF();
public PortaoSkOrgF()
{
	MoveDynamicObject(PortaoSkOrg,1283.4000200,-1652.0000000,16.2000000, 2);//GaragemClosed
	return 1;
}
forward PortaoSkOrg1F();
public PortaoSkOrg1F()
{
	MoveDynamicObject(PortaoSkOrg1,1286.5000000,-1613.5996100,14.2000000, 2);//GaragemClosed
	return 1;
}
forward PortaoStart1F();
public PortaoStart1F()
{
	MoveDynamicObject(PortaoStart1,247.0000000,-1965.3000500,3.8000000, 2);//GaragemClosed
	return 1;
}
forward PortaoStart2F();
public PortaoStart2F()
{
	MoveDynamicObject(PortaoStart2,245.8000000,-2142.3000500,3.8000000, 2);//GaragemClosed
	return 1;
}
public pd2()
{
	MoveDynamicObject(PDGATE,1544.469,-1628.097,13.353, 2);//GaragemClosed
	return 1;
}
public pd3()
{
	MoveDynamicObject(PDGARAGE,1588.195,-1637.969,15.193, 2);//GaragemClosed
	return 1;
}
public pd4()
{
	MoveDynamicObject(PDELEVATOR,1549.049804 , -1697.787109 , 12.5514954, 2);//GaragemClosed
	return 1;
}
public PFClosed2()
{
    MoveDynamicObject(gatepf2,2334.757568, 2443.675537, 8.250650, 2);//GateClosed
	return 1;
}
public PFClosed3()
{
	MoveDynamicObject(gatepf3,2293.928467, 2499.322021, 5.825822, 2);//GateClosed
	return 1;
}
public PortaoHitman()
{
	MoveDynamicObject(portaohitman,1025.799316, -368.267792, 75.509537, 2);//GateClosed
	return 1;
}
public PortaoTriads()
{
	MoveDynamicObject(portaotriads,-379.4000, -1409.4000, 27.5000, 2);//GateClosed
	return 1;
}
public PortaoCivil()
{
	MoveDynamicObject(portaocivil,923.567382, -1227.334716, 15.976562, 2);//GateClosed
	return 1;
}
forward PortaoCarros();
public PortaoCarros()
{
	MoveDynamicObject(PortaoPRFCarros,917.4000200,-1198.8000500,19.6000000, 2);//GateClosed
	return 1;
}
public PortaoPf()
{
	MoveDynamicObject(portaopf,938.720336, -1016.002380, 33.671829, 2);//GateClosed
	return 1;
}
public PDEx2()
{
	MoveDynamicObject(PDEx,-1531.3978271484, 482.25979614258, 8.9530792236328, 2);//GateClosed
	return 1;
}
public gt3gate2()
{
	MoveDynamicObject(gt3gate,283.095062, -1542.899170, 25.510294, 2);//GateClosed
	return 1;
}
public gt3gate4()
{
	MoveDynamicObject(gt3gate3,321.832672, -1488.615112, 25.527353, 2);//GateClosed
	return 1;
}
public PortaoGov2()
{
	MoveDynamicObject(PortaoGov,1539.2235107422, -1838.2176513672, 15.320266723633, 2);//Portao Gov Closed
	return 1;
}
public PortaoPre2()
{
	MoveDynamicObject(PortaoPre,369.15893554688, 162.35037231445, 1028.6030273438, 2);//Portao Prefeitura Closed
	return 1;
}
public PortaoReporter2() {
	MoveDynamicObject(PortaoReporter,777.80017089844, -1330.2664794922, 14.200000762939, 2);//Portao Reporter Closed
	return 1;
}
public PortaoReporterr2() {
	MoveDynamicObject(PortaoReporterr,777.97308349609, -1384.7303466797, 14.299999237061, 2);//Portao Reporter 2 Closed
	return 1;
}
public PortaoRally2() {
	MoveDynamicObject(PortaoRally,-2368.4670410156, -2192.6381835938, 36.037666320801, 2);//Portao Rally Closed
	return 1;
}
public PortaoTaxi2() {
	MoveDynamicObject(PortaoTaxi,958.840,-1415.794,15.151, 2);//Portao Taxi Closed
	return 1;
}
public PortaoAmericano2() {
	MoveDynamicObject(PortaoAmericano1,96.7000000,1920.2000000,20.7000000, 2);//Portao Americano Closed
	MoveDynamicObject(PortaoAmericano3,345.2000100,1797.5000000,20.2000000, 2);//Portao Americano Closed
	return 1;
}
public PortaoRPP2() {
	MoveDynamicObject(PortaoRPP,1643.4000000,-1715.2000000,15.1000000, 2);//Portao RPP Closed
	return 1;
}
public PortaoRooxy2() {
	MoveDynamicObject(PortaoRooxy,-1198.2000000,-985.3000000,131.0000000, 2);//Portao Rooxy Closed
	return 1;
}
public PortaoyStiflerS2() {
	MoveDynamicObject(PortaoyStiflerS,2436.8000488,-1549.8000488,25.7000008, 2);//Portao yStiflerS Closed
	return 1;
}
public PortaoBOPE2() {
	MoveDynamicObject(PortaoBOPE,1274.0000000,-1839.5000000,15.2000000, 2);//Portao BOPE Closed
	return 1;
}
public PortaoAmigodosAmigos2() {
	MoveDynamicObject(PortaoAmigodosAmigos,1624.6999500,-1325.6999500,19.2000000, 2);//Portao CL Closed
	return 1;
}
public PortaoX12() {
	MoveDynamicObject(PortaoX1,-2321.5114746094, -1619.4454345703, 484.98388671875, 2);//Portao X1 Closed
	return 1;
}
public OnPlayerKeyStateChange(playerid,newkeys,oldkeys)
{
	new string[128];

    if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && newkeys & KEY_YES)
    {
        if(VeiculoValido[GetPlayerVehicleID(playerid)] == 1)
        {
              if(NovaCamera[playerid] == 0)
        {
              GameTextForPlayer(playerid, "~w~camera~g~ ligada", 5000, 6);
              AttachCameraToObject(playerid, ObjetoCarro[GetPlayerVehicleID(playerid)]);
              NovaCamera[playerid] = 1;
        }
        else if(NovaCamera[playerid] == 1)
        {
              GameTextForPlayer(playerid, "~w~camera~r~ desligada", 5000, 6);
              SetCameraBehindPlayer(playerid);
              NovaCamera[playerid] = 0;
        }
        }
        else
        {
              SendClientMessage(playerid, 0xFF0000, "Este veículo ainda não suporta câmera em 1ª pessoa.");
        }
    }
    if(newkeys == 4096 && (IsPlayerInAnyVehicle(playerid)))
    {
        OnPlayerCommandText(playerid,"/cveiculo");
    }

    if(newkeys == 2048 && (IsPlayerInAnyVehicle(playerid)))
    {
        OnPlayerCommandText(playerid,"/ligarmotorcar");
    }
	if(newkeys == 16 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
    {
		OnPlayerCommandText(playerid,"/entrar");
        OnPlayerCommandText(playerid,"/sair");
        if(PlayerToPoint(3, playerid, 2780.4939,-1812.2635,11.8438))
        {
            OnPlayerCommandText(playerid,"/concessionaria");
        }
        if(PlayerAnim[playerid] == true)
        {
            ClearAnimations(playerid);
            PlayerAnim[playerid] = false;
		}
        if (PlayerToPoint(1.1, playerid, 247.2936,77.4821,1003.6406)) // portao vest fora
       	{
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,247.2936,77.4821,1003.6406);
                SetPlayerFacingAngle(playerid, 266.9180);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pv");
            }
        }
        if (PlayerToPoint(1.1, playerid, 249.3107,74.2571,1003.6406)) // portao vest dentro
       	{
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,249.3107,74.2571,1003.6406);
                SetPlayerFacingAngle(playerid, 93.4574);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pv");
            }
        }
        if (PlayerToPoint(1.1, playerid, 245.0195,71.3762,1003.6406)) // pp fora
       	{
            if(IsACop(playerid) || PlayerInfo[playerid][pEmprego] == 2)
            {
                SetPlayerPos(playerid,245.0195,71.3762,1003.6406);
                SetPlayerFacingAngle(playerid, 1.7752);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pp");
            }
        }
        if (PlayerToPoint(1.1, playerid, 249.8460,64.8226,1003.6406)) // pr fora
       	{
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,249.8460,64.8226,1003.6406);
                SetPlayerFacingAngle(playerid, 273.2498);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pr");
            }
        }
        if (PlayerToPoint(1.1, playerid, 251.5490,64.8285,1003.6406)) // pr dentro
       	{
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,251.5490,64.8285,1003.6406);
                SetPlayerFacingAngle(playerid, 91.4545);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pr");
            }
        }
        if (PlayerToPoint(1.1, playerid, 319.0898,-1485.6914,24.6590)) // pb3 fora
       	{
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,319.0898,-1485.6914,24.6590);
                SetPlayerFacingAngle(playerid, 58.0972);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pb");
            }
        }
        if (PlayerToPoint(1.1, playerid, 324.1216,-1491.6272,24.5938)) // pb3 dentro
       	{
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,324.1216,-1491.6272,24.5938);
                SetPlayerFacingAngle(playerid, 313.2777);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pb");
            }
        }
        if (PlayerToPoint(1.1, playerid, 285.2658,-1545.6089,24.8703)) // pb2 fora
       	{
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,285.2658,-1545.6089,24.8703);
                SetPlayerFacingAngle(playerid, 243.4251);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pb2");
            }
        }
        if (PlayerToPoint(1.1, playerid, 280.3053,-1539.2838,24.5934)) // pb2 dentro
       	{
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,280.3053,-1539.2838,24.5934);
                SetPlayerFacingAngle(playerid, 148.1709);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/pb2");
            }
        }
        if (PlayerToPoint(1.1, playerid, 941.6736,-1013.3484,32.4650)) // ppf fora
       	{
            if(IsACop(playerid))
            {
                SetPlayerPos(playerid,941.6736,-1013.3484,32.4650);
                SetPlayerFacingAngle(playerid, 271.6808);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/ppf");
            }
        }
        if (PlayerToPoint(1.1, playerid, 925.7493,-1211.3282,16.9764)) // ppc fora
       	{
            if(IsACop(playerid) || PlayerInfo[playerid][pEmprego] == 2)
            {
                SetPlayerPos(playerid,925.7493,-1211.3282,16.9764);
                SetPlayerFacingAngle(playerid, 91.0763);
                ApplyAnimation(playerid, "CRIB","CRIB_Use_Switch",4.1,0,0,0,0,0);
                OnPlayerCommandText(playerid,"/ppr");
            }
        }

        if (PlayerToPoint(5.0, playerid, 1447.0576,-1781.6187,13.6468))
       	{
			if(Presente[playerid] == 1)
		    {
				new moneey, repect;
				moneey = ContarJogadores()*20;
				repect = random(2);
				format(string, sizeof(string), "•{C1FFFF} Você %s, pegou seu presente, recebeu: %d de dinheiro e %d de respeito.", PlayerName(playerid), moneey, repect);
				SendClientMessage(playerid, 0xFF9FFFAA, string);
				GranaTheus(playerid, moneey);
				PlayerInfo[playerid][pExp] += repect;
				Presente[playerid] = 0;
				return 1;
			}
			else
			{
			    SendClientMessage(playerid,0xB0B0B0AA,"[BPF PRESENTE] Você não pode pegar mais Presente, Volte no proximo Payday Quando der 40 Players online!");
	  			return 1;
			}
		}
		if (PlayerToPoint(4.0, playerid, 1568.6063,-1878.4338,13.5469))
       	{
	       	if(IsPlayerConnected(playerid))
		    {
		        SendClientMessage(playerid, 0x0000FFAA, "|_______|{00FF00}B{F9FE23}.P.{FF0000}F{0000FF}| Ajuda Para Novatos |{00FF00}B{F9FE23}.P.{FF0000}F{0000FF}|_______|");
			    SendClientMessage(playerid, 0xFF8080AA,"[BPF SERVER] {808080}Olá Novato, Aqui você Irá Visualizar todas as Regras Básicas do Servidor!");
			    SendClientMessage(playerid, 0xFF8080AA,"[BPF SERVER] {808080}É Proibido cometer DB (Drive By) e DM (Death Math)!");
			    SendClientMessage(playerid, 0xFF8080AA,"[BPF SERVER] {808080}Caso encontre algum Bug no Servidor, Avise a um Administrador Online /relatorio [texto]!");
	            SendClientMessage(playerid, 0xFF8080AA,"[BPF SERVER] {808080}Jamais abuse de bugs, Ou cometa atos Racistas contra os demais jogadores!");
	            SendClientMessage(playerid, 0xFF8080AA,"[BPF SERVER] {808080}Caso esteja perdido, e Não saiba a Onde ir, Pessa ajuda a um Helper usando /duvida.");
                SendClientMessage(playerid, 0xFF8080AA,"[BPF SERVER] {808080}Este Servidor tem Sistema de Guerra de Pontos, Caso não saiba como Funciona digite /ajudaguerra.");
				SendClientMessage(playerid, 0xFF8080AA,"[BPF SERVER] {808080}Ajude a Divulgar o Nosso Servidor e faça com que ele Seja Mais Divertido!");
	            SendClientMessage(playerid, 0xFF8080AA,"[BPF SERVER] {808080}Tenha um Bom Jogo.");
			}
			return 1;
		}
		if (PlayerToPoint(3.0, playerid,1712.3607,1177.3903,34.8259))
		{
		    OnPlayerCommandText(playerid,"/batercartao");
		}
		if(IsACop(playerid))
		{
			if (PlayerToPoint(3.0, playerid,255.1110,76.0224,1003.6406) || PlayerToPoint(3.0,playerid,-1616.1294,681.1594,7.1875) || PlayerToPoint(3.0,playerid,230.1107,165.2237,1003.0234) || PlayerToPoint(3.0, playerid,240.7396,112.9709,1003.2188) || PlayerToPoint(3.0, playerid,1530.3945,-1664.0377,6.2187) || PlayerToPoint(3.0, playerid,302.7606,-1529.7537,24.9219) || PlayerToPoint(3.0, playerid,-1345.8823,492.5301,11.2027)
			|| PlayerToPoint(3.0, playerid,326.4911,307.0710,999.1484) || PlayerToPoint(3.0, playerid,229.7267,165.0443,1003.0234) || PlayerToPoint(3.0, playerid,289.0175,2001.1622,17.6406))
			{
                if(OnDuty[playerid]==0)
			    {
                    if(BateuCartao[playerid] == 0)
			        {
                        format(string, sizeof(string), "%s: Oficial %s Colocou sua Farda.",NomeORG(playerid), PlayerName(playerid));
    					OOCNews(0xFF8080AA,string);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Está em Serviço, Pegue seu equipamento com /equipar!");
    					SetPlayerArmour(playerid, 100);
    					SetPlayerHealth(playerid, 100);
    					OnDuty[playerid] = 1;
    					EmpregoDuty[playerid] = 2;
                        BateuCartao[playerid] = 1;
                        SetTimerEx("BaterNovamente", 20000, 0, "d", playerid);
                    }
                    else
                    {
                        SendClientMessage(playerid,0xB0B0B0AA," Espere Alguns segundos para Bater Cartão novamente!");
                    }
				}
				else if(OnDuty[playerid]==1)
				{
                    format(string, sizeof(string), "%s: Oficial %s Retirou sua Farda.",NomeORG(playerid), PlayerName(playerid));
    				OOCNews(0xFF8080AA,string);
  					SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Agora Você Está De Folga, e não receberá chamados!");
  					OnDuty[playerid] = 0;
					EmpregoDuty[playerid] = 0;
				}
				return 1;
   			}
     	}
        if(IsAGang(playerid))
		{
            if (PlayerToPoint(3.0, playerid,1679.9660,-2119.3588,13.5468) || PlayerToPoint(3.0, playerid,2510.6958,-1672.439,13.4323) || PlayerToPoint(3.0 ,playerid,1138.1064,-1196.2368,32.0275) || PlayerToPoint(3.0 , playerid,2815.6347,-1178.5112,25.2702) || PlayerToPoint(3.0 , playerid,2155.1694,-1810.1579,13.5494) || PlayerToPoint(3.0 , playerid,1315.9802,-875.2487,39.5781) || PlayerToPoint(3.0 , playerid,506.5681,-80.5381,998.9609)
            || PlayerToPoint(3.0, playerid,23.5511,-2654.6933,40.5070) || PlayerToPoint(3.0, playerid,846.0684,-2037.2328,12.8672) || PlayerToPoint(3.0, playerid,-220.6183,1405.9781,27.1656) || PlayerToPoint(3.0, playerid,2126.1000,-1773.6999,13.6000) || PlayerToPoint(3.0, playerid,1961.1135, -2046.2855, -1.1177) || PlayerToPoint(3.0, playerid,2410.8999,-1223.9000,24.7000) || PlayerToPoint(3.0, playerid,1676.7057,-1358.2712,17.5037)
			|| PlayerToPoint(3.0, playerid,2491.3125,-1545.9629,24.0258))
			{
                ResetPlayerWeapons(playerid);
				if(PlayerInfo[playerid][pLider] >= 1)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
                    GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    GivePlayerWeapon(playerid, 34, 20);
					SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: Líder.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        	    }
          		else if(PlayerInfo[playerid][pCargo] <= 1)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 1.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 2)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 2.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 3)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 3.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 4)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 4.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 5)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    GivePlayerWeapon(playerid, 34, 20);
					SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 5.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
            }
		}
        if(PlayerToPoint(3.0, playerid,1262.1738,-773.3738,1091.9063))
        {
            if(GetPlayerOrg(playerid) == 26)
            {
                ResetPlayerWeapons(playerid);
				if(PlayerInfo[playerid][pLider] >= 1)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
                    GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    GivePlayerWeapon(playerid, 34, 20);
					SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: Líder.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        	    }
          		else if(PlayerInfo[playerid][pCargo] <= 1)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    GivePlayerWeapon(playerid, 34, 20);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 1.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 2)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    GivePlayerWeapon(playerid, 34, 20);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 2.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 3)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    GivePlayerWeapon(playerid, 34, 20);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 3.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 4)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 4.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 5)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 31, 600);
                    GivePlayerWeapon(playerid, 34, 20);
					SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 5.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
            }
        }
        if(PlayerToPoint(3.0, playerid,2344.1047,-1353.3613,27.1266) || PlayerToPoint(3.0, playerid,199.8940,-34.6994,1002.3040))
        {
            if(GetPlayerOrg(playerid) == 27)
            {
                ResetPlayerWeapons(playerid);
				if(PlayerInfo[playerid][pLider] >= 1)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
                    GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 30, 600);
                    GivePlayerWeapon(playerid, 34, 20);
                    GivePlayerWeapon(playerid, 16, 40);
					SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: Líder.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        	    }
          		else if(PlayerInfo[playerid][pCargo] <= 1)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 30, 600);
                    GivePlayerWeapon(playerid, 34, 20);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 1.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 2)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 30, 600);
                    GivePlayerWeapon(playerid, 34, 20);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 2.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 3)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 30, 600);
                    GivePlayerWeapon(playerid, 34, 20);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 3.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 4)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 30, 600);
        	    	GivePlayerWeapon(playerid, 16, 30);
                    SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 4.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
          		else if(PlayerInfo[playerid][pCargo] == 5)
            	{
                    SetPlayerArmour(playerid, 100.0);
				    SetPlayerHealth(playerid, 100.0);
                    GivePlayerWeapon(playerid, 4, 1);
        	    	GivePlayerWeapon(playerid, 24, 800);
        	    	GivePlayerWeapon(playerid, 25, 400);
        	    	GivePlayerWeapon(playerid, 29, 400);
        	    	GivePlayerWeapon(playerid, 30, 600);
                    GivePlayerWeapon(playerid, 34, 20);
                    GivePlayerWeapon(playerid, 16, 40);
					SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 5.");
                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            		return 1;
        		}
            }
        }
		if (PlayerToPoint(3.0, playerid,2332.0429,11.0080,26.4765))
		{
            if(IsAHell(playerid))
			{
			    if(DonoCity == 1)
			    {
                    ResetPlayerWeapons(playerid);
					if(PlayerInfo[playerid][pLider] >= 1)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	                    GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: Líder.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        	    }
	          		else if(PlayerInfo[playerid][pCargo] <= 1)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 1.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 2)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 2.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 3)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 3.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 4)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 4.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 5)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 5.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Sua Gang não está no controle do Palominio.");
				}
			}
			else if(IsAMon(playerid))
			{
				if(DonoCity == 2)
			    {
                    ResetPlayerWeapons(playerid);
					if(PlayerInfo[playerid][pLider] >= 1)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	                    GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: Líder.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        	    }
	          		else if(PlayerInfo[playerid][pCargo] <= 1)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 1.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 2)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 2.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 3)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 3.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 4)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 4.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 5)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 5.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Sua Gang não está no controle do Palominio.");
				}
			}
            else if(IsASons(playerid))
			{
				if(DonoCity == 3)
			    {
                    ResetPlayerWeapons(playerid);
					if(PlayerInfo[playerid][pLider] >= 1)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	                    GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: Líder.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        	    }
	          		else if(PlayerInfo[playerid][pCargo] <= 1)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 1.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 2)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 2.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 3)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 3.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 4)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 4.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
	          		else if(PlayerInfo[playerid][pCargo] == 5)
	            	{
	                    SetPlayerArmour(playerid, 100.0);
					    SetPlayerHealth(playerid, 100.0);
	                    GivePlayerWeapon(playerid, 4, 1);
	        	    	GivePlayerWeapon(playerid, 24, 800);
	        	    	GivePlayerWeapon(playerid, 25, 400);
	        	    	GivePlayerWeapon(playerid, 29, 400);
	        	    	GivePlayerWeapon(playerid, 31, 600);
	                    GivePlayerWeapon(playerid, 34, 20);
						SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de cargo: 5.");
	                    format(string, sizeof(string), "*%s: O Gangster %s pegou seus equipamentos.", NomeORG(playerid), PlayerName(playerid));
	        			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	            		return 1;
	        		}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Sua Gang não está no controle do Palominio.");
				}
			}
        }
		if(GetPlayerFamy(playerid) != 0)
		{
			if (PlayerToPoint(3.0, playerid,788.7240,-2209.8838,14.9078) || PlayerToPoint(3.0, playerid,761.412963,1440.191650,1102.703125) || PlayerToPoint(3.0, playerid,1345.5323,-2881.0178,14.2059) || PlayerToPoint(3.0, playerid,-71.6999,-1751.8000,10.5000) || PlayerToPoint(3.0, playerid,945.7804,2.2144,1000.9297)
             || PlayerToPoint(3.0, playerid,273.8237,-2164.9209,2.7978))
   			{
                ResetPlayerWeapons(playerid);
				if(PlayerInfo[playerid][pFamyLider] != 0)
               	{
                	GivePlayerWeapon(playerid, 46, 1);
           			GivePlayerWeapon(playerid, 24, 399);
           			GivePlayerWeapon(playerid, 31, 999);
           			GivePlayerWeapon(playerid, 29, 999);
           			GivePlayerWeapon(playerid, 25, 999);
           			GivePlayerWeapon(playerid, 4, 1);
           			GivePlayerWeapon(playerid, 34, 999);
           			GivePlayerWeapon(playerid, 43, 999);
           			//GivePlayerWeapon(playerid, 16, 12);
           			//GivePlayerWeapon(playerid, 42, 1999);
             		if(GetPlayerFamy(playerid) == 6)
	                {
	                    GivePlayerWeapon(playerid, 27, 20);
	                }
           			SetPlayerArmour(playerid, 100);
           			SetPlayerHealth(playerid, 100);
   					SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos de Líder da Família.");
        			format(string, sizeof(string), "**Família %s: %s pegou seus Equipamentos de Líder.", NomeFamy(playerid), PlayerName(playerid));
           			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
               		return 1;
           	    }
         		else
               	{
                	GivePlayerWeapon(playerid, 46, 1);
           			GivePlayerWeapon(playerid, 24, 399);
           			GivePlayerWeapon(playerid, 31, 999);
           			GivePlayerWeapon(playerid, 29, 999);
           			GivePlayerWeapon(playerid, 25, 999);
           			GivePlayerWeapon(playerid, 4, 1);
           			GivePlayerWeapon(playerid, 34, 999);
           			GivePlayerWeapon(playerid, 43, 999);
           			//GivePlayerWeapon(playerid, 16, 12);
           			//GivePlayerWeapon(playerid, 42, 1999);
           			if(GetPlayerFamy(playerid) == 6)
	                {
	                    GivePlayerWeapon(playerid, 27, 20);
	                }
           			SetPlayerArmour(playerid, 100);
           			SetPlayerHealth(playerid, 100);
   					SendClientMessage(playerid, COLOR_GREY, "Você pegou seus equipamentos dos Membros da Família.");
        			format(string, sizeof(string), "**Família %s: %s Equipou na HQ de sua Família.", NomeFamy(playerid), PlayerName(playerid));
           			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
               		return 1;
              	}
   			}
      	}
        if (InAFoodPlace[playerid] != 0)
    	{
        	    if(PlayerToPoint(1.5,playerid,368.9714,-6.2486,1001.8516))
        		{
        			ShowPlayerDialog(playerid, 28, DIALOG_STYLE_LIST, "Cluckin' Bell", "Coração no Espeto R$2\nCarne de Vaca R$4\nCarne de Jacaré R$5\nCarne de Frango R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
        			SetPlayerPos(playerid,368.9714,-6.2486,1001.8516);
        			SetPlayerFacingAngle(playerid, 357.0132);
        		}
    			if(PlayerToPoint(1.5,playerid,376.8571,-67.6620,1001.5151) || PlayerToPoint(1.5,playerid,683.9015,-456.7076,-25.6099))
    			{
    				ShowPlayerDialog(playerid, 29, DIALOG_STYLE_LIST, "Burger Shot", "X-Simples R$2\nX-Tudo R$4\nX-Especial R$5\nX-Frango R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
    				SetPlayerPos(playerid,376.8571,-67.6620,1001.5151);
    				SetPlayerFacingAngle(playerid, 357.0132);
    			}
    			if(PlayerToPoint(1.5,playerid,375.6895,-118.9683,1001.4995))
    			{
    				ShowPlayerDialog(playerid, 30, DIALOG_STYLE_LIST, "Well Stacked Pizza", "Presunto e Mussarela - Pequena R$2\nPresunto e Mussarela - Grande R$4\nFrango e Azeitona R$5\nBacon e Chocolate R$3\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
    				SetPlayerPos(playerid,375.6895,-118.9683,1001.4995);
    				SetPlayerFacingAngle(playerid, 357.0132);
    			}
    			if(PlayerToPoint(1.5,playerid,379.0611,-186.6032,1000.6328))
    			{
    				ShowPlayerDialog(playerid, 31, DIALOG_STYLE_LIST, "Jim's sticky ring", "Rosquinha Pequena R$2\nRosquinha Normal R$4\nRosquinha de Chefe R$5\nSuper Rosquinha R$4\nAgua R$1\nSuco R$1", "Selecionar", "Cancelar");
    				SetPlayerPos(playerid,379.0611,-186.6032,1000.6328);
    				SetPlayerFacingAngle(playerid, 280);
    			}
    			SetCameraBehindPlayer(playerid);
    	   }
		if(PlayerToPoint(1.5,playerid,2224.1484,-1141.8772,1025.7969) || PlayerToPoint(1.0,playerid,1929.5409,-1785.1664,13.5469) || PlayerToPoint(1.0,playerid,2232.2886,-1162.6107,25.8906) || PlayerToPoint(1.0,playerid,1550.4796,-1669.7039,13.5624) || PlayerToPoint(1.5,playerid,957.4803,-48.7381,1001.1172)
		|| PlayerToPoint(2,playerid,229.6725,153.8311,1003.0234) || PlayerToPoint(1.5,playerid,241.0845,115.2740,1003.2188) || PlayerToPoint(1.5,playerid,321.4753,305.5962,999.1484) || PlayerToPoint(1.5,playerid,-1347.6376,499.9476,11.1953) || PlayerToPoint(1.5, playerid,2308.9492,-14.1523,26.7422) || PlayerToPoint(1.5,playerid,1467.5273, -1782.6521, 13.1987))
		{
		    OnPlayerCommandText(playerid,"/banco");
		}
		if (PlayerToPoint(2, playerid, 361.8300,173.5202,1008.3828))
    	{
			OnPlayerCommandText(playerid,"/getemprego");
    	}
    	if (PlayerToPoint(2, playerid, 1490.2411,1307.2179,1093.2891))
    	{
			OnPlayerCommandText(playerid,"/licencas");
    	}
    	if (PlayerToPoint(2.0, playerid, -26.8819,-89.6936,1003.5469) || PlayerToPoint(2.0, playerid, -22.2540,-55.6456,1003.5469)
    	|| PlayerToPoint(2.0, playerid, -22.3265,-138.4765,1003.5469) || PlayerToPoint(2.0, playerid, -30.3140,-28.3121,1003.5573)
		|| PlayerToPoint(2.0, playerid, 1508.4419,-1703.4607,14.0469))
    	{
    	    TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid, 5, DIALOG_STYLE_LIST, "Loja 24/7", "Celular\nAgenda\nDados\nCamisinha\nCD-Player\nFrango\nHamburguer\nPizza", "Confirmar", "Cancelar");
    	}
    	if (PlayerToPoint(2.0, playerid, 2176.6519,1619.0439,999.9766) || PlayerToPoint(2.0, playerid, 437.1187,-82.9036,999.5547))
    	{
    	    TogglePlayerControllable(playerid, 0);
    	    ShowPlayerDialog(playerid, 6, DIALOG_STYLE_LIST, "Loja de Armas", "Kitvip\nEagle\nMP5\nShotgun\nAk-47\nM4\nRifle\nParaquedas\nTaco de Golfe\nCaceteti\nTaco de Baseball\nPá\nTaco de Sinuca\nVibrador 1\nVibrador 2\nVibrador 3\nVibrador 4\nBuque de Flores\nCano", "Confirmar", "Cancelar");
        }
        if(IsPlayerInRangeOfPoint(playerid, 2.0, 768.2192,-3.9873,1000.7203))
		{
		    TogglePlayerControllable(playerid, 0);
			ShowPlayerDialog(playerid, DIALOGID2, DIALOG_STYLE_LIST, "BPF Estilos De Luta", "Cotoveladas\nBoxe\nRua\nKickBoxing\nKarate\nNormal", "confirma", "Cancela");
		}
		if(PlayerToPoint(2.0, playerid, 1450.4479,-2287.0803,13.5469) || PlayerToPoint(2.0, playerid, 1919.1384,-1415.4775,13.5703) || PlayerToPoint(2.0, playerid, 1123.7664,-1506.4692,15.7869))
		{
		    if (PlayerInfo[playerid][pEmprego] == 4)
			{
			    TogglePlayerControllable(playerid, 0);
		    	ShowPlayerDialog(playerid, 2572, DIALOG_STYLE_LIST, "Pegar Drogas", "Pegar Maconha\nPegar Cocaina\nPegar Crack\nEsconder Maconha\nEsconder Cocaina\nEsconder Crack\nPegar Safe Maconha\nPegar Safe Cocaina\nPegar Safe Crack", "Confirma", "Cancela");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Você não é um vendedor de drogas");
			}
		}
        if(PlayerToPoint(2.0,playerid,-2648.0940,1396.4666,906.4609) || PlayerToPoint(2.0,playerid,811.9582,-1100.8458,25.7857) || PlayerToPoint(2.0,playerid,675.0947,-1275.7603,13.6334) || PlayerToPoint(2.0,playerid,1738.6844,-1944.9553,13.5647))
		{
		    if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12 || PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
			{
			    TogglePlayerControllable(playerid, 0);
		    	ShowPlayerDialog(playerid, 2582, DIALOG_STYLE_LIST, "Mafia Menu", "Equipar\nPegar Pacotes\nPegar Materiais\nEsconder Materiais", "Confirma", "Cancela");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Você não é um mafioso");
			}
		}
  		if(PlayerToPoint(3.0,playerid,2026.2104,-1896.1097,13.5469) || PlayerToPoint(3.0,playerid,1240.5569,-2036.9919,59.9709))
		{
		    if (PlayerInfo[playerid][pEmprego] == 7)
			{
			    TogglePlayerControllable(playerid, 0);
		    	ShowPlayerDialog(playerid, 2586, DIALOG_STYLE_INPUT, "Pegar Materiais", "Digite a quantidade de materiais/nque deseja pegar", "Pegar", "Cancelar");
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "  Você não é um vendedor de armas");
			}
		}
		if (PlayerToPoint(2.0, playerid, 1524.4977,-1677.9469,6.2188) || PlayerToPoint(2.0, playerid, 1565.1235,-1666.9944,28.3956) || PlayerToPoint(2.0, playerid, 246.2975,87.4735,1003.6406))
		{
		    TogglePlayerControllable(playerid, 0);
    		ShowPlayerDialog(playerid, 2585, DIALOG_STYLE_LIST, "Elevador Policial", "Garagem\nDepartamento\nCobertura", "Confirma", "Cancela");
 		}
 		if(PlayerToPoint(3.0,playerid,1990.8590,-1996.3722,13.5469) || PlayerToPoint(3.0,playerid,1240.5569,-2036.9919,59.9709) || PlayerToPoint(3.0,playerid,1240.3546,-2067.5168,59.9752))
 		{
 			if(MatsHolding[playerid] > 0)
			{
   				new payout = (100)*(MatsHolding[playerid]);
       			format(gstring, sizeof(gstring), "* A Boca comprou %d Pacotes de você e te deu %d Materiais.", payout, MatsHolding[playerid]);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
       			PlayerInfo[playerid][pMats] += payout;
   				MatsHolding[playerid] = 0;
      		}
       		else
       		{
				SendClientMessage(playerid, COLOR_GREY, "   Você não tem nenhum pacote !");
    		}
    	}
    	if(PlayerToPoint(2, playerid, 1568.6442,-1689.9729,6.2188) || PlayerToPoint(2, playerid, 238.2739,108.0566,1003.2257) || PlayerToPoint(2, playerid, -1341.1760,500.5289,11.1953)
		|| PlayerToPoint(2, playerid, 320.8083,307.5377,999.1484) || PlayerToPoint(2, playerid, 208.8036,145.8378,1003.0234) || PlayerToPoint(2, playerid, 289.0527,2012.4290,17.6406))
    	{
    	    if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1)
    	    {
    	        TogglePlayerControllable(playerid, 0);
    	        ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Polícia Mílitar", "Dinheiro", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)
    	    {
    	        TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre R.O.T.A", "Dinheiro", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    	    {
    	        TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Exército", "Dinheiro", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
    	    {
    	        TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Americano", "Dinheiro", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)
    	    {
    	        TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Polícia Federal", "Dinheiro", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
    	    {
    	        TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Policia Cívil", "Dinheiro", "Confirmar", "Cancelar");
    	    }
    	    else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)
    	    {
    	        TogglePlayerControllable(playerid, 0);
                ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Policia Rodoviaria", "Dinheiro", "Confirmar", "Cancelar");
    	    }
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um policial !"); }
    	}
    	if(PlayerToPoint(2, playerid, 2749.9517,-2453.6799,13.8623))
    	{
    	    if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Taliban", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é do Taliban !"); }
		}
		if(PlayerToPoint(2, playerid, 400.0611,2539.5366,16.5448))
		{
			if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Al'qaeda", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Al'qaeda !"); }
    	}
    	if(PlayerToPoint(2, playerid, -310.6753,1771.4019,43.6406))
		{
			if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre F.A.R.C", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é da F.A.R.C !"); }
    	}
    	if(PlayerToPoint(2, playerid, 2811.7102,-1166.1824,1025.5703))
    	{
			if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Aztecas", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Aztecas !"); }
    	}
    	if(PlayerToPoint(2, playerid, 2514.1301,-1691.2979,14.0460))
    	{
			if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Groove Street", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Groove Street !"); }
    	}
    	if(PlayerToPoint(2, playerid, 1151.1399,-1197.9670,32.0275))
    	{
			if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Ballas", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Ballas !"); }
    	}
    	if(PlayerToPoint(2, playerid, 2341.6677,-1186.3137,1027.9766))
    	{
			if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Vagos", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é dos Vagos !"); }
    	}
    	if(PlayerToPoint(2, playerid, 2151.3218,-1789.1669,13.5097))
    	{
			if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19)
			{
		    	TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Comando Vermelho", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é do Comando Vermelho !"); }
		}
		if(PlayerToPoint(2, playerid, 1327.2062,-877.5867,39.5781))
    	{
			if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20)
			{
		    	TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre PCC", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é do PCC !"); }
		}
		if(PlayerToPoint(2, playerid, 509.7744,-73.3584,998.7578))
    	{
			if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21)
			{
		    	TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Hells Angels", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Hells Angels !"); }
		}
		if(PlayerToPoint(2, playerid, 684.7512,-461.8790,-25.6098))
    	{
			if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22)
			{
		    	TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Mongols", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Mongols !"); }
		}
		if(PlayerToPoint(2, playerid, -223.7290,1410.9444,27.7734))
    	{
			if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23)
			{
		    	TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Sons Of Anarchy", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Sons Of Anarchy !"); }
		}
        if(PlayerToPoint(2, playerid, -371.8547,-1428.7283,25.7266))
    	{
			if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
			{
		    	TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Triads", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Triads !"); }
		}
		if(PlayerToPoint(2, playerid, 827.9384,-2035.7565,12.8672))
    	{
			if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)
			{
		    	TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Drifters", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Drifters !"); }
		}
        if(PlayerToPoint(2, playerid, 1286.5752,-772.8031,1091.9063))
    	{
			if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)
			{
		    	TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre GE", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Drifters !"); }
		}
		if(PlayerToPoint(2, playerid, 1663.0668,-1356.7678,17.5369))
    	{
			if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
			{
    			TogglePlayerControllable(playerid, 1);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Amigo dos Amigos", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Fatal Amigo dos Amigos!"); }
		}
        if(PlayerToPoint(2, playerid, 203.8630,-40.8281,1001.8047))
    	{
			if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)
			{
		    	TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Familia Motoqueiros", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos Drifters !"); }
		}
		if(PlayerToPoint(2, playerid, 2481.1177,-1540.4536,24.2282))
    	{
			if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31)
			{
		    	TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre yStiflerS", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não faz parte dos yStiflerS !"); }
		}
    	if(PlayerToPoint(2, playerid, 1703.7823,1174.0271,34.8259))
    	{
			if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Médicos", "Dinheiro", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Médico !"); }
    	}
    	if(PlayerToPoint(2, playerid, 356.3957,152.4393,1025.7891))
    	{
			if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Prefeitura", "Dinheiro", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Servidor Público !"); }
    	}
    	if(PlayerToPoint(2, playerid, 1073.1507,-345.1020,73.9921))
    	{
			if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Hitmans", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Hitman !"); }
    	}
    	if(PlayerToPoint(2, playerid, 752.1580,-1358.9927,13.5000))
    	{
			if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Repórteres", "Dinheiro", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Repórter !"); }
    	}
    	if(PlayerToPoint(2, playerid, 992.5768,-1460.1726,13.5469))
    	{
			if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Taxistas", "Dinheiro", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é um Taxista !"); }
    	}
    	if(PlayerToPoint(2, playerid, -2634.2791,1409.7692,906.4647))
    	{
			if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Cosa Nostra", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Cosa Nostra !"); }
    	}
    	if(PlayerToPoint(2, playerid, -2167.5757,644.8060,1057.7687))
    	{
			if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
			{
    	        TogglePlayerControllable(playerid, 0);
    			ShowPlayerDialog(playerid, 12, DIALOG_STYLE_LIST, "Cofre Yakuza", "Dinheiro\nMateriais\nMaconha\nCocaina\nCrack", "Confirmar", "Cancelar");
			}
    	    else
    	    { SendClientMessage(playerid, COLOR_GREY, "   Você não é da Yakuza !"); }
    	}
    }
    if((newkeys == KEY_HORN) && (IsPlayerInAnyVehicle(playerid)))
	{
	    if(gTeam[playerid] == 2  || IsACop(playerid) || IsAGOV(playerid))
		{
			OnPlayerCommandText(playerid,"/pe");
  			OnPlayerCommandText(playerid,"/pg");
  			OnPlayerCommandText(playerid,"/abrirgn");
  			OnPlayerCommandText(playerid,"/pb2");
  			OnPlayerCommandText(playerid,"/pb");
  			OnPlayerCommandText(playerid,"/pce");
  			OnPlayerCommandText(playerid,"/pcg");
  			OnPlayerCommandText(playerid,"/ppr");
            OnPlayerCommandText(playerid,"/ppf");
            OnPlayerCommandText(playerid,"/pprc");
            OnPlayerCommandText(playerid,"/pBOPE");
        }
        if(GetPlayerFamy(playerid) == 1)
        {
            OnPlayerCommandText(playerid,"/ps2");
            OnPlayerCommandText(playerid,"/ps1");
        }
        if(GetPlayerFamy(playerid) == 2)
        {
            OnPlayerCommandText(playerid,"/pc1");
            OnPlayerCommandText(playerid,"/pc2");
        }
        if(GetPlayerFamy(playerid) == 3)
        {
            OnPlayerCommandText(playerid,"/psk2");
            OnPlayerCommandText(playerid,"/psk1");
        }
        if(GetPlayerFamy(playerid) == 4)
        {
            OnPlayerCommandText(playerid,"/pr1");
            OnPlayerCommandText(playerid,"/pr2");
        }
        if(GetPlayerFamy(playerid) == 5)
        {
            OnPlayerCommandText(playerid,"/pf1");
            OnPlayerCommandText(playerid,"/pf2");
        }
        if(GetPlayerFamy(playerid) == 6)
        {
            OnPlayerCommandText(playerid,"/pl1");
            OnPlayerCommandText(playerid,"/pl2");
        }
        if(GetPlayerOrg(playerid) == 26)
        {
            OnPlayerCommandText(playerid,"/pskhq");
            OnPlayerCommandText(playerid,"/pskhq2");
        }
        if(GetPlayerOrg(playerid) == 31)
        {
            OnPlayerCommandText(playerid,"/pystiflers");
        }
        if(IsAGOV(playerid))
		{
		    OnPlayerCommandText(playerid,"/pgov");
		}
        if(IsAJornal(playerid))
		{
			OnPlayerCommandText(playerid,"/portaoreporter");
  			OnPlayerCommandText(playerid,"/portaoreporter2");
		}
		if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)
		{
			OnPlayerCommandText(playerid,"/pAmigodosAmigos");
		}
		if(IsATaxi(playerid))
		{
			OnPlayerCommandText(playerid,"/ptaxi");
		}
        if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8)
		{
 			OnPlayerCommandText(playerid,"/phit");
		}
        if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)
		{
 			OnPlayerCommandText(playerid,"/ptriads");
		}
        if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13)
		{
 			OnPlayerCommandText(playerid,"/pyakuza");
		}
		if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)
		{
 			OnPlayerCommandText(playerid,"/acn");
		}
		if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)
		{
 			OnPlayerCommandText(playerid,"/prooxy");
		}
		if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
		{
 			OnPlayerCommandText(playerid,"/pAmericano");
		}
		if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)
		{
 			OnPlayerCommandText(playerid,"/prpp");
		}
	}
    if(PondoOculos[playerid] == true)
	{
		new skin = GetPlayerSkin(playerid);
	    if((newkeys == 32))
	    {
			new
				Float:X,
				Float:Y,
				Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerFacingAngle(playerid, 0);
			SetPlayerPos(playerid, X, Y, Z);
	        PlayerPlaySound(playerid, 1056, X, Y, Z);
	        if(Oculos[playerid] == 0)
	        {
     			SetPlayerHoldingObject(playerid, CommonRed, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 1)
			{
			    SetPlayerHoldingObject(playerid, CommonOrange, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 2)
			{
			    SetPlayerHoldingObject(playerid, CommonGreen, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 3)
			{
			    SetPlayerHoldingObject(playerid, CommonBlue, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 4)
			{
			    SetPlayerHoldingObject(playerid, CommonPurple, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 5)
			{
			    SetPlayerHoldingObject(playerid, CommonEspiral, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 6)
			{
			    SetPlayerHoldingObject(playerid, CommonBlack, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 7)
			{
			    SetPlayerHoldingObject(playerid, RayBanGray, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 8)
			{
			    SetPlayerHoldingObject(playerid, CommonEyes, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 9)
			{
			    SetPlayerHoldingObject(playerid, CommonXadrex, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 10)
			{
			    SetPlayerHoldingObject(playerid, CommonTransparent, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 11)
			{
			    SetPlayerHoldingObject(playerid, CommonXRayVision, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 12)
			{
			    SetPlayerHoldingObject(playerid, SquareFormatYellow, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 13)
			{
			    SetPlayerHoldingObject(playerid, SquareFormatOrange, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 14)
			{
			    SetPlayerHoldingObject(playerid, SquareFormatRed, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 15)
			{
			    SetPlayerHoldingObject(playerid, SquareFormatBlue, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 16)
			{
			    SetPlayerHoldingObject(playerid, SquareFormatGreen, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 17)
			{
			    SetPlayerHoldingObject(playerid, RayBanBlue, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 18)
			{
			    SetPlayerHoldingObject(playerid, RayBanPurple, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 19)
			{
			    SetPlayerHoldingObject(playerid, RayBanPink, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 20)
			{
			    SetPlayerHoldingObject(playerid, RayBanRed, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 21)
			{
			    SetPlayerHoldingObject(playerid, RayBanOrange, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 22)
			{
			    SetPlayerHoldingObject(playerid, RayBanYellow, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 23)
			{
			    SetPlayerHoldingObject(playerid, RayBanGreen, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 24)
			{
			    SetPlayerHoldingObject(playerid, CircularNormal, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 25)
			{
			    SetPlayerHoldingObject(playerid, CircularYellow, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 26)
			{
			    SetPlayerHoldingObject(playerid, CircularRed, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 27)
			{
			    SetPlayerHoldingObject(playerid, CircularBlack, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 28)
			{
			    SetPlayerHoldingObject(playerid, CircularXadrex, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid]++;
				return 0;
			}
			if(Oculos[playerid] == 29)
			{
			    SetPlayerHoldingObject(playerid, CircularThunders, 2, SkinOffSet[skin][0], SkinOffSet[skin][1], SkinOffSet[skin][2], SkinOffSet[skin][3], SkinOffSet[skin][4], SkinOffSet[skin][5]);
				Oculos[playerid] = 0;
				return 0;
			}

		}
		else if((newkeys == 8))
		{
            new
				Float:X,
				Float:Y,
				Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			PlayerPlaySound(playerid, 5203, X, Y, Z);
		    SetCameraBehindPlayer(playerid);
		    SendClientMessage(playerid, 0xFFFFFFFF, "Oculos colocado! Para tirar use /toculos!");
		    PondoOculos[playerid] = false;
		    TogglePlayerControllable(playerid, true);
		    TextDrawDestroy(TOculos);
		    TextDrawDestroy(TOculos2);
		}
	}
    return 1;
}
public ScoreLevel(playerid)
{
	new LevScore;
	LevScore = PlayerInfo[playerid][pLevel];
	SetPlayerScore(playerid, LevScore);
}
public Velocimetro()
{
    new Float:Speedo_HP;
    new str1[128],str2[128],str3[128],str4[128];
    new GasEtempo[MAX_PLAYERS],ResultOwn[MAX_PLAYERS];
    for(new i=0; i<MaiorID; i++)
	{
 		new vehicle = GetPlayerVehicleID(i);
        GetVehicleHealth(vehicle, Speedo_HP);
		if(gPlayerLogged[i] == 1 && IsPlayerInAnyVehicle(i))
		{
			if(TextShow[i] == false)
			{
                TextDrawHideForPlayer(i, forum);
				TextDrawShowForPlayer(i, box);
				TextDrawShowForPlayer(i, box1);
				TextDrawShowForPlayer(i, box2);
				TextDrawShowForPlayer(i, box3);
				TextDrawShowForPlayer(i, box4);
				TextDrawShowForPlayer(i, box5);
				TextDrawShowForPlayer(i, TextData);
				TextDrawShowForPlayer(i, TextHora);
				TextDrawShowForPlayer(i, VeInfo[i]);
				TextDrawShowForPlayer(i, kmhor[i]);
				TextDrawShowForPlayer(i, GazoInfo[i]);
				TextDrawShowForPlayer(i, LataInfo[i]);
				//TextDrawShowForPlayer(i, TempoGasInfo[i]);
				TextDrawShowForPlayer(i, LocalInf[i]);
                TextDrawShowForPlayer(i, SpedUrl);
				TextShow[i] = true;
            }
            //veiculo
            format(str1,sizeof(str1),"~w~Veiculo:~g~~h~~h~ %s",vehName[GetVehicleModel(GetPlayerVehicleID(i))-400]);
			TextDrawSetString(VeInfo[i], str1);
			/*if(GetPlayerSpeed(i, true) >= 150)
			{
				format(str2,sizeof(str2),"~>~~w~Velocidade: ~r~%d KM/H",GetPlayerSpeed(i, true));
				TextDrawSetString(kmhor[i], str2);
 			}  */
            //velocidade
            if(GetPlayerSpeed(i, true) >= 150)
 			{
				format(str2,sizeof(str2),"~w~Velocidade:~w~ %d ~r~~h~KM/H",GetPlayerSpeed(i, true));
				TextDrawSetString(kmhor[i], str2);
 			}
 			else
 			{
    			format(str2,sizeof(str2),"~w~Velocidade:~w~ %d ~g~~h~~h~KM/H",GetPlayerSpeed(i, true));
				TextDrawSetString(kmhor[i], str2);
 			}
            // Start do carro
            if(Speedo_HP >= 551)
			{
				format(str4,sizeof(str4),"~w~Lataria:~w~ %0.0f%%", Speedo_HP/10);
				TextDrawSetString(LataInfo[i], str4);
 			}
 			else if(Speedo_HP >= 361)
 			{
    			format(str4,sizeof(str4),"~w~Lataria:~w~ %0.0f%%", Speedo_HP/10);
				TextDrawSetString(LataInfo[i], str4);
 			}
 			else
 			{
    			format(str4,sizeof(str4),"~w~Lataria:~r~~h~ %0.0f%%", Speedo_HP/10);
				TextDrawSetString(LataInfo[i], str4);
 			}
            // inf tempo gas
            GasEtempo[i] = Gas[vehicle]*18;
            ResultOwn[i] = GasEtempo[i]/60;
            if(ResultOwn[i] > 5)
 			{
				format(str4,sizeof(str4),"~w~Gas Tempo:~w~ %d ~g~~h~~h~Min", ResultOwn[i]);
				TextDrawSetString(TempoGasInfo[i], str4);
 			}
            else
 			{
				format(str4,sizeof(str4),"~w~Gas Tempo:~w~ %d ~g~~h~~h~Min", ResultOwn[i]);
				TextDrawSetString(TempoGasInfo[i], str4);
 			}
            // combustivel
            if(Gas[vehicle] >= 20)
			{
                format(str3,sizeof(str3),"~w~Combustivel:~w~ %d", Gas[vehicle]);
			    TextDrawSetString(GazoInfo[i], str3);
 			}
 			else if(Gas[vehicle] < 20)
 			{
                format(str3,sizeof(str3),"~w~Combustivel:~w~ %d", Gas[vehicle]);
			    TextDrawSetString(GazoInfo[i], str3);
 			}
 			else
 			{
                format(str3,sizeof(str3),"~b~~h~~h~~h~Combustivel:~r~~h~ %d", Gas[vehicle]);
			    TextDrawSetString(GazoInfo[i], str3);
 			}
			format(str4,sizeof(str4),"~b~~h~~h~~h~Local: ~w~%s",ReturnPlayerZone(i));
			TextDrawSetString(LocalInf[i], str4);
		}
		else
		{
		    if(TextShow[i] == true)
		    {
                TextDrawHideForPlayer(i, box);
				TextDrawHideForPlayer(i, box1);
				TextDrawHideForPlayer(i, box2);
				TextDrawHideForPlayer(i, box3);
				TextDrawHideForPlayer(i, box4);
				TextDrawHideForPlayer(i, box5);
                TextDrawHideForPlayer(i, tacho[i]);
                TextDrawHideForPlayer(i, VeInfo[i]);
                TextDrawHideForPlayer(i, kmhor[i]);
                TextDrawHideForPlayer(i, GazoInfo[i]);
                TextDrawHideForPlayer(i, LataInfo[i]);
                //TextDrawHideForPlayer(i, TempoGasInfo[i]);
                TextDrawHideForPlayer(i, LocalInf[i]);
                TextDrawHideForPlayer(i, SpedUrl);
                TextDrawShowForPlayer(i, TextData);
                TextDrawShowForPlayer(i, TextHora);
                TextDrawShowForPlayer(i, forum);
			    TextShow[i] = false;
			}
		}
	}
}
public RemoveRoadblock(playerid)
{
	DestroyDynamicObject(pRoadblock[playerid]);
	pRoadblock[playerid] = 0;
}
forward RemovePlataforma(playerid);
public RemovePlataforma(playerid)
{
	DestroyDynamicObject(pRoadRampa[playerid][0]);
    DestroyDynamicObject(pRoadRampa[playerid][1]);
    DestroyDynamicObject(pRoadRampa[playerid][2]);
    DestroyDynamicObject(pRoadRampa[playerid][3]);
    DestroyDynamicObject(pRoadRampa[playerid][4]);
    DestroyDynamicObject(pRoadRampa[playerid][5]);
    DestroyDynamicObject(pRoadRampa[playerid][6]);
    DestroyDynamicObject(pRoadRampa[playerid][7]);
    pRoadRampa[playerid][0] = 0;
    pRoadRampa[playerid][1] = 0;
    pRoadRampa[playerid][2] = 0;
    pRoadRampa[playerid][3] = 0;
    pRoadRampa[playerid][4] = 0;
    pRoadRampa[playerid][5] = 0;
    pRoadRampa[playerid][6] = 0;
    pRoadRampa[playerid][7] = 0;
}
public RemoveParedao(playerid)
{
	DestroyDynamicObject(PlayerInfo[playerid][pParedao]);
	PlayerInfo[playerid][pParedao] = 0;
}
public RemoveRoadPregos(playerid)
{
	SpikeInfo[playerid][sCreated]=0;
    SpikeInfo[playerid][sX]=0.0;
    SpikeInfo[playerid][sY]=0.0;
    SpikeInfo[playerid][sZ]=0.0;
    DestroyDynamicObject(SpikeInfo[playerid][sObject]);
}
public RemoveRoadBloq(playerid)
{
	DestroyDynamicObject(pRoadBloq[playerid]);
	pRoadBloq[playerid] = 0;
}
public RemoveBarraca(playerid)
{
	DestroyDynamicObject(PlayerInfo[playerid][pBarraca]);
	PlayerInfo[playerid][pBarraca] = 0;
}
public ClearChatbox(playerid, lines)
{
	if (IsPlayerConnected(playerid))
	{
		for(new i=0; i<lines; i++)
		{
			SendClientMessage(playerid, COLOR_GREY, " ");
		}
	}
	return 1;
}
public NRouco(playerid)
{
	Rouco[playerid] = 0;
	SendClientMessage(playerid, CINZA, "Agora você já pode gritar novamente.");
}
public NSemAn(playerid)
{
	SemAn[playerid] = 0;
	SendClientMessage(playerid, CINZA, "Agora você já usar o /an.");
}
public BackupClear(playerid, calledbytimer)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsACop(playerid))
		{
			if (PlayerInfo[playerid][pRequestingBackup] == 1)
			{
    		for(new i = 0; i < MaiorID; i++)
				{
					if(IsPlayerConnected(i))
					{
                    if(IsACop(playerid))
						{
							SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
						}
					}
				}
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Seu pedido de reforço foi cancelado.");
				}
				else
				{
					SendClientMessage(playerid, TEAM_BLUE_COLOR, "Seu pedido de reforço foi cancelado automaticamente.");
				}
				PlayerInfo[playerid][pRequestingBackup] = 0;
			}
			else
			{
				if (calledbytimer != 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Você ainda não pediu reforço.");
				}
			}
		}
		else
		{
			if (calledbytimer != 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Você não é COP");
			}
		}
	}
	return 1;
}
public CheckHack() // Anti Xiter money, Armas e Jet Pack
{
    if(FakeKillOn == 1) { KillTimer(TempoCheckHack); return 1; }
	new giveplayer[MAX_PLAYER_NAME], string[128];
	new ano, mes, dia;
	new hora, minuto, segundo;
	getdate(ano, mes, dia);
 	gettime(hora, minuto, segundo);
    for(new i = 0; i < MaiorID; i++)
	{
        if(IsPlayerConnected(i) && gPlayerLogged[i] == 1 && !IsPlayerNPC(i) && spawnado[i] > 0 && PlayerInfo[i][pAdmin] != 3000)
	   	{
// JetPack
if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK && PlayerInfo[i][pVIP] != 3)
				{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando um JetPack /tv nele rapido!", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
// Rocket Launcher
else if(GetPlayerWeapon(i) == 35)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando um Rocket Launcher /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}

// Lança chamas
else if(GetPlayerWeapon(i) == 37)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando um Lança Chamas /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
else if(GetPlayerWeapon(i) == 38)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Minigun /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
// Visão Noturna
else if(GetPlayerWeapon(i) == 44)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "%s ANTICHEAT: %s[ID %d] está usando uma Visão Noturna /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
// Visão de Calor
else if(GetPlayerWeapon(i) == 45)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Visão de Calor /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
//Serra Eletrica
else if(GetPlayerWeapon(i) == 9)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Serra Eletrica /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
//Sawn-off
else if(GetPlayerWeapon(i) == 38)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Sawn-off /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
//Combat shotgun
else if(GetPlayerWeapon(i) == 27 && GetPlayerOrg(i) != 8 && GetPlayerOrg(i) != 24 && GetPlayerOrg(i) != 26 && GetPlayerFamy(i) != 6)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Combat shotgun /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
//Molotov
else if(GetPlayerWeapon(i) == 18)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando um Molotov /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
//Micro Uzi
else if(GetPlayerWeapon(i) == 28)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Micro Uzi /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
//Tec 9
else if(GetPlayerWeapon(i) == 32)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma TEC-9 /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
//Bazooca
else if(GetPlayerWeapon(i) == 36)
		    	{
				GetPlayerName(i, giveplayer, sizeof(giveplayer));
				format(string, sizeof(string), "ANTICHEAT: %s[ID %d] está usando uma Bazooca  /tv nele rapido", giveplayer,i);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SetPlayerPos(i,-123.7512,-2869.0913,183.3834+600);
				SetPlayerArmedWeapon(i, 0);
				IsXiter[i] ++;
				}
    		}
   			if(IsXiter[i] >= 3)
   			{
                GetPlayerName(i, giveplayer, sizeof(giveplayer));
				IsXiter[i] = 0;
                format(gstring, sizeof(gstring), "AntiAttack:{80E3FF}%s{E84F33}[ID: {80E3FF}%d{E84F33}] Foi acusado ser ser Um Weapon Hack e Foi banido!",giveplayer,i);
        		ABroadCast(COLOR_LIGHTRED,gstring,1);
			   	SBan(i, "Weapon Hack", "Anti-Xiter");
			}
	}
    TempoGuerraP();
    TempoGuerraPP();
    RespawnHorarios();
	return 1;
}
public GuerraCasarao(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
	    if(ProvocoCasarao[playerid] == 1)
		{
			if(IsPlayerInCasarao(playerid))
			{
                GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram o Casarão Abandonado!",playername,NomeORGTr(OrgID));
                SendClientMessageToAll(OrgCor(OrgID), string);
                SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Shopping Center, Mantenha ele em Controle e Ganhará Grana.");
                GangZoneStopFlashForAll(GZCasarao);
                GangZoneShowForAll(GZCasarao,OrgCor(OrgID));
				Dominando[playerid] = 0;
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = OrgID;
				KillTimer(TempoGuerraCasarao);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_COSA, "Você não está no casarão.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCasarao);
				GangZoneShowForAll(GZCasarao, 0xFFFFFF96);
				ProvocoCasarao[playerid] = 0;
				GuerranoCasarao = 0;
				donocasarao = 0;
				KillTimer(TempoGuerraCasarao);
				return 1;
			}
		}
	   return 1;
}
public GuerraEstacao(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
	    if(ProvocoEstacao[playerid] == 1)
		{
			if(IsPlayerInEstacao(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram a Estação Unity!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(COR_COSA, string);
				SendClientMessage(playerid, COLOR_GRAD5, "Você dominou a estação, Mantenha ele em Controle e Ganhará Grana.");
				GangZoneStopFlashForAll(GZEstacao);
 				GangZoneShowForAll(GZEstacao,OrgCor(OrgID));
 				Dominando[playerid] = 0;
 				ProvocoEstacao[playerid] = 0;
 				GuerranaEstacao = 0;
 				donoestacao = OrgID;
 				KillTimer(TempoGuerraEstacao);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_COSA, "Você não está na estação.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZEstacao);
				GangZoneShowForAll(GZEstacao, 0xFFFFFF96);
				ProvocoEstacao[playerid] = 0;
				GuerranaEstacao = 0;
				donoestacao = 0;
				KillTimer(TempoGuerraEstacao);
				return 1;
			}
		}
		return 1;
}
public GuerraShop(playerid)
{
    new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
    if(ProvocoShop[playerid] == 1)
    {
        if(IsPlayerInShop(playerid))
        {
            GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
            format(string, sizeof(string), "%s %s Dominaram o Shopping Center!",playername,NomeORGTr(OrgID));
            SendClientMessageToAll(OrgCor(OrgID), string);
            SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Shopping Center, Mantenha ele em Controle e Ganhará Grana.");
            GangZoneStopFlashForAll(GZShop);
            GangZoneShowForAll(GZShop,OrgCor(OrgID));
            Dominando[playerid] = 0;
            ProvocoShop[playerid] = 0;
            GuerranoShop = 0;
            donoShop = OrgID;
            KillTimer(TempoGuerraShop);
            return 1;
        }
        else
        {
            SendClientMessage(playerid, COR_GRO, "Você não está no Shopping Center.");
            Dominando[playerid] = 0;
            GangZoneStopFlashForAll(GZShop);
            GangZoneShowForAll(GZShop, 0xFFFFFF96);
            ProvocoShop[playerid] = 0;
            GuerranoShop = 0;
            donoShop = 0;
            KillTimer(TempoGuerraShop);
            return 1;
        }
    }
    return 1;
}
public GuerraCemiterio(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
	    if(ProvocoCemiterio[playerid] == 1)
		{
			if(IsPlayerInCemiterio(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram o Cemitério!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
				SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Cemitério, Mantenha ele em Controle e Ganhará Grana.");
				GangZoneStopFlashForAll(GZCemiterio);
				GangZoneShowForAll(GZCemiterio,OrgCor(OrgID));
				Dominando[playerid] = 0;
				ProvocoCemiterio[playerid] = 0;
				GuerranoCemiterio = 0;
				donoCemiterio = OrgID;
				KillTimer(TempoGuerraCemiterio);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_HELLS, "Você não está no Cemiterio.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZCemiterio);
				GangZoneShowForAll(GZCemiterio, 0xFFFFFF96);
				ProvocoCemiterio[playerid] = 0;
				GuerranoCemiterio = 0;
				donoCemiterio = 0;
				KillTimer(TempoGuerraCemiterio);
				return 1;
			}
		}
        return 1;
}
public GuerraPosto(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
	    if(ProvocoPosto[playerid] == 1)
		{
			if(IsPlayerInPosto(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram o Posto de Gasolina Abandonado!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
				SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Posto de Gasolina, Mantenha ele em Controle e Ganhe Grana e Gasolina.");
				GangZoneStopFlashForAll(GZPosto);
				GangZoneShowForAll(GZPosto,OrgCor(OrgID));
				Dominando[playerid] = 0;
				ProvocoPosto[playerid] = 0;
				GuerranoPosto = 0;
				donoPosto = OrgID;
				KillTimer(TempoGuerraPosto);
                TomouPosto = 1;
                SetTimerEx("TomarNovamente",700000,0,"d",playerid);
                Text3DTheus();
                return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_HELLS, "Você não está no Posto de Gasolina.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPosto);
				GangZoneShowForAll(GZPosto, 0xFFFFFF96);
				ProvocoPosto[playerid] = 0;
				GuerranoPosto = 0;
				donoPosto = 0;
				KillTimer(TempoGuerraPosto);
                TomouPosto = 0;   //desbuga o tempo '-' XD
                Text3DTheus();
                return 1;
			}
		}
		return 1;
}
public GuerraCity(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
	    if(ProvocoCity[playerid] == 1)
		{
			if(IsPlayerInCity(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Tomaram o Palominio Creek!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
				SendClientMessage(playerid, COLOR_GRAD5, "Você tomou o Palominio Creek, Mantenha ele sobre Controle e Ganhará Grana.");
				Dominando[playerid] = 0;
				ProvocoCity[playerid] = 0;
				GuerranoCity = 0;
				DonoCity = OrgID;
				KillTimer(TempoGuerraCity);
                TomouCity = 1;
                SetTimerEx("TomarNovamente2",700000,0,"d",playerid);
                return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_HELLS, "Você não está no Palominio Creek.");
				Dominando[playerid] = 0;
				ProvocoCity[playerid] = 0;
				GuerranoCity = 0;
				DonoCity = 0;
				KillTimer(TempoGuerraCity);
                TomouCity = 0;   //desbuga o tempo '-' XD
                return 1;
			}
		}
        return 1;
}
public GuerraPark(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
	    if(ProvocoPark[playerid] == 1)
		{
			if(IsPlayerInPark(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram o Parque Gleen!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
				SendClientMessage(playerid, COLOR_GRAD5, "Você dominou o Parque Gleen, Mantenha ele em Controle e Ganhará Grana.");
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark,OrgCor(OrgID));
				Dominando[playerid] = 0;
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donoPark = OrgID;
				KillTimer(TempoGuerraPark);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Você não está no Parque Gleen.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPark);
				GangZoneShowForAll(GZPark, 0xFFFFFF96);
				ProvocoPark[playerid] = 0;
				GuerranoPark = 0;
				donoPark = 0;
				KillTimer(TempoGuerraPark);
				return 1;
			}
		}
		return 1;
}
public GuerraSkate(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
	    if(ProvocoSkate[playerid] == 1)
		{
			if(IsPlayerInSkate(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram a Pista de Skate!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
				SendClientMessage(playerid, COLOR_GRAD5, "Você dominou a pista de skate, Mantenha ele em Controle e Ganhará Grana.");
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate,OrgCor(OrgID));
				Dominando[playerid] = 0;
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = OrgID;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Você não está na pista de skate.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZSkate);
				GangZoneShowForAll(GZSkate, 0xFFFFFF96);
				ProvocoSkate[playerid] = 0;
				GuerranoSkate = 0;
				donoskate = 0;
				KillTimer(TempoGuerraSkate);
				return 1;
			}
		}
		return 1;
}
public GuerraPantano(playerid)
{
        new string[128], playername[MAX_PLAYER_NAME], OrgID = GetPlayerOrg(playerid);
	    if(ProvocoPantano[playerid] == 1)
		{
			if(IsPlayerInPantano(playerid))
			{
			    GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
                format(string, sizeof(string), "%s %s Dominaram o Pantano!",playername,NomeORGTr(OrgID));
				SendClientMessageToAll(OrgCor(OrgID), string);
				SendClientMessage(playerid, COLOR_GRAD5, "Você dominou a pista de skate, Mantenha ele em Controle e Ganhará Grana.");
				GangZoneStopFlashForAll(GZPantano);
				GangZoneShowForAll(GZPantano,OrgCor(OrgID));
				Dominando[playerid] = 0;
				ProvocoPantano[playerid] = 0;
				GuerranoPantano = 0;
				donopantano = OrgID;
				KillTimer(TempoGuerraPantano);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COR_GRO, "Você não está no Pantano.");
				Dominando[playerid] = 0;
				GangZoneStopFlashForAll(GZPantano);
				GangZoneShowForAll(GZPantano, 0xFFFFFF96);
				ProvocoPantano[playerid] = 0;
				GuerranoPantano = 0;
				donopantano = 0;
				KillTimer(TempoGuerraPantano);
				return 1;
			}
		}
		return 1;
}
public SBan(playerid, string[], string2[])
{
	new arquivo[64], tmp[20], tmp2[20], stri[64], ip[16];
	GetPlayerIp(playerid, ip, sizeof ip);
	format(arquivo, sizeof(arquivo), "Banidos/%s.ini",PlayerName(playerid));
	getdate(Ano, Mes, Dia);
	format(tmp, 20, "%d/%d/%d", Dia, Mes, Ano);
	gettime(Hora, Minuto, Segundo);
	format(tmp2, 20, "%d:%d:%d", Hora, Minuto, Segundo);
	format(gstring,sizeof(gstring), "[%d/%d/%d] [%d:%d:%d] %s IP:%s foi banido pelo admin %s, motivo: %s", v[2], v[1], v[0], v[3], v[4], v[5], PlayerName(playerid),
	ip, string2, string);
	SBanLog(gstring);
	if(dini_Exists(arquivo))
	{
        StatusPlayer(5, playerid);
	}
	else
	{
		dini_Create(arquivo);
		dini_Set(arquivo,"Motivo",string);
		dini_Set(arquivo,"Admin",string2);
		dini_Set(arquivo,"Data",tmp);
		dini_Set(arquivo,"Hora",tmp2);

		format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
		dini_Create(stri);
		dini_Set(stri,"Motivo",string);
		dini_Set(stri,"Admin",string2);
		dini_Set(stri,"Data",tmp);
		dini_Set(stri,"Hora",tmp2);
		dini_Set(stri,"Nick",PlayerName(playerid));
        StatusPlayer(5, playerid);
	}
	return 1;
}

public GranaTerritorios()
{
    new string[128];
    for(new i=0; i<MaiorID; i++)
	{
        if(IsPlayerConnected(i))
        {
			if(PlayerInfo[i][pMembro] != 0 || PlayerInfo[i][pLider] != 0)
			{
				new RandInicio = 600;
				new RandPark = RandInicio + random(GranadoPark);
				new RandCem = RandInicio + random(donoCemiterio);
				new RandSkate = RandInicio + random(GranadoSkate);
				new Randestacao = RandInicio + random(donoestacao);
				new RandCasa = RandInicio + random(GranadoCasarao);
				new RandPosto = RandInicio + random(GranadoPosto);
				new RandShop = RandInicio + random(GranadoShop);
				new RandPantano = RandInicio + random(GranadoPantano);
				new RandPedreira = RandInicio + random(GranadoPedreira);
				if(donoPark == GetPlayerOrg(i)) // GROOVE
	    		{
	                GranaTheus(i, RandPark);
	                format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Parque Gleen Sobre Controle.",NomeORG(i),RandPark);
                 	SendClientMessage(i, 0x77EEA1FF, string);
	    		}
	            if(donoCemiterio == GetPlayerOrg(i)) // GROOVE
	    		{
	                GranaTheus(i, RandCem);
	                format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Cemitério Sobre Controle.",NomeORG(i),RandCem);
	                SendClientMessage(i, 0x77EEA1FF, string);
	    		}
	            if(donoskate == GetPlayerOrg(i)) // GROOVE
	    		{
	                GranaTheus(i, RandSkate);
	                format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter a Pista de Skate Sobre Controle.",NomeORG(i),RandSkate);
	                SendClientMessage(i, 0x77EEA1FF, string);
	    		}
	            if(donoestacao == GetPlayerOrg(i)) // GROOVE
	    		{
	                GranaTheus(i, Randestacao);
	                format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter a Estação Sobre Controle.",NomeORG(i),Randestacao);
	                SendClientMessage(i, 0x77EEA1FF, string);
	    		}
	            if(donocasarao == GetPlayerOrg(i)) // GROOVE
	    		{
	                GranaTheus(i, RandCasa);
	                format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Casarão Sobre Controle.",NomeORG(i),RandCasa);
	                SendClientMessage(i, 0x77EEA1FF, string);
	    		}
	            if(donoPosto == GetPlayerOrg(i)) // GROOVE
	    		{
	                GranaTheus(i, RandPosto);
	                format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Posto de Gasolina Sobre Controle.",NomeORG(i),RandPosto);
	                SendClientMessage(i, 0x77EEA1FF, string);
	    		}
	            if(donoShop == GetPlayerOrg(i)) // GROOVE
	    		{
	                GranaTheus(i, RandShop);
	                format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Shopping Center Sobre Controle.",NomeORG(i),RandShop);
	                SendClientMessage(i, 0x77EEA1FF, string);
	    		}
                if(donopantano == GetPlayerOrg(i)) // GROOVE
	    		{
	                GranaTheus(i, RandPantano);
	                format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter o Pantano Sobre Controle.",NomeORG(i),RandPantano);
	                SendClientMessage(i, 0x77EEA1FF, string);
	    		}
                if(donopedreira == GetPlayerOrg(i)) // GROOVE
	    		{
	                GranaTheus(i, RandPedreira);
	                format(string, sizeof(string), "Agência %s: Você recebeu R$%d, Por manter a Pedreira Sobre Controle.",NomeORG(i),RandPedreira);
	                SendClientMessage(i, 0x77EEA1FF, string);
	    		}
			}
 	    }
 	}
	return 1;
}
public LoginAgora(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		logouagora[playerid] = 0;
		KillTimer(TempoLogin);
	}
}
public CorridaOni()
{
	if(pcorridaoni > 0)
	{
			pcorridaoni = 0;
	}
}
public hbomba()
{
	if(phbomba > 0)
	{
			phbomba = 0;
	}
}
public cbomba()
{
	if(pcbomba > 0)
	{
			pcbomba = 0;
	}
}
public Sinc()
{
	if(psinc > 0)
	{
			psinc = 0;
	}
}
public AdmCheck(playerid)
{
    if(PlayerInfo[playerid][pAdmin] != 0)
    {
		new idx = 0;
		TheusAdmin[playerid] = 0;
	    while(idx < sizeof(AdmInfo))
		{
		    if(strcmp(AdmInfo[idx][gMembro],PlayerName(playerid), true ) == 0 )
			{
	            TheusAdmin[playerid] ++;
			}
			idx++;
		}
	    if(TheusAdmin[playerid] == 0)
		{
			//SendClientMessage(playerid, 0xFF8080AA,"[BPF]: {FFFFFF}Você Não faz mais Parte da Administração.");
			PlayerInfo[playerid][pAdmin] = 0;
		}
	    else if(PlayerInfo[playerid][pAdmin] != 3000)
		{
            ModoTrabalho(playerid, 1);
		}
	}
    return 0;
}
public HelpCheck(playerid)
{
    if(PlayerInfo[playerid][pHelper] != 0)
    {
		new idx = 0;
		TheusHelper[playerid] = 0;
	    while(idx < sizeof(HelpInfo))
		{
		    if(strcmp(HelpInfo[idx][gMembro],PlayerName(playerid), true ) == 0 )
			{
	            TheusHelper[playerid] ++;
			}
			idx++;
		}
	    if(TheusHelper[playerid] == 0)
		{
			//SendClientMessage(playerid, 0xFF8080AA,"[BPF]: {FFFFFF}Você Não faz mais Parte dos Helpers.");
			PlayerInfo[playerid][pHelper] = 0;
		}
	    else
		{
			format(gstring, sizeof(gstring), "[BPF SERVER]:{FFFFFF} Você Logou Como Helper Nivel: {0000FF}%d.",PlayerInfo[playerid][pHelper]);
			SendClientMessage(playerid, 0x0000FFAA,gstring);
		}
	}
    return 0;
}
public CheckOwnerb(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		// Empresas Com interiores
 			for(new i = 0; i < sizeof(BizzInfo); i++)
			{
			    new playername[MAX_PLAYER_NAME];
	        	GetPlayerName(playerid,playername,sizeof(playername));
	        	if(strcmp(playername,BizzInfo[i][bOwner],true)==0)
	        	{
	        	    PlayerInfo[playerid][pPbiskey] = i;
	        	    return 1;
	        	}
			}
			// Empresas sem interiores
			for(new i = 0; i < sizeof(SBizzInfo); i++)
			{
			    new playername[MAX_PLAYER_NAME];
	        	GetPlayerName(playerid,playername,sizeof(playername));
	        	if(strcmp(playername,SBizzInfo[i][sbOwner],true)==0)
	        	{
	        	    PlayerInfo[playerid][pPbiskey] = i+100;
	        	    return 1;
	        	}
			}
			PlayerInfo[playerid][pPbiskey] = 255;
			return 1;
	}
	return 1;
}
public CheckOwnerh(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		// Casas
		for(new h = 0; h < sizeof(HouseInfo); h++)
		{
		    new playername[MAX_PLAYER_NAME];
        	GetPlayerName(playerid,playername,sizeof(playername));
        	if(strcmp(playername,HouseInfo[h][hOwner],true)==0)
        	{
        	    PlayerInfo[playerid][pPHousekey] = h;
        	    PlayerInfo[playerid][pPHouseCarkey] = PlayerInfo[playerid][pPHousekey]+1;
        	    return 1;
        	}
		}
		PlayerInfo[playerid][pPHousekey] = 255;
		return 1;
	}
	return 1;
}

public Administrador(playerid)
{
    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pAdmin] > 0 && admtrampando[playerid] > 0)
	{
        ResetPlayerWeapons(playerid);
		SetPlayerHealth(playerid,1500);
    }
}
public Helpert(playerid)
{
    if(IsPlayerConnected(playerid) && PlayerInfo[playerid][pHelper] > 0 && helptrampando[playerid] > 0)
	{
	    ResetPlayerWeapons(playerid);
		SetPlayerHealth(playerid,1500);
	}
}
public Sincronizar(playerid)
{
 	if(IsPlayerConnected(playerid))
	{
		SetPlayerPos(playerid,xx[playerid],yy[playerid],zz[playerid]);
		SetPlayerFacingAngle(playerid,FaceAngle[playerid]);
		SetPlayerHealth(playerid,PlayerHPP[playerid]);
		SetPlayerVirtualWorld(playerid,virt[playerid]);
		SetPlayerInterior(playerid,interior[playerid]);
		SetPlayerSkin(playerid,skinneg[playerid]);
		SetPlayerArmour(playerid,APP[playerid]);
		ResetPlayerWeapons(playerid);
		GivePlayerWeapon(playerid,gunsinc[1][playerid],ammoo[1][playerid]);
		GivePlayerWeapon(playerid,gunsinc[2][playerid],ammoo[2][playerid]);
		GivePlayerWeapon(playerid,gunsinc[3][playerid],ammoo[3][playerid]);
		GivePlayerWeapon(playerid,gunsinc[4][playerid],ammoo[4][playerid]);
		GivePlayerWeapon(playerid,gunsinc[5][playerid],ammoo[5][playerid]);
		GivePlayerWeapon(playerid,gunsinc[6][playerid],ammoo[6][playerid]);
		GivePlayerWeapon(playerid,gunsinc[7][playerid],ammoo[7][playerid]);
		GivePlayerWeapon(playerid,gunsinc[8][playerid],ammoo[8][playerid]);
		GivePlayerWeapon(playerid,gunsinc[9][playerid],ammoo[9][playerid]);
		GivePlayerWeapon(playerid,gunsinc[10][playerid],ammoo[10][playerid]);
		GivePlayerWeapon(playerid,gunsinc[11][playerid],ammoo[11][playerid]);
		GivePlayerWeapon(playerid,gunsinc[12][playerid],ammoo[12][playerid]);
		if(vehicledd[playerid] == 1) { PutPlayerInVehicle(playerid,VehicleIDD[playerid],1); vehicledd[playerid] = 0; }
		sincronizando[playerid] = 0;
		KillTimer(TempoSinc);
		SendClientMessage(playerid,COLOR_YELLOW," Sincronizado com sucesso!");
	}
}
public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
    new string[128];
    new pstring[128];
	new plname[MAX_PLAYER_NAME];
    if(gPlayerLogged[playerid] == 0) { return SendClientMessage(playerid, 0x00FFFFFF, "[BPF ERRO] Registre-se ou Logue no Servidor."); }
	TheusInfo[playerid][Tels] = 0;
    GetPlayerName(clickedplayerid, plname, sizeof(plname));
    format(string, sizeof(string), "Menu do(a) %s", plname);
    format(pstring, sizeof(pstring), "Ligar para %s\nMandar SMS para %s", plname,plname);
    ShowPlayerDialog(playerid, 3, DIALOG_STYLE_LIST, string, pstring, "Confirmar", "Cancelar");
    TheusInfo[playerid][Tels] = PlayerInfo[clickedplayerid][pPnumber];
	return 1;
}
public GuerraTerrorista(playerid)
{
	new plname[MAX_PLAYER_NAME], string[128];
 	GetPlayerName(playerid, plname, MAX_PLAYER_NAME);
 	TendoGuerra = 0;
    if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)
    {
        KillTimer(TempoGuerra);
        TheusInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e o Exército Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COLOR_EXE, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)
    {
        KillTimer(TempoGuerra);
        TheusInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a Americano Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COLOR_EXE, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)
    {
        KillTimer(TempoGuerra);
        TheusInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a Taliban Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COR_TAL, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)
    {
        KillTimer(TempoGuerra);
        TheusInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a Al'qaeda Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COR_AL, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)
    {
        KillTimer(TempoGuerra);
        TheusInfo[playerid][InicioGuerra] = 0;
        TendoGuerra = 0;
        format(string, sizeof(string), "%s e a F.A.R.C Finalizaram uma Guerra!",plname);
       	SendClientMessageToAll(COR_FARC, string);
       	GangZoneHideForAll(GZGuerra);
        GangZoneDestroy(GZGuerra);
    }
    if(Territorio[almortos] > Territorio[exemortos] && Territorio[talmortos] > Territorio[exemortos])//exercito ownou
 	{
        format(string, sizeof(string), "O Exército venceu a guerra matando %d membros do Taliban e %d membros da Al'qaeda!",Territorio[talmortos], Territorio[almortos]);
       	SendClientMessageToAll(COLOR_EXE, string);
 	}
 	else if(Territorio[exemortos] > Territorio[almortos] && Territorio[talmortos] > Territorio[almortos])//al'qaeda ownou
 	{
      	format(string, sizeof(string), "A Al'qaeda venceu a guerra matando %d membros do Taliban e %d membros do Exército!",Territorio[talmortos], Territorio[exemortos]);
       	SendClientMessageToAll(COR_AL, string);
 	}
 	else if(Territorio[exemortos] > Territorio[talmortos] && Territorio[almortos] > Territorio[talmortos])//taliban ownou
 	{
 	  	format(string, sizeof(string), "O Taliban venceu a guerra matando %d membros da Al'qaeda e %d membros do Exército!",Territorio[almortos], Territorio[exemortos]);
       	SendClientMessageToAll(COR_TAL, string);
 	}
 	else
 	{
 	  	format(string, sizeof(string), "Houve um empate na guerra! Morreram: %d membros da Al'qaeda, %d membros do Exército e %d membros do Taliban !",Territorio[almortos], Territorio[exemortos],Territorio[talmortos]);
       	SendClientMessageToAll(COR_TAL, string);
 	}
	return 1;
}
public UsarNovamente(playerid)
{
	UsouComando[playerid] = 0;
}
public BaterNovamente(playerid)
{
	BateuCartao[playerid] = 0;
}
public TomarNovamente()
{
	TomouPosto = 0;
}
public TomarNovamente2()
{
	TomouCity = 0;
}
public RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[12] = 0;
	new plyAmmo[12] = 0;
	for(new slot = 0; slot != 12; slot++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, slot, wep, ammo);

		if(wep != weaponid && ammo != 0)
		{
			GetPlayerWeaponData(playerid, slot, plyWeapons[slot], plyAmmo[slot]);
		}
	}

	ResetPlayerWeapons(playerid);
	for(new slot = 0; slot != 12; slot++)
	{
	    if(plyAmmo[slot] != 0)
	    {
			GivePlayerWeapon(playerid, plyWeapons[slot], plyAmmo[slot]);
		}
	}
	return 1;
}
public ReduceTimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(ReduceTime[playerid] == 1)
	    {
			ReduceTime[playerid] = 0;
	    }
	}
}
public VoltarBombas(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(SemBombas[playerid] == 1)
	    {
			SemBombas[playerid] = 0;
	    }
	}
}
public PresoMulta(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    if(TicketOffer[playerid] < 999)
	    {
			TicketOffer[playerid] = 999;
			TicketMoney[playerid] = 0;
			PlayerInfo[playerid][pJailed] = 1;
            SetPlayerWantedLevel(playerid, 0);
            WantedPoints[playerid] = 0;
      		SetPlayerWantedLevel(playerid, 0);
            PlayerInfo[playerid][pJailTime] = 320;
            //ProcuradoPlayer(playerid);
		}
	}
}
public OnPlayerExitedMenu(playerid)
{
    TogglePlayerControllable(playerid, 1);
	return 1;
}
//=================[NOVO ROUBAR]================
public RouboBanco(playerid)
{
	KillTimer(tempobanco);
	if(!PlayerToPoint(8.0,playerid,2306.5127,-6.1166,26.7422))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
		format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está no cofre do banco.");
        ProvocoBanco[playerid] = 0; roubando[playerid] = 0; roubobanco = 0; KillTimer(tempobanco); temporoubobanco = 0;
        return 1;
    }
	ForPlayers(i)
	{

		if(PlayerToPoint(10.0,i,2306.5127,-6.1166,26.7422))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoBanco[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
				format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre do Banco! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; roubobanco = 0; ProvocoBanco[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto ao Banco");
				GranaTheus(i, GranaBanco);
				format(gstring, sizeof(gstring), "Você e os %s roubaram $%d do cofre do Banco!",NomeORG(playerid), GranaBanco);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
            	Text3DTheus();
			}
		}
	}
	return 1;
}
public RouboLot(playerid)
{
	KillTimer(tempolot);
	if(!PlayerToPoint(8.0,playerid,820.6042,8.3990,1004.1962))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
		format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar o cofre da Lotérica! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está no cofre da Lotérica.");
        ProvocoLot[playerid] = 0; roubando[playerid] = 0; roubolot = 0; KillTimer(tempolot); temporoubolot = 0;
        return 1;
    }
	ForPlayers(i)
	{

		if(PlayerToPoint(5.0,i,820.6042,8.3990,1004.1962))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoLot[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
				format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre da Lotérica! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; roubolot = 0; ProvocoLot[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Lotérica");
				GranaTheus(i, GranaLot);
				format(gstring, sizeof(gstring), "Você e os %s roubaram $%d do cofre da Lotérica!",NomeORG(playerid), GranaLot);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
            	Text3DTheus();
			}
		}
	}
	return 1;
}
public RouboPosto(playerid)
{
	KillTimer(tempoposto);
	if(!PlayerToPoint(8.0,playerid,381.5648,-188.1646,1000.6328))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
		format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar o cofre do Posto de Gasolina Abandonado! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está no cofre do Posto.");
        ProvocoPostoGas[playerid] = 0; roubando[playerid] = 0; rouboposto = 0; KillTimer(tempoposto); temporouboposto = 0;
        return 1;
    }
	ForPlayers(i)
	{

		if(PlayerToPoint(5.0,i,381.5648,-188.1646,1000.6328))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoPostoGas[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
				format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar o cofre do Posto de Gasolina Abandonado! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; rouboposto = 0; ProvocoPostoGas[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto ao Posto");
				GranaTheus(i, GranaPosto);
				format(gstring, sizeof(gstring), "Você e os %s roubaram $%d do cofre do Posto Abandonado!",NomeORG(playerid), GranaPosto);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
            	Text3DTheus();
			}
		}
	}
	return 1;
}
public RouboLoja1(playerid)
{
	KillTimer(tempoloja1);
	if(!PlayerToPoint(8.0,playerid,2169.1516,1589.9265,999.9713))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
		format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar a Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está na Loja de Armas 1.");
        ProvocoLoja1[playerid] = 0; roubando[playerid] = 0; rouboloja1 = 0; KillTimer(tempoloja1); temporouboloja1 = 0;
        return 1;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,2169.1516,1589.9265,999.9713))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoLoja1[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
				format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Loja de Armas 1! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
           	 	roubando[playerid] = 0; rouboloja1 = 0; ProvocoLoja1[playerid] = 0;
			}

			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Loja de Armas 1");
				GivePlayerWeapon(i, 4, 1);
				GivePlayerWeapon(i, 10, 100);
				GivePlayerWeapon(i, 17, 100);
				GivePlayerWeapon(i, 24, 100);
				GivePlayerWeapon(i, 25, 100);
				GivePlayerWeapon(i, 31, 100);
				GivePlayerWeapon(i, 29, 100);
				GivePlayerWeapon(i, 34, 100);
				GranaTheus(i, GranaLoja1);
				format(gstring, sizeof(gstring), "Você e os %s roubaram R$%d da Loja de Armas 1!",NomeORG(playerid), GranaLoja1);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
            	Text3DTheus();
			}
		}
	}
	return 1;
}
public RouboLoja2(playerid)
{
	KillTimer(tempoloja2);
	if(!PlayerToPoint(8.0,playerid,451.3090,-79.8603,999.5547))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
		format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar a Loja de Armas 2! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está na Loja de Armas 2.");
        ProvocoLoja2[playerid] = 0; roubando[playerid] = 0; rouboloja2 = 0; KillTimer(tempoloja2); temporouboloja2 = 0;
        return 1;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,451.3090,-79.8603,999.5547))
		{
		    new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoLoja2[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
				format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Loja de Armas 2! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; rouboloja2 = 0; ProvocoLoja2[playerid] = 0;
			}

			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Loja de Armas 2");
				GivePlayerWeapon(i, 4, 1);
				GivePlayerWeapon(i, 10, 100);
				GivePlayerWeapon(i, 17, 100);
				GivePlayerWeapon(i, 24, 100);
				GivePlayerWeapon(i, 25, 100);
				GivePlayerWeapon(i, 31, 100);
				GivePlayerWeapon(i, 29, 100);
				GivePlayerWeapon(i, 34, 100);
				GranaTheus(i, GranaLoja2);
				format(gstring, sizeof(gstring), "Você e os %s roubaram R$%d da Loja de Armas 2!",NomeORG(playerid), GranaLoja2);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
            	Text3DTheus();
			}
		}
	}
	return 1;
}
public RouboPrefe(playerid)
{
	KillTimer(tempoprefe);
	if(!PlayerToPoint(8.0,playerid,354.6608,172.0170,1008.3802))
    {
        //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
		format(gstring, sizeof(gstring), "%s e os %s não conseguiram roubar a Prefeitura! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
       	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
        SendClientMessage(playerid, COLOR_GREY, "Você não está na Prefeitura.");
        ProvocoPrefe[playerid] = 0; roubando[playerid] = 0; rouboprefe = 0; KillTimer(tempoprefe); temporouboprefe = 0;
        return 1;
    }
	ForPlayers(i)
	{
		if(PlayerToPoint(8.0,i,354.6608,172.0170,1008.3802))
		{
      		new var032=0;
			if (PlayerInfo[playerid][pLider] != 0) { var032 = PlayerInfo[playerid][pLider]; }
			else if (PlayerInfo[playerid][pMembro] != 0) { var032 = PlayerInfo[playerid][pMembro]; }
			if(ProvocoPrefe[playerid] == 1)
            {
                //SendClientMessageToAll(0x80FF80AA,"***.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•[ {0080FF}Brasil PlayStart Notícias{80FF80} ]•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•.•***");
				format(gstring, sizeof(gstring), "%s e os %s conseguiram roubar a Prefeitura! ID:[%d]", PlayerName(playerid), NomeORG(playerid), playerid);
            	SendClientMessageToAll(GetPlayerColor(playerid), gstring);
            	roubando[playerid] = 0; rouboprefe = 0; ProvocoPrefe[playerid] = 0;
			}
			if (PlayerInfo[i][pLider] == var032 || PlayerInfo[i][pMembro] == var032)
			{
				SetPlayerCriminal(i,255, "Assalto a Prefeitura");
				GranaTheus(i, GranaPref);
				format(gstring, sizeof(gstring), "Você e os %s roubaram R$%d da Prefeitura!",NomeORG(playerid), GranaPref);
            	SendClientMessage(i, COLOR_YELLOW, gstring);
            	Text3DTheus();
			}
		}
	}
	return 1;
}
public Aroubo()
{
    temporoubobanco = 0;
    GranaBanco = 10000 + random(8000);
    SendClientMessageToAll(0x1583F0FF, "[PlayStart News] O Banco Central de Los Santos se Recuperou do Último Roubo.");
    Text3DTheus();
}
public Aroubo2()
{
    temporoubolot = 0;
	GranaLot = 3000 + random(9000);
    SendClientMessageToAll(0x1583F0FF, "[PlayStart News] A Loteria de Los Santos se Recuperou do Último Roubo.");
    Text3DTheus();
}
public Aroubo6()
{
    temporouboposto = 0;
	GranaPosto = 2000 + random(8000);
    SendClientMessageToAll(0x1583F0FF, "[PlayStart News] O Posto de Gasolina se Recuperou do Último Roubo.");
    Text3DTheus();
}
public Aroubo3()
{
    temporouboloja1 = 0;
	GranaLoja1 = 2000 + random(7000);
    SendClientMessageToAll(0x1583F0FF, "[PlayStart News] A Loja de Armas 1 se Recuperou do Último Roubo.");
    Text3DTheus();
}
public Aroubo4()
{
    temporouboloja2 = 0;
	GranaLoja2 = 1500 + random(7000);
    SendClientMessageToAll(0x1583F0FF, "[PlayStart News] A Loja de Armas 2 se Recuperou do Último Roubo.");
    Text3DTheus();
}
public Aroubo5()
{
    temporouboprefe = 0;
    SendClientMessageToAll(0x1583F0FF, "[PlayStart News] A Prefeitura de Los Santos se Recuperou do Último Roubo.");
	GranaPref = 3000 + random(8000);
    Text3DTheus();
}
//=================[FIM ROUBAR]================
public OnGameModeExit()
{
    for(new _@x = 1; _@x < MAX_VEHICLES; _@x++)
    {
        if(VeiculoValido[_@x] == 1)
        {
            DestroyObject(ObjetoCarro[_@x]);
        }
    }
    for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
	    { SalvarPlayer(i); }
	}
    for(new i = 0; i < MaiorID; i++)
	{
	    if(Infoa[i][Arara]) { RemovePlayerAttachedObject(i, 0); }
	}
	SalvarMorro();
	SalvarPedreira();
	SaveAdm();
    DestroyMenu(Principal);
	DestroyMenu(CoresTheus);
	DestroyMenu(Rodas);
	DestroyMenu(VolumedoCarro);
	DestroyMenu(Componentes);
    EleicoesOnSave();
    SaveEleicoes();
	getdate(v[0], v[1], v[2]);
	gettime(v[3], v[4], v[5]);
	print("\n---------------------------------------------------------");
	printf("Server Desligado: [%02d/%02d/%d %02d:%02d:%02d]", v[2], v[1], v[0], v[3], v[4], v[5]);
	print("---------------------------------------------------------\n");
    return 1;
}
//=================================[pedagio]===========================================//
public ReduzTempo(playerid)
{
	Reduzido[playerid] = 0;
}
stock ReturnPlayerZone(playerid)
{
	new location[MAX_ZONE_NAME];
	GetPlayer2DZone(playerid, location, MAX_ZONE_NAME);
    return location;
}

stock NomeORG(playerid)
{
	new gangtext[64];
	if(PlayerInfo[playerid][pMembro] == 0 && PlayerInfo[playerid][pLider] == 0) { gangtext = "Civil"; }
    else if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1) { gangtext = "Polícia Mílitar"; }
	else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2) { gangtext = "R.O.T.A"; }
	else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3) { gangtext = "Exercito"; }
	else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4) { gangtext = "Medicos"; }
	else if(PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5) { gangtext = "Los Aztecas"; }
	else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6) { gangtext = "Taliban"; }
	else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7) { gangtext = "Prefeitura"; }
    else if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8) { gangtext = "Hitmans"; }
    else if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9) { gangtext = "Repórter"; }
    else if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10) { gangtext = "Taxistas"; }
	else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11) { gangtext = "Policia Federal"; }
   	else if(PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12) { gangtext = "Cosa Nostra"; }
   	else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13) { gangtext = "Yakuza"; }
    else if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14) { gangtext = "Groove Street"; }
    else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15) { gangtext = "Al'qaeda"; }
    else if(PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16) { gangtext = "Policia Rodoviaria"; }
    else if(PlayerInfo[playerid][pMembro] == 17 || PlayerInfo[playerid][pLider] == 17) { gangtext = "Ballas"; }
    else if(PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18) { gangtext = "Los Vagos"; }
    else if(PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19) { gangtext = "Comando Vermelho"; }
    else if(PlayerInfo[playerid][pMembro] == 20 || PlayerInfo[playerid][pLider] == 20) { gangtext = "PCC"; }
    else if(PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21) { gangtext = "Hells Angels"; }
    else if(PlayerInfo[playerid][pMembro] == 22 || PlayerInfo[playerid][pLider] == 22) { gangtext = "Mongols"; }
    else if(PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23) { gangtext = "Sons Of Anarchy"; }
    else if(PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24) { gangtext = "The Triads"; }
    else if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25) { gangtext = "Drifters"; }
    else if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26) { gangtext = "OwnZ"; }
    else if(PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27) { gangtext = "Motoqueiros"; }
    else if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28) { gangtext = "Policia Florestal"; }
    else if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29) { gangtext = "Amigo dos Amigos"; }
    else if(PlayerInfo[playerid][pMembro] == 30 || PlayerInfo[playerid][pLider] == 30) { gangtext = "B.O.P.E"; }
    else if(PlayerInfo[playerid][pMembro] == 31 || PlayerInfo[playerid][pLider] == 31) { gangtext = "yStiflerS"; }
    else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32) { gangtext = "Exercito Americano"; }
    else if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33) { gangtext = "F.A.R.C"; }
    else if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34) { gangtext = "Policia Cívil"; }
	return gangtext;
}
stock SendMessageToOthersAdmins(playerid, color, const message[])
{
	new ret=0;
	for (new i=0; i<MaiorID; i++)
	{
		if (IsPlayerConnected(i) && i!=playerid && PlayerInfo[i][pAdmin] > 0)
		{
			SendClientMessage(i, color, message);
			ret++;
		}
	}
	return ret;
}
public Clock()
{
	new str[128], str2[128], ano,
	mes, dia, hora, minuto, segundo;
	getdate(ano, mes, dia);
 	gettime(hora, minuto, segundo);
	new myeggtext[20];
	if(mes == 1) { myeggtext = "Janeiro"; }
	else if(mes == 2) { myeggtext = "Fevereiro"; }
	else if(mes == 3) { myeggtext = "Marco"; }
	else if(mes == 4) { myeggtext = "Abril"; }
	else if(mes == 5) { myeggtext = "Maio"; }
	else if(mes == 6) { myeggtext = "Junho"; }
	else if(mes == 7) { myeggtext = "Julho"; }
	else if(mes == 8) { myeggtext = "Agosto"; }
	else if(mes == 9) { myeggtext = "Setembro"; }
	else if(mes == 10) { myeggtext = "Outubro"; }
	else if(mes == 11) { myeggtext = "Novembro"; }
	else if(mes == 12) { myeggtext = "Dezembro"; }
	format(str, sizeof(str), "%d de %s", dia, myeggtext);
   	TextDrawSetString(TextData, str);
   	format(str2, sizeof(str2), "%d:%d:%d", hora, minuto, segundo);
	TextDrawSetString(TextHora, str2);
}
public OnVehicleStreamIn(vehicleid, forplayerid)
{
  	if (VTrancado[vehicleid] >= 1)
	{
		SetVehicleParamsForPlayer(vehicleid,forplayerid,0,1);
	}
	else
	{
		SetVehicleParamsForPlayer(vehicleid,forplayerid,0,0);
	}
	return 1;
}
forward LockCar(carid);
public LockCar(carid)
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,1);
		}
	}
}
forward UnLockCar(carid);
public UnLockCar(carid)
{
 for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			SetVehicleParamsForPlayer(carid,i,0,0);
		}
	}
}
encode_tires(tires1, tires2, tires3, tires4)
{
	return tires1 | (tires2 << 1) | (tires3 << 2) | (tires4 << 3);
}

//=====================================[INFOORG]================================//
forward ConviteInfoOrg(nome[], org, cargo);
public ConviteInfoOrg(nome[], org, cargo)
{
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",org);
 	if(cargo >= 6)
	{
	    strmid(InfoOrg[org][Lider], nome, 0, strlen(nome), MAX_PLAYER_NAME);
		dini_Set(arquivo,"Lider",nome);
		return 1;
	}
	if(cargo == 5)
	{
		if(strcmp(InfoOrg[org][SubLider],"Ninguem",true)==0)
		{
		    strmid(InfoOrg[org][SubLider], nome, 0, strlen(nome), MAX_PLAYER_NAME);
       	    dini_Set(arquivo,"SubLider",nome);
			return 1;
		}
	}
	if(strcmp(InfoOrg[org][Membro1],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro1], nome, 0, strlen(nome), MAX_PLAYER_NAME);
        dini_Set(arquivo,"Membro1",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro2],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro2], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro2",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro3],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro3], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro3",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro4],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro4], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro4",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro5],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro5], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro5",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro6],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro6], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro6",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro7],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro7], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro7",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro8],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro8], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro8",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro9],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro9], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro9",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro10],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro10], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro10",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro11],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro11], nome, 0, strlen(nome), MAX_PLAYER_NAME);
		dini_Set(arquivo,"Membro11",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro12],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro12], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro12",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro13],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro13], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro13",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro14],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro14], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro14",nome);
		return 1;
	}
	if(strcmp(InfoOrg[org][Membro15],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro15], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro15",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro16],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro16], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro16",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro17],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro17], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro17",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro18],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro18], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro18",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro19],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro19], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro19",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro20],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro20], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro20",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro21],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro21], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro21",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro22],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro22], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro22",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro23],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro23], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro23",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro24],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro24], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro24",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro25],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro25], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro25",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro26],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro26], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro26",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro27],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro27], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro27",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro28],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro28], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro28",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro29],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro29], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro29",nome);
		return 1;
	}
    if(strcmp(InfoOrg[org][Membro30],"Ninguem",true)==0)
	{
	    strmid(InfoOrg[org][Membro30], nome, 0, strlen(nome), MAX_PLAYER_NAME);
	    dini_Set(arquivo,"Membro30",nome);
		return 1;
	}
	return 0;
}
forward LoadOrgs();
public LoadOrgs()
{
	new arquivo[64];
	new idx = 1;
	while (idx < sizeof(InfoOrg))
	{
		format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",idx);
		if(!dini_Exists(arquivo))
        {
    	 	dini_Create(arquivo);
            dini_Set(arquivo,"Lider","Ninguem");
            dini_Set(arquivo,"SubLider","Ninguem");
            dini_Set(arquivo,"Membro1","Ninguem");
            dini_Set(arquivo,"Membro2","Ninguem");
            dini_Set(arquivo,"Membro3","Ninguem");
            dini_Set(arquivo,"Membro4","Ninguem");
            dini_Set(arquivo,"Membro5","Ninguem");
            dini_Set(arquivo,"Membro6","Ninguem");
            dini_Set(arquivo,"Membro7","Ninguem");
            dini_Set(arquivo,"Membro8","Ninguem");
            dini_Set(arquivo,"Membro9","Ninguem");
            dini_Set(arquivo,"Membro10","Ninguem");
            dini_Set(arquivo,"Membro11","Ninguem");
            dini_Set(arquivo,"Membro12","Ninguem");
            dini_Set(arquivo,"Membro13","Ninguem");
            dini_Set(arquivo,"Membro14","Ninguem");
            dini_Set(arquivo,"Membro15","Ninguem");
            dini_Set(arquivo,"Membro16","Ninguem");
            dini_Set(arquivo,"Membro17","Ninguem");
            dini_Set(arquivo,"Membro18","Ninguem");
            dini_Set(arquivo,"Membro19","Ninguem");
            dini_Set(arquivo,"Membro20","Ninguem");
            dini_Set(arquivo,"Membro21","Ninguem");
            dini_Set(arquivo,"Membro22","Ninguem");
            dini_Set(arquivo,"Membro23","Ninguem");
            dini_Set(arquivo,"Membro24","Ninguem");
            dini_Set(arquivo,"Membro25","Ninguem");
            dini_Set(arquivo,"Membro26","Ninguem");
            dini_Set(arquivo,"Membro27","Ninguem");
            dini_Set(arquivo,"Membro28","Ninguem");
            dini_Set(arquivo,"Membro29","Ninguem");
            dini_Set(arquivo,"Membro30","Ninguem");
     	}
		strmid(InfoOrg[idx][Lider], dini_Get(arquivo,"Lider"), 0, strlen(dini_Get(arquivo,"Lider")), 255);
		strmid(InfoOrg[idx][SubLider], dini_Get(arquivo,"SubLider"), 0, strlen(dini_Get(arquivo,"SubLider")), 255);
        strmid(InfoOrg[idx][Membro1], dini_Get(arquivo,"Membro1"), 0, strlen(dini_Get(arquivo,"Membro1")), 255);
		strmid(InfoOrg[idx][Membro2], dini_Get(arquivo,"Membro2"), 0, strlen(dini_Get(arquivo,"Membro2")), 255);
		strmid(InfoOrg[idx][Membro3], dini_Get(arquivo,"Membro3"), 0, strlen(dini_Get(arquivo,"Membro3")), 255);
		strmid(InfoOrg[idx][Membro4], dini_Get(arquivo,"Membro4"), 0, strlen(dini_Get(arquivo,"Membro4")), 255);
		strmid(InfoOrg[idx][Membro5], dini_Get(arquivo,"Membro5"), 0, strlen(dini_Get(arquivo,"Membro5")), 255);
		strmid(InfoOrg[idx][Membro6], dini_Get(arquivo,"Membro6"), 0, strlen(dini_Get(arquivo,"Membro6")), 255);
		strmid(InfoOrg[idx][Membro7], dini_Get(arquivo,"Membro7"), 0, strlen(dini_Get(arquivo,"Membro7")), 255);
		strmid(InfoOrg[idx][Membro8], dini_Get(arquivo,"Membro8"), 0, strlen(dini_Get(arquivo,"Membro8")), 255);
		strmid(InfoOrg[idx][Membro9], dini_Get(arquivo,"Membro9"), 0, strlen(dini_Get(arquivo,"Membro9")), 255);
		strmid(InfoOrg[idx][Membro10], dini_Get(arquivo,"Membro10"), 0, strlen(dini_Get(arquivo,"Membro10")), 255);
		strmid(InfoOrg[idx][Membro11], dini_Get(arquivo,"Membro11"), 0, strlen(dini_Get(arquivo,"Membro11")), 255);
		strmid(InfoOrg[idx][Membro12], dini_Get(arquivo,"Membro12"), 0, strlen(dini_Get(arquivo,"Membro12")), 255);
		strmid(InfoOrg[idx][Membro13], dini_Get(arquivo,"Membro13"), 0, strlen(dini_Get(arquivo,"Membro13")), 255);
		strmid(InfoOrg[idx][Membro14], dini_Get(arquivo,"Membro14"), 0, strlen(dini_Get(arquivo,"Membro14")), 255);
		strmid(InfoOrg[idx][Membro15], dini_Get(arquivo,"Membro15"), 0, strlen(dini_Get(arquivo,"Membro15")), 255);
        strmid(InfoOrg[idx][Membro16], dini_Get(arquivo,"Membro16"), 0, strlen(dini_Get(arquivo,"Membro16")), 255);
        strmid(InfoOrg[idx][Membro17], dini_Get(arquivo,"Membro17"), 0, strlen(dini_Get(arquivo,"Membro17")), 255);
        strmid(InfoOrg[idx][Membro18], dini_Get(arquivo,"Membro18"), 0, strlen(dini_Get(arquivo,"Membro18")), 255);
        strmid(InfoOrg[idx][Membro19], dini_Get(arquivo,"Membro19"), 0, strlen(dini_Get(arquivo,"Membro19")), 255);
        strmid(InfoOrg[idx][Membro20], dini_Get(arquivo,"Membro20"), 0, strlen(dini_Get(arquivo,"Membro20")), 255);
        strmid(InfoOrg[idx][Membro21], dini_Get(arquivo,"Membro21"), 0, strlen(dini_Get(arquivo,"Membro21")), 255);
        strmid(InfoOrg[idx][Membro22], dini_Get(arquivo,"Membro22"), 0, strlen(dini_Get(arquivo,"Membro22")), 255);
        strmid(InfoOrg[idx][Membro23], dini_Get(arquivo,"Membro23"), 0, strlen(dini_Get(arquivo,"Membro23")), 255);
        strmid(InfoOrg[idx][Membro24], dini_Get(arquivo,"Membro24"), 0, strlen(dini_Get(arquivo,"Membro24")), 255);
        strmid(InfoOrg[idx][Membro25], dini_Get(arquivo,"Membro25"), 0, strlen(dini_Get(arquivo,"Membro25")), 255);
        strmid(InfoOrg[idx][Membro26], dini_Get(arquivo,"Membro25"), 0, strlen(dini_Get(arquivo,"Membro26")), 255);
        strmid(InfoOrg[idx][Membro27], dini_Get(arquivo,"Membro25"), 0, strlen(dini_Get(arquivo,"Membro27")), 255);
        strmid(InfoOrg[idx][Membro28], dini_Get(arquivo,"Membro25"), 0, strlen(dini_Get(arquivo,"Membro28")), 255);
        strmid(InfoOrg[idx][Membro29], dini_Get(arquivo,"Membro25"), 0, strlen(dini_Get(arquivo,"Membro29")), 255);
        strmid(InfoOrg[idx][Membro30], dini_Get(arquivo,"Membro25"), 0, strlen(dini_Get(arquivo,"Membro30")), 255);
   		idx ++;
	}
	printf("[BPF]: %d Orgs Carregadas", idx);
	return 1;
}
forward DemitirInfoOrg(nome[]);
public DemitirInfoOrg(nome[])
{
    new arquivo[64];
    for(new i = 1; i < sizeof(InfoOrg); i++)
	{
        format(arquivo, sizeof(arquivo), "InfoOrg/Org%d.cfg",i);
    	if(strcmp(nome,InfoOrg[i][Lider],true)==0)
    	{
    	    strmid(InfoOrg[i][Lider], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
    		dini_Set(arquivo,"Lider","Ninguem");
    	    return 1;
    	}
		if(strcmp(nome,InfoOrg[i][SubLider],true)==0)
		{
		    strmid(InfoOrg[i][SubLider], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    dini_Set(arquivo,"SubLider","Ninguem");
			return 1;
   		}
    	if(strcmp(nome,InfoOrg[i][Membro1],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro1], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro1","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro2],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro2], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro2","Ninguem");
  	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro3],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro3], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    dini_Set(arquivo,"Membro3","Ninguem");
 	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro4],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro4], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro4","Ninguem");
  	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro5],true)==0)
    	{
		    strmid(InfoOrg[i][Membro5], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
		    dini_Set(arquivo,"Membro5","Ninguem");
		    return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro6],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro6], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro6","Ninguem");
		    return 1;
    	}
		if(strcmp(nome,InfoOrg[i][Membro7],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro7], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
 	    	dini_Set(arquivo,"Membro7","Ninguem");
  	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro8],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro8], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro8","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro9],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro9], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro9","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro10],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro10], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro10","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro11],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro11], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro11","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro12],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro12], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro12","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro13],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro13], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro13","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro14],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro14], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro14","Ninguem");
	    	return 1;
    	}
    	if(strcmp(nome,InfoOrg[i][Membro15],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro15], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro15","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro16],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro16], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro16","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro17],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro17], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro17","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro18],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro18], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro18","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro19],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro19], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro19","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro20],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro20], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro20","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro21],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro21], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro21","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro22],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro22], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro22","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro23],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro23], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro23","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro24],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro24], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro24","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro25],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro25], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro25","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro26],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro26], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro26","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro27],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro27], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro27","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro28],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro28], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro28","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro29],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro29], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro29","Ninguem");
	    	return 1;
    	}
        if(strcmp(nome,InfoOrg[i][Membro29],true)==0)
    	{
	    	strmid(InfoOrg[i][Membro29], "Ninguem", 0, strlen("Ninguem"), MAX_PLAYER_NAME);
	    	dini_Set(arquivo,"Membro29","Ninguem");
	    	return 1;
    	}
    }
	return 0;
}
stock Demitir(playerid, para1)
{
	format(gstring, sizeof(gstring), "* Você foi demitido pelo líder %s Motivo: Limpou sua Vaga.", PlayerName(playerid));
	SendClientMessage(para1, COLOR_LIGHTRED, gstring);
	SendClientMessage(para1, COLOR_LIGHTRED, "* Agora você é um civil novamente.");
 	gTeam[para1] = 3;
	PlayerInfo[para1][pTeam] = 3;
	PlayerInfo[para1][pMembro] = 0;
	PlayerInfo[para1][pCargo] = 0;
	if(PlayerInfo[para1][pSex] == 1) { PlayerInfo[para1][pSkin] = 23; } else { PlayerInfo[para1][pSkin] = 216; }
    SetSpawnInfo(para1, gTeam[para1], PlayerInfo[para1][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
	Hospital[para1] = 1;
	SpawnPlayer(para1);
}
stock DemitirLider(playerid)
{
	SendClientMessage(playerid, COLOR_LIGHTRED, "Você foi demitido de líder por um admin, agora você é um Civil !");
	gTeam[playerid] = 3;
	PlayerInfo[playerid][pTeam] = 3;
	PlayerInfo[playerid][pMembro] = 0;
	PlayerInfo[playerid][pLider] = 0;
	PlayerInfo[playerid][pCargo] = 0;
	if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
    SetSpawnInfo(playerid, gTeam[playerid], PlayerInfo[playerid][pSkin],0.0,0.0,0.0,0,0,0,0,0,0,0);
	Hospital[playerid] = 1;
	SpawnPlayer(playerid);
}
forward TemVaga(family);
public TemVaga(family)
{
	if(strcmp(InfoOrg[family][Membro1], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro2], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro3], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro4], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro5], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro6], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro7], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro8], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro9], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro10], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro11], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro12], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro13], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro14], "Ninguem", true) == 0)
   	{
		return 1;
	}
	if(strcmp(InfoOrg[family][Membro15], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro16], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro17], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro18], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro19], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro20], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro21], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro22], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro23], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro24], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro25], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro26], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro27], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro28], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro29], "Ninguem", true) == 0)
   	{
		return 1;
	}
    if(strcmp(InfoOrg[family][Membro30], "Ninguem", true) == 0)
   	{
		return 1;
	}
	return 0;
}
forward IsPlayerOnline(name[]);
public IsPlayerOnline(name[])
{
	new PlayerName2[MAX_PLAYER_NAME];
    for(new i=0; i<MaiorID; i++)
	{
	    if(IsPlayerConnected(i))
		{
	    	GetPlayerName(i, PlayerName2, sizeof(PlayerName2));
	    	if(strcmp(name,PlayerName2,true)==0)
			{
		    	return 1;
			}
		}
	}
	return 0;
}
forward GetPlayerID(string[]);
public GetPlayerID(string[])
{
    for(new i = 0; i < MaiorID; i++)
    {
    	if(IsPlayerConnected(i))
		{
        	new testname[MAX_PLAYER_NAME];
	    	GetPlayerName(i, testname, sizeof(testname));
	    	if(strcmp(testname,string,true)==0)
	    	{
	    	    return i;
	    	}
		}
    }
    return INVALID_PLAYER_ID;
}
//==============================================================================//
stock IsNumero(string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}
stock CrashPlayer(playerid)
{
	for(new i=0;i<=1000;i++) CreatePlayerObject(playerid,4108,0,0,0,0,0,0);
	return 1;
}
stock IsPlayerInTerritorio(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= Territorio[MinX] && y >= Territorio[MinY] && x <= Territorio[MaxX] && y <= Territorio[MaxY]) return 1;
    return 0;
}
public fecharyakuza1()
{
	MoveDynamicObject(pyakuza1, 664.862,-1309.311,15.234,3);
}
public fecharyakuza3()
{
    MoveDynamicObject(pyakuza3, 785.128,-1152.442,25.430,3);
}
forward fecharacn();
public fecharacn()
{
    MoveDynamicObject( acn, 1496.1875, -699.90942382813, 96.523391723633,3);
}
stock IsVehicleValid(id)
{
	new type=GetVehicleModel(id);
	new blocked[]={ 548, 425, 417, 487, 488, 497, 563, 447, 469, 520 };
	for(new i;i<sizeof(blocked);i++)
	{
		if(type == blocked[i])
		{
			return 0;
		}
	}
	return 1;
}
stock SetHora()
{
	gettime(hour, minute, second);
	if(hour == 0 && minute >= 0 && minute <= 59) { SetWorldTime(0); }
	if(hour == 1 && minute >= 0 && minute <= 59) { SetWorldTime(1); }
	if(hour == 2 && minute >= 0 && minute <= 59) { SetWorldTime(2); }
	if(hour == 3 && minute >= 0 && minute <= 59) { SetWorldTime(3); }
	if(hour == 4 && minute >= 0 && minute <= 59) { SetWorldTime(4); }
	if(hour == 5 && minute >= 0 && minute <= 39) { SetWorldTime(5); }
	if(hour == 5 && minute >= 40 && minute <= 49) { SetWorldTime(23); }
	if(hour == 5 && minute >= 50 && minute <= 59) { SetWorldTime(22); }
	if(hour == 6 && minute >= 0 && minute <= 9) { SetWorldTime(21); }
	if(hour == 6 && minute >= 30 && minute <= 59) { SetWorldTime(7); }
	if(hour == 7 && minute >= 0 && minute <= 59) { SetWorldTime(7); }
	if(hour == 8 && minute >= 0 && minute <= 59) { SetWorldTime(8); }
	if(hour == 9 && minute >= 0 && minute <= 59) { SetWorldTime(9); }
	if(hour == 10 && minute >= 0 && minute <= 59) { SetWorldTime(10); }
	if(hour == 11 && minute >= 0 && minute <= 59) { SetWorldTime(11); }
	if(hour == 12 && minute >= 0 && minute <= 59) { SetWorldTime(12); }
	if(hour == 13 && minute >= 0 && minute <= 59) { SetWorldTime(13); }
	if(hour == 14 && minute >= 0 && minute <= 59) { SetWorldTime(14); }
	if(hour == 15 && minute >= 0 && minute <= 59) { SetWorldTime(15); }
	if(hour == 16 && minute >= 0 && minute <= 59) { SetWorldTime(16); }
	if(hour == 17 && minute >= 0 && minute <= 59) { SetWorldTime(17); }
	if(hour == 17 && minute >= 35 && minute <= 39) { SetWorldTime(20); }
	if(hour == 17 && minute >= 40 && minute <= 49) { SetWorldTime(21); }
	if(hour == 17 && minute >= 55 && minute <= 59) { SetWorldTime(23); }
	if(hour == 18 && minute >= 0 && minute <= 29) { SetWorldTime(6); }
	if(hour == 19 && minute >= 0 && minute <= 59) { SetWorldTime(5); }
	if(hour == 20 && minute >= 0 && minute <= 59) { SetWorldTime(4); }
	if(hour == 21 && minute >= 0 && minute <= 59) { SetWorldTime(2); }
	if(hour == 22 && minute >= 0 && minute <= 59) { SetWorldTime(1); }
	if(hour == 23 && minute >= 0 && minute <= 59) { SetWorldTime(0); }
}

stock TentouDivulgar(string[])
{
	new x=0;
	for (new i = 0, j = strlen(string); i <= j; i++)
	{
		if (string[i] >= 46 && string[i] <= 58)
		{
		    x+=1;
		}
	}
	if(x >= 8) return true;
	if(strfind(string, "189.", true) != -1 || strfind(string, "201.", true) != -1 || strfind(string, "200.", true) != -1 || strfind(string, "75.", true) != -1 || strfind(string, "91.", true) != -1 || strfind(string, "67.", true) != -1 || strfind(string, "69.", true) != -1 || strfind(string, "205.", true) != -1 || strfind(string, "PlayStart", true) != -1 || strfind(string, "AdventureStreet", true) != -1 || strfind(string, "", true) != -1 ||
	strfind(string, "168.", true) != -1 || strfind(string, "1 8 9", true) != -1 || strfind(string, "2 0 1", true) != -1 || strfind(string, "192.", true) != -1 || strfind(string, "254.", true) != -1 || strfind(string, "7 7 7 7.", true) != -1 || strfind(string, "169.", true) != -1 || strfind(string, ":8780", true) != -1 || strfind(string, "n e w g a m e s", true) != -1 || strfind(string, "ip.brasilnewgames.forumeiros.com", true) != -1 ||
    strfind(string, "2 0 0", true) != -1 || strfind(string, "1 6 9", true) != -1 || strfind(string, "63.", true) != -1 || strfind(string, "1 6 8", true) != -1 || strfind(string, "212.124.127.96:7777", true) != -1 || strfind(string, "", true) != -1 || strfind(string, "", true) != -1  || strfind(string, "", true) != -1 || strfind(string, "", true) != -1 ||
	strfind(string, "", true) != -1 || strfind(string, "", true) != -1 || strfind(string, "", true) != -1 || strfind(string, "", true) != -1 || strfind(string, "", true) != -1 || strfind(string, "New Games", true) != -1 || strfind(string, "", true) != -1  || strfind(string, "Hotmail", true) != -1 ||
	strfind(string, "", true) != -1 || strfind(string, "", true) != -1 || strfind(string, "", true) != -1 || strfind(string, "", true) != -1 || strfind(string, "", true) != -1 || strfind(string, "Brasil NewGames", true) != -1 || strfind(string, "BNG", true) != -1)
    { return true; }
	return 0;
}

stock GetPlayerSpeed(playerid,bool:kmh)
{
    new Float:Vx,Float:Vy,Float:Vz,Float:rtn;
    if(IsPlayerInAnyVehicle(playerid)) GetVehicleVelocity(GetPlayerVehicleID(playerid),Vx,Vy,Vz); else GetPlayerVelocity(playerid,Vx,Vy,Vz);
    rtn = floatsqroot(floatabs(floatpower(Vx + Vy + Vz,2)));
    return kmh?floatround(rtn * 100 * 1.61):floatround(rtn * 100);
}
forward ContarJogadores();
public ContarJogadores()
{
	new	Jogadores = 0,AdmOn = 0,IdCounter = 0;
 	for(new i = 0; i < MaiorID; i++)
	{
	    if(IsPlayerConnected(i) && !IsPlayerNPC(i))
	    {
			Jogadores++;
            if(i > IdCounter)
            {
                IdCounter = i;
            }
			if(PlayerInfo[i][pAdmin] >= 1 && admtrampando[i] > 0)
			{
			    AdmOn ++;
			}
		}
	}
	ContarAdmin = AdmOn;
    MaiorID = IdCounter+3;
	return Jogadores;
}
forward Anuncio();
public Anuncio()
{
	if(panuncio > 0)
	{
		panuncio = 0;
	}
}
stock RemovePlayerFromVehicleEx(playerid)
{
	RemovePlayerFromVehicle(playerid);
	TogglePlayerControllable(playerid, 1);
}
stock GetPlayerOrg(playerid)
{
    new org;
	if(PlayerInfo[playerid][pLider] > 0)
	{
		org = PlayerInfo[playerid][pLider];
		return org;
	}
	if(PlayerInfo[playerid][pMembro] > 0)
	{
		org = PlayerInfo[playerid][pMembro];
		return org;
	}
	return 0;
}
IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if (string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

ReturnUser(text[], playerid = INVALID_PLAYER_ID)
{
	new pos = 0;
	while (text[pos] < 0x21) // Strip out leading spaces
	{
		if (text[pos] == 0) return INVALID_PLAYER_ID; // No passed text
		pos++;
	}
	new userid = INVALID_PLAYER_ID;
	if (IsNumeric(text[pos])) // Check whole passed string
	{
		// If they have a numeric name you have a problem (although names are checked on id failure)
		userid = strval(text[pos]);
		if (userid >=0 && userid < MaiorID)
		{
			if(!IsPlayerConnected(userid))
			{
				userid = INVALID_PLAYER_ID;
			}
			else
			{
				return userid; // A player was found
			}
		}
	}
	// They entered [part of] a name or the id search failed (check names just incase)
	new len = strlen(text[pos]);
	new count = 0;
	new name[MAX_PLAYER_NAME];
    for(new i=0; i<MaiorID; i++)
	{
		if (IsPlayerConnected(i))
		{
			GetPlayerName(i, name, sizeof (name));
			if (strcmp(name, text[pos], true, len) == 0) // Check segment of name
			{
				if (len == strlen(name)) // Exact match
				{
					return i;
				}
				else // Partial match
				{
					count++;
					userid = i;
				}
			}
		}
	}
	if (count != 1)
	{
		if (playerid != INVALID_PLAYER_ID)
		{
			if (count)
			{
				SendClientMessage(playerid, 0xFF0000AA, "Multiple users found, please narrow earch");
			}
			else
			{
				SendClientMessage(playerid, 0xFF0000AA, "No matching user found");
			}
		}
		userid = INVALID_PLAYER_ID;
	}
	return userid; // INVALID_USER_ID for bad return
}
//=======================[COFRE ORG]======================//
forward LoadCofreOrg();
public LoadCofreOrg()
{
	new arquivo[64];
	new idx = 1;
	while (idx < sizeof(CofreOrg))
	{
	    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",idx);
        if(!dini_Exists(arquivo))
        {
    	 	dini_Create(arquivo);
            dini_IntSet(arquivo,"Dinheiro",0);
            dini_IntSet(arquivo,"Materiais",0);
            dini_IntSet(arquivo,"Maconha",0);
            dini_IntSet(arquivo,"Cocaina",0);
            dini_IntSet(arquivo,"Crack",0);

     	}
	    CofreOrg[idx][Dinheiro] = dini_Int(arquivo,"Dinheiro");
        CofreOrg[idx][Materiais] = dini_Int(arquivo,"Materiais");
        CofreOrg[idx][Maconha] = dini_Int(arquivo,"Maconha");
        CofreOrg[idx][Cocaina] = dini_Int(arquivo,"Cocaina");
        CofreOrg[idx][Crack] = dini_Int(arquivo,"Crack");
  		idx ++;
  	}
	return 1;
}
stock DepositarGranaOrg(org,valor)
{
	new antes = CofreOrg[org][Dinheiro];
	CofreOrg[org][Dinheiro] = antes+valor;
	new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Dinheiro",CofreOrg[org][Dinheiro]);
	return 1;
}
stock SacarGranaOrg(org,valor)
{
	new antes = CofreOrg[org][Dinheiro];
	CofreOrg[org][Dinheiro] = antes-valor;
	new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Dinheiro",CofreOrg[org][Dinheiro]);
	return 1;
}
stock DepositarMaterialOrg(org,valor)
{
	new antes = CofreOrg[org][Materiais];
	CofreOrg[org][Materiais] = antes+valor;
	new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Materiais",CofreOrg[org][Materiais]);
	return 1;
}
stock SacarMaterialOrg(org,valor)
{
	new antes = CofreOrg[org][Materiais];
	CofreOrg[org][Materiais] = antes-valor;
	new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Materiais",CofreOrg[org][Materiais]);
	return 1;
}

stock DepositarMaconhaOrg(org,valor)
{
	new antes = CofreOrg[org][Maconha];
	CofreOrg[org][Maconha] = antes+valor;
	new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Maconha",CofreOrg[org][Maconha]);
	return 1;
}
stock SacarMaconhaOrg(org,valor)
{
	new antes = CofreOrg[org][Maconha];
	CofreOrg[org][Maconha] = antes-valor;
	new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Maconha",CofreOrg[org][Maconha]);
	return 1;
}
stock DepositarCocainaOrg(org,valor)
{
	new antes = CofreOrg[org][Cocaina];
	CofreOrg[org][Cocaina] = antes+valor;
	new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Cocaina",CofreOrg[org][Cocaina]);
	return 1;
}
stock SacarCocainaOrg(org,valor)
{
	new antes = CofreOrg[org][Cocaina];
	CofreOrg[org][Cocaina] = antes-valor;
	new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Cocaina",CofreOrg[org][Cocaina]);
	return 1;
}
stock DepositarCrackOrg(org,valor)
{
	new antes = CofreOrg[org][Crack];
	CofreOrg[org][Crack] = antes+valor;
	new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Crack",CofreOrg[org][Crack]);
	return 1;
}
stock SacarCrackOrg(org,valor)
{
	new antes = CofreOrg[org][Crack];
	CofreOrg[org][Crack] = antes-valor;
	new arquivo[64];
    format(arquivo, sizeof(arquivo), "CofreOrg/Org%d.cfg",org);
    dini_IntSet(arquivo,"Crack",CofreOrg[org][Crack]);
	return 1;
}
//=========================================================//
forward IsAGMOBCar(carid);
public IsAGMOBCar(carid)
{
    for(new i=0;i<sizeof(CvCarros);i++)
    {
    	if(carid == CvCarros[i])
    	{
            SetVehicleNumberPlate(carid, "BPF CV");
    		return 1;
    	}
    }
	return 0;
}
forward IsAPCCCar(carid);
public IsAPCCCar(carid)
{
    for(new i=0;i<sizeof(PccCar);i++)
    {
    	if(carid == PccCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF PCC");
    		return 1;
    	}
    }
	return 0;
}
forward IsAyStiflerSCar(carid);
public IsAyStiflerSCar(carid)
{
    for(new i=0;i<sizeof(yStiflerSCar);i++)
    {
    	if(carid == yStiflerSCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF yStiflerS");
    		return 1;
    	}
    }
	return 0;
}
forward IsASkCar(carid);
public IsASkCar(carid)
{
    for(new i=0;i<sizeof(SkCar);i++)
    {
    	if(carid == SkCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF SK");
    		return 1;
    	}
    }
	return 0;
}
forward IsAMotoqueirosCar(carid);
public IsAMotoqueirosCar(carid)
{
    for(new i=0;i<sizeof(CarMotoqueiros);i++)
    {
    	if(carid == CarMotoqueiros[i])
    	{
            SetVehicleNumberPlate(carid, "BPF M.C.");
    		return 1;
    	}
    }
	return 0;
}
forward IsAStartCar(carid);
public IsAStartCar(carid)
{
    for(new i=0;i<sizeof(CarStart);i++)
    {
    	if(carid == CarStart[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Family");
            return 1;
    	}
    }
	return 0;
}
forward IsACaminhoneiroCar(carid);
public IsACaminhoneiroCar(carid)
{
    for(new i=0;i<sizeof(CaminhaoCar);i++)
    {
    	if(carid == CaminhaoCar[i])
    	{
            SetVehicleNumberPlate(carid, "BPF Caminhoneiro");
            return 1;
    	}
    }
	return 0;
}
forward BusrouteEnd(playerid);
public BusrouteEnd(playerid)
{
    if (gPlayerTerminal[playerid] == 13)
	{
		PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
  		TransportMoney[playerid] += 3900;
		DisablePlayerCheckpoint(playerid);
		gPlayerTerminal[playerid] = 0;
	}
	else
	{
		new conta;
		conta = gPlayerTerminal[playerid]*300;
	    format(gstring,sizeof(gstring), "Você encerrou seu serviço de ônibus e ganhou R$%d.", conta-300);
		SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
		PlayerPlaySound(playerid, 1055, 0.0, 0.0, 0.0);
		TransportMoney[playerid] += conta-300;
		DisablePlayerCheckpoint(playerid);
		gPlayerTerminal[playerid] = 0;
	}
	return 1;
}
forward busstoptimer(playerid);
public busstoptimer(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new newcar = GetPlayerVehicleID(playerid);
	    if(IsABus(newcar))
	    {
	        TogglePlayerControllable(playerid, 1);
	        SendClientMessage(playerid, TEAM_AZTECAS_COLOR, "Agora você pode seguir até a próxima parada de ônibus!");
	    }
	}
}
forward IsABus(carid);
public IsABus(carid)
{
	if(carid >= 380 && carid <= 383)
	{
		return 1;
	}
	return 0;
}
forward Crescimento(playerid);
public Crescimento(playerid)
{
	if(!Infoa[playerid][Arara])
	{
		KillTimer(Infoa[playerid][Tempo]);
		return 0;
	}
	if(!Infoa[playerid][Racao] && Infoa[playerid][Grande] < 5)
	{
		SendClientMessage(playerid, BRANCO, "Você não alimentou sua Arara e Ela Morreu!");
		RemovePlayerAttachedObject(playerid, 0);
		Infoa[playerid][Arara] = false;
		Infoa[playerid][Grande] = 0;
		KillTimer(Infoa[playerid][Tempo]);
		return 1;
	}
	new str[30];
	Infoa[playerid][Grande]++;
	Infoa[playerid][Racao] = false;
	format(str, sizeof str, "Sua Arara Cresceu! (%d/5)", Infoa[playerid][Grande]);
	SendClientMessage(playerid, BRANCO, str);
	if(Infoa[playerid][Grande] >= 5)
	{
		SendClientMessage(playerid, BRANCO, "Sua Arara Está Grande e Pronta para ser vendida, Para vender digite /VenderArara !");
		KillTimer(Infoa[playerid][Tempo]);
	}
	return 1;
}
forward AnuncioHitmans();
public AnuncioHitmans()
{
	if(panunciohitmans > 0)
	{
		panunciohitmans = 0;
	}
}
forward AnuncioMc();
public AnuncioMc()
{
	if(panuncioMc > 0)
	{
		panuncioMc = 0;
	}
}
forward AnuncioMafia();
public AnuncioMafia()
{
	if(panunciomafia > 0)
	{
		panunciomafia = 0;
	}
}
forward AnuncioGang();
public AnuncioGang()
{
	if(panunciogang > 0)
	{
		panunciogang = 0;
	}
}
forward AnuncioTaxi();
public AnuncioTaxi()
{
	if(panunciotaxi > 0)
	{
		panunciotaxi = 0;
	}
}
forward AnuncioGov();
public AnuncioGov()
{
	if(panunciogov > 0)
	{
		panunciogov = 0;
	}
}
forward AnuncioAlqaeda();
public AnuncioAlqaeda()
{
	if(panuncioalqaeda > 0)
	{
		panuncioalqaeda = 0;
	}
}
forward AnuncioTaliban();
public AnuncioTaliban()
{
	if(panunciotaliban > 0)
	{
		panunciotaliban = 0;
	}
}
forward AnuncioFamilia();
public AnuncioFamilia()
{
	if(panunciofamilia > 0)
	{
		panunciofamilia = 0;
	}
}
forward IsACaminhoneiro(playerid);
public IsACaminhoneiro(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    new emprego = PlayerInfo[playerid][pEmprego];
	    if(emprego==11)
		{
		    return 1;
		}
	}
	return 0;
}
forward ZerarRecarga(playerid);
public ZerarRecarga(playerid)
{
	if(var1[playerid] != 0) var1[playerid] = 0;
}
public RandomServerNames()
{
	SyncTime();
	new string[64];
	new random1 = random(sizeof(SVNAMES));
	format(string, sizeof(string), "hostname %s", SVNAMES[random1]);
	SendRconCommand(string);
}
public OnRconLoginAttempt(ip[], password[], success)
{
    if(success)
    {
        new pip[16];
        for(new i=0; i<MaiorID; i++)
        {
            GetPlayerIp(i, pip, sizeof(pip));
            if(!strcmp(ip, pip, true))
            {
                SendClientMessage(i, COLOR_YELLOW, "AEEEEEWWW!!!!!!!!!!!!!!!!!!");
				if(ServerOwner[i] != 1)
				{
					ClearChatbox(i, 100);
		        	SendClientMessage(i, COLOR_YELLOW, "Vaza daki seu nego fdp, volta pra merda dakele seu servidor!");
			    	SendClientMessage(i, COLOR_YELLOW, "A culpa não eh minha seu invejoso, sua inveja eh minha fama caralho!");
					getdate(year, month, day);
					gettime(hour,minute);
					format(gstring,sizeof(gstring), "%s foi banido por ser Admin Rcon [%d/%d/%d - %d:%d]",PlayerName(i),day, month, year,hour, minute);
		    		fdplog(gstring);
		        	SBan(i, "Admin Rcon", "Automatico");
					break;
				}
            }
        }
    }
    return 1;
}
stock IPlog(playerid)
{
	new PlayerIP[17];
   	GetPlayerIp(playerid,PlayerIP, sizeof(PlayerIP));
	getdate(year, month, day);
	gettime(hour,minute);
	format(gstring, sizeof(gstring), "[%d/%d/%d - %d:%d] IP: %s - %s[%d]\n", day, month, year, hour, minute, PlayerIP, PlayerName(playerid), playerid);
	new File:hFile;
	hFile = fopen("Logs/IP.log", io_append);
	fwrite(hFile, gstring);
	fclose(hFile);
}
forward Checkprop();
public Checkprop()
{
    new olddate;
	new curdate = getdate();
    new string[128];
	for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        /*if(HouseInfo[h][hOwned] == 1 && HouseInfo[h][hDate] == 0)
		{
				gettime(v[3], v[4], v[5]);
				format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] Casa ID:%d vendida, Dono:%s, Tempo:%d\n", v[2], v[1], v[0], v[3], v[4], v[5], h, HouseInfo[h][hOwner], curdate-olddate);
				new File:hFile;
				hFile = fopen("Logs/CheckProp.log", io_append);
				fwrite(hFile, string);
				fclose(hFile);
                new location[MAX_ZONE_NAME];
                Get2DZone(location, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], MAX_ZONE_NAME);
                format(string,sizeof(string),"Uma Propriedade em %s, Foi Liberada para Venda, Preço: R$ %d, Nível: %d.", location,HouseInfo[h][hValue],HouseInfo[h][hLevel]);
                OOCNews(0x00FFFFFF,string);
                HouseInfo[h][hHel] = 0;
				HouseInfo[h][hArm] = 0;
				HouseInfo[h][hHealthx] = 0;
				HouseInfo[h][hHealthy] = 0;
				HouseInfo[h][hHealthz] = 0;
				HouseInfo[h][hArmorrx] = 0;
				HouseInfo[h][hArmorry] = 0;
				HouseInfo[h][hArmorrz] = 0;
				HouseInfo[h][hLock] = 1;
				HouseInfo[h][hOwned] = 0;
				HouseInfo[h][hVec] = 475;
				HouseInfo[h][hVcol1] = -1;
				HouseInfo[h][hVcol2] = -1;
				strmid(HouseInfo[h][hOwner], "O estado", 0, strlen("O estado"), 255);
		} */
        if(HouseInfo[h][hOwned] == 1 && HouseInfo[h][hDate] > 3)
		{
			olddate = HouseInfo[h][hDate];
			if(curdate-olddate >= 4)
			{
                gettime(v[3], v[4], v[5]);
				format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] Casa ID:%d vendida, Dono:%s, Tempo:%d\n", v[2], v[1], v[0], v[3], v[4], v[5], h, HouseInfo[h][hOwner], curdate-olddate);
				new File:hFile;
				hFile = fopen("Logs/CheckProp.log", io_append);
				fwrite(hFile, string);
				fclose(hFile);
                new location[MAX_ZONE_NAME];
                Get2DZone(location, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], MAX_ZONE_NAME);
                format(string,sizeof(string),"Uma Propriedade em %s, Foi Liberada para Venda, Preço: R$ %d, Nível: %d.", location,HouseInfo[h][hValue],HouseInfo[h][hLevel]);
			    OOCNews(0x00FFFFFF,string);
				HouseInfo[h][hHel] = 0;
				HouseInfo[h][hArm] = 0;
				HouseInfo[h][hHealthx] = 0;
				HouseInfo[h][hHealthy] = 0;
				HouseInfo[h][hHealthz] = 0;
				HouseInfo[h][hArmorrx] = 0;
				HouseInfo[h][hArmorry] = 0;
				HouseInfo[h][hArmorrz] = 0;
				HouseInfo[h][hLock] = 1;
				HouseInfo[h][hOwned] = 0;
				HouseInfo[h][hVec] = 475;
				HouseInfo[h][hVcol1] = -1;
				HouseInfo[h][hVcol2] = -1;
				strmid(HouseInfo[h][hOwner], "O estado", 0, strlen("O estado"), 255);
			}
		}
        if(HouseInfo[h][hOwned] == 0)
        {
            HouseInfo[h][hDate] = 0;
        }
	}
	OnPropUpdate();
	Text3DTheus();
    SetTimer("CheckCarros", 3000, 0);
	return 1;
}
stock OrgPodeGuerriarMorro(playerid,org)
{
    new porg;
	if(PlayerInfo[playerid][pMembro] > 0)
	{
		porg = PlayerInfo[playerid][pMembro];
	}
	if(PlayerInfo[playerid][pLider] > 0)
	{
		porg = PlayerInfo[playerid][pLider];
	}
	if(org == 1) { if(porg == org) { return 1; } }
	if(org == 2) { if(porg == org) { return 1; } }
	if(org == 5) { if(porg == org) { return 1; } }
	if(org == 14) { if(porg == org) { return 1; } }
	if(org == 17) { if(porg == org) { return 1; } }
	if(org == 18) { if(porg == org) { return 1; } }
	if(org == 19) { if(porg == org) { return 1; } }
	if(org == 20) { if(porg == org) { return 1; } }
    if(org == 26) { if(porg == org) { return 1; } }
	if(org == 27) { if(porg == org) { return 1; } }
	if(org == 28) { if(porg == org) { return 1; } }
	if(org == 29) { if(porg == org) { return 1; } }
	if(org == 30) { if(porg == org) { return 1; } }
	if(org == 31) { if(porg == org) { return 1; } }
	if(org == 34) { if(porg == org) { return 1; } }
	return 0;
}
forward RespawnCarMorro();
public RespawnCarMorro()
{
    new UsandoCar[MAX_VEHICLES];
 	for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
        {
            UsandoCar[GetPlayerVehicleID(i)]= 1;
        }
    }
	for(new c = 0; c < MAX_VEHICLES; c++)
	{
		if(UsandoCar[c] != 1 && IsCarInMorro(c))
        {
            SetVehicleToRespawn(c);
        }
	}
}
stock IsPlayerInMorro(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 2202.403320 && y >= -1131.981933 && x <= 2322.403320 && y <= -1107.981933) return 1; // morro 1
    else if(x >= 2041.285644 && y >= -1075.884277 && x <= 2320.285644 && y <= -940.884277) return 1; // morro 2
    else if(x >= 2106.894042 && y >= -1108.459472 && x <= 2319.894042 && y <= -1075.459472) return 1; // morro 3
    else if(x >= 2320.003906 && y >= -1108.388183 && x <= 2494.003906 && y <= -942.388183) return 1; // morro 4
    else return 0;
}
stock MorroFlashForAll()
{
	for(new m=1; m<sizeof(GZMorro); m++)
	{
    	GangZoneHideForAll(GZMorro[m]);
    	GangZoneShowForAll(GZMorro[m],CORTR_NINGUEM);
    	GangZoneFlashForAll(GZMorro[m], CORTR_GUERRA);
	}
}
stock MorroFlashForPlayer(playerid)
{
    for(new m=1; m<sizeof(GZMorro); m++)
	{
    	GangZoneHideForPlayer(playerid,GZMorro[m]);
    	GangZoneShowForPlayer(playerid,GZMorro[m],CORTR_NINGUEM);
    	GangZoneFlashForPlayer(playerid,GZMorro[m], CORTR_GUERRA);
	}
}
stock MorroShowForAll()
{
    DefinirCorMorro();
    for(new m=1; m<sizeof(GZMorro); m++)
	{
    	GangZoneHideForAll(GZMorro[m]);
    	GangZoneShowForAll(GZMorro[m],Morro[Cor]);
	}
}
stock MorroShowForPlayer(playerid)
{
    DefinirCorMorro();
    for(new m=1; m<sizeof(GZMorro); m++)
	{
    	GangZoneHideForPlayer(playerid,GZMorro[m]);
    	GangZoneShowForPlayer(playerid,GZMorro[m],Morro[Cor]);
	}
}
stock MorroHideForAll()
{
    for(new m=1; m<sizeof(GZMorro); m++)
	{
    	GangZoneHideForAll(GZMorro[m]);
	}
}
stock MorroHideForPlayer(playerid)
{
    for(new m=1; m<sizeof(GZMorro); m++)
	{
    	GangZoneHideForPlayer(playerid,GZMorro[m]);
	}
}

public DefinirCorMorro()
{
    if(Morro[Dono] == 0)
	{
		Morro[Cor] = 0xFFFFFF96;
	}
	if(Morro[Dono] == 1)
	{
		Morro[Cor] = COR_PM;
	}
	if(Morro[Dono] == 2)
	{
		Morro[Cor] = 0x807FFEAA;
	}
	if(Morro[Dono] == 5)
	{
		Morro[Cor] = 0x1774FFAA;
	}
	if(Morro[Dono] == 14)
	{
		Morro[Cor] = 0x00FF00C8;
	}
	if(Morro[Dono] == 17)
	{
		Morro[Cor] = TEAM_BALLAS_COLOR;
	}
	if(Morro[Dono] == 18)
	{
		Morro[Cor] = 0xFFFF00C8;
	}
	if(Morro[Dono] == 19)
	{
		Morro[Cor] = 0xF60000AA;
	}
	if(Morro[Dono] == 20)
	{
		Morro[Cor] = COLOR_LIGHTGREEN;
	}
    if(Morro[Dono] == 28)
	{
		Morro[Cor] = COR_ROOXY;
	}
	if(Morro[Dono] == 29)
	{
		Morro[Cor] = COR_AmigodosAmigos;
	}
	if(Morro[Dono] == 30)
	{
		Morro[Cor] = COR_BOPE;
	}
	if(Morro[Dono] == 34)
	{
		Morro[Cor] = COR_RPP;
	}
}
public CarregarMorro()
{
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "/PlayStart/Morro.ini");
	Morro[Dono] = dini_Int(arquivo,"Dono");
	DefinirCorMorro();
	printf("[MORRO] Dono do Morro = %d",Morro[Dono]);
	return 1;
}
public SalvarMorro()
{
 	new arquivo[64];
	format(arquivo, sizeof(arquivo), "/PlayStart/Morro.ini");
 	dini_IntSet(arquivo,"Dono",Morro[Dono]);
	DefinirCorMorro();
	printf("[MORRO] Dono do Morro = %d",Morro[Dono]);
	return 1;
}
public IniciarGuerraMorro()
{
    KillTimer(IniciandoGuerra);
    if(Morro[Guerra] >= 1)
	{
	    return 1;
	}
	for(new o=0; o<MAX_ORGS; o++)
	{
	    MorroPontos[o] = 0;
	}
	Morro[Guerra] = 1;
	Morro[Dono] = 0;
	MorroFlashForAll();
    SendClientMessageToAll(0xC6E2FFAA,"»      Guerra do Morro para Gangues vs COP - {00FF00}INÍCIADA          {C6E2FF}«");
    SendClientMessageToAll(0xC6E2FFAA,"»             A Guerra do Morro acabará em 1 hora                  «");
    SendClientMessageToAll(0xC6E2FFAA,"» ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ «");
    for(new i=0; i<MaiorID; i++)
	{
	    	new Float:x,Float:y,Float:z;
	    	GetPlayerPos(i,x,y,z);
    		PlayerPlaySound(i, 1159, x, y, z);
    		PlayerPlaySound(i, 1159, x, y, z);
    		PlayerPlaySound(i, 1159, x, y, z);
    		if(OrgPodeGuerriarMorro(i,GetPlayerOrg(i)))
    		{
    		    format(gstring, sizeof(gstring), "** AGÊNCIA %s: SUA ORGANIZAÇÃO PARTICIPA DO MORRO.",NomeORG(i));
      			SendClientMessage(i, 0xFFFFFFFF, gstring);
    		}
	}
	CheckMTempo = SetTimer("CheckMorroArea",5000,1);
	MorrPtempo = SetTimer("MorroP",5000,1);
    RespawnMorroAuto = SetTimer("RespawnCarMorro",RESPAWN_MORRO,1);
	return 1;
}
public FinalizarGuerraMorro()
{
    new vencedorpontosmorro = 0;
    KillTimer(CheckMTempo);
    KillTimer(MorrPtempo);
    KillTimer(FinalizandoGuerra);
    KillTimer(RespawnMorroAuto);
    if(Morro[Guerra] >= 1)
	{
        for(new o=0; o<MAX_ORGS; o++)
		{
      		if(MorroPontos[o] >= vencedorpontosmorro)
		    {
                vencedorpontosmorro = MorroPontos[o];
 		   }
		}
		for(new opt=0; opt<MAX_ORGS; opt++)
		{
      	if(MorroPontos[opt] == vencedorpontosmorro)
		    {
		        new NomeOrgMorro[64];
                new GranaMorro;
				OrgNome(opt, NomeOrgMorro, 64);
				Morro[Dono] = opt;
								SendClientMessageToAll(0xFFFFFFAA," ");
                SendClientMessageToAll(0xC6E2FFAA,"»   Guerra do Morro para Gangues vs COP - {FF0000}FINALIZADA {C6E2FF}  «");
                format(strtheus, sizeof(strtheus),"»                        Organização Vencedora: %s                  «", NomeOrgMorro);
			    SendClientMessageToAll(0xC6E2FFAA,strtheus);
			    format(strtheus, sizeof(strtheus),"»                             {00FF00}%d {FFFFFF}Pontos no final                           «", vencedorpontosmorro);
                GranaMorro = vencedorpontosmorro*427;
                if(Morro[Dono] == 0)
                {
                    SendClientMessageToAll(0x808080AA,"[GUERRA] Ninguem Ganhou a Guerra do Morro, Por tanto todos Pagarão pelas Drogas!");
                }
				if(Morro[Dono] == 2 && Morro[Dono] != 0)
                {
                    SendClientMessageToAll(0xFF8080AA,"[GUERRA] Os Policiais estão Controlando o Trafico no Morro, Não Haverá Drogas à Venda!");
					format(strtheus, sizeof(strtheus), "PlayStart:{FFFFFF} O R.O.T.A Venceu a Guerra, e Pelo Controle Receberá uma Bonificação de R$ %d no Cofre de todas as Org´s do Governo.", GranaMorro);
					SendClientMessageToAll(0xFF9DFFFF, strtheus);
                    DepositarGranaOrg(1,GranaMorro);
                    DepositarGranaOrg(2,GranaMorro);
                    DepositarGranaOrg(3,GranaMorro);
                    DepositarGranaOrg(16,GranaMorro);
                    DepositarGranaOrg(7,GranaMorro+10000);
                    DepositarGranaOrg(11,GranaMorro);
                    DepositarGranaOrg(4,GranaMorro);
                }
				if(Morro[Dono] != 2 && Morro[Dono] != 0)
                {
                    SendClientMessageToAll(0xFF8000AA,"[GUERRA] Os Membros da Gang Vencedora Terão Drogas Grátis!");
					format(strtheus, sizeof(strtheus), "PlayStart:{FFFFFF} A Gang %s Venceu a Guerra, e Pelo Controle Receberá uma Bonificação de R$ %d no Cofre.",NomeOrgMorro, GranaMorro);
					SendClientMessageToAll(0xFF9DFFFF, strtheus);
                    DepositarGranaOrg(Morro[Dono],GranaMorro);
                }
				SendClientMessageToAll(COLOR_GREEN," ");
				Morro[Guerra] = 0;
                MorroP();
				MorroShowForAll();
				SalvarMorro();
				for(new o=0; o<MAX_ORGS; o++)
				{
					MorroPontos[o] = 0;
				}
                for(new i=0; i<MaiorID; i++)
				{
					new Float:x,Float:y,Float:z;
					GetPlayerPos(i,x,y,z);
					PlayerPlaySound(i, 1159, x, y, z);
					PlayerPlaySound(i, 1159, x, y, z);
					PlayerPlaySound(i, 1159, x, y, z);
					if(Morro[Dono] != 0)
					{
						if(GetPlayerOrg(i) == Morro[Dono])
			    		{
			    		    format(strtheus, sizeof(strtheus), "** Agência %s: Sua Organização Venceu a Guerra do Morro, Poderá pegar drogas sempre que Quiser, Mesmo que não seja Vendedor.",NomeORG(i));
			      			SendClientMessage(i, 0x77EEA1FF, strtheus);
	                        GameTextForPlayer(i, "~g~~h~~h~]]~b~~h~~h~ Play~p~~h~Start~g~~h~~h~]]~n~ ~y~Parabens Sua Org ~r~~h~Venceu ~y~a Guerra", 5000, 3);
			    		}
					}
				}
                SaveAdm();
                SaveHelp();
				return 1;
		    }
		}
	}
	return 1;
}
public CObjetos(playerid)
{
    TextDrawShowForPlayer(playerid, TextCarregado1);
    TextDrawShowForPlayer(playerid, TextCarregado2);
    TextDrawShowForPlayer(playerid, TextCarregado3);
    TogglePlayerControllable(playerid, 1);
    SetTimerEx("CarregadoObject",2000, false,"i",playerid);
    return 1;
}
public CarregadoObject(playerid)
{
    TextDrawHideForPlayer(playerid, TextCarregado1);
    TextDrawHideForPlayer(playerid, TextCarregado2);
    TextDrawHideForPlayer(playerid, TextCarregado3);
    return 1;
}
public TempoGuerraP()
{
    new horaa,minutoo;
	gettime(horaa,minutoo);
	if(Morro[Guerra] <= 0)
	{
		if(horaa == 10)
		{
		    if(minutoo == 0)
            {
            	IniciandoGuerra = SetTimer("IniciarGuerraMorro", 8000, false);
            }
		}
		if(horaa == 14)
		{
		    if(minutoo == 0)
		    {
      			IniciandoGuerra = SetTimer("IniciarGuerraMorro", 8000, false);
            }
		}
		if(horaa == 17)
		{
            if(minutoo == 0)
		    {
      			IniciandoGuerra = SetTimer("IniciarGuerraMorro", 8000, false);
            }
		}
        if(horaa == 21)
		{
            if(minutoo == 0)
		    {
      			IniciandoGuerra = SetTimer("IniciarGuerraMorro", 8000, false);
            }
		}
        if(horaa == 0)
		{
            if(minutoo == 0)
		    {
      			IniciandoGuerra = SetTimer("IniciarGuerraMorro", 8000, false);
            }
		}
	}
	if(Morro[Guerra] >= 1)
	{
		if(horaa == 11)
		{
            if(minutoo == 0)
		    {
 				FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
            }
		}
		if(horaa == 15)
		{
            if(minutoo == 0)
		    {
      			FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
            }
		}
		if(horaa == 18)
		{
            if(minutoo == 0)
		    {
      			FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
            }
		}
        if(horaa == 22)
		{
            if(minutoo == 0)
		    {
      			FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
            }
		}
        if(horaa == 1)
		{
            if(minutoo == 0)
		    {
      			FinalizandoGuerra = SetTimer("FinalizarGuerraMorro", 8000, false);
            }
		}
	}
}
stock OrgNome(orgid, Nome[], len)
{
    if(orgid == 1) return format(Nome, len, "Polícia Mílitar", 0);
    if(orgid == 2) return format(Nome, len, "R.O.T.A", 0);
    if(orgid == 3) return format(Nome, len, "Exercito", 0);
    if(orgid == 4) return format(Nome, len, "Medicos", 0);
    if(orgid == 5) return format(Nome, len, "Los Aztecas", 0);
    if(orgid == 6) return format(Nome, len, "Taliban", 0);
    if(orgid == 7) return format(Nome, len, "Prefeitura", 0);
	if(orgid == 8) return format(Nome, len, "Hitmans", 0);
	if(orgid == 9) return format(Nome, len, "Reporteres", 0);
	if(orgid == 10) return format(Nome, len, "Taxistas", 0);
	if(orgid == 11) return format(Nome, len, "Policia Federal", 0);
	if(orgid == 12) return format(Nome, len, "Cosa Nostra", 0);
	if(orgid == 13) return format(Nome, len, "Yakuza", 0);
	if(orgid == 14) return format(Nome, len, "Groove Street", 0);
	if(orgid == 15) return format(Nome, len, "Al'qaeda ", 0);
	if(orgid == 16) return format(Nome, len, "Policia Rodoviaria", 0);
	if(orgid == 17) return format(Nome, len, "Ballas", 0);
	if(orgid == 18) return format(Nome, len, "Los Vagos", 0);
	if(orgid == 19) return format(Nome, len, "Comando Vermelho", 0);
	if(orgid == 20) return format(Nome, len, "PCC", 0);
	if(orgid == 21) return format(Nome, len, "Hells Angels", 0);
	if(orgid == 22) return format(Nome, len, "Mongols", 0);
    if(orgid == 23) return format(Nome, len, "Sons Of Anarchy", 0);
    if(orgid == 24) return format(Nome, len, "The Triads", 0);
    if(orgid == 25) return format(Nome, len, "Drifters", 0);
    if(orgid == 26) return format(Nome, len, "OwnZ", 0);
    if(orgid == 27) return format(Nome, len, "Motoqueiros", 0);
    if(orgid == 28) return format(Nome, len, "Policia Florestal", 0);
    if(orgid == 29) return format(Nome, len, "Amigo dos Amigos", 0);
    if(orgid == 30) return format(Nome, len, "B.O.P.E", 0);
    if(orgid == 31) return format(Nome, len, "yStiflerS", 0);
    if(orgid == 32) return format(Nome, len, "Exército Americano", 0);
    if(orgid == 33) return format(Nome, len, "F.A.R.C", 0);
    if(orgid == 34) return format(Nome, len, "Policia Cívil", 0);
	return format(Nome, len, "Ninguem", 0);
}
stock OrgCor(orgid)
{
    if(orgid == 1) { return COR_PM; }
    if(orgid == 2) { return 0x807FFEAA; }
    if(orgid == 3) { return 0xFFFFFFAA; }
    if(orgid == 4) { return 0xFFFFFFAA; }
    if(orgid == 5) { return 0x2641FEAA; }
    if(orgid == 6) { return 0xFFFFFFAA; }
    if(orgid == 7) { return 0xFFFFFFAA; }
    if(orgid == 8) { return 0xFFFFFFAA; }
    if(orgid == 9) { return 0xFFFFFFAA; }
    if(orgid == 10) { return 0xFFFFFFAA; }
    if(orgid == 11) { return 0x999966AA; }
    if(orgid == 12) { return COLORGZ_LH; }
    if(orgid == 13) { return COLORGZ_YAKUZA; }
    if(orgid == 14) { return 0x00FF00AA; }
    if(orgid == 15) { return 0xFFFFFFAA; }
    if(orgid == 16) { return 0xFFFFFFAA; }
    if(orgid == 17) { return COR_BALLAS; }
    if(orgid == 18) { return 0xFFC801C8; }
    if(orgid == 19) { return 0xCD0000FF; }
    if(orgid == 20) { return 0xCCFF99AA; }
    if(orgid == 21) { return COR_HELLS; }
    if(orgid == 22) { return COR_MONGOLS; }
    if(orgid == 23) { return COR_SONS; }
    if(orgid == 25) { return COR_DRIFT; }
    if(orgid == 26) { return COLOR_SK; }
    if(orgid == 27) { return COR_MOTOQUEIROS; }
    if(orgid == 28) { return COR_ROOXY; }
    if(orgid == 29) { return COR_AmigodosAmigos; }
    if(orgid == 30) { return COR_BOPE; }
    if(orgid == 31) { return COR_YSTIFLERS; }
    if(orgid == 34) { return COR_RPP; }
    return COLOR_WHITE;
}
forward CheckMorroArea();
public CheckMorroArea()
{
    for(new i=0; i<MaiorID; i++)
	{
    	if(IsPlayerConnected(i))
    	{
        	if(Morro[Guerra] >= 1)
        	{
        	    new org = GetPlayerOrg(i);
        	    if(OrgPodeGuerriarMorro(i,org))
            	{
            	    if(IsPlayerInMorro(i))
            	    {
           		       MorroPontos[org] += 1;
           		    }
           		}
    		}
    	}
    }
    return 1;
}
forward MorroP();
public MorroP()
{
	new GDPstring[128];
    for(new i=0; i<MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInMorro(i) && Morro[Guerra] >= 1)
     		{
       			    format(GDPstring,sizeof(GDPstring),"Policia Militar ~w~- %d",MorroPontos[1]);
					TextDrawSetString(TextMorro5, GDPstring);
       				format(GDPstring,sizeof(GDPstring),"R.O.T.A-~w~Pontos: ~y~%d",MorroPontos[2]);
					TextDrawSetString(TextMorro6, GDPstring);
					format(GDPstring,sizeof(GDPstring),"Policia Florestal ~w~- %d",MorroPontos[28]);
					TextDrawSetString(TextMorro14, GDPstring);
					format(GDPstring,sizeof(GDPstring),"BOPE ~w~- %d",MorroPontos[30]);
					TextDrawSetString(TextMorro7, GDPstring);
					format(GDPstring,sizeof(GDPstring),"Los Aztecas- %d",MorroPontos[5]);
					TextDrawSetString(TextMorro8, GDPstring);
					format(GDPstring,sizeof(GDPstring),"Groove Street ~w~- %d",MorroPontos[14]);
					TextDrawSetString(TextMorro9, GDPstring);
					format(GDPstring,sizeof(GDPstring),"Ballas ~w~- %d",MorroPontos[17]);
					TextDrawSetString(TextMorro10, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"Los Vagos ~w~- %d",MorroPontos[18]);
					TextDrawSetString(TextMorro11, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"Comando Vermelho ~w~- %d",MorroPontos[19]);
					TextDrawSetString(TextMorro12, GDPstring);
                    format(GDPstring,sizeof(GDPstring),"P.C.C ~w~- %d",MorroPontos[20]);
					TextDrawSetString(TextMorro13, GDPstring);
					format(GDPstring,sizeof(GDPstring),"OwnZ ~w~- %d",MorroPontos[26]);
					TextDrawSetString(TextMorro15, GDPstring);
					format(GDPstring,sizeof(GDPstring),"Amigo dos Amigos ~w~- %d",MorroPontos[29]);
					TextDrawSetString(TextMorro16, GDPstring);
					format(GDPstring,sizeof(GDPstring),"yStiflerS ~w~- %d",MorroPontos[31]);
					TextDrawSetString(TextMorro17, GDPstring);
					format(GDPstring,sizeof(GDPstring),"Motoqueiros ~w~- %d",MorroPontos[27]);
					TextDrawSetString(TextMorro18, GDPstring);
					format(GDPstring,sizeof(GDPstring),"Policia Civil ~w~- %d",MorroPontos[34]);
					TextDrawSetString(TextMorro19, GDPstring);
					TextDrawShowForPlayer(i, TextMorro0);
                    TextDrawShowForPlayer(i, TextMorro1);
                    TextDrawShowForPlayer(i, TextMorro2);
                    TextDrawShowForPlayer(i, TextMorro3);
                    TextDrawShowForPlayer(i, TextMorro4);
                    TextDrawShowForPlayer(i, TextMorro5);
                    TextDrawShowForPlayer(i, TextMorro6);
                    TextDrawShowForPlayer(i, TextMorro7);
                    TextDrawShowForPlayer(i, TextMorro8);
                    TextDrawShowForPlayer(i, TextMorro9);
                    TextDrawShowForPlayer(i, TextMorro10);
                    TextDrawShowForPlayer(i, TextMorro11);
                    TextDrawShowForPlayer(i, TextMorro12);
                    TextDrawShowForPlayer(i, TextMorro13);
                    TextDrawShowForPlayer(i, TextMorro14);
                    TextDrawShowForPlayer(i, TextMorro15);
                    TextDrawShowForPlayer(i, TextMorro16);
                    TextDrawShowForPlayer(i, TextMorro17);
                    TextDrawShowForPlayer(i, TextMorro18);
                    TextDrawShowForPlayer(i, TextMorro19);
                    TextDrawHideForPlayer(i, forum);
		    }
			else
			{
		            TextDrawHideForPlayer(i, TextMorro0);
		            TextDrawHideForPlayer(i, TextMorro1);
		            TextDrawHideForPlayer(i, TextMorro2);
		            TextDrawHideForPlayer(i, TextMorro3);
		            TextDrawHideForPlayer(i, TextMorro4);
		            TextDrawHideForPlayer(i, TextMorro5);
		            TextDrawHideForPlayer(i, TextMorro6);
		            TextDrawHideForPlayer(i, TextMorro7);
		            TextDrawHideForPlayer(i, TextMorro8);
		            TextDrawHideForPlayer(i, TextMorro9);
		            TextDrawHideForPlayer(i, TextMorro10);
		            TextDrawHideForPlayer(i, TextMorro11);
		            TextDrawHideForPlayer(i, TextMorro12);
		            TextDrawHideForPlayer(i, TextMorro13);
		            TextDrawHideForPlayer(i, TextMorro14);
		            TextDrawHideForPlayer(i, TextMorro15);
		            TextDrawHideForPlayer(i, TextMorro16);
		            TextDrawHideForPlayer(i, TextMorro17);
		            TextDrawHideForPlayer(i, TextMorro18);
		            TextDrawHideForPlayer(i, TextMorro19);
		            TextDrawShowForPlayer(i, forum);
			}
        }
    }
    return 1;
}
stock OrgPodeGuerriarPedreira(playerid,org)
{
    new porg;
	if(PlayerInfo[playerid][pMembro] > 0)
	{
		porg = PlayerInfo[playerid][pMembro];
	}
	if(PlayerInfo[playerid][pLider] > 0)
	{
		porg = PlayerInfo[playerid][pLider];
	}
	if(org == 3) { if(porg == org) { return 1; } }
	if(org == 6) { if(porg == org) { return 1; } }
	if(org == 15) { if(porg == org) { return 1; } }
	if(org == 32) { if(porg == org) { return 1; } }
	if(org == 33) { if(porg == org) { return 1; } }
	return 0;
}
forward RespawnCarPedreira();
public RespawnCarPedreira()
{
    new UsandoCar[MAX_VEHICLES];
 	for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
        {
            UsandoCar[GetPlayerVehicleID(i)]= 1;
        }
    }
	for(new c = 0; c < MAX_VEHICLES; c++)
	{
		if(UsandoCar[c] != 1 && IsCarInPedreira(c))
        {
            SetVehicleToRespawn(c);
        }
	}
}
stock IsPlayerInPedreira(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 452.9537 && y >= 652.5002 && x <= 828.2853 && y <= 1143.3212) return 1; // Pedreira
    else return 0;
}
stock PedreiraFlashForAll()
{
	{
    	GangZoneHideForAll(GZPedreira);
    	GangZoneShowForAll(GZPedreira,CORTR_NINGUEM);
    	GangZoneFlashForAll(GZPedreira, CORTR_GUERRA);
	}
}
stock PedreiraFlashForPlayer(playerid)
{
	{
    	GangZoneHideForPlayer(playerid,GZPedreira);
    	GangZoneShowForPlayer(playerid,GZPedreira, CORTR_NINGUEM);
    	GangZoneFlashForPlayer(playerid,GZPedreira, CORTR_GUERRA);
	}
}
stock PedreiraShowForAll()
{
    DefinirCorPedreira();
	{
    	GangZoneHideForAll(GZPedreira);
    	GangZoneShowForAll(GZPedreira,Pedreira[Cor]);
	}
}
stock PedreiraShowForPlayer(playerid)
{
    DefinirCorPedreira();
	{
    	GangZoneHideForPlayer(playerid,GZPedreira);
    	GangZoneShowForPlayer(playerid,GZPedreira,Pedreira[Cor]);
	}
}
stock PedreiraHideForAll()
{
	{
    	GangZoneHideForAll(GZPedreira);
	}
}
stock PedreiraHideForPlayer(playerid)
{
	{
    	GangZoneHideForPlayer(playerid,GZPedreira);
	}
}

public DefinirCorPedreira()
{
    if(Pedreira[Dono] == 0)
	{
		Pedreira[Cor] = 0xFFFFFF96;
	}
	if(Pedreira[Dono] == 3)
	{
		Pedreira[Cor] = COR_EXE;
	}
	if(Pedreira[Dono] == 6)
	{
		Pedreira[Cor] = COR_TAL;
	}
	if(Pedreira[Dono] == 15)
	{
		Pedreira[Cor] = COR_AL;
	}
	if(Pedreira[Dono] == 32)
	{
		Pedreira[Cor] = COR_AMERICANOS;
	}
	if(Pedreira[Dono] == 33)
	{
		Pedreira[Cor] = COR_FARC;
	}
}
public CarregarPedreira()
{
	new arquivo[64];
	format(arquivo, sizeof(arquivo), "/PlayStart/Pedreira.ini");
	Pedreira[Dono] = dini_Int(arquivo,"Dono");
	DefinirCorPedreira();
	printf("[Pedreira] Dono da Pedreira = %d",Pedreira[Dono]);
	return 1;
}
public SalvarPedreira()
{
 	new arquivo[64];
	format(arquivo, sizeof(arquivo), "/PlayStart/Pedreira.ini");
 	dini_IntSet(arquivo,"Dono",Pedreira[Dono]);
	DefinirCorPedreira();
	printf("[Pedreira] Dono da Pedreira = %d",Pedreira[Dono]);
	return 1;
}
public IniciarGuerraPedreira()
{
    KillTimer(IniciandoGuerraP);
    if(Pedreira[Guerra] >= 1)
	{
	    return 1;
	}
	for(new o=0; o<MAX_ORGS; o++)
	{
	    PedreiraPontos[o] = 0;
	}
	Pedreira[Guerra] = 1;
	Pedreira[Dono] = 0;
	PedreiraFlashForAll();
	SendClientMessageToAll(0xFFFFFFAA," ");
    SendClientMessageToAll(0xFFFFFFAA,"» Guerra da Pedreira para Exercito vs Terroristas - {00FF00}INÍCIADA");
    SendClientMessageToAll(0xC6E2FFAA,"»            A Guerra da Pedreira acabará em 1 hora                «");
    SendClientMessageToAll(0xC6E2FFAA,"» ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ «");
	SendClientMessageToAll(0xFFFFFFAA," ");
    for(new i=0; i<MaiorID; i++)
	{
	    	new Float:x,Float:y,Float:z;
	    	GetPlayerPos(i,x,y,z);
    		PlayerPlaySound(i, 1135, x, y, z);
    		PlayerPlaySound(i, 1135, x, y, z);
    		PlayerPlaySound(i, 1135, x, y, z);
    		if(OrgPodeGuerriarPedreira(i,GetPlayerOrg(i)))
    		{
    		    format(gstring, sizeof(gstring), "** Agência %s: Sua Organização é Participante da Pedreira, Suba para Domina-lo.",NomeORG(i));
      			SendClientMessage(i, 0x77EEA1FF, gstring);
    		}
	}
	CheckPTempo = SetTimer("CheckPedreiraArea",5000,1);
	PedreirPtempo = SetTimer("PedreiraP",5000,1);
    RespawnPedreiraAuto = SetTimer("RespawnCarPedreira",RESPAWN_PEDREIRA,1);
	return 1;
}
public FinalizarGuerraPedreira()
{
    new vencedorpontospedreira = 0;
    KillTimer(CheckPTempo);
    KillTimer(PedreirPtempo);
    KillTimer(FinalizandoGuerraP);
    KillTimer(RespawnPedreiraAuto);
    if(Pedreira[Guerra] >= 1)
	{
        for(new o=0; o<MAX_ORGS; o++)
		{
      		if(PedreiraPontos[o] >= vencedorpontospedreira)
		    {
                vencedorpontospedreira = PedreiraPontos[o];
 		   }
		}
		for(new opt=0; opt<MAX_ORGS; opt++)
		{
      	if(PedreiraPontos[opt] == vencedorpontospedreira)
		    {
		        new NomeOrgPedreira[64];
                new GranaPedreira;
				OrgNome(opt, NomeOrgPedreira, 64);
				Pedreira[Dono] = opt;
				SendClientMessageToAll(0xFFFFFFAA," ");
                SendClientMessageToAll(0xFFFFFFAA,"» Guerra da Pedreira para Exercito vs Terroristas - {FF0000}FINALIZADA {FFFFFF}«");
                format(strtheus, sizeof(strtheus),"»                      Organização Vencedora: %s               «", NomeOrgPedreira);
			    SendClientMessageToAll(0xFFFFFFAA,strtheus);
			    format(strtheus, sizeof(strtheus),"»                        {00FF00}%d {FFFFFF}Pontos no final                    «", vencedorpontospedreira);
			    SendClientMessageToAll(0xFFFFFFAA,strtheus);
                GranaPedreira = vencedorpontospedreira*427;
                if(Pedreira[Dono] == 0)
                {
                    SendClientMessageToAll(0x808080AA,"[GUERRA] Ninguem Ganhou a Guerra do Pedreira, Por tanto todos Pagarão pelas Drogas!");
                }
				if(Pedreira[Dono] == 3 || Pedreira[Dono] == 32 && Pedreira[Dono] != 0)
                {
                    SendClientMessageToAll(0xFF8080AA,"[GUERRA] Os Policiais estão Controlando o Trafico no Pedreira, Não Haverá Drogas à Venda!");
					format(strtheus, sizeof(strtheus), "PlayStart:{FFFFFF} O Exército Venceu a Guerra, e Pelo Controle Receberá uma Bonificação de R$ %d no Cofre de todas as Org´s do Governo.", GranaPedreira);
					SendClientMessageToAll(0xFF9DFFFF, strtheus);
                    DepositarGranaOrg(3,GranaPedreira);
                    DepositarGranaOrg(32,GranaPedreira);
                    DepositarGranaOrg(7,GranaPedreira+10000);
                }
				if(Pedreira[Dono] != 3 || Pedreira[Dono] != 32 && Pedreira[Dono] != 0)
                {
                    SendClientMessageToAll(0xFF8000AA,"[GUERRA] Os Membros da Org Vencedora Terão Materiais Grátis!");
					format(strtheus, sizeof(strtheus), "PlayStart:{FFFFFF} A Org %s Venceu a Guerra, e Pelo Controle Receberá uma Bonificação de R$ %d no Cofre.",NomeOrgPedreira, GranaPedreira);
					SendClientMessageToAll(0xFF9DFFFF, strtheus);
                    DepositarGranaOrg(Pedreira[Dono],GranaPedreira);
                }
				SendClientMessageToAll(COLOR_GREEN," ");
				Pedreira[Guerra] = 0;
                PedreiraP();
				PedreiraShowForAll();
				SalvarPedreira();
				for(new o=0; o<MAX_ORGS; o++)
				{
					PedreiraPontos[o] = 0;
				}
                for(new i=0; i<MaiorID; i++)
				{
					new Float:x,Float:y,Float:z;
					GetPlayerPos(i,x,y,z);
					PlayerPlaySound(i, 1135, x, y, z);
					PlayerPlaySound(i, 1135, x, y, z);
					PlayerPlaySound(i, 1135, x, y, z);
					if(Pedreira[Dono] != 0)
					{
						if(GetPlayerOrg(i) == Pedreira[Dono])
			    		{
			    		    format(strtheus, sizeof(strtheus), "** Agência %s: Sua Organização Venceu a Guerra da Pedreira, Poderá pegar Materiais sempre que Quiser, Mesmo que não seja Vendedor.",NomeORG(i));
			      			SendClientMessage(i, 0x77EEA1FF, strtheus);
			    		}
					}
				}
                SaveAdm();
                SaveHelp();
				return 1;
		    }
		}
	}
	return 1;
}
public TempoGuerraPP()
{
    new horaa,minutoo;
	gettime(horaa,minutoo);
	if(Pedreira[Guerra] <= 0)
	{
	    if(horaa == 8)
		{
            if(minutoo == 0)
		    {
      			IniciandoGuerraP = SetTimer("IniciarGuerraPedreira", 8000, false);
            }
		}
		if(horaa == 12)
		{
		    if(minutoo == 0)
            {
            	IniciandoGuerraP = SetTimer("IniciarGuerraPedreira", 8000, false);
            }
		}
		if(horaa == 16)
		{
		    if(minutoo == 0)
		    {
      			IniciandoGuerraP = SetTimer("IniciarGuerraPedreira", 8000, false);
            }
		}
		if(horaa == 19)
		{
            if(minutoo == 0)
		    {
      			IniciandoGuerraP = SetTimer("IniciarGuerraPedreira", 8000, false);
            }
		}
        if(horaa == 23)
		{
            if(minutoo == 0)
		    {
      			IniciandoGuerraP = SetTimer("IniciarGuerraPedreira", 8000, false);
            }
		}
	}
	if(Pedreira[Guerra] >= 1)
	{
	    if(horaa == 9)
		{
            if(minutoo == 0)
		    {
      			FinalizandoGuerraP = SetTimer("FinalizarGuerraPedreira", 8000, false);
            }
		}
		if(horaa == 13)
		{
            if(minutoo == 0)
		    {
 				FinalizandoGuerraP = SetTimer("FinalizarGuerraPedreira", 8000, false);
            }
		}
		if(horaa == 17)
		{
            if(minutoo == 0)
		    {
      			FinalizandoGuerraP = SetTimer("FinalizarGuerraPedreira", 8000, false);
            }
		}
		if(horaa == 20)
		{
            if(minutoo == 0)
		    {
      			FinalizandoGuerraP = SetTimer("FinalizarGuerraPedreira", 8000, false);
            }
		}
        if(horaa == 0)
		{
            if(minutoo == 0)
		    {
      			FinalizandoGuerraP = SetTimer("FinalizarGuerraPedreira", 8000, false);
            }
		}
	}
}
forward CheckPedreiraArea();
public CheckPedreiraArea()
{
    for(new i=0; i<MaiorID; i++)
	{
    	if(IsPlayerConnected(i))
    	{
        	if(Pedreira[Guerra] >= 1)
        	{
        	    new org = GetPlayerOrg(i);
        	    if(OrgPodeGuerriarPedreira(i,org))
            	{
            	    if(IsPlayerInPedreira(i))
            	    {
           		       PedreiraPontos[org] += 1;
           		    }
           		}
    		}
    	}
    }
    return 1;
}
forward PedreiraP();
public PedreiraP()
{
	new GDPstring[128];
    for(new i=0; i<MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsPlayerInPedreira(i) && Pedreira[Guerra] >= 1)
     		{
       			    format(GDPstring,sizeof(GDPstring),"Exercito ~w~- %d",PedreiraPontos[3]);
					TextDrawSetString(TextPedreira5, GDPstring);
					format(GDPstring,sizeof(GDPstring),"Americano ~w~- %d",PedreiraPontos[32]);
					TextDrawSetString(TextPedreira6, GDPstring);
       				format(GDPstring,sizeof(GDPstring),"Taliban ~w~- %d",PedreiraPontos[6]);
					TextDrawSetString(TextPedreira7, GDPstring);
					format(GDPstring,sizeof(GDPstring),"Al'qaeda ~w~- %d",PedreiraPontos[15]);
					TextDrawSetString(TextPedreira8, GDPstring);
					format(GDPstring,sizeof(GDPstring),"F.A.R.C ~w~- %d",PedreiraPontos[33]);
					TextDrawSetString(TextPedreira9, GDPstring);
					TextDrawShowForPlayer(i, TextPedreira0);
                    TextDrawShowForPlayer(i, TextPedreira1);
                    TextDrawShowForPlayer(i, TextPedreira2);
                    TextDrawShowForPlayer(i, TextPedreira3);
                    TextDrawShowForPlayer(i, TextPedreira4);
                    TextDrawShowForPlayer(i, TextPedreira5);
                    TextDrawShowForPlayer(i, TextPedreira6);
                    TextDrawShowForPlayer(i, TextPedreira7);
                    TextDrawShowForPlayer(i, TextPedreira8);
                    TextDrawShowForPlayer(i, TextPedreira9);
                    TextDrawShowForPlayer(i, TextPedreira10);
                    TextDrawHideForPlayer(i, forum);
		    }
			else
			{
		            TextDrawHideForPlayer(i, TextPedreira0);
                    TextDrawHideForPlayer(i, TextPedreira1);
                    TextDrawHideForPlayer(i, TextPedreira2);
                    TextDrawHideForPlayer(i, TextPedreira3);
                    TextDrawHideForPlayer(i, TextPedreira4);
                    TextDrawHideForPlayer(i, TextPedreira5);
                    TextDrawHideForPlayer(i, TextPedreira6);
                    TextDrawHideForPlayer(i, TextPedreira7);
                    TextDrawHideForPlayer(i, TextPedreira8);
                    TextDrawHideForPlayer(i, TextPedreira9);
                    TextDrawHideForPlayer(i, TextPedreira10);
		            TextDrawShowForPlayer(i, forum);
			}
        }
    }
    return 1;
}
/*forward ProcuradoPlayer();
public ProcuradoPlayer()
{
	new StrProc[70];
 for(new i;i<MaiorID;i++)
    {
        new gWanted = GetPlayerWanteDLevel(i);
        if(gWanted >= 1)
        {
            format(StrProc, sizeof(StrProc), "*PROCURADO: [{00FF80}%d{FFD700}]", gWanted);
		   	SetPlayerChatBubble(i, StrProc, 0xFFD700FF, 40.0, TEMPO_PROCTEXT);
            return 1;
        }
    }
    return 1;
}                   */
public TempoAvalieHelper(playerid)
{
	if(meavaliehelper[playerid] != 0)
  	{
        KillTimer(TempoDoHelper[playerid]);
		meavaliehelper[playerid] = 0;
	}
	return 1;
}
forward TunarCarro(carid);
public TunarCarro(carid)
{
    if(GetVehicleModel(carid) == 562)
    {
        AddVehicleComponentEx(carid, 1046);
        AddVehicleComponentEx(carid, 1171);
        AddVehicleComponentEx(carid, 1149);
        AddVehicleComponentEx(carid, 1035);
        AddVehicleComponentEx(carid, 1147);
        AddVehicleComponentEx(carid, 1036);
        AddVehicleComponentEx(carid, 1040);
        ChangeVehiclePaintjobEx(carid, 4);
        ChangeVehicleColorEx(carid, 6, 6);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
    }
    if(GetVehicleModel(carid) == 560)
    {
        AddVehicleComponentEx(carid, 1028);
        AddVehicleComponentEx(carid, 1169);
        AddVehicleComponentEx(carid, 1141);
        AddVehicleComponentEx(carid, 1032);
        AddVehicleComponentEx(carid, 1138);
        AddVehicleComponentEx(carid, 1026);
        AddVehicleComponentEx(carid, 1027);
        ChangeVehiclePaintjobEx(carid, 0);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
    }
    if(GetVehicleModel(carid) == 565)
    {
        AddVehicleComponentEx(carid, 1046);
        AddVehicleComponentEx(carid, 1153);
        AddVehicleComponentEx(carid, 1150);
        AddVehicleComponentEx(carid, 1054);
        AddVehicleComponentEx(carid, 1049);
        AddVehicleComponentEx(carid, 1047);
        AddVehicleComponentEx(carid, 1051);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 559)
    {
        AddVehicleComponentEx(carid, 1065);
        AddVehicleComponentEx(carid, 1160);
        AddVehicleComponentEx(carid, 1159);
        AddVehicleComponentEx(carid, 1067);
        AddVehicleComponentEx(carid, 1162);
        AddVehicleComponentEx(carid, 1069);
        AddVehicleComponentEx(carid, 1071);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 561)
    {
        AddVehicleComponentEx(carid, 1064);
        AddVehicleComponentEx(carid, 1155);
        AddVehicleComponentEx(carid, 1154);
        AddVehicleComponentEx(carid, 1055);
        AddVehicleComponentEx(carid, 1158);
        AddVehicleComponentEx(carid, 1056);
        AddVehicleComponentEx(carid, 1062);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 558)
    {
        AddVehicleComponentEx(carid, 1089);
        AddVehicleComponentEx(carid, 1166);
        AddVehicleComponentEx(carid, 1168);
        AddVehicleComponentEx(carid, 1088);
        AddVehicleComponentEx(carid, 1164);
        AddVehicleComponentEx(carid, 1090);
        AddVehicleComponentEx(carid, 1094);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 575)
    {
        AddVehicleComponentEx(carid, 1044);
        AddVehicleComponentEx(carid, 1174);
        AddVehicleComponentEx(carid, 1176);
        AddVehicleComponentEx(carid, 1042);
        AddVehicleComponentEx(carid, 1099);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 534)
    {
        AddVehicleComponentEx(carid, 1126);
        AddVehicleComponentEx(carid, 1179);
        AddVehicleComponentEx(carid, 1180);
        AddVehicleComponentEx(carid, 1122);
        AddVehicleComponentEx(carid, 1101);
        AddVehicleComponentEx(carid, 1125);
        AddVehicleComponentEx(carid, 1123);
        AddVehicleComponentEx(carid, 1100);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 536)
    {
        AddVehicleComponentEx(carid, 1104);
        AddVehicleComponentEx(carid, 1182);
        AddVehicleComponentEx(carid, 1184);
        AddVehicleComponentEx(carid, 1108);
        AddVehicleComponentEx(carid, 1107);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 567)
    {
        AddVehicleComponentEx(carid, 1129);
        AddVehicleComponentEx(carid, 1189);
        AddVehicleComponentEx(carid, 1187);
        AddVehicleComponentEx(carid, 1102);
        AddVehicleComponentEx(carid, 1133);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        ChangeVehiclePaintjobEx(carid, 4);
    }
    if(GetVehicleModel(carid) == 420)
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1087);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1139);
        AddVehicleComponentEx(carid, 1147);
    }
    if(GetVehicleModel(carid) == 400)
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1087);
        AddVehicleComponentEx(carid, 1018);
        AddVehicleComponentEx(carid, 1013);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1086);
    }
    if(GetVehicleModel(carid) == 444)
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
    }
    if(GetVehicleModel(carid) == 556)
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
    }
    if(GetVehicleModel(carid) == 557)
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
    }
    if(GetVehicleModel(carid) == 401)
    {
        AddVehicleComponentEx(carid, 1086);
        AddVehicleComponentEx(carid, 1139);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1087);
        AddVehicleComponentEx(carid, 1012);
        AddVehicleComponentEx(carid, 1013);
        AddVehicleComponentEx(carid, 1042);
        AddVehicleComponentEx(carid, 1043);
        AddVehicleComponentEx(carid, 1018);
        AddVehicleComponentEx(carid, 1006);
        AddVehicleComponentEx(carid, 1007);
        AddVehicleComponentEx(carid, 1017);
    }
    if(GetVehicleModel(carid) == 576)
    {
        ChangeVehiclePaintjobEx(carid, 0);
        AddVehicleComponentEx(carid, 1191);
        AddVehicleComponentEx(carid, 1193);
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1018);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
        AddVehicleComponentEx(carid, 1134);
        AddVehicleComponentEx(carid, 1137);
    }
    else
    {
        AddVehicleComponentEx(carid, 1010);
        AddVehicleComponentEx(carid, 1079);
        AddVehicleComponentEx(carid, 1087);
    }
    return 0;
}
stock GetPlayerFamy(playerid)
{
    new Famy;
	if(PlayerInfo[playerid][pFamyLider] > 0)
	{
		Famy = PlayerInfo[playerid][pFamyLider];
		return Famy;
	}
	if(PlayerInfo[playerid][pFamyMember] > 0)
	{
		Famy = PlayerInfo[playerid][pFamyMember];
		return Famy;
	}
	return 0;
}
stock NomeFamy(playerid)
{
	new FamyText[64];
	if(PlayerInfo[playerid][pFamyMember] == 1 || PlayerInfo[playerid][pFamyLider] == 1)
    {
        FamyText = "StrondaH";
    }
    if(PlayerInfo[playerid][pFamyMember] == 2 || PlayerInfo[playerid][pFamyLider] == 2)
    {
        FamyText = "DestroyeR";
    }
    if(PlayerInfo[playerid][pFamyMember] == 3 || PlayerInfo[playerid][pFamyLider] == 3)
    {
        FamyText = "OwnZ";
    }
    if(PlayerInfo[playerid][pFamyMember] == 4 || PlayerInfo[playerid][pFamyLider] == 4)
    {
        FamyText = "Insane";
    }
    if(PlayerInfo[playerid][pFamyMember] == 5 || PlayerInfo[playerid][pFamyLider] == 5)
    {
        FamyText = "Dorgados";
    }
    if(PlayerInfo[playerid][pFamyMember] == 6 || PlayerInfo[playerid][pFamyLider] == 6)
    {
        FamyText = "AnonymouS";
    }
	return FamyText;
}
stock OrgName(orgid, Nome[], Own)
{
    if(orgid == 1) return format(Nome, Own, "Polícia Mílitar", 0);
    if(orgid == 2) return format(Nome, Own, "R.O.T.A", 0);
    if(orgid == 3) return format(Nome, Own, "Exercito", 0);
    if(orgid == 4) return format(Nome, Own, "Medicos", 0);
    if(orgid == 5) return format(Nome, Own, "Los Aztecas", 0);
    if(orgid == 6) return format(Nome, Own, "Taliban", 0);
    if(orgid == 7) return format(Nome, Own, "Prefeitura", 0);
	if(orgid == 8) return format(Nome, Own, "Hitmans", 0);
	if(orgid == 9) return format(Nome, Own, "Reporteres", 0);
	if(orgid == 10) return format(Nome, Own, "Taxistas", 0);
	if(orgid == 11) return format(Nome, Own, "Policia Federal", 0);
	if(orgid == 12) return format(Nome, Own, "Cosa Nostra", 0);
	if(orgid == 13) return format(Nome, Own, "Yakuza", 0);
	if(orgid == 14) return format(Nome, Own, "Groove Street", 0);
	if(orgid == 15) return format(Nome, Own, "Al'qaeda ", 0);
	if(orgid == 16) return format(Nome, Own, "Policia Rodoviaria", 0);
	if(orgid == 17) return format(Nome, Own, "Ballas", 0);
	if(orgid == 18) return format(Nome, Own, "Los Vagos", 0);
	if(orgid == 19) return format(Nome, Own, "Comando Vermelho", 0);
	if(orgid == 20) return format(Nome, Own, "PCC", 0);
	if(orgid == 21) return format(Nome, Own, "Hells Angels", 0);
	if(orgid == 22) return format(Nome, Own, "Mongols", 0);
    if(orgid == 23) return format(Nome, Own, "Sons Of Anarchy", 0);
    if(orgid == 24) return format(Nome, Own, "The Triads", 0);
    if(orgid == 25) return format(Nome, Own, "Drifters", 0);
    if(orgid == 26) return format(Nome, Own, "OwnZ", 0);
    if(orgid == 27) return format(Nome, Own, "Motoqueiros", 0);
    if(orgid == 28) return format(Nome, Own, "Policia Florestal", 0);
    if(orgid == 29) return format(Nome, Own, "Amigo dos Amigos", 0);
    if(orgid == 30) return format(Nome, Own, "B.O.P.E", 0);
    if(orgid == 31) return format(Nome, Own, "yStiflerS", 0);
	return format(Nome, Own, "Civil", 0);
}
/*forward DesPlayerCarSpam(playerid);
public DesPlayerCarSpam(playerid)
{
    PlayerCarSpam[playerid] --;
    if(PlayerCarSpam[playerid] > 9)
    {
    	GetPlayerPos(playerid, xpoz, ypoz, zpoz);
        //SendClientMessage(playerid, 0x00F2F2AA, "Você foi banido do servidor acusado de Car Spam, Se isto for um erro, Reclame no fórum!");
        format(gstring,sizeof(gstring), "AntiAttack:{80E3FF}%s{E84F33}[ID: {80E3FF}%d{E84F33}] Foi acusado ser ser Um Car Spam e Foi banido!",PlayerName(playerid),playerid);
	    SoEuVejoMsm(COLOR_LIGHTRED, gstring);
    	format(gstring,sizeof(gstring),"Informações: Coordenadas, X:%f Y:%f Z:%f, Ant Xiter: 2, Digite /irxiter",xpoz,ypoz,zpoz);
    	SoEuVejoMsm(0x00F2F2FF, gstring);
        getdate(year, month, day);
        format(gstring, sizeof(gstring), "AdmCmd: %s foi kickado automaticamente acusado de Car Spam (%d-%d-%d)", PlayerName(playerid),day,month,year);
		AtackLog(gstring);
        Kick(playerid);
   	}
    return 1;
}*/
stock IsCarInMorro(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 2202.403320 && y >= -1131.981933 && x <= 2322.403320 && y <= -1107.981933) return 1; // morro 1
    else if(x >= 2041.285644 && y >= -1075.884277 && x <= 2320.285644 && y <= -940.884277) return 1; // morro 2
    else if(x >= 2106.894042 && y >= -1108.459472 && x <= 2319.894042 && y <= -1075.459472) return 1; // morro 3
    else return 0;
}
stock IsCarInPedreira(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 2202.403320 && y >= -1131.981933 && x <= 2322.403320 && y <= -1107.981933) return 1; // Pedreira
    else return 0;
}
stock IsCarInPref(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 1396.344360 && y >= -1864.869140 && x <= 1558.344360 && y <= -1747.869140) return 1; // morro 1
    else return 0;
}
stock RespawnCarPref()
{
    new UsandoCar[MAX_VEHICLES];
 	for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
        {
            UsandoCar[GetPlayerVehicleID(i)]= 1;
        }
    }
	for(new c = 0; c < MAX_VEHICLES; c++)
	{
		if(UsandoCar[c] != 1 && IsCarInPref(c))
        {
            SetVehicleToRespawn(c);
        }
	}
}
stock RespawnCarros()
{
    new UsandoCar[MAX_VEHICLES];
    for(new i=0; i<MaiorID; i++)
    {
        if(IsPlayerConnected(i) && IsPlayerInAnyVehicle(i))
        {
            UsandoCar[GetPlayerVehicleID(i)]= 1;
        }
    }
	for(new c = 0; c < MAX_VEHICLES; c++)
	{
		if(UsandoCar[c] != 1)
        {
            SetVehicleToRespawn(c);
        }
	}
}
public CheckPlayStart()
{
    new string[128];
    for(new k=0; k<MaiorID; k++)
    {
        if(ContarJogadores() >= 40)
		{
		    format(string, sizeof(string), "O Servidor Recebeu Bônus por Players Online: %d.", ContarJogadores());
			SendClientMessage(k, 0xFF9DFFFF, string);
			SendClientMessage(k, 0xFF9DFFFF, "Vá até a Prefeitura pegar Seu Presente!");
	      	Presente[k] = 1;
		}
		else
		{
	    	format(string, sizeof(string), "O Servidor Não Receberá Bônus por Players Online: %d.", ContarJogadores());
			SendClientMessage(k, 0x00FFFFFF, string);
			SendClientMessage(k, 0x00FFFFFF, "Número Mínimo de Players Necessários: 40!");
      		Presente[k] = 0;
		}
		if(InfoCont[1] > InfoCont[2])     // hit wins
        {
            VenceuCont = 8;
            SendClientMessage(k, 0x77D3EEFF, "Os Hitmans Cumpriram Mais Contratos Que os Triads, E Ganhou Recompensa em Armamento!");
            format(string, sizeof(string), "Hitmans: %d Pontos, The Triads: %d Pontos", InfoCont[1], InfoCont[2]);
			SendClientMessage(k, 0x77EEA1FF, string);
		}
        else if(InfoCont[1] < InfoCont[2])     // triads wins
        {
            VenceuCont = 24;
            SendClientMessage(k, 0x77D3EEFF, "Os Triads Cumpriram Mais Contratos Que os Hitmans, E Ganhou Recompensa em Armamento!");
            format(string, sizeof(string), "Hitmans: %d Pontos, The Triads: %d Pontos", InfoCont[1], InfoCont[2]);
			SendClientMessage(k, 0x77EEA1FF, string);
		}
        else if(InfoCont[1] == InfoCont[2])
        {
            VenceuCont = 0;
            SendClientMessage(k, 0x77D3EEFF, "Os Hitmans e Triads Cumpriram o Mesmo Número de Contratos, Portanto Não ganharão Armamentos!");
            format(string, sizeof(string), "Hitmans: %d Pontos, The Triads: %d Pontos", InfoCont[1], InfoCont[2]);
			SendClientMessage(k, 0x77EEA1FF, string);
		}
		if(VenceuCont != 0)     // Aviso wins
        {
            if(GetPlayerOrg(k) == VenceuCont)
            {
                new NomedaOrg[64];
      			OrgName(VenceuCont, NomedaOrg, 64);
    			format(string, sizeof(string), "** Agência %s: Sua Organização Ganhou Armamento Especial por Maior Numero de Contratos. (Pedido 8).",NomedaOrg);
                SendClientMessage(k, 0x77EEA1FF, string);
            }
		}
        VehPreso(k);
    }
    InfoCont[1] = 0;
    InfoCont[2] = 0;
    RespawnCarPref();
    SetTimer("Checkprop", 5000, 0);
}
stock OrgCargo(playerid)
{
    	new rtext[64];
	    if(PlayerInfo[playerid][pMembro] == 1 || PlayerInfo[playerid][pLider] == 1
        || PlayerInfo[playerid][pMembro] == 16 || PlayerInfo[playerid][pLider] == 16)//PD Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Soldado"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Cabo"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Sargento"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Tenente"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Capitão"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Comandante"; }
			else { rtext = "Soldado"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 28 || PlayerInfo[playerid][pLider] == 28)//R.O.T.A Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Recruta"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Cabo"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Major"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Tenente"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Capitão"; }
			else { rtext = "Recruta"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 2 || PlayerInfo[playerid][pLider] == 2)//R.O.T.A Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Recruta"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Cabo"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Sargento"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Tenente"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Capitão"; }
			else { rtext = "Recruta"; }
		}
        else if(PlayerInfo[playerid][pMembro] == 11 || PlayerInfo[playerid][pLider] == 11)//R.O.T.A Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Recruta"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Atirador de Elite"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Cabo"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Tenente"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Capitão"; }
			else { rtext = "Recruta"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 34 || PlayerInfo[playerid][pLider] == 34)//RPP Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Recruta"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Soldado"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Atirador de Elite"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Cabo"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Tenente"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Capitão"; }
			else { rtext = "Recruta"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 3 || PlayerInfo[playerid][pLider] == 3)//Exército Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Soldado"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Sargento"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Capitão"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Major"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Tenente Coronel"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "General"; }
			else { rtext = "Soldado"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 32 || PlayerInfo[playerid][pLider] == 32)//Americano Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Soldado"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Sargento"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Capitão"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Major"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Tenente Coronel"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "General"; }
			else { rtext = "Soldado"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 4 || PlayerInfo[playerid][pLider] == 4)//Medicos Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Auxiliar Enfermeiro"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Enfermeiro"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Médico"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Bombeiro"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Líder"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Diretor"; }
			else { rtext = "Auxiliar de Enfermeiro"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 6 || PlayerInfo[playerid][pLider] == 6)//Taliban Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Homem-Bomba"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Terrorista"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Bombadeador"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Líder"; }
			else { rtext = "Homem-Bomba"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 7 || PlayerInfo[playerid][pLider] == 7)//Prefeito Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Motorista"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Segurança"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Vereador"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Acessor"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Vice-Prefeito"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Prefeito"; }
			else { rtext = "Motorista"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 8 || PlayerInfo[playerid][pLider] == 8
		|| PlayerInfo[playerid][pMembro] == 24 || PlayerInfo[playerid][pLider] == 24)//Hitman Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Matador"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Assassino Frio"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Agente"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Agente Especial"; }
            else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Vice-Diretor"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Diretor"; }
			else { rtext = "Matador"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 9 || PlayerInfo[playerid][pLider] == 9)//NR Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Humorista"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Repórter Local"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Repórter Nacional"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Editor Local"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Fotografo Paparazzi"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Diretor de Produção"; }
			else { rtext = "Humorista"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 10 || PlayerInfo[playerid][pLider] == 10)//Taxi Company Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Taxista Em Treinamento"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Taxista Novato"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Taxista Experiente"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Taxista Profissional"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Chefe"; }
			else { rtext = "Taxista Em Treinamento"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 14 || PlayerInfo[playerid][pLider] == 14 || PlayerInfo[playerid][pMembro] == 17
		|| PlayerInfo[playerid][pLider] == 17 || PlayerInfo[playerid][pMembro] == 18 || PlayerInfo[playerid][pLider] == 18
		|| PlayerInfo[playerid][pMembro] == 19 || PlayerInfo[playerid][pLider] == 19 || PlayerInfo[playerid][pMembro] == 20
		|| PlayerInfo[playerid][pLider] == 20 || PlayerInfo[playerid][pMembro] == 5 || PlayerInfo[playerid][pLider] == 5
		|| PlayerInfo[playerid][pMembro] == 21 || PlayerInfo[playerid][pLider] == 21 || PlayerInfo[playerid][pMembro] == 22
		|| PlayerInfo[playerid][pLider] == 22 || PlayerInfo[playerid][pMembro] == 23 || PlayerInfo[playerid][pLider] == 23
         || PlayerInfo[playerid][pMembro] == 27 || PlayerInfo[playerid][pLider] == 27)//GANG'S Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Fogueteiro"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Capanga"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Chefão"; }
			else { rtext = "Novato"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 15 || PlayerInfo[playerid][pLider] == 15)//AlQaeda Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Homem-Bomba"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Terrorista"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Bombardeador"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Osama Bin Laden"; }
			else { rtext = "Homem-Bomba"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 33 || PlayerInfo[playerid][pLider] == 33)//FARC Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Homem-Bomba"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Terrorista"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Bombardeador"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Osama Bin Laden"; }
			else { rtext = "Homem-Bomba"; }
		}
        else if(PlayerInfo[playerid][pMembro] == 25 || PlayerInfo[playerid][pLider] == 25)//DRIFT Ranks
        {
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Matador"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Assassino Frio"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Agente"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Agente Especial"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Vice-Diretor"; }
		    else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Diretor"; }
			else { rtext = "Matador"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 13 || PlayerInfo[playerid][pLider] == 13
		|| PlayerInfo[playerid][pMembro] == 12 || PlayerInfo[playerid][pLider] == 12)//Máfias Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Associado"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Braço-Direito"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Lider"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Líder"; }
			else
			{
				rtext = "Novato";
			}
		}
		else if(PlayerInfo[playerid][pMembro] == 29 || PlayerInfo[playerid][pLider] == 29)//AlQaeda Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "Novato"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Fogueteiro"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Capanga"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-Chefe"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Chefão"; }
			else { rtext = "Novato"; }
		}
        else if(PlayerInfo[playerid][pMembro] == 26 || PlayerInfo[playerid][pLider] == 26)//AlQaeda Ranks
		{
		    if(PlayerInfo[playerid][pCargo] == 1) { rtext = "App"; }
			else if(PlayerInfo[playerid][pCargo] == 2) { rtext = "Membro"; }
			else if(PlayerInfo[playerid][pCargo] == 3) { rtext = "Membro avançado"; }
			else if(PlayerInfo[playerid][pCargo] == 4) { rtext = "Membro de elite"; }
			else if(PlayerInfo[playerid][pCargo] == 5) { rtext = "Sub-lider"; }
            else if(PlayerInfo[playerid][pCargo] == 6) { rtext = "Líder"; }
			else { rtext = "App"; }
		}
		else if(PlayerInfo[playerid][pMembro] == 0 || PlayerInfo[playerid][pLider] == 0
		|| PlayerInfo[playerid][pLider] >= MAX_ORGS || PlayerInfo[playerid][pMembro] >= MAX_ORGS)
		{
		    rtext = "Nenhum";
		}
		return rtext;
}
forward MandarRelato(playerid);
public MandarRelato(playerid)
{
    RelatoEntregue[playerid] = 0;
    return 1;
}
public StatusPlayer(idcheck, playerid)
{
    new arquivo[64], Theusownamt, NomedaOrg[64], DemitiuMotivo[64],
    DemitiuNome[64], PresoMotivo[64], PresoNome[64];
    if(idcheck == 1)
    {
        format(arquivo, sizeof(arquivo), "Agendados/JAIL%s.ini",PlayerName(playerid));
		if(dini_Exists(arquivo))
        {
            strmid(PresoNome, dini_Get(arquivo,"Admin"), 0, strlen(dini_Get(arquivo,"Admin")), 255);
            strmid(PresoMotivo, dini_Get(arquivo,"Motivo"), 0, strlen(dini_Get(arquivo,"Motivo")), 255);
            Theusownamt = dini_Int(arquivo,"Tempo");
            format(gstring, sizeof(gstring), "* Admin %s Agendou Sua Prisão, Motivo: %s.", PresoNome,PresoMotivo);
            SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
            format(gstring, sizeof(gstring), "Você foi preso por %d Minutos Automaticamente, Agendado pelo Admin.", Theusownamt);
            SendClientMessage(playerid, COLOR_LIGHTBLUE, gstring);
            GameTextForPlayer(playerid, "~b~Bem Vindo a ~n~~r~~h~Cadeia Admin", 5000, 3);
            WantedPoints[playerid] = 0;
            ResetPlayerWeapons(playerid);
            SetPlayerWantedLevel(playerid, 0);
            PlayerInfo[playerid][pJailed] = 2;
            PlayerInfo[playerid][pJailTime] = Theusownamt * 60;
            SetPlayerPos(playerid, 346.5848, 306.1026, 999.1484);
            SetPlayerInterior(playerid,6);
            SetPlayerVirtualWorld(playerid,random(20));
            format(gstring, sizeof(gstring), "SERVER: {80E3FF}%s {E84F33} Está Agendado e Foi preso, Motivo: %s",PlayerName(playerid) ,PresoMotivo);
    	    SendClientMessageToAll(COLOR_LIGHTRED,gstring);
            dini_Remove(arquivo);
        }
        return 1;
    }
    else if(idcheck == 2)
    {
        format(arquivo, sizeof(arquivo), "Agendados/ORG%s.ini",PlayerName(playerid));
        if(dini_Exists(arquivo))
        {
            Theusownamt = dini_Int(arquivo,"Org");
            OrgName(Theusownamt, NomedaOrg, 64);
            strmid(DemitiuNome, dini_Get(arquivo,"Nome"), 0, strlen(dini_Get(arquivo,"Nome")), 255);
            strmid(DemitiuMotivo, dini_Get(arquivo,"Motivo"), 0, strlen(dini_Get(arquivo,"Motivo")), 255);
            if(PlayerInfo[playerid][pLider] > 0)
            {
                format(gstring, sizeof(gstring), "Você Foi Tirado De Líder da Organização %s Pelo Admin %s, Motivo: %s", NomedaOrg, DemitiuNome, DemitiuMotivo);
    	        SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
            }
        	else
            {
                format(gstring, sizeof(gstring), "Você Foi demitido da Organização %s Pelo Líder %s, Motivo: %s", NomedaOrg, DemitiuNome, DemitiuMotivo);
                SendClientMessage(playerid, COLOR_LIGHTRED, gstring);
            }
            gTeam[playerid] = 3;
    		Hospital[playerid] = 1;
    		PlayerInfo[playerid][pTeam] = 3;
    		PlayerInfo[playerid][pMembro] = 0;
    		PlayerInfo[playerid][pLider] = 0;
    		PlayerInfo[playerid][pCargo] = 0;
    		if(PlayerInfo[playerid][pSex] == 1) { PlayerInfo[playerid][pSkin] = 23; } else { PlayerInfo[playerid][pSkin] = 216; }
    		SpawnPlayer(playerid);
            dini_Remove(arquivo);
        }
        return 1;
    }
    else if(idcheck == 3)
    {
        format(arquivo, sizeof(arquivo), "Agendados/ADM%s.ini",PlayerName(playerid));
        if(dini_Exists(arquivo))
        {
            strmid(DemitiuNome, dini_Get(arquivo,"Nome"), 0, strlen(dini_Get(arquivo,"Nome")), 255);
            strmid(DemitiuMotivo, dini_Get(arquivo,"Motivo"), 0, strlen(dini_Get(arquivo,"Motivo")), 255);
            format(gstring, sizeof(gstring), "[BPF SERVER]:{FF0000} Você Foi Retirado da Staff Pelo Admin %s, Motivo: %s",DemitiuNome,DemitiuMotivo);
            SendClientMessage(playerid, 0x0000FFAA, gstring);
            dini_Remove(arquivo);
        }
        return 1;
    }
    else if(idcheck == 4)
    {
        format(arquivo, sizeof(arquivo), "Agendados/HELP%s.ini",PlayerName(playerid));
        if(dini_Exists(arquivo))
        {
            strmid(DemitiuNome, dini_Get(arquivo,"Nome"), 0, strlen(dini_Get(arquivo,"Nome")), 255);
            strmid(DemitiuMotivo, dini_Get(arquivo,"Motivo"), 0, strlen(dini_Get(arquivo,"Motivo")), 255);
            format(gstring, sizeof(gstring), "[BPF SERVER]:{FF0000} Você Foi Retirado dos Helpers Pelo Admin %s, Motivo: %s",DemitiuNome,DemitiuMotivo);
            SendClientMessage(playerid, 0x0000FFAA, gstring);
            dini_Remove(arquivo);
        }
        return 1;
    }
    else if(idcheck == 5)
    {
        new string[380], string3[128], ip[16];
    	GetPlayerIp(playerid, ip, sizeof ip);
    	format(string3, sizeof(string3), "Banidos/%s.ini", PlayerName(playerid));
    	if(dini_Exists(string3))
    	{
    	    ClearChatbox(playerid, 10);
    	    strmid(InfoTheus[playerid][pMotivo], dini_Get(string3,"Motivo"), 0, strlen(dini_Get(string3,"Motivo")), 255);
    	    strmid(InfoTheus[playerid][pAdmBan], dini_Get(string3,"Admin"), 0, strlen(dini_Get(string3,"Admin")), 255);
    	    strmid(InfoTheus[playerid][pData], dini_Get(string3,"Data"), 0, strlen(dini_Get(string3,"Data")), 255);
    	    strmid(InfoTheus[playerid][pHora], dini_Get(string3,"Hora"), 0, strlen(dini_Get(string3,"Hora")), 255);
    	    SendClientMessage(playerid, COLOR_WHITE, "|_______________ Informações do Ban _______________|");
    		format(string, sizeof(string), "Seu Nick:[%s] está Banido do {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start", PlayerName(playerid));
    		SendClientMessage(playerid, COLOR_LIGHTRED, string);
    		SendClientMessage(playerid, COLOR_YELLOW, "Para revisão de ban acesse nosso forum: www.brasilplayStart1.forumeiros.com");
    		SendClientMessage(playerid, COLOR_YELLOW, "Atenção: Você só será desbanido caso for inocente !");
    		format(string,sizeof(string),"{FF8080}Brasil PlayStart - Conta Banida\n\n\n{FF8000}Conta:{00FF00} %s\n\n{FF8000}IP: {00FF00}%s\n\n{FF8000}Admin: {00FF00}%s\n\n{FF8000}Motivo: {00FF00}%s \n\n{FF8000}Data:{00FF00} %s \n\n{FF8000}Hora:{00FF00} %s\n\n{00FFFF}Se Você acha que isto é um erro,Faça Revisão \n\n{00ECEC}** www.brasilplayStart1.forumeiros.com **",PlayerName(playerid),ip,InfoTheus[playerid][pAdmBan],InfoTheus[playerid][pMotivo],InfoTheus[playerid][pData],InfoTheus[playerid][pHora]);
            ShowPlayerDialog(playerid,1339,DIALOG_STYLE_MSGBOX,"{8080FF}Conta Banida Deste Servidor", string, "Sair","");
    		new stri[64], tmp[20], tmp2[20];
    		format(stri, sizeof(stri), "IPsBanidos/%s.ini",ip);
    		getdate(Ano, Mes, Dia);
    		format(tmp, sizeof(tmp), "%d/%d/%d", Dia, Mes, Ano);
    		gettime(Hora, Minuto, Segundo);
    		format(tmp2, sizeof(tmp2), "%d:%d:%d", Hora, Minuto, Segundo);
    		if(dini_Exists(stri))
    		{
    			Kick(playerid);
    		}
    		else
    		{
    			dini_Create(stri);
    			dini_Set(stri,"Motivo",InfoTheus[playerid][pMotivo]);
    			dini_Set(stri,"Admin",InfoTheus[playerid][pAdmBan]);
    			dini_Set(stri,"Data",InfoTheus[playerid][pData]);
    			dini_Set(stri,"Hora",InfoTheus[playerid][pHora]);
    			dini_Set(stri,"Nick",PlayerName(playerid));
    		}
      		Kick(playerid);
    	}
    	format(string3, sizeof(string3), "IPsBanidos/%s.ini", ip);
    	if(dini_Exists(string3))
    	{
       	    ClearChatbox(playerid, 10);
       	    strmid(InfoTheus[playerid][pMotivo], dini_Get(string3,"Motivo"), 0, strlen(dini_Get(string3,"Motivo")), 255);
    	    strmid(InfoTheus[playerid][pAdmBan], dini_Get(string3,"Admin"), 0, strlen(dini_Get(string3,"Admin")), 255);
    	    strmid(InfoTheus[playerid][pData], dini_Get(string3,"Data"), 0, strlen(dini_Get(string3,"Data")), 255);
    	    strmid(InfoTheus[playerid][pHora], dini_Get(string3,"Hora"), 0, strlen(dini_Get(string3,"Hora")), 255);
    	    strmid(InfoTheus[playerid][pNick], dini_Get(string3,"Nick"), 0, strlen(dini_Get(string3,"Nick")), 255);
       	    SendClientMessage(playerid, COLOR_WHITE, "|_______________ Informações do Ban _______________|");
            format(string, sizeof(string), "Seu IP:[%s] está Banido do {1E90FF}Brasil {FFFFFF}Play {1E90FF}Start", ip);
    		SendClientMessage(playerid, COLOR_LIGHTRED, string);
    		if(strcmp(InfoTheus[playerid][pNick],"", true ) == 0)
    		{
    			format(string, sizeof(string), "Admin: %s", InfoTheus[playerid][pAdmBan]);
    		}
    		else
    		{
    			format(string, sizeof(string), "Admin: %s, Nick Fake: %s", InfoTheus[playerid][pAdmBan], InfoTheus[playerid][pNick]);
    		}
        	SendClientMessage(playerid, COLOR_YELLOW, "Para revisão de ban acesse nosso forum: www.brasilplayStart1.forumeiros.com");
    		SendClientMessage(playerid, COLOR_YELLOW, "Atenção: Você só será desbanido caso for inocente !");
            format(string,sizeof(string),"{FF8080}Brasil PlayStart - Banido\n\n{FF8000}Conta:{00FF00} %s\n\n{FF8000}IP: {00FF00}%s\n\n{FF8000}Admin: {00FF00}%s\n\n{FF8000}Motivo: {00FF00}%s \n\n{FF8000}Data:{00FF00} %s \n\n{FF8000}Hora:{00FF00} %s\n\n{FFFFFF}Se Você acha que isto é um erro,Faça Revisão \n\n{00ECEC}* www.brasilplayStart1.forumeiros.com *",PlayerName(playerid),ip,InfoTheus[playerid][pAdmBan],InfoTheus[playerid][pMotivo],InfoTheus[playerid][pData],InfoTheus[playerid][pHora]);
            ShowPlayerDialog(playerid,1339,DIALOG_STYLE_MSGBOX,"{8080FF}Conta Banida Deste Servidor", string, "Sair","");
      		Kick(playerid);
    	}
        return 1;
    }
    return 1;
}

forward AttachObject();
public AttachObject()
{
        for(new carro = 1; carro < MAX_VEHICLES; carro++)
        {
                if(GetVehicleModel(carro) == 560)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0, 0.0+0.5, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 458)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0, 0.0+0.4, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 490)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0+0.3, 0.0+0.7, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 599)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.2, 0.0+0.7, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
        		if(GetVehicleModel(carro) == 596 || GetVehicleModel(carro) == 597 || GetVehicleModel(carro) == 420)
        		{
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0-0.1, 0.0+0.5, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 411)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.3, 0.0-0.1, 0.0+0.4, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;}
                if(GetVehicleModel(carro) == 559)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.4, 0.0+0.4, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 442)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0+0.2, 0.0+0.4, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 480)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.4, 0.0+0.5, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 567)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0+0.1, 0.0+0.5, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 462)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.0, 0.0+0.9, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 522 || GetVehicleModel(carro) == 521)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0+0.1, 0.0+1.0, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 463)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.3, 0.0+0.8, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 470)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.6, 0.0-0.2, 0.0+0.7, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 500)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.4, 0.0-0.3, 0.0+0.6, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 431)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.1, 0.0+4.3, 0.0+1.2, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 523 || GetVehicleModel(carro) == 468)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.0, 0.0+0.9, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 562)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.3, 0.0-0.2, 0.0+0.5, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 579)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0-0.4, 0.0+0.8, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 418)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.5, 0.0+0.3, 0.0+0.5, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
                if(GetVehicleModel(carro) == 586)
                {
                        ObjetoCarro[carro] = CreateObject(1927,0.0,0.0,0.0,0.0,0.0,0.0);
                        SetObjectMaterialText(ObjetoCarro[carro], "-",0, OBJECT_MATERIAL_SIZE_256x128, "Arial", 24,1, 0xFFFFFFFF, 0, 0);
                        AttachObjectToVehicle(ObjetoCarro[carro], carro, 0.0-0.0, 0.0-0.2, 0.0+0.9, 0.0, 0.0, 0.0);
                        VeiculoValido[carro] = 1;
                }
        }
        return true;
}
public OnVehicleMod(playerid,vehicleid,componentid)
{
    new orglolz = GetPlayerOrg(playerid);
    new admlolz = PlayerInfo[playerid][pAdmin];
    new viplolz = PlayerInfo[playerid][pVIP];
    //new Varz=InitComponents(componentid);
    if(orglolz != 25 && admlolz == 0 && viplolz == 0)
    {
        XiterCrashando[playerid] ++;
        SetTimerEx("AntCrash", 2000,false,"i",playerid);
    }
    /*for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            switch (Varz)
            {
                case 1: { Carro[c][mod1]=componentid; }
                case 2: { Carro[c][mod2]=componentid; }
                case 3: { Carro[c][mod3]=componentid; }
                case 4: { Carro[c][mod4]=componentid; }
                case 5: { Carro[c][mod5]=componentid; }
                case 6: { Carro[c][mod6]=componentid; }
                case 7: { Carro[c][mod7]=componentid; }
                case 8: { Carro[c][mod8]=componentid; }
                case 9: { Carro[c][mod9]=componentid; }
                case 10: { Carro[c][mod10]=componentid; }
                case 11: { Carro[c][mod11]=componentid; }
                case 12: { Carro[c][mod12]=componentid; }
                case 13: { Carro[c][mod13]=componentid; }
                case 14: { Carro[c][mod14]=componentid; }
                case 15: { Carro[c][mod15]=componentid; }
                case 16: { Carro[c][mod16]=componentid; }
                case 17: { Carro[c][mod17]=componentid; }
            }
            break;
        }
    }*/
    return 1;
}
public OnVehiclePaintjob(playerid,vehicleid, paintjobid)
{
    /*for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            Carro[c][paintjob]=paintjobid;
            Carro[c][PaintJobOn]=1;
            break;
        }
    }*/
    return 1;
}
public OnVehicleRespray(playerid,vehicleid, color1, color2)
{
    /*for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            Carro[c][CorUm] = color1;
            Carro[c][CorDois] = color2;
            break;
        }
    }*/
    return 1;
}
forward AntCrash(playerid);
public AntCrash(playerid)
{
    XiterCrashando[playerid] --;
    if(XiterCrashando[playerid] > 4)
    {
        format(gstring,sizeof(gstring), "AntiAttack:{80E3FF}%s{E84F33}[ID: {80E3FF}%d{E84F33}] Foi Banido Pelo Anti Crash Player!",PlayerName(playerid),playerid);
    	ABroadCast(COLOR_LIGHTRED,gstring,1);
    	Ban(playerid);
    }
}
forward FakeKillAtivo(playerid);
public FakeKillAtivo(playerid)
{
    if(FakeKillOn == 1)
    {
        antifakekill[playerid] --;
        if(antifakekill[playerid] > 2)
        {
            new NomePlayer[MAX_PLAYER_NAME];
			GetPlayerName(playerid,NomePlayer,sizeof(NomePlayer));
			format(gstring,sizeof(gstring), "AntiAttack:{80E3FF}%s{E84F33}[ID: {80E3FF}%d{E84F33}] Foi acusado ser Fake Kill e Foi Banido(Anti Xiter 2)!",NomePlayer,playerid);
		  	ABroadCast(COLOR_LIGHTRED,gstring,1);
            getdate(year, month, day);
			format(gstring, sizeof(gstring), "FakeKill: %s foi Banido automaticamente acusado de Fake Kill (%d-%d-%d)", PlayerName(playerid),day,month,year);
			AtackLog(gstring);
	        Ban(playerid);
            SetTimer("DesligarFakeKill", 15000, false);
        }
    }
    return 1;
}
forward LigarFakeKill(playerid);
public LigarFakeKill(playerid)
{
    if(FakeKillOn == 0)
    {
        antifakekill[playerid] --;
        if(antifakekill[playerid] > 2)
        {
            antifakekill[playerid] = 0;
			KillTimer(TempoCheckHack);
            format(gstring,sizeof(gstring), "AntiAttack:{80E3FF}%s{E84F33} Pode Ser Fake Kill, Anti Xiter Flood Ligado Automaticamente!",PlayerName(playerid));
            ABroadCast(COLOR_LIGHTRED,gstring,1);
            FakeKillOn = 1;
            SetTimer("DesligarFakeKill", 15000, false);
        }
    }
    return 1;
}
forward DesligarFakeKill();
public DesligarFakeKill()
{
    FakeKillOn = 0;
    format(gstring,sizeof(gstring), "AntiAttack: Anti Fake Kill Desligado Automaticamente!");
	ABroadCast(COLOR_LIGHTRED,gstring,1);
	TempoCheckHack = SetTimer("CheckHack", 4000, 1);
    return 1;
}
forward ShowMessageDB(playerid);
public ShowMessageDB(playerid)
{
    format(strtheus,sizeof(strtheus),"{FF8000}Player:{00FFFF} %s {FF8000}Foi Acusado de Cometer DB em Você\nCaso Seja Verdade Aperte em '{00FFFF}Acusar{FF8000}'!\nCaso contrário aperte em '{00FFFF}Não Acusar{FF8000}'!",kickname);
    ShowPlayerDialog(playerid,1643,DIALOG_STYLE_MSGBOX,"Acusação Driver-By",strtheus,"Acusar","Nao Acusar");
    return 1;
}
public RemoveCone(playerid)
{
    for(new i = 0; i < MaiorID; i++)
	{
		if(IsPlayerConnected(i))
		{
			if(IsACop(playerid))
			{
				DisablePlayerCheckpoint(i);
			}
		}
	}
    for(new x=0;x<sizeof(Cone);x++)
	{
	   DestroyDynamicObject(Cone[x]);
    }
	PlayerInfo[playerid][pCone] = 0;
	return 1;
}
SetPlayerAttachedObjectEx(playerid, slot, model, bone, Float:X, Float:Y, Float:Z, Float:RX, Float:RY, Float:RZ)
{
	if(!pObject[playerid][slotreserved])
	{
		pObject[playerid][slotreserved] = true;
	    pObject[playerid][omodel] = model;
		pObject[playerid][oslot] = slot;
		SetPlayerAttachedObject(playerid, slot, model, bone, X, Y, Z, RX, RY, RZ);
	}
	else
	{
	    SetPlayerAttachedObject(playerid, pObject[playerid][oslot], model, bone, X, Y, Z, RX, RY, RZ);
	}
	return 1;
}
GetEmptySlot(playerid)
{
	for(new i = 0; i < MAX_PLAYER_ATTACHED_OBJECTS; ++i)
	{
		if(!IsPlayerAttachedObjectSlotUsed(playerid, i))
		{
			return i;
		}
	}
	return -1;
}
forward FuncoesBPF(playerid);
public FuncoesBPF(playerid)
{
	new hora,minuto,segundo;
	gettime(hora, minuto, segundo);
	CheckGranaTheus();
    if(minuto == 55 && segundo == 1) { SendClientMessageToAll(0x77D3EEFF, "Faltam 5 minutos pra começar a loteria, compre um bilhete na lotérica"); }
    if(hora == 9 && minuto == 30 && segundo == 0) { SendClientMessageToAll(0x75D8FFFF, "[GUERRA] Faltam apenas 30 Minutos para Iniciar a Guerra no MORRO!"); }
    if(hora == 9 && minuto == 45 && segundo == 0) { SendClientMessageToAll(0xFFCF75FF, "[GUERRA] Faltam apenas 15 Minutos para Iniciar a Guerra no MORRO!"); }
    if(hora == 9 && minuto == 55 && segundo == 0) { SendClientMessageToAll(0xFF7575FF, "[GUERRA] Daqui 5 Minutos começará a Guerra no Morro, Participantes dirijam-se ao Local!"); }
    if(hora == 13 && minuto == 30 && segundo == 0) { SendClientMessageToAll(0x75D8FFFF, "[GUERRA] Faltam apenas 30 Minutos para Iniciar a Guerra no MORRO!"); }
    if(hora == 13 && minuto == 45 && segundo == 0) { SendClientMessageToAll(0xFFCF75FF, "[GUERRA] Faltam apenas 15 Minutos para Iniciar a Guerra no MORRO!"); }
    if(hora == 13 && minuto == 55 && segundo == 0) { SendClientMessageToAll(0xFF7575FF, "[GUERRA] Daqui 5 Minutos começará a Guerra no Morro, Participantes dirijam-se ao Local!"); }
    if(hora == 16 && minuto == 30 && segundo == 0) { SendClientMessageToAll(0x75D8FFFF, "[GUERRA] Faltam apenas 30 Minutos para Iniciar a Guerra no MORRO!"); }
    if(hora == 16 && minuto == 45 && segundo == 0) { SendClientMessageToAll(0xFFCF75FF, "[GUERRA] Faltam apenas 15 Minutos para Iniciar a Guerra no MORRO!"); }
    if(hora == 16 && minuto == 55 && segundo == 0) { SendClientMessageToAll(0xFF7575FF, "[GUERRA] Daqui 5 Minutos começará a Guerra no Morro, Participantes dirijam-se ao Local!"); }
    if(hora == 20 && minuto == 30 && segundo == 0) { SendClientMessageToAll(0x75D8FFFF, "[GUERRA] Faltam apenas 30 Minutos para Iniciar a Guerra no MORRO!"); }
    if(hora == 20 && minuto == 45 && segundo == 0) { SendClientMessageToAll(0xFFCF75FF, "[GUERRA] Faltam apenas 15 Minutos para Iniciar a Guerra no MORRO!"); }
    if(hora == 20 && minuto == 55 && segundo == 0) { SendClientMessageToAll(0xFF7575FF, "[GUERRA] Daqui 5 Minutos começará a Guerra no Morro, Participantes dirijam-se ao Local!"); }
    if(hora == 23 && minuto == 30 && segundo == 0) { SendClientMessageToAll(0x75D8FFFF, "[GUERRA] Faltam apenas 30 Minutos para Iniciar a Guerra no MORRO!"); }
    if(hora == 23 && minuto == 45 && segundo == 0) { SendClientMessageToAll(0xFFCF75FF, "[GUERRA] Faltam apenas 15 Minutos para Iniciar a Guerra no MORRO!"); }
    if(hora == 23 && minuto == 55 && segundo == 0) { SendClientMessageToAll(0xFF7575FF, "[GUERRA] Daqui 5 Minutos começará a Guerra no Morro, Participantes dirijam-se ao Local!"); }
    for(new i = 0; i < MaiorID; i++)
	{
        if(MiraInfo[i] == 1)
		{
			if(GetPlayerTargetPlayer(i) != INVALID_PLAYER_ID)
	        {
                format(gstring, sizeof(gstring), "~n~~n~~n~~n~~n~~n~~n~~n~~r~~h~Armas Info~n~~b~~h~~h~Nome: ~w~%s, ~g~~h~~h~Org: ~w~%s!",PlayerName(GetPlayerTargetPlayer(i)),NomeORG(GetPlayerTargetPlayer(i)));
	            GameTextForPlayer(i, gstring, 1070, 3);
	        }
		}
    }
    return 1;
}
public ModoTrabalho(playerid, modo)
{
    if(modo == 1)
    {
        if(admtrampando[playerid] > 0)
    	{
            admtrampando[playerid] = 0;
    		GetPlayerName(playerid,sendername,sizeof(sendername));
            format(gstring, sizeof(gstring), "Admin: %s Está Jogando, para mais informações /admins.", PlayerName(playerid));
    		SendClientMessageToAll(0x00FFFFFF, gstring);
    		KillTimer(TempoAdministrador);
    		SetPlayerToTeamColor(playerid);
    		ResetPlayerWeapons(playerid);
    		SetPlayerHealth(playerid,100);
            PhoneOnline[playerid] = 0;
            SetPlayerSkin(playerid,skinadm[playerid]);
            SendClientMessage(playerid, 0x808080AA, "Você Saiu de modo Trabalho, e seu celular foi Ligado Automaticamente!");
        }
        else
    	{
    		admtrampando[playerid] = 1;
    		GetPlayerName(playerid,sendername,sizeof(sendername));
            format(gstring, sizeof(gstring), "Admin: %s Está Trabalhando, para mais informações /admins.", PlayerName(playerid));
    		SendClientMessageToAll(0x00FFFFFF, gstring);
    		SetPlayerToTeamColor(playerid);
           	TempoAdministrador = SetTimerEx("Administrador", 100, true, "i", playerid);
            PhoneOnline[playerid] = 1;
            skinadm[playerid] = GetPlayerSkin(playerid);
            SetPlayerSkin(playerid, 217);
			SendClientMessage(playerid, 0x808080AA, "Você Entrou em modo Trabalho, e seu Celular foi Desligado Automaticamente!");
            SetPlayerAttachedObject(playerid,0,19347,1,0.225000,0.126000,-0.0799999,-110.200042,20.700006,57.000038,1.000000,1.000000,1.0000000);
		}
    }
    else if(modo == 2)
    {
        if(admtrampando[playerid] > 0)
    	{
            admtrampando[playerid] = 0;
    		GetPlayerName(playerid,sendername,sizeof(sendername));
            format(gstring, sizeof(gstring), "Admin: %s Está Jogando, para mais informações /admins.", PlayerName(playerid));
    		SendClientMessageToAll(0x00FFFFFF, gstring);
    		KillTimer(TempoAdministrador);
    		SetPlayerToTeamColor(playerid);
    		ResetPlayerWeapons(playerid);
    		SetPlayerHealth(playerid,100);
            PhoneOnline[playerid] = 0;
            SetPlayerSkin(playerid,skinadm[playerid]);
            SendClientMessage(playerid, 0x808080AA, "Você Saiu de modo Trabalho, e seu celular foi Ligado Automaticamente!");
        }
    }
    else if(modo == 3000)
    {
        if(admtrampando[playerid] > 0)
        {
            admtrampando[playerid] = 0;
            KillTimer(TempoAdministrador);
            SetPlayerToTeamColor(playerid);
            ResetPlayerWeapons(playerid);
            SetPlayerHealth(playerid,100);
            PhoneOnline[playerid] = 0;
            SendClientMessage(playerid, 0x808080AA, "Você Saiu de modo Trabalho, e seu celular foi Ligado Automaticamente!");
        }
        else
        {
        	admtrampando[playerid] = 1;
        	SetPlayerToTeamColor(playerid);
            TempoAdministrador = SetTimerEx("Administrador", 100, true, "i", playerid);
            PhoneOnline[playerid] = 1;
            SendClientMessage(playerid, 0x808080AA, "Você Entrou em modo Trabalho, e seu Celular foi Desligado Automaticamente!");
            SetPlayerAttachedObject(playerid,0,19347,1,0.225000,0.126000,-0.0799999,-110.200042,20.700006,57.000038,1.000000,1.000000,1.0000000);
        }
    }
    return true;
}
forward ShowGz(playerid);
public ShowGz(playerid)
{
    if(donoestacao == 0)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, 0xC0C0C0AA);
    }
    if(donoestacao == 12)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_LH);
    }
    if(donoestacao == 13)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_YAKUZA);
    }
    if(donoestacao == 11)
	{
    	GangZoneShowForPlayer(playerid, GZEstacao, COLORGZ_PF);
    }
    if(donocasarao == 0)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, 0xC0C0C0AA);
    }
    if(donocasarao == 12)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_LH);
    }
    if(donocasarao == 13)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_YAKUZA);
    }
    if(donocasarao == 11)
    {
    	GangZoneShowForPlayer(playerid, GZCasarao, COLORGZ_PF);
    }
    if(donoPark == 0)
	{
		GangZoneShowForPlayer(playerid, GZPark, 0xC0C0C0AA);
	}
    if(donoPark == 25)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_DRIFT);
	}
    if(donoPark == 1)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_PM);
	}
	if(donoPark == 14)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_GROVE_COLOR);
	}
	if(donoPark == 17)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_BALLAS_COLOR);
	}
    if(donoPark == 18)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_VAGOS_COLOR);
	}
	if(donoPark == 5)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_AZTECAS_COLOR);
	}
	if(donoPark == 2)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_ROTA);
	}
    if(donoPark == 21)
	{
		GangZoneShowForPlayer(playerid, GZPark, GCOP_COLOR);
	}
    if(donoPark == 21)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_HELLS);
	}
    if(donoPark == 22)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_MONGOLS);
	}
    if(donoPark == 23)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_SONS);
	}
    if(donoPark == 20)
	{
		GangZoneShowForPlayer(playerid, GZPark, 0xCCFF99AA);
	}
    if(donoCemiterio == 0)
	{
		GangZoneShowForPlayer(playerid, GZPark, 0xC0C0C0AA);
	}
    if(donoCemiterio == 2)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_ROTA);
	}
    if(donoCemiterio == 1)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_PM);
	}
	if(donoCemiterio == 14)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_GROVE_COLOR);
	}
	if(donoCemiterio == 17)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_BALLAS_COLOR);
	}
    if(donoCemiterio == 18)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_VAGOS_COLOR);
	}
	if(donoCemiterio == 5)
	{
		GangZoneShowForPlayer(playerid, GZPark, TEAM_AZTECAS_COLOR);
	}
	if(donoCemiterio == 2)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_ROTA);
	}
    if(donoCemiterio == 21)
	{
		GangZoneShowForPlayer(playerid, GZPark, GCOP_COLOR);
	}
    if(donoCemiterio == 21)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_HELLS);
	}
    if(donoCemiterio == 22)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_MONGOLS);
	}
    if(donoCemiterio == 23)
	{
		GangZoneShowForPlayer(playerid, GZPark, COR_SONS);
	}
    if(donoCemiterio == 20)
	{
		GangZoneShowForPlayer(playerid, GZPark, 0xCCFF99AA);
	}
	if(donoPosto == 0)
	{
        Text3DTheus();//desbuga as inf de dono do posto
		GangZoneShowForPlayer(playerid, GZPosto, 0xC0C0C0AA);
	}
    if(donoPosto == 1)
	{
        Text3DTheus();//desbuga as inf de dono do posto
		GangZoneShowForPlayer(playerid, GZPosto, COR_PM);
	}
	if(donoPosto == 21)
	{
        Text3DTheus();//desbuga as inf de dono do posto
		GangZoneShowForPlayer(playerid, GZPosto, COR_HELLS);
	}
	if(donoPosto == 22)
	{
        Text3DTheus();//desbuga as inf de dono do posto
		GangZoneShowForPlayer(playerid, GZPosto, COR_MONGOLS);
	}
    if(donoPosto == 23)
	{
        Text3DTheus();//desbuga as inf de dono do posto
		GangZoneShowForPlayer(playerid, GZPosto, COR_SONS);
	}
    if(donoPosto == 2)
	{
        Text3DTheus();//desbuga as inf de dono do posto
		GangZoneShowForPlayer(playerid, GZPosto, COR_ROTA);
	}
    if(donoPosto == 25)
	{
        Text3DTheus();//desbuga as inf de dono do posto
		GangZoneShowForPlayer(playerid, GZPosto, COR_TRIAD);
	}
    if(donoShop == 0)
	{
		GangZoneShowForPlayer(playerid, GZShop, 0xC0C0C0AA);
	}
    if(donoShop == 1)
	{
		GangZoneShowForPlayer(playerid, GZShop, COR_PM);
	}
	if(donoShop == 14)
	{
		GangZoneShowForPlayer(playerid, GZShop, TEAM_GROVE_COLOR);
	}
	if(donoShop == 17)
	{
		GangZoneShowForPlayer(playerid, GZShop, TEAM_BALLAS_COLOR);
	}
	if(donoShop == 18)
	{
		GangZoneShowForPlayer(playerid, GZShop, TEAM_VAGOS_COLOR);
	}
	if(donoShop == 5)
	{
		GangZoneShowForPlayer(playerid, GZShop, TEAM_AZTECAS_COLOR);
	}
	if(donoShop == 2)
	{
		GangZoneShowForPlayer(playerid, GZShop, COR_ROTA);
	}
    if(donoShop == 21)
	{
		GangZoneShowForPlayer(playerid, GZShop, COR_HELLS);
	}
	if(donoShop == 22)
	{
		GangZoneShowForPlayer(playerid, GZShop, COR_MONGOLS);
	}
    if(donoShop == 23)
	{
		GangZoneShowForPlayer(playerid, GZShop, COR_SONS);
	}
    if(donoShop == 19)
	{
		GangZoneShowForPlayer(playerid, GZShop, 0xF60000AA);
	}
    if(donoShop == 20)
	{
		GangZoneShowForPlayer(playerid, GZShop, 0xCCFF99AA);
	}
    if(donoShop == 25)
	{
		GangZoneShowForPlayer(playerid, GZShop, COR_DRIFT);
	}
    if(donoskate == 0)
	{
		GangZoneShowForPlayer(playerid, GZSkate, 0xC0C0C0AA);
	}
	if(donoskate == 14)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_GROVE_COLOR);
	}
	if(donoskate == 17)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_BALLAS_COLOR);
	}
	if(donoskate == 18)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_VAGOS_COLOR);
	}
	if(donoskate == 5)
	{
		GangZoneShowForPlayer(playerid, GZSkate, TEAM_AZTECAS_COLOR);
	}
	if(donoskate == 2)
	{
		GangZoneShowForPlayer(playerid, GZSkate, COR_ROTA);
	}
	if(donoskate == 1)
	{
		GangZoneShowForPlayer(playerid, GZSkate, GCOP_COLOR);
	}
    if(donoskate == 21)
	{
		GangZoneShowForPlayer(playerid, GZSkate, COR_HELLS);
	}
	if(donoskate == 22)
	{
		GangZoneShowForPlayer(playerid, GZSkate, COR_MONGOLS);
	}
    if(donoskate == 23)
	{
		GangZoneShowForPlayer(playerid, GZSkate, COR_SONS);
	}
    if(donoskate == 19)
	{
		GangZoneShowForPlayer(playerid, GZSkate, 0xF60000AA);
	}
    if(donoskate == 20)
	{
		GangZoneShowForPlayer(playerid, GZSkate, 0xCCFF99AA);
	}
    if(donoskate == 25)
	{
		GangZoneShowForPlayer(playerid, GZSkate, COR_DRIFT);
	}

    if(donopantano == 0)
	{
		GangZoneShowForPlayer(playerid, GZPantano, 0xC0C0C0AA);
	}
    if(donopantano == 1)
	{
		GangZoneShowForPlayer(playerid, GZPantano, COR_EXE);
	}
	if(donopantano == 2)
	{
		GangZoneShowForPlayer(playerid, GZPantano, COR_TAL);
	}
	if(donopantano == 3)
	{
		GangZoneShowForPlayer(playerid, GZPantano, COR_AL);
	}
	return true;
}
stock IsPlayerInArea(playerid, Float:max_x, Float:min_x, Float:max_y, Float:min_y)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	if(X <= max_x && X >= min_x && Y <= max_y && Y >= min_y) return 1;
	return 0;
}

stock IsPlayerInWater(playerid)
{
	new Float:x,Float:y,Float:pz;
	GetPlayerPos(playerid,x,y,pz);
	if (
 	(IsPlayerInArea(playerid, 2032.1371, 1841.2656, 1703.1653, 1467.1099) && pz <= 9.0484) //lv piratenschiff
  	|| (IsPlayerInArea(playerid, 2109.0725, 2065.8232, 1962.5355, 10.8547) && pz <= 10.0792) //lv visage
  	|| (IsPlayerInArea(playerid, -492.5810, -1424.7122, 2836.8284, 2001.8235) && pz <= 41.06) //lv staucamm
  	|| (IsPlayerInArea(playerid, -2675.1492, -2762.1792, -413.3973, -514.3894) && pz <= 4.24) //sf südwesten kleiner teich
  	|| (IsPlayerInArea(playerid, -453.9256, -825.7167, -1869.9600, -2072.8215) && pz <= 5.72) //sf gammel teich
  	|| (IsPlayerInArea(playerid, 1281.0251, 1202.2368, -2346.7451, -2414.4492) && pz <= 9.3145) //ls neben dem airport
  	|| (IsPlayerInArea(playerid, 2012.6154, 1928.9028, -1178.6207, -1221.4043) && pz <= 18.45) //ls mitte teich
  	|| (IsPlayerInArea(playerid, 2326.4858, 2295.7471, -1400.2797, -1431.1266) && pz <= 22.615) //ls weiter südöstlich
  	|| (IsPlayerInArea(playerid, 2550.0454, 2513.7588, 1583.3751, 1553.0753) && pz <= 9.4171) //lv pool östlich
  	|| (IsPlayerInArea(playerid, 1102.3634, 1087.3705, -663.1653, -682.5446) && pz <= 112.45) //ls pool nordwestlich
  	|| (IsPlayerInArea(playerid, 1287.7906, 1270.4369, -801.3882, -810.0527) && pz <= 87.123) //pool bei maddog's haus oben
  	|| (pz < 1.5)
	)
	{
	    return 1;
	}
	return 0;
}
stock IsPlayerInPref(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 1396.344360 && y >= -1864.869140 && x <= 1558.344360 && y <= -1747.869140) return 1; // morro 1
    else return 0;
}
forward GetPlayerWanteDLevel(playerid);
public GetPlayerWanteDLevel(playerid)
{
    new nivel = 0;
	if(WantedPoints[playerid] > 0)
	{
		nivel = WantedPoints[playerid];
	}
	return nivel;
}
forward CarregarPlayer(playerid);
public CarregarPlayer(playerid)
{
	new file[128];
	format(file, sizeof(file), OpenAccPlayer, PlayerName(playerid));
                new key[ 128 ] , val[ 128 ], Data[ 128 ];
                new File: UserFile = fopen(file, io_read);
            	if ( UserFile )
            	{
    			    while ( fread( UserFile , Data , sizeof( Data ) ) )
    				{
    					key = ini_GetKey( Data );
                        if( strcmp( key , "Level" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLevel] = strval( val ); }
                        if( strcmp( key , "Respeito" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pExp] = strval( val ); }
                        if( strcmp( key , "Online" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pOnline] = strval( val ); }
    			    	if( strcmp( key , "AdminLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAdmin] = strval( val ); }
                        if( strcmp( key , "HelpLevel" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHelper] = strval( val ); }
                        if( strcmp( key , "DonateRank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVIP] = strval( val ); }
    			        if( strcmp( key , "UpgradePoints" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][gPupgrade] = strval( val ); }
    			        if( strcmp( key , "ConnectedTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConnectTime] = strval( val ); }
    			        if( strcmp( key , "Registrado" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pReg] = strval( val ); }
    			        if( strcmp( key , "Sex" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSex] = strval( val ); }
    			        if( strcmp( key , "Money" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCash] = strval( val ); }
    			        if( strcmp( key , "Bank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pConta] = strval( val ); }
    			        if( strcmp( key , "Crimes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCrimes] = strval( val ); }
    			        if( strcmp( key , "Kills" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pKills] = strval( val ); }
    			        if( strcmp( key , "Deaths" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDeaths] = strval( val ); }
    			        if( strcmp( key , "Phonebook" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPhoneBook] = strval( val ); }
    			        if( strcmp( key , "LottoNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLottoNr] = strval( val ); }
    			        if( strcmp( key , "Fishes" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishes] = strval( val ); }
    			        if( strcmp( key , "BiggestFish" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBiggestFish] = strval( val ); }
    			        if( strcmp( key , "Emprego" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pEmprego] = strval( val ); }
    			        if( strcmp( key , "Paycheck" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSalario] = strval( val ); }
    			        if( strcmp( key , "HeadValue" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHeadValue] = strval( val ); }
    			        if( strcmp( key , "Jailed" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailed] = strval( val ); }
    			        if( strcmp( key , "JailTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pJailTime] = strval( val ); }
    			        if( strcmp( key , "Materiais" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMats] = strval( val ); }
    			        if( strcmp( key , "Maconha" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas] = strval( val ); }
    			        if( strcmp( key , "Cocaina" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas2] = strval( val ); }
    			        if( strcmp( key , "Crack" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogas3] = strval( val ); }
    			        if( strcmp( key , "Lider" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLider] = strval( val ); }
                        if( strcmp( key , "FamyLider" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFamyLider] = strval( val ); }
    			        if( strcmp( key , "Member" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMembro] = strval( val ); }
                        if( strcmp( key , "MemberF" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFamyMember] = strval( val ); }
    			        if( strcmp( key , "Rank" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCargo] = strval( val ); }
    			        if( strcmp( key , "Char" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSkin] = strval( val ); }
    			        if( strcmp( key , "ContractTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pContractTime] = strval( val ); }
    			        if( strcmp( key , "DetSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDetSkill] = strval( val ); }
    			        if( strcmp( key , "SexSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSexSkill] = strval( val ); }
    			        if( strcmp( key , "BoxSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoxSkill] = strval( val ); }
    			        if( strcmp( key , "LawSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLawSkill] = strval( val ); }
    			        if( strcmp( key , "MechSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMechSkill] = strval( val ); }
    			        if( strcmp( key , "NewsSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pNewsSkill] = strval( val ); }
    			        if( strcmp( key , "DrogasSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrogasSkill] = strval( val ); }
    			        if( strcmp( key , "CookSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCookSkill] = strval( val ); }
    			        if( strcmp( key , "FishSkill" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishSkill] = strval( val ); }
    			        if( strcmp( key , "pSHealth" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSHealth] = floatstr( val ); }
    			        if( strcmp( key , "Team" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTeam] = strval( val ); }
    			        if( strcmp( key , "PhoneNr" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPnumber] = strval( val ); }
    			        if( strcmp( key , "House" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPHousekey] = strval( val ); }
    			        if( strcmp( key , "Bizz" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPbiskey] = strval( val ); }
    			        if( strcmp( key , "CarLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCarLic] = strval( val ); }
                        if( strcmp( key , "FlyLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFlyLic] = strval( val ); }
    					if( strcmp( key , "BoatLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pBoatLic] = strval( val ); }
    			        if( strcmp( key , "FishLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pFishLic] = strval( val ); }
    			        if( strcmp( key , "GunLic" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pGunLic] = strval( val ); }
    			        if( strcmp( key , "PayDay" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPayDay] = strval( val ); }
    			        if( strcmp( key , "CDPlayer" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pCDPlayer] = strval( val ); }
    			        if( strcmp( key , "Wins" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWins] = strval( val ); }
    			        if( strcmp( key , "Loses" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLoses] = strval( val ); }
    			        if( strcmp( key , "AlcoholPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pAlcoholPerk] = strval( val ); }
    			        if( strcmp( key , "DrugPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDrugPerk] = strval( val ); }
    			        if( strcmp( key , "MiserPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMiserPerk] = strval( val ); }
    			        if( strcmp( key , "PainPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pPainPerk] = strval( val ); }
    			        if( strcmp( key , "TraderPerk" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTraderPerk] = strval( val ); }
    			        if( strcmp( key , "Tutorial" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pTut] = strval( val ); }
    			        if( strcmp( key , "Avisos" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pWarns] = strval( val ); }
    			        if( strcmp( key , "Married" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pMarried] = strval( val ); }
    			        if( strcmp( key , "Spawn" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSpawn] = strval( val ); }
    			        if( strcmp( key , "SafeMaconha" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas] = strval( val ); }
    			        if( strcmp( key , "SafeCocaina" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas2] = strval( val ); }
    			        if( strcmp( key , "SafeCrack" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pSafeDrogas3] = strval( val ); }
    			        if( strcmp( key , "NivelProcurado" , true ) == 0 ) { val = ini_GetValue( Data ); WantedPoints[playerid] = strval( val ); }
    			        if( strcmp( key , "SafeMateriais" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][psMats] = strval( val ); }
    			        if( strcmp( key , "Luta" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLuta] = strval( val ); }
    			        if( strcmp( key , "Dorgado" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDorgado] = strval( val ); }
    			        if( strcmp( key , "Dorgado2" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDorgado2] = strval( val ); }
    			        if( strcmp( key , "Doenca" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pDoenca] = strval( val ); }
                        if( strcmp( key , "HoraLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastHora] = strval( val ); }
                        if( strcmp( key , "MinutoLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastMinuto] = strval( val ); }
                        if( strcmp( key , "SegundoLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastSegundo] = strval( val ); }
                        if( strcmp( key , "DiaLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastDia] = strval( val ); }
                        if( strcmp( key , "MesLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastMes] = strval( val ); }
                        if( strcmp( key , "AnoLogin" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pLastAno] = strval( val ); }
                        if( strcmp( key , "Votei" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pVotou] = strval( val ); }
                        if( strcmp( key , "Hospital" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHosp] = strval( val ); }
    			        if( strcmp( key , "HospitalTime" , true ) == 0 ) { val = ini_GetValue( Data ); PlayerInfo[playerid][pHospTime] = strval( val ); }
                        if( strcmp( key , "MarriedTo" , true ) == 0 ) { val = ini_GetValue( Data ); strmid(PlayerInfo[playerid][pMarriedTo], val, 0, strlen(val)-1, 255); }
                    }//end while
                    fclose(UserFile);//close the file after everything has been read in the while
                    //format(PlayerInfo[playerid][pMarriedTo], 128, "%s", dini_Get(file, "MarriedTo"));
				}
	ResetGranaTheus(playerid);
	GranaTheus(playerid,PlayerInfo[playerid][pCash]);
    CurrentMoney[playerid] = PlayerInfo[playerid][pCash];
	return 1;
}
forward SalvarContas();
public SalvarContas(){ for(new i = 0; i < MaiorID; i++) { SalvarPlayer(i); } return true; }
stock frename(oldname[],newname[])
 {
    if(fexist(oldname) && !fexist(newname))
    {
        new File: oldfile, File: newfile, str[0x800];
        oldfile = fopen(oldname, io_read);
        newfile = fopen(newname, io_write);
        fread(oldfile, str);
        fclose(oldfile);
        fremove(oldname);
        fwrite(newfile, str);
        fclose(newfile);
        return 1;
    }
    return 0;
}
#pragma unused frename
forward SaveCarros();
public SaveCarros()
{
	new idx;
	new File: file2;
	while (idx < sizeof(Carro))
	{
		//if(Carro[idx][CarroON] == 0) strmid(Carro[idx][Dono], "Ninguem", 0, strlen("Ninguem"), 64);
		new coordsstring[512];
		format(coordsstring, sizeof(coordsstring), "%s|%d|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
        Carro[idx][Dono],Carro[idx][Modelo],Carro[idx][cSpawnX],Carro[idx][cSpawnY],Carro[idx][cSpawnZ],Carro[idx][cAngulo],Carro[idx][CarroON],
        Carro[idx][CorUm],Carro[idx][CorDois],Carro[idx][Trancado],Carro[idx][mod1],Carro[idx][mod2],Carro[idx][mod3],Carro[idx][mod4],Carro[idx][mod5],
		Carro[idx][mod6],Carro[idx][mod7],Carro[idx][mod8],Carro[idx][mod9],Carro[idx][mod10],Carro[idx][mod11],Carro[idx][mod12],Carro[idx][mod13],Carro[idx][mod14],
		Carro[idx][mod15],Carro[idx][mod16],Carro[idx][mod17],Carro[idx][paintjob],Carro[idx][PaintJobOn],Carro[idx][cDate]);
        printf("Carro Dono: %s, Salvo!", Carro[idx][Dono]);
		if(idx == 0)
		{
			file2 = fopen("PlayStart/Carros.cfg", io_write);
		}
		else
		{
			file2 = fopen("PlayStart/Carros.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}
forward LoadCarros();
public LoadCarros()
{
	new arrCoords[30][64];
	new strFromFile2[512];
	new File: file = fopen("PlayStart/Carros.cfg", io_read);
	if (file)
	{
	    new idx = 0;
	    while(idx < sizeof(Carro))
		{
		    fread(file, strFromFile2);
		    split(strFromFile2, arrCoords, '|');
		    strmid(Carro[idx][Dono], arrCoords[0], 0, strlen(arrCoords[0]), 255);
		    Carro[idx][Modelo] = strval(arrCoords[1]);
            Carro[idx][cSpawnX] = floatstr(arrCoords[2]);
            Carro[idx][cSpawnY] = floatstr(arrCoords[3]);
            Carro[idx][cSpawnZ] = floatstr(arrCoords[4]);
            Carro[idx][cAngulo] = floatstr(arrCoords[5]);
            Carro[idx][CarroON] = strval(arrCoords[6]);
            Carro[idx][CorUm] = strval(arrCoords[7]);
            Carro[idx][CorDois] = strval(arrCoords[8]);
            Carro[idx][Trancado] = strval(arrCoords[9]);
            Carro[idx][mod1] = strval(arrCoords[10]);
            Carro[idx][mod2] = strval(arrCoords[11]);
            Carro[idx][mod3] = strval(arrCoords[12]);
            Carro[idx][mod4] = strval(arrCoords[13]);
            Carro[idx][mod5] = strval(arrCoords[14]);
            Carro[idx][mod6] = strval(arrCoords[15]);
            Carro[idx][mod7] = strval(arrCoords[16]);
            Carro[idx][mod8] = strval(arrCoords[17]);
            Carro[idx][mod9] = strval(arrCoords[18]);
            Carro[idx][mod10] = strval(arrCoords[19]);
            Carro[idx][mod11] = strval(arrCoords[20]);
            Carro[idx][mod12] = strval(arrCoords[21]);
            Carro[idx][mod13] = strval(arrCoords[22]);
            Carro[idx][mod14] = strval(arrCoords[23]);
            Carro[idx][mod15] = strval(arrCoords[24]);
            Carro[idx][mod16] = strval(arrCoords[25]);
            Carro[idx][mod17] = strval(arrCoords[26]);
            Carro[idx][paintjob] = strval(arrCoords[27]);
            Carro[idx][PaintJobOn] = strval(arrCoords[28]);
            Carro[idx][cDate] = strval(arrCoords[29]);
			idx++;
		}
	}
	fclose(file);
	return 1;
}
forward CheckDonoCarro(playerid);
public CheckDonoCarro(playerid)
{
    if(IsPlayerConnected(playerid))
	{
		// carros
		new contarchave = 0;
		for(new h = 0; h < sizeof(Carro); h++)
		{
        	if(strcmp(PlayerName(playerid),Carro[h][Dono],true)==0)
        	{
        	    PlayerInfo[playerid][pChave] = Carro[h][CarroID];
        	    contarchave ++;
        	    break;
        	}
		}
		if(contarchave == 0) PlayerInfo[playerid][pChave] = 0;
	}
	return 1;
}
forward CheckCarros();
public CheckCarros()
{
    new olddate;
	new curdate = getdate();
    new string[128];
    new CountarVendidos = 0;
	for(new i = 0; i < sizeof(Carro); i++)
	{
		/*if(Carro[i][CarroON] == 1 && Carro[i][cDate] > 200)
		{
				gettime(v[3], v[4], v[5]);
				format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] Carro ID:%d vendido, Dono:%s, Tempo:%d\n", v[2], v[1], v[0], v[3], v[4], v[5], Carro[i][CarroID], Carro[i][Dono], curdate-olddate);
				new File:hFile;
				hFile = fopen("Logs/CheckCarros.log", io_append);
				fwrite(hFile, string);
				fclose(hFile);
                Carro[i][CarroON] = 0;
                Carro[i][Modelo] = 0;
                Carro[i][cSpawnX] = 0.000000;
                Carro[i][cSpawnY] = 0.000000;
                Carro[i][cSpawnZ] = 0.000000;
                Carro[i][cAngulo] = 0.000000;
                Carro[i][CorUm] = 0;
                Carro[i][CorDois] = 0;
                Carro[i][Trancado] = 0;
                Carro[i][CarroON] = 0;
                DestroyVehicle(Carro[i][CarroID]);
                LimparTunning(i);
                Carro[i][CarroID] = 0;
                strmid(Carro[i][Dono], "Ninguem", 0, strlen("Ninguem"), 256);
                CountarVendidos++;
		}   */
        if(Carro[i][CarroON] == 1 && Carro[i][cDate] > 3)
		{
			olddate = Carro[i][cDate];
			if(curdate-olddate >= 4)
			{
				gettime(v[3], v[4], v[5]);
				format(string, sizeof(string), "[%d/%d/%d] [%d:%d:%d] Carro ID:%d vendido, Dono:%s, Tempo:%d\n", v[2], v[1], v[0], v[3], v[4], v[5], Carro[i][CarroID], Carro[i][Dono], curdate-olddate);
				new File:hFile;
				hFile = fopen("Logs/CheckCarros.log", io_append);
				fwrite(hFile, string);
				fclose(hFile);

                Carro[i][CarroON] = 0;
                Carro[i][Modelo] = 0;
                Carro[i][cSpawnX] = 0.000000;
                Carro[i][cSpawnY] = 0.000000;
                Carro[i][cSpawnZ] = 0.000000;
                Carro[i][cAngulo] = 0.000000;
                Carro[i][CorUm] = 0;
                Carro[i][CorDois] = 0;
                Carro[i][Trancado] = 0;
                Carro[i][CarroON] = 0;
                DestroyVehicle(Carro[i][CarroID]);
                LimparTunning(i);
                Carro[i][CarroID] = 0;
                strmid(Carro[i][Dono], "Ninguem", 0, strlen("Ninguem"), 256);
                CountarVendidos++;
			}
		}
        if(Carro[i][CarroON] == 0) Carro[i][cDate] = 0;
	}
	SaveCarros();
    format(string,sizeof(string),"[PlayStart Concessionária] {FFFFFF}Foram Liberados %d Carros para a Venda.", CountarVendidos);
    if(CountarVendidos!=0) { OOCNews(0x00FFFFFF,string); }
    return 1;
}
forward ComprarCarro(playerid);
public ComprarCarro(playerid)
{
	new NumCarros = 0, GranaComprar,string[128];
    if(PlayerInfo[playerid][pVIP] == 0)
    {
         GranaComprar = PRECOCARRO;
    }
    else if(PlayerInfo[playerid][pVIP] == 1)
    {
         GranaComprar = 3000000;
    }
    else if(PlayerInfo[playerid][pVIP] == 2)
    {
         GranaComprar = 1000000;
    }
    else if(PlayerInfo[playerid][pVIP] == 3)
    {
        GranaComprar = 1;
    }
	if(ModeloCarro[playerid] >= 1)
    {
        if(PlayerInfo[playerid][pChave] == 0)
        {
            if(GetGranaTheus(playerid) >= GranaComprar)
            {
                for(new idx = 0; idx < sizeof(Carro); idx++)
    			{
                    if(strcmp(Carro[idx][Dono],"Ninguem",true)==0)
                    {
                        new rand = random(sizeof(ConceSpawn));
                        strmid(Carro[idx][Dono], PlayerName(playerid), 0, strlen(PlayerName(playerid)), MAX_PLAYER_NAME);
                        Carro[idx][CarroID] = CreateVehicle(ModeloCarro[playerid],ConceSpawn[rand][0], ConceSpawn[rand][1], ConceSpawn[rand][2],ConceSpawn[rand][3],0,0, -1);
                        PutPlayerInVehicle(playerid, Carro[idx][CarroID], 0);
                        Carro[idx][CarroON] = 0;
                        Carro[idx][Modelo] = ModeloCarro[playerid];
                        if(PlayerInfo[playerid][pVIP] == 0)
                        {
                            SendClientMessage(playerid, 0x77EEA1FF, "[BPF Concessionária] {FFFFFF}Parabéns! Você Comprou um Carro Novo no Valor de R$ 6000000!");
                            GranaTheus(playerid, -PRECOCARRO);
            			    SBizzInfo[24][sbTill] += PRECOCARRO;
                        }
                        else if(PlayerInfo[playerid][pVIP] == 1)
                        {
                            SendClientMessage(playerid, 0x77EEA1FF, "[BPF Concessionária] {FFFFFF}Parabéns! Você Comprou um Carro Novo, e por Ser VIP Normal, Pagou R$ 3000000!");
                            GranaTheus(playerid, -3000000);
            			    SBizzInfo[24][sbTill] += 3000000;
                        }
                        else if(PlayerInfo[playerid][pVIP] == 2)
                        {
                            SendClientMessage(playerid, 0x77EEA1FF, "[BPF Concessionária] {FFFFFF}Parabéns! Você Comprou um Carro Novo, e por Ser VIP Premium, Pagou R$ 1000000!");
                            GranaTheus(playerid, -1000000);
            			    SBizzInfo[24][sbTill] += 1000000;
                        }
                        else if(PlayerInfo[playerid][pVIP] == 3)
                        {
                            SendClientMessage(playerid, 0x77EEA1FF, "[BPF Concessionária] {FFFFFF}Parabéns! Você Comprou um Carro Novo, e por Ser VIP Sócio, Levará Gratuitamente!");
                        }
                        SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Concessionária] {FFFFFF}Estacione Seu carro ou Ele será Vendido automaticamente, Quando Reiniciar o Servidor!");
                        SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Concessionária] {FFFFFF}Estacione Seu carro ou Ele será Vendido automaticamente, Quando Reiniciar o Servidor!");
                        SendClientMessage(playerid, 0x77EEA1FF, "[BPF Concessionária]{FFFFFF}Digite /Painel Para Abrir o Menu de Controle do Seu Veículo!");
                        PlayerPlaySound(playerid, 1084, 0.0, 0.0, 0.0);
                        PlayerInfo[playerid][pChave] = Carro[idx][CarroID];
                        format(gstring, sizeof(gstring), "BPF %d", Carro[idx][CarroID]);
            			SetVehicleNumberPlate(Carro[idx][CarroID], gstring);
            			for(new i;i<MaiorID;i++) {CheckDonoCarro(i);}
            			SaveCarros();
                        new curdate = getdate();
                        for(new h = 0; h < sizeof(Carro); h++)
                    	{
                    		if (strcmp(PlayerName(playerid), Carro[h][Dono], true) == 0)
                    		{
                    			Carro[h][cDate] = curdate;
                                break;
                    		}
                    	}
            			NumCarros++;
						break;
				   }
                }
                if(NumCarros==0) return SendClientMessage(playerid, 0xFFA8A8FF, "[BPF Concessionária] {FFFFFF}Todos os Veículos ja Foram Vendidos, Compre Usado ou Volte mais tarde!");
            }
            else
            {
                format(string,sizeof(string),"[BPF Concessionária] {FFFFFF} Você Não tem Dinheiro suficiente (R$ %d)!", GranaComprar);
                SendClientMessage(playerid, 0x77EEA1FF, string);
				return true;
            }
        }
        else
        {
            SendClientMessage(playerid, 0x77EEA1FF, "[BPF Concessionária] {FFFFFF}Você Ja possui um Veículo!");
            SendClientMessage(playerid, 0x77EEA1FF, "[BPF Concessionária] {FFFFFF}Para Vender Vá a Concessionária, Selecione a Opção 'Vender Veículo'!");
        }
    }
    return true;
}
forward CarregarTunning(vehicleid);
public CarregarTunning(vehicleid)
{
            if(Carro[vehicleid][mod1]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod1]); }
            if(Carro[vehicleid][mod2]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod2]); }
            if(Carro[vehicleid][mod3]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod3]); }
            if(Carro[vehicleid][mod4]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod4]); }
            if(Carro[vehicleid][mod5]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod5]); }
            if(Carro[vehicleid][mod6]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod6]); }
            if(Carro[vehicleid][mod7]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod7]); }
            if(Carro[vehicleid][mod8]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod8]); }
            if(Carro[vehicleid][mod9]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod9]); }
            if(Carro[vehicleid][mod10]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod10]); }
            if(Carro[vehicleid][mod11]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod11]); }
            if(Carro[vehicleid][mod12]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod12]); }
            if(Carro[vehicleid][mod13]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod13]); }
            if(Carro[vehicleid][mod14]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod14]); }
            if(Carro[vehicleid][mod15]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod15]); }
            if(Carro[vehicleid][mod16]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod16]); }
            if(Carro[vehicleid][mod17]!=0) { AddVehicleComponentEx(Carro[vehicleid][CarroID],Carro[vehicleid][mod17]); }
            ChangeVehicleColorEx(Carro[vehicleid][CarroID],Carro[vehicleid][CorUm],Carro[vehicleid][CorDois]);
            if(Carro[vehicleid][PaintJobOn]==1)
			{
				ChangeVehiclePaintjobEx(Carro[vehicleid][CarroID],Carro[vehicleid][paintjob]);
			}
   			return 1;
}
stock LimparTunning(vehicleid)
{
 	Carro[vehicleid][mod1] = 0;
	Carro[vehicleid][mod2] = 0;
	Carro[vehicleid][mod3] = 0;
	Carro[vehicleid][mod4] = 0;
	Carro[vehicleid][mod5] = 0;
	Carro[vehicleid][mod6] = 0;
	Carro[vehicleid][mod7] = 0;
	Carro[vehicleid][mod8] = 0;
	Carro[vehicleid][mod9] = 0;
	Carro[vehicleid][mod10] = 0;
	Carro[vehicleid][mod11] = 0;
	Carro[vehicleid][mod12] = 0;
	Carro[vehicleid][mod13] = 0;
	Carro[vehicleid][mod14] = 0;
	Carro[vehicleid][mod15] = 0;
	Carro[vehicleid][mod16] = 0;
	Carro[vehicleid][mod17] = 0;
	Carro[vehicleid][paintjob] = 0;
	Carro[vehicleid][PaintJobOn] = 0;

}
InitComponents(componentid)
{
            new i;
            for(i=0; i<20; i++)
            {
                if(spoiler[i][0]==componentid) { return 1; }
            }
            for(i=0; i<3; i++)
            {
                if(nitro[i][0]==componentid) { return 2; }
            }
            for(i=0; i<23; i++)
            {
                if(fbumper[i][0]==componentid) { return 3; }
            }
            for(i=0; i<22; i++)
            {
                if(rbumper[i][0]==componentid) { return 4; }
            }
            for(i=0; i<28; i++)
            {
                if(exhaust[i][0]==componentid) { return 5; }
            }
            for(i=0; i<2; i++)
            {
                if(bventr[i][0]==componentid) { return 6; }
            }
            for(i=0; i<2; i++)
            {
                if(bventl[i][0]==componentid) { return 7; }
            }
            for(i=0; i<4; i++)
            {
                if(bscoop[i][0]==componentid) { return 8; }
            }
            for(i=0; i<13; i++)
            {
                if(rscoop[i][0]==componentid) { return 9; }
            }
            for(i=0; i<21; i++)
            {
                if(lskirt[i][0]==componentid) { return 10; }
            }
            for(i=0; i<21; i++)
            {
                if(rskirt[i][0]==componentid) { return 11; }
            }
            if(hydraulics[0][0]==componentid) { return 12; }
            if(base[0][0]==componentid) { return 13; }
            for(i=0; i<2; i++)
            {
                if(rbbars[i][0]==componentid) { return 14; }
            }
            for(i=0; i<2; i++)
            {
                if(fbbars[i][0]==componentid) { return 15; }
            }
            for(i=0; i<17; i++)
            {
                if(wheels[i][0]==componentid) { return 16; }
            }
            for(i=0; i<2; i++)
            {
                if(lights[i][0]==componentid) { return 17; }
            }
            return 0;
}
public OnVehicleSpawn(vehicleid)
{
    for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            CarregarTunning(c);
        }
    }
    if(VeiculoNeon[vehicleid] != 0) DestroyDynamicObject(VeiculoNeon[vehicleid]);
    return true;
}
stock AddVehicleComponentEx(vehicleid,componentid)
{
    new Varz=InitComponents(componentid);
    for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            switch (Varz)
            {
                case 1: { Carro[c][mod1]=componentid; }
                case 2: { Carro[c][mod2]=componentid; }
                case 3: { Carro[c][mod3]=componentid; }
                case 4: { Carro[c][mod4]=componentid; }
                case 5: { Carro[c][mod5]=componentid; }
                case 6: { Carro[c][mod6]=componentid; }
                case 7: { Carro[c][mod7]=componentid; }
                case 8: { Carro[c][mod8]=componentid; }
                case 9: { Carro[c][mod9]=componentid; }
                case 10: { Carro[c][mod10]=componentid; }
                case 11: { Carro[c][mod11]=componentid; }
                case 12: { Carro[c][mod12]=componentid; }
                case 13: { Carro[c][mod13]=componentid; }
                case 14: { Carro[c][mod14]=componentid; }
                case 15: { Carro[c][mod15]=componentid; }
                case 16: { Carro[c][mod16]=componentid; }
                case 17: { Carro[c][mod17]=componentid; }
            }
            break;
        }
    }
	AddVehicleComponent(vehicleid,componentid);
}
stock ChangeVehicleColorEx(vehicleid, Cor1, Cor2)
{
    for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            Carro[c][CorUm] = Cor1;
            Carro[c][CorDois] = Cor2;
            break;
        }
    }
    ChangeVehicleColor(vehicleid, Cor1, Cor2);
}
stock ChangeVehiclePaintjobEx(vehicleid,paintjobid)
{
	for(new c = 0; c < sizeof(Carro); c++)
    {
        if(Carro[c][CarroID] == vehicleid)
        {
            Carro[c][paintjob]=paintjobid;
            Carro[c][PaintJobOn]=1;
            break;
        }
    }
    ChangeVehiclePaintjob(vehicleid,paintjobid);
}
stock IsPlayerInPRF(playerid)
{
    new Float:x,Float:y,Float:z;
    GetPlayerPos(playerid, x, y, z);
    if(x >= 804.262695 && y >= -1314.935180 && x <= 932.262695 && y <= -1164.935180) return 1; // morro 1
    else return 0;
}
stock IsCarroInPRF(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 804.262695 && y >= -1314.935180 && x <= 932.262695 && y <= -1164.935180) return 1; // morro 1
    else return 0;
}
forward VehPreso(playerid);
public VehPreso(playerid)
{
    if(!IsACop(playerid))
    {
        if(PlayerInfo[playerid][pChave] != 0)
        {
            for(new i = 0; i < sizeof(Carro); i++)
            {
                if(Carro[i][CarroID] == PlayerInfo[playerid][pChave])
                {
                    if(IsCarroInPRF(Carro[i][CarroID]))
                    {
                        SendClientMessage(playerid, COLOR_LIGHTRED,"* Seu Veículo está Apreendido, Vá até a DP da Policia Rodoviaria para Resolver.");
                        break;
                    }
                }
            }
        }
    }
    return true;
}
forward Text3DTheus();
public Text3DTheus()
{
    Delete3DTextLabel(CofrePrefeitura);
	Delete3DTextLabel(LabelOrg1);
	Delete3DTextLabel(LabelOrg2);
	Delete3DTextLabel(LabelOrg4);
	Delete3DTextLabel(LabelOrg5);
	Delete3DTextLabel(LabelOrg6);
	Delete3DTextLabel(LabelOrg7);
	Delete3DTextLabel(LabelOrg8);
	Delete3DTextLabel(LabelOrg9);
	Delete3DTextLabel(LabelOrg10);
	Delete3DTextLabel(LabelOrg11);
	Delete3DTextLabel(LabelOrg12);
	Delete3DTextLabel(LabelOrg13);
	Delete3DTextLabel(LabelOrg14);
	Delete3DTextLabel(LabelOrg15);
    Delete3DTextLabel(LabelOrg16);
    Delete3DTextLabel(LabelOrg17);
    Delete3DTextLabel(LabelOrg18);
    Delete3DTextLabel(LabelOrg19);
    Delete3DTextLabel(LabelOrg20);
    Delete3DTextLabel(LabelOrg21);
    Delete3DTextLabel(LabelOrg22);

    Delete3DTextLabel(LabelBanco);
	Delete3DTextLabel(LabelLot);
	Delete3DTextLabel(LabelPosto);
	Delete3DTextLabel(LabelLoja1);
    Delete3DTextLabel(LabelLoja2);
    Delete3DTextLabel(LabelPref);
    for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        Delete3DTextLabel(HouseLabel[h]);
        DestroyPickup(HousePickup[h]);
		if(HouseInfo[h][hOwned] == 0)
		{
			format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Casa A Venda\nTipo: %s\nValor: R$%d\nNivel: %d\n{FFFFFF}Para comprar digite /comprarcasa",HouseInfo[h][hDiscription],HouseInfo[h][hValue],HouseInfo[h][hLevel]);
			HouseLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
            HousePickup[h] = CreatePickup(1273, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
        }
		if(HouseInfo[h][hOwned] == 1)
		{
			if(HouseInfo[h][hRentabil] == 0)
			{
                format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Dono: %s\nNivel: %d\n{FFFFFF}Status: Ocupada",HouseInfo[h][hOwner],HouseInfo[h][hLevel]);
				HouseLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
                HousePickup[h] = CreatePickup(1318, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
            }
			else
			{
				format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Dono: %s\nAluguel: R$%d\nNivel: %d\n{FFFFFF}Digite /alugarquarto para alugar um quarto",HouseInfo[h][hOwner],HouseInfo[h][hRent],HouseInfo[h][hLevel]);
				HouseLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez]+0.5,15.0,0);
                HousePickup[h] = CreatePickup(1318, 23, HouseInfo[h][hEntrancex], HouseInfo[h][hEntrancey], HouseInfo[h][hEntrancez],-1);
            }
        }
	}
	for(new h = 0; h < sizeof(BizzInfo); h++)
	{
        Delete3DTextLabel(BizzLabel[h]);
        DestroyPickup(BizzPickup[h]);
		if(BizzInfo[h][bOwned] == 0)
		{
            BizzPickup[h] = CreatePickup(1272, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
            format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\n{FFFFFF}Para comprar digite /compraremp",BizzInfo[h][bMessage],BizzInfo[h][bBuyPrice],BizzInfo[h][bLevelNeeded]);
			BizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,30.0,0);
		}
		if(BizzInfo[h][bOwned] == 1)
		{
            BizzPickup[h] = CreatePickup(1318, 23, BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ],-1);
            format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\n{FFFFFF}Aperte Enter Para Entrar",BizzInfo[h][bMessage],BizzInfo[h][bOwner],BizzInfo[h][bExtortion],BizzInfo[h][bEntranceCost],BizzInfo[h][bLevelNeeded]);
   			BizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,BizzInfo[h][bEntranceX], BizzInfo[h][bEntranceY], BizzInfo[h][bEntranceZ]+0.5,30.0,0);
		}
	}
	for(new h = 0; h < sizeof(SBizzInfo); h++)
	{
        Delete3DTextLabel(SBizzLabel[h]);
        DestroyPickup(SBizzPickup[h]);
		if(SBizzInfo[h][sbOwned] == 0)
		{
			SBizzPickup[h] = CreatePickup(1272, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],-1);
			format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}%s\nEsta empresa esta a venda\nValor: R$%d Nivel: %d\n{FFFFFF}Para comprar digite /comprarempresa",SBizzInfo[h][sbMessage],SBizzInfo[h][sbBuyPrice],SBizzInfo[h][sbLevelNeeded]);
			SBizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,30.0,0);
		}
		else if(SBizzInfo[h][sbOwned] == 1)
		{
            SBizzPickup[h] = CreatePickup(1318, 23, SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ],-1);
			format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}%s\nDono: %s\nExtorcao: %s\nEntrada: R$%d\nNivel: %d\n{FFFFFF}Aperte Enter Para Entrar",SBizzInfo[h][sbMessage],SBizzInfo[h][sbOwner],SBizzInfo[h][sbExtortion],SBizzInfo[h][sbEntranceCost],SBizzInfo[h][sbLevelNeeded]);
			SBizzLabel[h] = Create3DTextLabel(strlabel,COR_3DLABEL,SBizzInfo[h][sbEntranceX], SBizzInfo[h][sbEntranceY], SBizzInfo[h][sbEntranceZ]+0.5,30.0,0);
		}
 	}

	if(donoPosto >= 0)
	{
 		Delete3DTextLabel(DonodoPosto);
        if(donoPosto == 0)
		{
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{80FFFF}Posto Abandonado\nNinguem no controle\n/do para Tomar",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
		if(donoPosto == 21)
		{
            DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{A80000}Posto Abandonado\nHells Angels no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
		if(donoPosto == 22)
		{
			DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{009B9B}Posto Abandonado\nMongols no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
        if(donoPosto == 1 || donoPosto == 2)
		{
			DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{6F6FFF}Posto Abandonado\nGoverno no Comando\nPoliciais Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
        if(donoPosto == 23)
		{
			DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{0063C6}Posto Abandonado\nSons Of Anarchy no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
        if(donoPosto == 25)
		{
			DonodoPosto = Create3DTextLabel("{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{6B56C2}Posto Abandonado\nDrifters no Comando\nMembros Terão Gasolina Grátis.",COR_3DLABEL, -91.4212, -1169.1992, 2.4298, 40.0, 0);
		}
    }
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP Polícia Mílitar\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[1][Lider]);
	LabelOrg1 = Create3DTextLabel(strlabel, COR_3DLABEL, 1554.9537,-1675.6584,16.1953,30.0,0);

	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Fundos da Prefeitura \n{FDF000}R$ %d",CofreOrg[7][Dinheiro]);
	CofrePrefeitura = Create3DTextLabel(strlabel, COR_3DLABEL, 355.4539,159.9982,1008.4802,30.0,0);
	//R.O.T.A
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP  R.O.T.A\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[2][Lider]);
	LabelOrg2 = Create3DTextLabel(strlabel, COR_3DLABEL, 327.8898,-1511.8446,36.0325,30.0,0);
	//los aztecas
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Los Aztecas\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[5][Lider]);
	LabelOrg4 = Create3DTextLabel(strlabel, COR_3DLABEL, 1673.9886,-2122.1403,14.6014,30.0,0);
	//policia federal
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP Policia Federal\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[11][Lider]);
	LabelOrg5 = Create3DTextLabel(strlabel, COR_3DLABEL, 914.2606,-1003.7186,37.9976,30.0,0);
	//mafia cosa nostra
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Cosa Nostra\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[12][Lider]);
	LabelOrg6 = Create3DTextLabel(strlabel, COR_3DLABEL, 1497.0920,-687.8906,95.5633,30.0,0);
	//yakuza
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Mafia Yakuza\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[13][Lider]);
	LabelOrg7 = Create3DTextLabel(strlabel, COR_3DLABEL, 691.5710,-1276.1722,13.5607,30.0,0);
	//groove
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Groove Street\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[14][Lider]);
	LabelOrg8 = Create3DTextLabel(strlabel, COR_3DLABEL, 2495.3481,-1691.1355,14.7656,30.0,0);
	//Policia Rodoviaria
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP Policia Rodoviaria\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[16][Lider]);
	LabelOrg9 = Create3DTextLabel(strlabel, COR_3DLABEL, 918.8992,-1252.3286,16.2109,30.0,0);
	//ballas
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Ballas\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[17][Lider]);
	LabelOrg10 = Create3DTextLabel(strlabel, COR_3DLABEL, 1150.5472,-1180.6296,32.0275,30.0,0);
	//vagos
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Los Vagos\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[18][Lider]);
	LabelOrg11 = Create3DTextLabel(strlabel, COR_3DLABEL, 2808.1106,-1189.6528,25.3436,30.0,0);
	//Comando v
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Comando Vermelho\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[19][Lider]);
	LabelOrg12 = Create3DTextLabel(strlabel, COR_3DLABEL, 2140.9382,-1801.9813,16.1475,30.0,0);
	//PCC
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ PCC\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[20][Lider]);
	LabelOrg13 = Create3DTextLabel(strlabel, COR_3DLABEL, 967.2544,2175.1235,10.8203,30.0,0);
	//ploko
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Hells Angels\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[21][Lider]);
	LabelOrg14 = Create3DTextLabel(strlabel, COR_3DLABEL, 681.621521,-474.528533,16.185522,30.0,0);
	//mongols
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Mongols\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[22][Lider]);
	LabelOrg15 = Create3DTextLabel(strlabel, COR_3DLABEL, 23.8872,-2646.5869,40.4640,30.0,0);
    //sons
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}HQ Sons Of Anarchy\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[23][Lider]);
	LabelOrg16 = Create3DTextLabel(strlabel, COR_3DLABEL, -1566.5295,-2730.2783,48.7435,30.0,0);
    //rep
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}San News\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[9][Lider]);
	LabelOrg17 = Create3DTextLabel(strlabel, COR_3DLABEL, 647.3710,-1357.2606,13.5777,30.0,0);
    // med
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Hospital BPF\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[4][Lider]);
	LabelOrg18 = Create3DTextLabel(strlabel, COR_3DLABEL, 1173.2563,-1323.3102,15.3943,30.0,0);
    //sk
    format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}GE\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[26][Lider]);
	LabelOrg19 = Create3DTextLabel(strlabel, COR_3DLABEL, 1173.2563,-1323.3102,15.3943,30.0,0);
    //Familia Motoqueiros
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Familia Motoqueiros\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[27][Lider]);
	LabelOrg20 = Create3DTextLabel(strlabel, COR_3DLABEL, 1228.2998,511.7998,19.6000,30.0,0);
	//BOPE
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP B.O.P.E\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[30][Lider]);
	LabelOrg21 = Create3DTextLabel(strlabel, COR_3DLABEL, 1219.4229,-1812.4161,16.5938,30.0,0);
	//Policia Florestal
	format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}DP Policia Florestal\n{FFEE22}Lider: {00ECEC}%s\n{FFFFFF}Aperte Enter Para Entrar",InfoOrg[28][Lider]);
	LabelOrg22 = Create3DTextLabel(strlabel, COR_3DLABEL, -1052.2855,-948.4227,129.2188,30.0,0);
    if(temporoubobanco == 1)
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre do Banco\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar");
		LabelBanco = Create3DTextLabel(strlabel, COR_3DLABEL, 2306.5127,-6.1166,26.7422,11.0,0);
	}
	else
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre do Banco\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaBanco);
		LabelBanco = Create3DTextLabel(strlabel, COR_3DLABEL, 2306.5127,-6.1166,26.7422,11.0,0);
	}
	if(temporoubolot == 1)
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Lotérica\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLot);
		LabelLot = Create3DTextLabel(strlabel, COR_3DLABEL, 820.6042,8.3990,1004.1962,11.0,0);
	}
	else
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Lotérica\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLot);
		LabelLot = Create3DTextLabel(strlabel, COR_3DLABEL, 820.6042,8.3990,1004.1962,11.0,0);
	}
	if(temporouboposto == 1)
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre do Posto\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaPosto);
		LabelPosto = Create3DTextLabel(strlabel, COR_3DLABEL, 381.5648,-188.1646,1000.6328,11.0,0);
	}
	else
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre do Posto\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaPosto);
		LabelPosto = Create3DTextLabel(strlabel, COR_3DLABEL, 381.5648,-188.1646,1000.6328,11.0,0);
	}
	if(temporouboloja1 == 1)
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja1);
		LabelLoja1 = Create3DTextLabel(strlabel, COR_3DLABEL, 2169.1516,1589.9265,999.9713,11.0,0);
	}
	else
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja1);
		LabelLoja1 = Create3DTextLabel(strlabel, COR_3DLABEL, 2169.1516,1589.9265,999.9713,11.0,0);
	}
	if(temporouboloja2 == 1)
	{
 		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja2);
		LabelLoja2 = Create3DTextLabel(strlabel, COR_3DLABEL, 451.3090,-79.8603,999.5547,11.0,0);
	}
	else
	{
 		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Loja de Armas\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaLoja2);
		LabelLoja2 = Create3DTextLabel(strlabel, COR_3DLABEL, 451.3090,-79.8603,999.5547,11.0,0);
	}
	if(temporouboprefe == 1)
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Prefeitura\n{FFEE22}Dinheiro: {FFA8A8}Roubado\n{FFFFFF}Digite /roubar Para Roubar",GranaPref);
		LabelPref = Create3DTextLabel(strlabel, COR_3DLABEL, 354.6608,172.0170,1008.3802,11.0,0);
	}
	else
	{
		format(strlabel, sizeof(strlabel), "{1E90FF}Brasil {FFFFFF}Play {1E90FF}Start\n{82FABE}Cofre da Prefeitura\n{FFEE22}Dinheiro: {00ECEC}R$ %d\n{FFFFFF}Digite /roubar Para Roubar",GranaPref);
		LabelPref = Create3DTextLabel(strlabel, COR_3DLABEL, 354.6608,172.0170,1008.3802,11.0,0);
	}
}
stock Get2DZone(zone[], Float:x, Float:y, len)
{
 	for(new i = 0; i != sizeof(gSAZones); i++ )
 	{
		if(x >= gSAZones[i][SAZONE_AREA][0] && x <= gSAZones[i][SAZONE_AREA][3] && y >= gSAZones[i][SAZONE_AREA][1] && y <= gSAZones[i][SAZONE_AREA][4])
		{
		    return format(zone, len, gSAZones[i][SAZONE_NAME], 0);
		}
	}
	return 0;
}
forward MoverCamera(playerid);
public MoverCamera(playerid)
{
	//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
	//InterpolateCameraPos(playerid, 1473.830810, -1066.777709, 216.777587, 1662.295776, -1305.846191, 208.834182, 25000, CAMERA_CUT);
	//InterpolateCameraLookAt(playerid, 1477.482666, -1070.184326, 217.019683, 1665.385986, -1308.891113, 206.348419, 25000, CAMERA_MOVE);
}
stock IsCarInConce(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 2689.772949 && y >= -1885.407226 && x <= 2813.772949 && y <= -1667.407226) return 1; // morro 1
    else return 0;
}
stock IsCarInPrefouDP(carid)
{
    new Float:x,Float:y,Float:z;
    GetVehiclePos(carid, x, y, z);
    if(x >= 1418.449218 && y >= -1746.708740 && x <= 1558.449218 && y <= -1596.708740) return 1; // morro 1
    else return 0;
}
forward EntrarHospital(playerid);
public EntrarHospital(playerid)
{
 	new rand = random(sizeof(ConceSpawn));
	SetPlayerInterior(playerid,0);
    SetPlayerCameraPos(playerid, 1718.9829, 1187.9597, 36.3028);
    //SetPlayerCameraPos(playerid, DuenteMacas[rand][0]+0.4, DuenteMacas[rand][1]-0.5, DuenteMacas[rand][2]+0.3);
    //SetPlayerCameraLookAt(playerid, DuenteMacas[rand][0], DuenteMacas[rand][1], DuenteMacas[rand][2]);
    SetPlayerPos(playerid,DuenteMacas[rand][0], DuenteMacas[rand][1], DuenteMacas[rand][2]);
    SetPlayerFacingAngle(playerid, DuenteMacas[rand][3]);
    ApplyAnimation(playerid, "CRACK", "crckdeth2", 4.0, 1, 0, 0, 0, 0);
    TextHospital(playerid);
    TextDrawShowForPlayer(playerid, TextPosto[playerid]);
    return 1;
}
forward SairHospital(playerid);
public SairHospital(playerid)
{
    PlayerInfo[playerid][pHosp] = 0;
    PlayerInfo[playerid][pHospTime] = 0;
    ClearAnimations(playerid);
    GranaTheus(playerid, -PRECO_HOSP);
    SBizzInfo[12][sbTill] += PRECO_HOSP;
	ExtortionSBiz(12, PRECO_HOSP);
    CofreOrg[4][Dinheiro] += PRECO_HOSP;
    TextDrawHideForPlayer(playerid, TextHospital0);
    TextDrawHideForPlayer(playerid, TextHospital1);
    TextDrawHideForPlayer(playerid, TextHospital2);
    TextDrawHideForPlayer(playerid, TextHospital3);
    if(PlayerInfo[playerid][pMembro] == 0 && PlayerInfo[playerid][pLider] == 0)
	{
    	SetPlayerPos(playerid,1714.9894,1173.7916,34.8259);
    	SetPlayerFacingAngle(playerid, 355.1884);
    }
    else
    {
    	SpawnPlayer(playerid);
    }
    format(gstring,sizeof(gstring),"[Hospital] Você Está Curado e Recebeu alta, os Médicos Cobraram R$ %d pela Recuperação.", PRECO_HOSP);
    SendClientMessage(playerid,0x00FFFFFF,gstring);
    format(strtheus, sizeof(strtheus), "~n~~n~~n~~r~~h~[[~g~~h~~h~Voce Foi curado com Sucesso~r~~h~[[~b~~h~~h~Pagou: ~w~R$ %d",PRECO_HOSP);
	GameTextForPlayer(playerid, strtheus, 6000, 3);
    return 1;
}
forward TextHospital(playerid);
public TextHospital(playerid)
{
    new strtexton[64];
    new TempoHospital = PlayerInfo[playerid][pHospTime], TextRec[40];
    if(TempoHospital <= 20 && TempoHospital >= 15) TextRec = "Iniciando";
    else if(TempoHospital <= 15 && TempoHospital >= 10) TextRec = "Recuperando";
    else if(TempoHospital <= 10 && TempoHospital >= 0) TextRec = "Recebendo Alta";
    TextDrawShowForPlayer(playerid, TextHospital0);
    TextDrawShowForPlayer(playerid, TextHospital1);
    TextDrawShowForPlayer(playerid, TextHospital2);
    TextDrawShowForPlayer(playerid, TextHospital3);
	format(strtexton,sizeof(strtexton),"Status: ~w~%s",TextRec);
    TextDrawSetString(TextHospital1, strtexton);
	format(strtexton,sizeof(strtexton),"Tempo: ~w~%d Segundos",TempoHospital);
    TextDrawSetString(TextHospital2, strtexton);
	ApplyAnimation(playerid, "CRACK", "crckdeth4", 4.0, 1, 0, 0, 0, 0);
}
forward PlayerBanALL(playerid);
public PlayerBanALL(playerid)
{
	if(BaniuPlayer[playerid] >= 1) BaniuPlayer[playerid] = 0;
}
stock ObjetosAtivos()
{
	new ContObject = CountDynamicObjects();
 	ObjetosTheusCrazzy = ContObject+1;
}
stock NomeORGTr(OrgID)
{
	new OrgTRName[64];
	if(OrgID == 0) { OrgTRName = "e os Civil"; }
    else if(OrgID == 1) { OrgTRName = "e o Polícia Mílitar"; }
	else if(OrgID == 2) { OrgTRName = "e a R.O.T.A"; }
	else if(OrgID == 3) { OrgTRName = "e o Exercito"; }
	else if(OrgID == 4) { OrgTRName = "e os Medicos"; }
	else if(OrgID == 5) { OrgTRName = "e os Los Aztecas"; }
	else if(OrgID == 6) { OrgTRName = "e o Taliban"; }
	else if(OrgID == 7) { OrgTRName = "e a Prefeitura"; }
    else if(OrgID == 8) { OrgTRName = "e os Hitmans"; }
    else if(OrgID == 9) { OrgTRName = "e o Repórter"; }
    else if(OrgID == 10) { OrgTRName = "e os Taxistas"; }
	else if(OrgID == 11) { OrgTRName = "e a Policia Federal"; }
   	else if(OrgID == 12) { OrgTRName = "e a Cosa Nostra"; }
   	else if(OrgID == 13) { OrgTRName = "e a Yakuza"; }
    else if(OrgID == 14) { OrgTRName = "e a Groove Street"; }
    else if(OrgID == 15) { OrgTRName = "e a Al'qaeda"; }
    else if(OrgID == 16) { OrgTRName = "e a Policia Rodoviaria"; }
    else if(OrgID == 17) { OrgTRName = "e os Ballas"; }
    else if(OrgID == 18) { OrgTRName = "e os Los Vagos"; }
    else if(OrgID == 19) { OrgTRName = "e o Comando Vermelho"; }
    else if(OrgID == 20) { OrgTRName = "e o PCC"; }
    else if(OrgID == 21) { OrgTRName = "e os Hells Angels"; }
    else if(OrgID == 22) { OrgTRName = "e os Mongols"; }
    else if(OrgID == 23) { OrgTRName = "e os Sons Of Anarchy"; }
    else if(OrgID == 24) { OrgTRName = "e os The Triads"; }
    else if(OrgID == 25) { OrgTRName = "e os Drifters"; }
    else if(OrgID == 26) { OrgTRName = "e os OwnZ"; }
    else if(OrgID == 27) { OrgTRName = "e os Motoqueiros"; }
    else if(OrgID == 28) { OrgTRName = "e a Policia Florestal"; }
    else if(OrgID == 29) { OrgTRName = "e a Amigo dos Amigos"; }
    else if(OrgID == 30) { OrgTRName = "e a B.O.P.E"; }
    else if(OrgID == 32) { OrgTRName = "e a Exército Americano"; }
    else if(OrgID == 31) { OrgTRName = "e a yStiflerS"; }
    else if(OrgID == 34) { OrgTRName = "e a Polícia Cívil"; }
	return OrgTRName;
}
public HeadAdminTexto()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        new string[256];
        if(admtrampando[i] == 1)
        {
            format(string,256,"[ADMINISTRADOR]");
            SetPlayerChatBubble(i,string, COR_ADMIN, 100.0, 10000);
        }
        else if(helptrampando[i] == 1)
        {
            format(string,256,"[HELPER]");
            SetPlayerChatBubble(i,string, COR_HELPER, 100.0, 10000);
        }
    }
}
public HeadVIPTexto()
{
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        new string[256];
        if(PlayerInfo[i][pVIP] >= 3)
        {
            format(string,256,"[VIP SÓCIO]");
            SetPlayerChatBubble(i,string, 0x00FFFFFAA, 100.0, 10000);
        }
        else if(PlayerInfo[i][pVIP] >= 2)
        {
            format(string,256,"[VIP PREMIUM]");
            SetPlayerChatBubble(i,string, 0xFF0000AA, 100.0, 10000);
        }
        else if(PlayerInfo[i][pVIP] >= 1)
        {
            format(string,256,"[VIP]");
            SetPlayerChatBubble(i,string, 0xEEC900AA, 100.0, 10000);
        }
    }
}
public RespawnHorarios()
{
    new horaa,minutoo,segundoo;
	gettime(horaa,minutoo,segundoo);
	{
		if(horaa == 8)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
		if(horaa == 10)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
		if(horaa == 12)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
        if(horaa == 14)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
        if(horaa == 16)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
        if(horaa == 18)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
        if(horaa == 20)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
		if(horaa == 22)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
		if(horaa == 0)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
		if(horaa == 2)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
		if(horaa == 5)
		{
            if(minutoo == 0)
		    {
		        if(segundoo == 5)
		        {
      			    SendClientMessageToAll(0xFF8080AA, "[BPF] {FFFFFF}Respawn e Abastecimento Automático de carros, mais info: /horariosrc");
				    new bool:unwanted[MAX_VEHICLES];
				    for(new player=0; player<MaiorID; player++)
     			    {
            	    	if(IsPlayerConnected(player) && IsPlayerInAnyVehicle(player)) { unwanted[GetPlayerVehicleID(player)]=true; }
     		    	}
			    		for(new car = 1; car <= MAX_VEHICLES; car++)
			    	{
			    		if(!unwanted[car]) SetVehicleToRespawn(car);
			    	}
			    }
            }
		}
	}
}
// ==================================~~~~~~~~~~~~~~>>>>>> FIM <<<<<<<~~~~~~~~~~~~~~~~~~=========================================//
